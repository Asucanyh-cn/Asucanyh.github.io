<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Vue2学习笔记Part3</title>
      <link href="/posts/1975607171/"/>
      <url>/posts/1975607171/</url>
      
        <content type="html"><![CDATA[<h1 id="单页面应用程序"><a href="#单页面应用程序" class="headerlink" title="单页面应用程序"></a>单页面应用程序</h1><p>在一个web服务器上，只有一个web页面。</p><p>所有的功能都在这个页面上实现。</p><p>单页面应用是很复杂的。</p><h1 id="vue-cli"><a href="#vue-cli" class="headerlink" title="vue-cli"></a><a href="https://cli.vuejs.org/zh/">vue-cli</a></h1><p>用于开发vue的标准工具。简化了基于web-pack创建工程化vue项目的过程。</p><h2 id="安装和使用"><a href="#安装和使用" class="headerlink" title="安装和使用"></a>安装和使用</h2><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i -g @vue/cli</span><br></pre></td></tr></table></figure><p>快速生成工程化的Vue项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vue create 项目名称</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20230807154634338.png" alt="image-20230807154634338"></p><p>使用上下箭头选择<code>预设</code>。</p><p>此处选择<code>Manually select features</code>，回车。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230807154839856.png" alt="image-20230807154839856"></p><p>使用<code>空格</code>勾选需要的功能。</p><ul><li>勾选<code>CSS Pre-processors</code>，可以方便使用<code>less书写css</code>。</li><li>建议取消勾选<code>Linter / Formatter</code>，这个是用于约束代码风格的。</li></ul><p><img src="https://lptexas-cub.github.io/img/post/image-20230807155515503.png" alt="image-20230807155515503"></p><p>选择Vue版本，选择<code>2.x</code>。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230807155745924.png" alt="image-20230807155745924"></p><p>选择css预处理器，选择<code>Less</code>。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230807155819776.png" alt="image-20230807155819776"></p><p>选择配置文件的存放方式（独立的或放在一起）。</p><p>选择默认的<code>In dedicated config files</code>，独立创建。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230807160026798.png" alt="image-20230807160026798"></p><p>是否保存当前这套预设。输入<code>y</code>，回车。</p><p>为当前预设设置名称，回车。</p><h2 id="vue项目的运行流程"><a href="#vue项目的运行流程" class="headerlink" title="vue项目的运行流程"></a>vue项目的运行流程</h2><p>通过<code>main.js</code>把<code>App.vue</code>渲染到<code>index.html页面</code>中。</p><h1 id="第一个Vue-js项目"><a href="#第一个Vue-js项目" class="headerlink" title="第一个Vue.js项目"></a>第一个Vue.js项目</h1><p>进入使用vue-cli创建的vue项目。</p><h2 id="vue项目的构成"><a href="#vue项目的构成" class="headerlink" title="vue项目的构成"></a>vue项目的构成</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">demo-first</span><br><span class="line">├── README.md</span><br><span class="line">├── babel.config.js</span><br><span class="line">├── jsconfig.json</span><br><span class="line">├── node_modules</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">├── public</span><br><span class="line">├── src</span><br><span class="line">└── vue.config.js</span><br></pre></td></tr></table></figure><blockquote><p>src目录</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">src</span><br><span class="line">├── App.vue</span><br><span class="line">├── assets #用于存放静态资源</span><br><span class="line">│   └── logo.png</span><br><span class="line">├── components #用于存放组件文件</span><br><span class="line">│   └── HelloWorld.vue</span><br><span class="line">└── main.js #项目的入口文件</span><br></pre></td></tr></table></figure><h1 id="Vue入口文件"><a href="#Vue入口文件" class="headerlink" title="Vue入口文件"></a>Vue入口文件</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入vue包，用于创建vue对象。</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">//导入组件，用于调用和渲染。</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment">//创建Vue对象</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="comment">//将render函数指定的组件渲染到HTML页面。</span></span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//注：$mount()等价于el</span></span><br></pre></td></tr></table></figure><p>组件中的内容，会替换掉HTML中，Vue所绑定的作用域标签。</p><p>换句话说，“&lt;div id&#x3D;“app”&gt;&lt;&#x2F;div&gt;”相当于是一个占位符。</p><h1 id="Vue组件化开发"><a href="#Vue组件化开发" class="headerlink" title="Vue组件化开发"></a>Vue组件化开发</h1><p>组件文件的后缀名为<code>.vue</code>。</p><p>vue组件的三个组成部分：</p><ul><li><code>templete</code>组件的模板结构</li><li><code>script</code>组件的javascript行为</li><li><code>style</code>组件的样式</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot;&gt;</span><br><span class="line">    &lt;HelloWorld msg=&quot;Welcome to Your Vue.js App&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &#x27;./components/HelloWorld.vue&#x27;</span><br><span class="line">//默认导出。</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &#x27;App&#x27;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    HelloWorld</span><br><span class="line">  &#125;,</span><br><span class="line">    //data节点，在组件中定义方式改变了，必须是函数形式，并返回 &#123;&#125;。</span><br><span class="line">    data()&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            //在此处定义数据</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line">            printThis()&#123;</span><br><span class="line">                console.log(this); //组件中的this，不再指向vue实例，而是指向组件实例。</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">         watch:&#123;</span><br><span class="line">                ...</span><br><span class="line">            &#125;,</span><br><span class="line">         computed:&#123;</span><br><span class="line">             ...</span><br><span class="line">         &#125;,</span><br><span class="line">         filters:&#123;</span><br><span class="line">             ...</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;!--&gt; lang属性用于启用css预处理器&lt;--&gt;</span><br><span class="line">&lt;style lang=&quot;less&quot;&gt; </span><br><span class="line">#app &#123;</span><br><span class="line">  font-family: Avenir, Helvetica, Arial, sans-serif;</span><br><span class="line">  -webkit-font-smoothing: antialiased;</span><br><span class="line">  -moz-osx-font-smoothing: grayscale;</span><br><span class="line">  text-align: center;</span><br><span class="line">  color: #2c3e50;</span><br><span class="line">  margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="组件之间的关系"><a href="#组件之间的关系" class="headerlink" title="组件之间的关系"></a>组件之间的关系</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20230808140859094.png" alt="image-20230808140859094"></p><h3 id="父子关系"><a href="#父子关系" class="headerlink" title="父子关系"></a>父子关系</h3><p>组件在<code>使用</code>时，会产生父子关系。谁调用谁，谁是谁的父亲。</p><blockquote><p>A调用B和C，所以A是B、C的父亲。</p></blockquote><h3 id="兄弟关系"><a href="#兄弟关系" class="headerlink" title="兄弟关系"></a>兄弟关系</h3><h3 id="后代关系"><a href="#后代关系" class="headerlink" title="后代关系"></a>后代关系</h3><h2 id="组件的使用方式"><a href="#组件的使用方式" class="headerlink" title="组件的使用方式"></a>组件的使用方式</h2><ol><li>使用<code>import 组件名 from 组件位置</code>导入组件。</li><li>在<code>components节点</code>注册组件。</li><li>以标签的形式使用导入的组件。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;templete&gt;</span><br><span class="line">    &lt;组件名&gt;&lt;/组件名&gt;</span><br><span class="line">&lt;/templete&gt;</span><br></pre></td></tr></table></figure><h2 id="全局组件与私有组件"><a href="#全局组件与私有组件" class="headerlink" title="全局组件与私有组件"></a>全局组件与私有组件</h2><p>在<code>components节点</code>中注册的主键为私有组件。</p><hr><p>在<code>main.js入口文件</code>中，通过<code>Vue.component()方法</code>将组件注册为全局组件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> 全局组件 <span class="keyword">from</span> 路径</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;组件名称&#x27;</span>,全局组件)</span><br></pre></td></tr></table></figure><h2 id="组件的自定义属性"><a href="#组件的自定义属性" class="headerlink" title="组件的自定义属性"></a>组件的自定义属性</h2><p>用于声明自定义属性props。</p><p>允许使用者通过自定义属性，为当前组件指定初始值。</p><blockquote><p>创建props组件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;props: init=&#123;&#123; init &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:[&#x27;init&#x27;]</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用数组的形式定义props"><a href="#使用数组的形式定义props" class="headerlink" title="使用数组的形式定义props"></a>使用数组的形式定义props</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;left&quot;&gt;</span><br><span class="line">    我是左组件</span><br><span class="line">    &lt;Props init=&quot;15&quot;&gt;&lt;/Props&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.left &#123;</span><br><span class="line">  border: 1px solid;    </span><br><span class="line">  float: left;</span><br><span class="line">  padding: 10px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>!!! info Props赋数值的快捷方法<br>   使用<code>v-bind:</code>或<code>:</code>来绑定自定义属性。</p><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Props :init=&quot;15&quot;&gt;&lt;/Props&gt;</span><br></pre></td></tr></table></figure></code></pre><p>​    这样操作，<code>15</code>就是数值型数据了，不再是字符型。</p><h3 id="使用对象形式定义props"><a href="#使用对象形式定义props" class="headerlink" title="使用对象形式定义props"></a>使用对象形式定义props</h3><blockquote><p>设置<code>默认值</code>，使用<code>default节点</code>。</p><p>检查<code>值类型</code>，使用<code>type节点</code>。</p><p>设置<code>Props为必填</code>，使用<code>required节点</code>。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;props: init=&#123;&#123; init &#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:&#123;</span><br><span class="line">      init:&#123;  //使用对象形式定义props。</span><br><span class="line">          default:0 ,//设置默认值。</span><br><span class="line">          type:Number ,// [Number|String|Object]，检查数据类型。</span><br><span class="line">        required:true //bool，设置该属性是否为必填。</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>!!! warning 自定义属性是只读的<br>   自定义属性值不能被直接修改，Vue会报错，建议将属性转储到<code>data节点</code>。</p><h3 id="Props的意义"><a href="#Props的意义" class="headerlink" title="Props的意义"></a>Props的意义</h3><p>提高组件的复用性。</p><h2 id="组件的自定义事件"><a href="#组件的自定义事件" class="headerlink" title="组件的自定义事件"></a><a href="https://v2.cn.vuejs.org/v2/guide/components-custom-events.html#ad">组件的自定义事件</a></h2><p>在组件中，使用<code>$emit()方法</code>触发自定义事件。</p><p>这个事件能够被父组件监听。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$emit(&quot;事件名&quot;,参数1,参数2,...);</span><br></pre></td></tr></table></figure><blockquote><p>父组件监听子组件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-on:事件名=&quot;处理函数&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">事件命名规则建议</p><p>推荐使用<code>烤串命名法</code>，不同于组件和 prop，事件名不会被用作一个 JavaScript 变量名或 property 名，所以没有必要使用<code>驼峰命名法</code>和<code>首字母大写命名法</code>。并且 <code>v-on</code> 事件监听器在 DOM 模板中会被自动转换为全小写 (因为 HTML 是大小写不敏感的)，所以 <code>v-on:myEvent</code> 将会变成 <code>v-on:myevent</code>——导致 <code>myEvent</code> 不可能被监听到。</p></div><h2 id="组件样式冲突"><a href="#组件样式冲突" class="headerlink" title="组件样式冲突"></a>组件样式冲突</h2><p>理想情况下，组件中的样式应该只作用在本组件中。</p><p>实际上，组件中的样式会影响所有的组件。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p><strong>实现原理</strong>：在所有本组件使用的标签中，添加自定义属性，然后在样式中结合属性选择器<code>选择器[自定义属性]</code>进行样式设计。</p><p><strong>Vue的方案</strong>：在style标签上添加一个<code>scoped自定义属性</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&#x27;less&#x27; scoped&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><blockquote><p>scoped有一个缺点，无法在父组件中修改子组件。</p><p>这时就需要使用<code>/deep/</code>。</p><p>常常会用在使用第三方组件库，需要修改样式的时候。</p></blockquote><p><strong>实现原理</strong>：将原本的属性选择器与后代选择器结合。<code>选择器[自定义属性]</code>变为 <code>[自定义属性] 选择器</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&#x27;less&#x27; scoped&gt;</span><br><span class="line">    /deep/选择器&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="Vue组件的实例对象"><a href="#Vue组件的实例对象" class="headerlink" title="Vue组件的实例对象"></a>Vue组件的实例对象</h2><p>在组件中使用组件，可以理解成创建实例的过程。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;组件&gt;&lt;/组件&gt; //创建了一个组件实例对象</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="组件的生命周期和生命周期函数"><a href="#组件的生命周期和生命周期函数" class="headerlink" title="组件的生命周期和生命周期函数"></a><a href="https://cn.vuejs.org/api/options-lifecycle">组件的生命周期和生命周期函数</a></h2><p>组件的生命周期是指一个组件从创建、运行、销毁的整个过程，强调的是一个时间段。</p><p>生命周期函数是指在某个生命周期的时间点执行的函数，强调的是一个时间点。</p><h4 id="组件创建前"><a href="#组件创建前" class="headerlink" title="组件创建前"></a>组件创建前</h4><blockquote><p>beforeCreate()</p></blockquote><p>当前的props、data、methods节点都未被创建。</p><p>访问不了数据，也调用不了方法。</p><h4 id="组件创建后-lt-重要-gt"><a href="#组件创建后-lt-重要-gt" class="headerlink" title="组件创建后&lt;!重要&gt;"></a>组件创建后&lt;!重要&gt;</h4><blockquote><p>created()</p></blockquote><p>props、data、methods节点已初始化完毕。</p><p>但是，组件的模板结构还未生成，不能操作DOM树。</p><div class="admonition info"><p class="admonition-title">发起请求</p><p>一般情况，在created()阶段发起网络请求获取数据。</p></div><h4 id="组件渲染到页面之前"><a href="#组件渲染到页面之前" class="headerlink" title="组件渲染到页面之前"></a>组件渲染到页面之前</h4><blockquote><p>beforeMount()</p></blockquote><p>该阶段将内存中编译好的HTML结构渲染到浏览器，但在这个阶段DOM树还未被创建，因此不能操作DOM结构。</p><h4 id="组件渲染到页面之后"><a href="#组件渲染到页面之后" class="headerlink" title="组件渲染到页面之后"></a>组件渲染到页面之后</h4><blockquote><p>mounted()</p></blockquote><p>该阶段已经将内存中的HTML结构，渲染到了浏览器中。此时浏览器已经创建好了组件的DOM结构。</p><h4 id="组件数据更新前"><a href="#组件数据更新前" class="headerlink" title="组件数据更新前"></a>组件数据更新前</h4><blockquote><p>beforeUpdate()</p></blockquote><p>该阶段在数据发生改变，但还未开始重新渲染。</p><p>在这个阶段，可以获取到渲染之前的旧数据。</p><h4 id="组件数据更新后"><a href="#组件数据更新后" class="headerlink" title="组件数据更新后"></a>组件数据更新后</h4><blockquote><p>updated()</p></blockquote><p>该阶段，已经根据数据重新渲染了页面，数据和结构都是最新的。</p><p>操作DOM的操作应该在这个阶段进行。</p><h4 id="组件销毁前"><a href="#组件销毁前" class="headerlink" title="组件销毁前"></a>组件销毁前</h4><blockquote><p>beforeDestory</p></blockquote><p><code>v-if命令</code>可以控制组件的创建和销毁。</p><h4 id="组件销毁后"><a href="#组件销毁后" class="headerlink" title="组件销毁后"></a>组件销毁后</h4><blockquote><p>destoryed</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/lifecycle.png"></p><h2 id="组件间的数据共享"><a href="#组件间的数据共享" class="headerlink" title="组件间的数据共享"></a>组件间的数据共享</h2><blockquote><p>结合<code>组件之间的关系</code>树形图。</p></blockquote><h3 id="父组件向子组件"><a href="#父组件向子组件" class="headerlink" title="父组件向子组件"></a>父组件向子组件</h3><p>使用<code>自定义属性Props</code>。</p><h3 id="子组件向父组件"><a href="#子组件向父组件" class="headerlink" title="子组件向父组件"></a>子组件向父组件</h3><p>使用<code>自定义事件$emit()</code>。</p><h3 id="兄弟组件相互传递"><a href="#兄弟组件相互传递" class="headerlink" title="兄弟组件相互传递"></a>兄弟组件相互传递</h3><p>使用<code>EventBus方案</code>。</p><ol><li>创建<code>eventBus.js文件</code>。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>  <span class="keyword">new</span> <span class="title class_">Vue</span>()</span><br></pre></td></tr></table></figure><ol start="2"><li>在兄弟组件中导入<code>eventBus.js文件</code>。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">&#x27;./eventBus.js&#x27;</span></span><br><span class="line"><span class="comment">//发送数据方</span></span><br><span class="line">bus.$emit(<span class="string">&#x27;事件&#x27;</span>,参数)</span><br><span class="line"><span class="comment">//接收数据方</span></span><br><span class="line">bus.$on(<span class="string">&#x27;事件&#x27;</span>,事件处理函数)</span><br></pre></td></tr></table></figure><h2 id="ref引用"><a href="#ref引用" class="headerlink" title="ref引用"></a>ref引用</h2><p>jQurey简化了程序员操作DOM的过程，但不建议在vue中使用。</p><p>在vue中，程序员几乎不再需要操作DOM，只需要维护数据。</p><p>在少数情况下，ref用于方便程序员在vue中操作<code>DOM树</code>以及<code>子组件</code>。</p><hr><h3 id="vue组件实例的-refs属性。"><a href="#vue组件实例的-refs属性。" class="headerlink" title="vue组件实例的$refs属性。"></a>vue组件实例的<code>$refs属性</code>。</h3><blockquote><p>ref引用的使用</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;p ref=&quot;DOM引用名1&quot;&gt;&lt;/p&gt;</span><br><span class="line">&lt;组件 ref=&quot;DOM引用名2&quot;&gt;&lt;/组件&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">DOM</span>引用名<span class="number">1.</span><span class="variable constant_">DOM</span>操作</span><br><span class="line"><span class="comment">//this.$refs.DOM引用名1.style.color=yellow;</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">ref值的唯一性</p><p>ref的值不能重复。</p></div><h3 id="vue组件实例的-nextTick-cb-属性"><a href="#vue组件实例的-nextTick-cb-属性" class="headerlink" title="vue组件实例的$nextTick(cb)属性"></a>vue组件实例的<code>$nextTick(cb)属性</code></h3><p>当页面完全渲染完毕后，在执行回调。</p><blockquote><p>以下代码，会报undefined错误。</p></blockquote><p>原因是：flag值发生变化后，立即执行了操作DOM的代码，但此时页面还未完全渲染完毕。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input v-if=&quot;flag&quot; type=&quot;text&quot; ref=&quot;inputRef&quot;/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">flag</span>=<span class="literal">true</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">inputRef</span>.<span class="title function_">focus</span>()</span><br></pre></td></tr></table></figure><p>解决方法：使用<code>$nextTick(cb)属性</code>，在页面完全渲染完毕后执行回调函数。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">flag</span>=<span class="literal">true</span></span><br><span class="line"><span class="variable language_">this</span>.$nextTick(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$refs</span>.<span class="property">inputRef</span>.<span class="title function_">focus</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在手机上使用MAA一键长草</title>
      <link href="/posts/2031351995/"/>
      <url>/posts/2031351995/</url>
      
        <content type="html"><![CDATA[<h1 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h1><p>在手机中搭建Linux虚拟机，在虚拟机中下载Maa，然后解压配置启动。</p><blockquote><p>Linux虚拟机方案</p></blockquote><ol><li>使用linux deploy<code>（需要ROOT）</code></li></ol><p>这是我目前使用的方案，也是本文主要演示的方案。</p><p><code>linux deploy</code>可以配置开机启动自启脚本，十分方便，推荐使用。</p><ol start="2"><li>使用Termux安装Linux</li></ol><p>建议还是安装一下Termux，用来作为SSH访问的终端也不错。</p><p><a href="https://blog.csdn.net/qq_42471423/article/details/90582792">Termux相关配置。</a></p><hr><p>Termux安装Linux 来自互联网的方案：</p><ul><li><a href="https://blog.csdn.net/qq_52464882/article/details/120711928#:~:text=1%20termux%E5%AE%89%E8%A3%85linux%E5%87%86%E5%A4%87%EF%BC%88%E6%8D%A2%E6%BA%90%EF%BC%89%EF%BC%9A%202%20uname%20-m%20%E6%9F%A5%E7%9C%8B%E6%89%8B%E6%9C%BA%E6%9E%B6%E6%9E%84%20uname%20-a,%E5%8F%AF%E4%BB%A5%E5%9C%A8deb%E5%90%8E%E9%9D%A2%E5%8A%A0%E4%B8%8A%20%5Barch%3Dall%2C%E6%89%8B%E6%9C%BA%E6%9E%B6%E6%9E%84%5D%203%20%E9%95%9C%E5%83%8F%E6%BA%90%E5%B8%AE%E5%8A%A9%EF%BC%9A%204%203.1%E9%80%9A%E8%BF%87python%26%26git%E5%B7%A5%E5%85%B7%E4%B8%8B%E8%BD%BD%205%203.2%E9%80%9A%E8%BF%87wegt%26%26git%E5%AE%89%E8%A3%85">智能手机安装Termux及安装Linux系统及其桌面环境超详细教程</a></li></ul><h1 id="虚拟机搭建"><a href="#虚拟机搭建" class="headerlink" title="虚拟机搭建"></a>虚拟机搭建</h1><h2 id="linux-deploy安装及配置"><a href="#linux-deploy安装及配置" class="headerlink" title="linux deploy安装及配置"></a>linux deploy安装及配置</h2><ul><li>官网 Github <a href="https://github.com/meefik/linuxdeploy/releases/tag/2.6.0">Linux Deploy 2.6.0</a> <a href="https://github.com/meefik/linuxdeploy/releases/latest">Latest</a></li></ul><p>下载完毕后，打开APP，并允许<code>Root权限</code>。</p><p>点击<code>右下角</code>的选项，进行配置。建议进行如下配置：</p><ul><li><p><code>发行版 GNU/Linux </code>选择 <code>Ubuntu</code></p></li><li><p><code>架构</code>选择<code>arm64</code></p></li><li><p><code>发行版本 GNU/Linux 版本</code>选择<code>kinketic</code></p></li><li><p><code>源地址</code>改为<code>http://mirrors.tuna.tsinghua.edu.cn/ubuntu-ports</code></p></li><li><p><code>安装类型</code>选择<code>目录</code></p></li><li><p><code>本地化</code>选择<code>zh_CN.UTF-8</code></p></li><li><p><code>初始化系统</code>可用于开机执行脚本，建议使用<code>run-parts</code></p></li><li><p><code>SSH</code>选择<code>启用</code>。具体配置根据个人而定，此处选择默认。</p></li><li><p>其它配置，详情见官方文档。</p></li></ul><p>配置完毕后，回到首页，点击右上角，选择<code>安装</code>。等待安装结束，结果如下图。</p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://lptexas-cub.github.io/img/post/Screenshot_20230807-153235_Linux_Deploy.png" alt="Screenshot_20230807-153235_Linux_Deploy"></h2><p>安装完毕后，点击首页的<code>启动</code>。</p><p>启动完毕后，使用Termux或者其它ssh工具连接Linux。命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh android@这里填APP上面写的IP地址 </span><br></pre></td></tr></table></figure><h2 id="安装Termux"><a href="#安装Termux" class="headerlink" title="安装Termux"></a>安装Termux</h2><ul><li><a href="https://termux.dev/cn/">官网</a></li><li>Github <a href="https://github.com/termux/termux-app/releases/latest">v0.118.0 Latest</a></li></ul><h1 id="MAA安装及配置"><a href="#MAA安装及配置" class="headerlink" title="MAA安装及配置"></a>MAA安装及配置</h1><ul><li><a href="https://maa.plus/">官网</a></li><li>Github <a href="https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases/latest">v4.21.0 Latest</a></li></ul><h2 id="安装MAA"><a href="#安装MAA" class="headerlink" title="安装MAA"></a>安装MAA</h2><p>配置完Linux系统后，使用Termux SSH连接我们创建好的</p><p>选择<code>aarch64架构</code>的版本。</p><p>此处以<code>MAA-v4.21.0-linux-aarch64.tar.gz</code>作演示。</p><p>新建<code>MAA文件夹</code>，下载压缩文件后解压。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install wget -y</span><br><span class="line">mkdir MAA</span><br><span class="line">cd MAA</span><br><span class="line">wget https://github.com/MaaAssistantArknights/MaaAssistantArknights/releases/download/v4.21.0/MAA-v4.21.0-linux-aarch64.tar.gz</span><br><span class="line">tar -zxvf MAA-v4.21.0-linux-aarch64.tar.gz</span><br></pre></td></tr></table></figure><p>解压完毕后，进入解压后的文件目录。</p><p>进入<code>Python目录</code>，编辑<code>sample.py文件</code>，该文件为程序的主入口文件。</p><p>下面为配置好的文件，复制可以直接使用，更多配置请参考：<a href="https://maa.plus/docs/3.1-%E9%9B%86%E6%88%90%E6%96%87%E6%A1%A3.html"><code>/docs/3.1-集成文档.html</code></a>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> pathlib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> asst.asst <span class="keyword">import</span> Asst</span><br><span class="line"><span class="keyword">from</span> asst.utils <span class="keyword">import</span> Message, Version, InstanceOptionType</span><br><span class="line"><span class="keyword">from</span> asst.updater <span class="keyword">import</span> Updater</span><br><span class="line"><span class="keyword">from</span> asst.emulator <span class="keyword">import</span> Bluestacks</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Asst.CallBackType</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">my_callback</span>(<span class="params">msg, details, arg</span>):</span><br><span class="line">    m = Message(msg)</span><br><span class="line">    d = json.loads(details.decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(m, d, arg)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请设置为存放 dll 文件及资源的路径</span></span><br><span class="line">    path = pathlib.Path(__file__).parent.parent</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置更新器的路径和目标版本并更新</span></span><br><span class="line">   <span class="comment"># Updater(path, Version.Stable).update()</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 外服需要再额外传入增量资源路径，例如</span></span><br><span class="line">    <span class="comment"># incremental_path=path / &#x27;resource&#x27; / &#x27;global&#x27; / &#x27;YoStarEN&#x27;</span></span><br><span class="line">    Asst.load(path=path)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 若需要获取详细执行信息，请传入 callback 参数</span></span><br><span class="line">    <span class="comment"># 例如 asst = Asst(callback=my_callback)</span></span><br><span class="line">    asst = Asst()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 设置额外配置</span></span><br><span class="line">    <span class="comment"># 触控方案配置</span></span><br><span class="line">    asst.set_instance_option(InstanceOptionType.touch_type, <span class="string">&#x27;maatouch&#x27;</span>)</span><br><span class="line">    <span class="comment"># 暂停下干员</span></span><br><span class="line">    <span class="comment"># asst.set_instance_option(InstanceOptionType.deployment_with_pause, &#x27;1&#x27;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 启动模拟器。例如启动蓝叠模拟器的多开Pie64_1，并等待30s</span></span><br><span class="line">    <span class="comment"># Bluestacks.launch_emulator_win(r&#x27;C:\Program Files\BlueStacks_nxt\HD-Player.exe&#x27;, 30, &quot;Pie64_1&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取Hyper-v蓝叠的adb port</span></span><br><span class="line">    <span class="comment"># port = Bluestacks.get_hyperv_port(r&quot;C:\ProgramData\BlueStacks_nxt\bluestacks.conf&quot;, &quot;Pie64_1&quot;)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 请自行配置 adb 环境变量，或修改为 adb 可执行程序的路径</span></span><br><span class="line">    <span class="keyword">if</span> asst.connect(<span class="string">&#x27;/usr/bin/adb&#x27;</span>, <span class="string">&#x27;127.0.0.1:5555&#x27;</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;连接成功&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;连接失败&#x27;</span>)</span><br><span class="line">        exit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 任务及参数请参考 docs/集成文档.md</span></span><br><span class="line"></span><br><span class="line">    asst.append_task(<span class="string">&#x27;StartUp&#x27;</span>,&#123;</span><br><span class="line">        <span class="string">&quot;client_type&quot;</span>:<span class="string">&quot;Official&quot;</span>,</span><br><span class="line">        <span class="string">&quot;start_game_enabled&quot;</span>:<span class="literal">True</span></span><br><span class="line">        &#125;)</span><br><span class="line">    asst.append_task(<span class="string">&#x27;Recruit&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;select&#x27;</span>: [<span class="number">4</span>],</span><br><span class="line">        <span class="string">&#x27;confirm&#x27;</span>: [<span class="number">3</span>, <span class="number">4</span>],</span><br><span class="line">        <span class="string">&#x27;times&#x27;</span>: <span class="number">4</span></span><br><span class="line">    &#125;)</span><br><span class="line">    asst.append_task(<span class="string">&#x27;Infrast&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;facility&#x27;</span>: [</span><br><span class="line">            <span class="string">&quot;Mfg&quot;</span>, <span class="string">&quot;Trade&quot;</span>, <span class="string">&quot;Control&quot;</span>, <span class="string">&quot;Power&quot;</span>, <span class="string">&quot;Reception&quot;</span>, <span class="string">&quot;Office&quot;</span>, <span class="string">&quot;Dorm&quot;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&#x27;drones&#x27;</span>: <span class="string">&quot;Money&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line">    asst.append_task(<span class="string">&#x27;Visit&#x27;</span>)</span><br><span class="line">    asst.append_task(<span class="string">&#x27;Mall&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;shopping&#x27;</span>: <span class="literal">True</span>,</span><br><span class="line">        <span class="string">&#x27;buy_first&#x27;</span>: [<span class="string">&#x27;招聘许可&#x27;</span>, <span class="string">&#x27;龙门币&#x27;</span>],</span><br><span class="line">        <span class="string">&#x27;blacklist&#x27;</span>: [<span class="string">&#x27;家具&#x27;</span>, <span class="string">&#x27;碳&#x27;</span>],</span><br><span class="line">    &#125;)</span><br><span class="line">    asst.append_task(<span class="string">&#x27;Fight&#x27;</span>, &#123;</span><br><span class="line">        <span class="string">&#x27;stage&#x27;</span>: <span class="string">&#x27;1-7&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;report_to_penguin&#x27;</span>: <span class="literal">False</span>,</span><br><span class="line">        <span class="string">&quot;client_type&quot;</span>: <span class="string">&quot;Official&quot;</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    asst.append_task(<span class="string">&#x27;Award&#x27;</span>)</span><br><span class="line">    <span class="comment"># asst.append_task(&#x27;Copilot&#x27;, &#123;</span></span><br><span class="line">    <span class="comment">#     &#x27;filename&#x27;: &#x27;./GA-EX8-raid.json&#x27;,</span></span><br><span class="line">    <span class="comment">#     &#x27;formation&#x27;: False</span></span><br><span class="line">    <span class="comment"># &#125;)</span></span><br><span class="line">    asst.append_task(<span class="string">&#x27;Roguelike&#x27;</span>,&#123;</span><br><span class="line">        <span class="string">&quot;enable&quot;</span>:<span class="literal">True</span>, </span><br><span class="line">        <span class="string">&quot;theme&quot;</span>: <span class="string">&quot;Sami&quot;</span>,</span><br><span class="line">        <span class="string">&quot;mode&quot;</span>:<span class="number">0</span></span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="comment"># asst.append_task(&#x27;Custom&#x27;, &#123;&quot;task_names&quot;: [&quot;AwardBegin&quot;]&#125;)</span></span><br><span class="line">    asst.start()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> asst.running():</span><br><span class="line">        time.sleep(<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="关闭和开启版本更新检查"><a href="#关闭和开启版本更新检查" class="headerlink" title="关闭和开启版本更新检查"></a>关闭和开启版本更新检查</h3><p>编辑<code>sample.py文件</code>，使用井号<code>#</code>注释掉下面这句代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置更新器的路径和目标版本并更新</span></span><br><span class="line"> Updater(path, Version.Stable).update()</span><br></pre></td></tr></table></figure><blockquote><p>上面的文件<code>默认已经关闭了版本更新</code>。</p></blockquote><h2 id="启动MAA"><a href="#启动MAA" class="headerlink" title="启动MAA"></a>启动MAA</h2><p>完成所有配置后，只需要使用<code>python3 sample.py</code>启动即可。</p><p>需要切换到<code>sample.py文件</code>所在目录进行执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果没有python3就安装一下</span></span><br><span class="line">apt install python3 -y</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 sample.py</span><br></pre></td></tr></table></figure><h2 id="终止任务"><a href="#终止任务" class="headerlink" title="终止任务"></a>终止任务</h2><p>使用组合键<code>CTRL+C</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 游戏工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 明日方舟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue2学习笔记Part2</title>
      <link href="/posts/46558997/"/>
      <url>/posts/46558997/</url>
      
        <content type="html"><![CDATA[<h1 id="过滤器-lt-不再适用vue3-gt"><a href="#过滤器-lt-不再适用vue3-gt" class="headerlink" title="过滤器&lt;!不再适用vue3&gt;"></a>过滤器&lt;!不再适用vue3&gt;</h1><p><code>filter</code>用于文本格式化。</p><p>用在<code>插值表达式</code>和<code>v-bind属性绑定</code>。</p><p>类似<code>管道符</code>的使用。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message|msgFilter&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在管道符<code>|</code>后，指定一个<code>过滤器函数</code>，<code>message</code>作为参数传入函数，函数<code>必须返回</code>处理后的<code>结果</code>。</p><p><code>msgFilter函数</code>可在<code>filters节点</code>中进行定义。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm=<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">message</span>:<span class="string">&quot;我是测试信息。&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">filters</span>: &#123;</span><br><span class="line">        <span class="title function_">msgFilter</span>(<span class="params">msg</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> msg+<span class="string">&quot;(过滤后)&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="私有过滤器和全局过滤器"><a href="#私有过滤器和全局过滤器" class="headerlink" title="私有过滤器和全局过滤器"></a>私有过滤器和全局过滤器</h2><p>在<code>filters节点</code>中定义的过滤器，均为<code>私有过滤器</code>。私有过滤器仅作用于<code>el节点</code>绑定的作用域中。</p><hr><p>声明一个全局过滤器的语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;过滤器名&#x27;</span>,<span class="function">(<span class="params">参数</span>)=&gt;</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>全局过滤器作用于<code>所有vm实例</code>绑定的作用域中。</p><hr><div class="admonition info"><p class="admonition-title">过滤器重名处理方式</p><p>根据<code>就近原则</code>，若全局处理器与私有处理器重名，则私有处理器生效。</p></div><h2 id="过滤器传参"><a href="#过滤器传参" class="headerlink" title="过滤器传参"></a>过滤器传参</h2><p>过滤器函数的<code>第一个参数已固定</code>，参数从第二个参数开始传递。</p><blockquote><p>传参方式</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123;message|msgFilter(arg1,arg2,...)&#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>函数定义方式</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;过滤器名&#x27;</span>,<span class="function">(<span class="params">固定参数,arg1,arg2,...</span>)=&gt;</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="侦听器"><a href="#侦听器" class="headerlink" title="侦听器"></a>侦听器</h1><p><code>watch</code>用于<code>监视数据变化</code>，然后做出相应的动作。</p><p>在watch节点中定义函数，函数名为<code>data节点</code>中对于的数据名，函数的参数分别为<code>新值</code>和<code>旧值</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//02 创建vue实例对象</span></span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="comment">// el:用于指定控制域，值为css选择器。</span></span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="comment">// data:用于设置数据。</span></span><br><span class="line">    <span class="attr">data</span>: &#123; </span><br><span class="line">        <span class="attr">username</span>: <span class="string">&quot;test&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">watch</span>: &#123;</span><br><span class="line">        <span class="title function_">username</span>(<span class="params">newV, oldV</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (newV != oldV)</span><br><span class="line">                $.<span class="title function_">get</span>(<span class="string">&quot;http://127.0.0.1:8080/api/isExists&quot;</span>, &#123;</span><br><span class="line">                    <span class="attr">userName</span>: <span class="variable language_">this</span>.<span class="property">username</span></span><br><span class="line">                &#125;,</span><br><span class="line">                    <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">1</span>)</span><br><span class="line">                            $(<span class="string">&#x27;label&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                        <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">0</span>)</span><br><span class="line">                            $(<span class="string">&#x27;label&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                    &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="方法与对象侦听器"><a href="#方法与对象侦听器" class="headerlink" title="方法与对象侦听器"></a>方法与对象侦听器</h2><p><code>方法形式的侦听器</code>语法如上文所示。在<code>watch节点</code>直接定义方法，方法名对应要监听的数据名。</p><hr><p><code>对象形式的侦听器</code>，在<code>watch节点</code>定义侦听器对象，然后在对象中定义<code>handle方法</code>，以及<code>immediate属性</code>。</p><ul><li><code>immediate属性</code>，值为<code>bool型</code>，能够时侦听器在页面渲染完毕后自动执行一次再监视数据变化。</li><li><code>deep属性</code>，值为<code>bool型</code>，开启深度监听，能够监听对象中属性值的变化。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//02 创建vue实例对象</span></span><br><span class="line">       <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">           <span class="comment">// el:用于指定控制域，值为css选择器。</span></span><br><span class="line">           <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">           <span class="comment">// data:用于设置数据。</span></span><br><span class="line">           <span class="attr">data</span>: &#123;</span><br><span class="line">               <span class="attr">username</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">               <span class="attr">username2</span>: <span class="string">&quot;test&quot;</span>,</span><br><span class="line">               <span class="attr">info</span>: &#123;</span><br><span class="line">                   <span class="attr">username3</span>: <span class="string">&quot;test&quot;</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="attr">watch</span>: &#123;</span><br><span class="line">               <span class="comment">//方法侦听器</span></span><br><span class="line">               <span class="title function_">username</span>(<span class="params">newV, oldV</span>) &#123;</span><br><span class="line">                   $.<span class="title function_">get</span>(<span class="string">&quot;http://127.0.0.1:8080/api/isExists&quot;</span>, &#123;</span><br><span class="line">                       <span class="attr">userName</span>: <span class="variable language_">this</span>.<span class="property">username</span></span><br><span class="line">                   &#125;,</span><br><span class="line">                       <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                           <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">1</span>)</span><br><span class="line">                               $(<span class="string">&#x27;#lb1&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                           <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">0</span>)</span><br><span class="line">                               $(<span class="string">&#x27;#lb1&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                       &#125;)</span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//对象侦听器（immediate）</span></span><br><span class="line">               <span class="attr">username2</span>: &#123;</span><br><span class="line">                   <span class="title function_">handler</span>(<span class="params">newV, oldV</span>) &#123;</span><br><span class="line">                       $.<span class="title function_">get</span>(<span class="string">&quot;http://127.0.0.1:8080/api/isExists&quot;</span>, &#123;</span><br><span class="line">                           <span class="attr">userName</span>: <span class="variable language_">this</span>.<span class="property">username</span></span><br><span class="line">                       &#125;,</span><br><span class="line">                           <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                               <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">1</span>)</span><br><span class="line">                                   $(<span class="string">&#x27;#lb2&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                               <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">0</span>)</span><br><span class="line">                                   $(<span class="string">&#x27;#lb2&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                           &#125;)</span><br><span class="line">                   &#125;,</span><br><span class="line">                   <span class="attr">immediate</span>: <span class="literal">true</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">//对象侦听器（deep）</span></span><br><span class="line">               <span class="attr">info</span>: &#123;</span><br><span class="line">                   <span class="title function_">handler</span>(<span class="params">newV, oldV</span>) &#123;</span><br><span class="line">                       $.<span class="title function_">get</span>(<span class="string">&quot;http://127.0.0.1:8080/api/isExists&quot;</span>, &#123;</span><br><span class="line">                           <span class="attr">userName</span>: <span class="variable language_">this</span>.<span class="property">info</span>.<span class="property">username3</span></span><br><span class="line">                       &#125;,</span><br><span class="line">                           <span class="keyword">function</span> (<span class="params">res</span>) &#123;</span><br><span class="line">                               <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">1</span>)</span><br><span class="line">                                   $(<span class="string">&#x27;#lb3&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                               <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">0</span>)</span><br><span class="line">                                   $(<span class="string">&#x27;#lb3&#x27;</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">                           &#125;)</span><br><span class="line">                   &#125;,</span><br><span class="line">                   <span class="attr">immediate</span>: <span class="literal">true</span>,</span><br><span class="line">                   <span class="attr">deep</span>: <span class="literal">true</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><div class="admonition info"><p class="admonition-title">对象子属性侦听的简写</p><p>类似普通数据监听方法的书写，但要使用<code>单引号</code>。如：</p><p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'info.username3'</span>(newV, oldV) {</span><br><span class="line">    $.<span class="title function_">get</span>(<span class="string">&quot;http://127.0.0.1:8080/api/isExists&quot;</span>, {</span><br><span class="line">        <span class="attr">userName</span>: <span class="variable language_">this</span>.<span class="property">info</span>.<span class="property">username3</span></span><br><span class="line">    },</span><br><span class="line">        <span class="keyword">function</span> (<span class="params">res</span>) {</span><br><span class="line">            <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">1</span>)</span><br><span class="line">                $(<span class="string">'#lb3'</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">            <span class="keyword">if</span> (res.<span class="property">status</span> === <span class="number">0</span>)</span><br><span class="line">                $(<span class="string">'#lb3'</span>).<span class="title function_">html</span>(res.<span class="property">msg</span>)</span><br><span class="line">        })</span><br><span class="line">},</span><br></pre></td></tr></table></figure></p></div><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><table><thead><tr><th></th><th>方法侦听器</th><th>对象侦听器</th></tr></thead><tbody><tr><td>监听普通数据</td><td>√</td><td>√</td></tr><tr><td>监听对象属性</td><td>×</td><td>√</td></tr><tr><td>立即执行一次</td><td>×</td><td>√</td></tr></tbody></table><h1 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h1><p>计算属性是<code>通过一系列运算</code>得到属性值的属性。</p><p>计算属性定义在<code>computed节点</code>中，并以<code>方法</code>的形式定义，方法必须有返回值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 01 设置vue的控制域 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>RGB<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;r&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;g&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;b&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;&#123;background:rgb&#125;&quot;</span>&gt;</span></span><br><span class="line">        &#123;&#123;rgb&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//02 创建vue实例对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// el:用于指定控制域，值为css选择器。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// data:用于设置数据。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">r</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">g</span>: <span class="number">0</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">b</span>: <span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">rgb</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="string">`RGB(<span class="subst">$&#123;<span class="variable language_">this</span>.r&#125;</span>,<span class="subst">$&#123;<span class="variable language_">this</span>.g&#125;</span>,<span class="subst">$&#123;<span class="variable language_">this</span>.b&#125;</span>)`</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="axios"><a href="#axios" class="headerlink" title="axios"></a><a href="http://www.axios-js.com/zh-cn/docs/#%E4%BB%80%E4%B9%88%E6%98%AF-axios%EF%BC%9F">axios</a></h1><p>用于网络请求，获取网络数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;http://127.0.0.1:8080/api/isExists&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123;</span><br><span class="line">        <span class="attr">userName</span>: <span class="variable language_">this</span>.<span class="property">username</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">msg</span>=res.<span class="property">data</span>;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nodejs学习笔记Part2</title>
      <link href="/posts/2315174609/"/>
      <url>/posts/2315174609/</url>
      
        <content type="html"><![CDATA[<h1 id="Express"><a href="#Express" class="headerlink" title="Express"></a><a href="https://expressjs.com.cn/">Express</a></h1><p>Express是一个基于Node.js平台的，快速、开放、极简的Web开发框架</p><p>可以用于开发<code>Web服务器</code>和<code>API接口服务器</code>。</p><p>是对Nodejs内置API的封装，类似<code>WebAPIs</code>和<code>Jquery</code>的关系。</p><h2 id="使用Express"><a href="#使用Express" class="headerlink" title="使用Express"></a>使用Express</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i express -S</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="创建Web服务器"><a href="#创建Web服务器" class="headerlink" title="创建Web服务器"></a>创建Web服务器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">//创建web服务器</span></span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line"><span class="comment">//启动服务器</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Server is running at http://127.0.0.1:80&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="监听GET请求"><a href="#监听GET请求" class="headerlink" title="监听GET请求"></a>监听GET请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/访问地址&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="监听POST请求"><a href="#监听POST请求" class="headerlink" title="监听POST请求"></a>监听POST请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/访问地址&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="相应内容到客户端"><a href="#相应内容到客户端" class="headerlink" title="相应内容到客户端"></a>相应内容到客户端</h3><p><code>end()</code>方法可以返回<code>普通字符串</code>对象也可以返回<code>json</code>对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.<span class="title function_">end</span>();</span><br></pre></td></tr></table></figure><h3 id="获取url中的查询参数"><a href="#获取url中的查询参数" class="headerlink" title="获取url中的查询参数"></a>获取url中的查询参数</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/user/?id=1&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> params=req.<span class="property">query</span>; <span class="comment">//返回Json对象</span></span><br><span class="line">    <span class="keyword">const</span> id=req.<span class="property">query</span>.<span class="property">id</span>;</span><br><span class="line">   ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="获取url中的动态参数"><a href="#获取url中的动态参数" class="headerlink" title="获取url中的动态参数"></a>获取url中的动态参数</h3><p>使用<code>:</code>匹配动态参数（路径参数），举例如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/user/:id&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">const</span> id=req.<span class="property">params</span>; <span class="comment">//返回Json对象</span></span><br><span class="line">   ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="创建静态资源服务器"><a href="#创建静态资源服务器" class="headerlink" title="创建静态资源服务器"></a>创建静态资源服务器</h3><p>使用<code>use()</code>方法挂载<code>路径前缀</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">static</span>(<span class="string">&#x27;文件夹路径&#x27;</span>))</span><br><span class="line">app.<span class="title function_">use</span>(<span class="string">&#x27;/路径&#x27;</span>,express.<span class="title function_">static</span>(<span class="string">&#x27;文件夹路径&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="Express路由"><a href="#Express路由" class="headerlink" title="Express路由"></a>Express路由</h2><p>在Express中，路由指<code>客户端的请求</code>和<code>服务器处理函数</code>之间的映射关系。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">METHOD</span>(<span class="string">&#x27;/...&#x27;</span>,<span class="keyword">function</span>(<span class="params">req,res</span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="匹配过程"><a href="#匹配过程" class="headerlink" title="匹配过程"></a>匹配过程</h3><p><img src="https://lptexas-cub.github.io/img/post/image-20230716092611171.png" alt="image-20230716092611171"></p><h3 id="模块化路由"><a href="#模块化路由" class="headerlink" title="模块化路由"></a>模块化路由</h3><p>不建议直接将路由挂载<code>app</code>上，推荐将路由抽离为单个模块。</p><ol><li>创建路由模块对应的js文件。</li><li>调用<code>express.Router()</code>函数创建路由对象。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> router=express.<span class="title class_">Router</span>();</span><br></pre></td></tr></table></figure><ol start="3"><li>向路由对象上挂载具体的路由。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router.METHOD(&#x27;/...&#x27;,function(req,res)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="4"><li>使用<code>module.exports</code>向外共享路由对象。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=router</span><br></pre></td></tr></table></figure><ol start="5"><li>使用<code>app.use()</code>函数注册路由模块。</li></ol><h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><p>在接收到请求后，往往不会只进行依次处理，而要经过多个中间件。</p><h3 id="中间件函数与路由函数"><a href="#中间件函数与路由函数" class="headerlink" title="中间件函数与路由函数"></a>中间件函数与路由函数</h3><p>中间件函数相对于路由函数多了一个<code>next</code>参数和<code>next()</code>函数的调用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/...&#x27;</span>,<span class="keyword">function</span>(<span class="params">res.req,next</span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">     <span class="title function_">next</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><code>next()函数</code>是实现多个中间件连续调用的关键，它将处理结果转交给下一个中间件或路由。</p><h3 id="全局生效中间件"><a href="#全局生效中间件" class="headerlink" title="全局生效中间件"></a>全局生效中间件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(中间件函数<span class="number">1</span>)</span><br><span class="line">app.<span class="title function_">use</span>(中间件函数<span class="number">1</span>)</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>中间件会根据代码顺序对结果进行传递。</p><h3 id="中间件的作用"><a href="#中间件的作用" class="headerlink" title="中间件的作用"></a>中间件的作用</h3><p>中间件函数可以对所有的请求进行一些预处理。比如：挂载一些新的参数，<code>req.新参数=参数值</code>；将每个路由中相同的操作抽离作为中间件，这样就不需要每个路由都写一遍了。</p><h3 id="局部生效的中间件"><a href="#局部生效的中间件" class="headerlink" title="局部生效的中间件"></a>局部生效的中间件</h3><p>这里的局部生效是指在某个特定的路由中生效的中间件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/...&#x27;</span>,中间件函数<span class="number">1</span>,中间件函数<span class="number">2</span>,...,路由函数) <span class="comment">//写多个参数的形式添加中间件</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/...&#x27;</span>,[中间件函数<span class="number">1</span>,中间件函数<span class="number">2</span>,...],路由函数) <span class="comment">//使用数组将中间件函数做为一个参数</span></span><br></pre></td></tr></table></figure><h3 id="中间件分类"><a href="#中间件分类" class="headerlink" title="中间件分类"></a>中间件分类</h3><ol><li>应用级别的中间件</li></ol><p>将中间件绑定到<code>app</code>上，如：app.get()、app.use()等。</p><ol start="2"><li>路由级别的中间件</li></ol><p>将中间件绑定到<code>router</code>上，如：router.get()、router.use()等。</p><ol start="3"><li>错误级别的中间件</li></ol><p>错误级别的中间件专门用来捕获整个项目中发生的异常错误，从而防止项目崩溃的问题。</p><p>错误级别的中间件函数多了一个<code>err</code>参数。注意顺序。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mw=<span class="keyword">function</span>(<span class="params">err,req,res,next</span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line">    <span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Express内置的中间件"><a href="#Express内置的中间件" class="headerlink" title="Express内置的中间件"></a>Express内置的中间件</h3><ol><li>express.static快速托管静态资源。</li><li>express.json解析JSON格式的请求数据。（express版本要求 4.16+）</li><li>express.urlencoded解析URL-encoded格式的请求数据。（express版本要求 4.16+）</li></ol><h3 id="Express解析urlencoded格式的数据"><a href="#Express解析urlencoded格式的数据" class="headerlink" title="Express解析urlencoded格式的数据"></a>Express解析urlencoded格式的数据</h3><p>默认情况下，如果不配置解析表单的中间件，<code>req.body</code>值为<code>undefined</code>。</p><p><a href="https://blog.csdn.net/haozi_love/article/details/123292203">使用ajax提交的请求一般是urlencoded数据格式。</a></p><p>可以通过<a href="https://blog.csdn.net/haozi_love/article/details/123292203"><code>contentType</code></a>设置发送的数据类型。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;)) <span class="comment">//用于获取urlencoded格式的数据</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/...&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Express解析JSON格式的数据"><a href="#Express解析JSON格式的数据" class="headerlink" title="Express解析JSON格式的数据"></a>Express解析JSON格式的数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app.use(express.urlencoded(&#123; extended: false &#125;)) //用于获取urlencoded格式的数据</span></span><br><span class="line">app.<span class="title function_">use</span>(express.<span class="title function_">json</span>()) <span class="comment">//用于获取json格式的数据</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/...&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">body</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="req的事件"><a href="#req的事件" class="headerlink" title="req的事件"></a><a href="https://blog.csdn.net/weixin_45525653/article/details/127462132">req的事件</a></h3><h3 id="data事件"><a href="#data事件" class="headerlink" title="data事件"></a>data事件</h3><p>在中间件中，需要监听 req 对象的 data 事件，来获取客户端发送到服务器的数据。如果数据量比较大，无法一次性发送完毕，则客户端会把数据切割后，分批发送到服务器。所以 data 事件可能会触发多次，每一次触发 data 事件时，获取到数据只是完整数据的一部分，需要手动对接收到的数据进行拼接。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> str=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    req.<span class="title function_">on</span>(data,<span class="function">(<span class="params">chunk</span>)=&gt;</span>&#123;</span><br><span class="line">        str+=chunk;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="end事件"><a href="#end事件" class="headerlink" title="end事件"></a>end事件</h3><p>当请求体数据接收完毕之后，会自动触发 req 的 end 事件。<br>因此，我们可以在 req 的 end 事件中，拿到并处理完整的请求体数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入处理querystring的Node.js内置模块</span></span><br><span class="line"><span class="keyword">const</span> qs = <span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">req,res,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> str = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&#x27;data&#x27;</span>,<span class="function">(<span class="params">chunk</span>)=&gt;</span>&#123;</span><br><span class="line">        str += chunk</span><br><span class="line">    &#125;)</span><br><span class="line">    req.<span class="title function_">on</span>(<span class="string">&#x27;end&#x27;</span>,<span class="function">()=&gt;</span>&#123; </span><br><span class="line">        <span class="comment">// 在str中存放的是完整的请求体数据)</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(str); <span class="comment">// name=Ulrich&amp;age=22&amp;gender=male</span></span><br><span class="line">        <span class="keyword">const</span> body = qs.<span class="title function_">parse</span>(str) <span class="comment">// &#123; name: &#x27;Ulrich&#x27;, age: &#x27;22&#x27;, gender: &#x27;male&#x27; &#125;</span></span><br><span class="line">        req.<span class="property">body</span> = body; <span class="comment">//将解析出的对象挂载到body属性上</span></span><br><span class="line">        <span class="title function_">next</span>()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="中间件模块化"><a href="#中间件模块化" class="headerlink" title="中间件模块化"></a>中间件模块化</h3><p>类似路由模块化。</p><h1 id="网络资源请求"><a href="#网络资源请求" class="headerlink" title="网络资源请求"></a>网络资源请求</h1><p>由于<code>请求协议</code>、<code>端口</code>等因素的影响导致出现跨域错误。一般使用<code>CORS</code>方案进行解决。</p><p>cors是Express的一个第三方中间件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i cors</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> cors = <span class="built_in">require</span>(<span class="string">&#x27;cors&#x27;</span>);</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">cors</span>());</span><br></pre></td></tr></table></figure><h2 id="解决跨域资源共享"><a href="#解决跨域资源共享" class="headerlink" title="解决跨域资源共享"></a>解决跨域资源共享</h2><h3 id="1-设置响应头部"><a href="#1-设置响应头部" class="headerlink" title="1. 设置响应头部"></a>1. <a href="https://www.cnblogs.com/baiyygynui/p/13743135.html">设置响应头部</a></h3><p><code>Access-Control-Allow-Origin</code>可以设置哪些<code>服务器</code>可以访问资源。可以使用<code>*</code>代表所有域名。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;https://lptexas.top/&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>Access-Control-Allow-Header</code>可以设置需要发送的额外头信息。</p><p>默认情况CORS仅支持<code>客户端向服务器</code>发送下方9个请求头：</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230718205052585.png" alt="image-20230718205052585"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Header&#x27;</span>,<span class="string">&#x27;可以使用逗号分割多个&#x27;</span>)</span><br></pre></td></tr></table></figure><p><code>Access-Control-Allow-Methods</code>设置额外允许的请求方式。</p><p>默认情况CORS仅支持get、post、head请求。可以使用<code>*</code>代表所有请求。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>,<span class="string">&#x27;可以使用逗号分隔多个&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="2-使用cors模块"><a href="#2-使用cors模块" class="headerlink" title="2. 使用cors模块"></a>2. 使用cors模块</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">cors</span>(&#123;</span><br><span class="line">    <span class="attr">origins</span>:[<span class="string">&#x27;...&#x27;</span>,<span class="string">&#x27;...&#x27;</span>],  <span class="comment">//设置哪些服务器可以访问资源</span></span><br><span class="line">    <span class="attr">methods</span>:[<span class="string">&#x27;...&#x27;</span>]<span class="comment">//设置哪些方法可用访问资源</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-JSONP"><a href="#3-JSONP" class="headerlink" title="3. JSONP"></a>3. <a href="https://www.runoob.com/json/json-jsonp.html">JSONP</a></h3><p>浏览器端通过&lt;script&gt;标签的src属性，请求服务器上的数据，同时服务器返回一个函数调用。这种请求数据的方式叫做JSONP。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>JSONP不属于真正的Ajax请求，因为没有使用XMLHttpRequset对象。</p><p>JSONP仅支持GET请求。</p><h2 id="简单请求和预检请求"><a href="#简单请求和预检请求" class="headerlink" title="简单请求和预检请求"></a>简单请求和预检请求</h2><p>简单请求：客户端和服务器端只会发生一次请求。</p><p>预检请求：客户端与服务器之间发生两次请求，OPTION预检请求成功之后，才会发送真正的请求。</p><h1 id="nodemon工具"><a href="#nodemon工具" class="headerlink" title="nodemon工具"></a>nodemon工具</h1><p>实现热部署。</p><p>监听代码变化，重新执行代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i nodemon -g</span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>使用<code>nodemon</code>命令替代<code>node</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nodemon app.<span class="property">js</span></span><br></pre></td></tr></table></figure><h1 id="Mysql"><a href="#Mysql" class="headerlink" title="Mysql"></a>Mysql</h1><h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i mysql</span><br></pre></td></tr></table></figure><h2 id="配置和连接数据库"><a href="#配置和连接数据库" class="headerlink" title="配置和连接数据库"></a>配置和连接数据库</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&#x27;mysql&#x27;</span>);</span><br><span class="line"><span class="comment">//配置mysql</span></span><br><span class="line"><span class="keyword">const</span> db = mysql.<span class="title function_">createPool</span>(&#123;</span><br><span class="line">    <span class="attr">host</span>: <span class="string">&#x27;host&#x27;</span>,</span><br><span class="line">    <span class="attr">user</span>: <span class="string">&#x27;user&#x27;</span>,</span><br><span class="line">    <span class="attr">password</span>: <span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">    <span class="attr">database</span>: <span class="string">&#x27;mydb&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="测试数据库连接"><a href="#测试数据库连接" class="headerlink" title="测试数据库连接"></a>测试数据库连接</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="title function_">query</span>(<span class="string">&#x27;sql语句&#x27;</span>,<span class="keyword">function</span>(<span class="params">error,results</span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="使用占位符"><a href="#使用占位符" class="headerlink" title="使用占位符"></a>使用占位符</h2><p>在sql语句中，可以使用<code>?</code>作为占位符。在使用数组一次指定占位符中的具体值。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.<span class="title function_">query</span>(<span class="string">&#x27;sql语句&#x27;</span>,[占位符值<span class="number">1</span>,占位符值<span class="number">2</span>,...],callback)</span><br></pre></td></tr></table></figure><p>快速的插入多个属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data=&#123;字段<span class="number">1</span>:<span class="string">&quot;值1&quot;</span>,字段<span class="number">2</span>:<span class="string">&quot;值2&quot;</span>&#125;；</span><br><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;insert into 表名 set ?&#x27;</span>；</span><br><span class="line">db.<span class="title function_">query</span>(sql,data,callback)</span><br></pre></td></tr></table></figure><p>更新操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;update 表名 set 属性=值,属性=值 where 属性=值&#x27;</span></span><br><span class="line"><span class="comment">//快速更新</span></span><br><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;update 表名 set ? where 属性=?&#x27;</span></span><br></pre></td></tr></table></figure><p>删除操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sql=<span class="string">&#x27;delete from 表名 where 属性=值&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="身份认证"><a href="#身份认证" class="headerlink" title="身份认证"></a>身份认证</h1><p>如扫码登录、手机验证码登录等。</p><h2 id="Session认证机制"><a href="#Session认证机制" class="headerlink" title="Session认证机制"></a>Session认证机制</h2><p>建议服务端渲染方式使用。</p><h3 id="HTTP协议的无状态性"><a href="#HTTP协议的无状态性" class="headerlink" title="HTTP协议的无状态性"></a>HTTP协议的无状态性</h3><p>服务器不会主动保留每次HTTP请求的状态。每次请求都是独立的。</p><h3 id="打破无状态性"><a href="#打破无状态性" class="headerlink" title="打破无状态性"></a>打破无状态性</h3><p>服务器为某次请求发放身份标识<a href="https://zhuanlan.zhihu.com/p/79819678"><code>Cookie</code></a>。</p><p>用户第一次请求服务器时，服务器<code>通过响应头</code>，向客户端发送一个身份Cookie，客户端会自动将Cookie保存在浏览器中。</p><p>随后，每次客户端访问浏览器，浏览器会自动将身份认证相关的Cookie，通过请求头的形式，发送给服务器，服务器会鉴别客户端身份。</p><p>Cookie很容易伪造，不具有安全性。</p><h3 id="提高身份认证安全性"><a href="#提高身份认证安全性" class="headerlink" title="提高身份认证安全性"></a>提高身份认证安全性</h3><p><code>客户端Cookie+服务器Cookie认证</code>Session认证机制的精髓。</p><h3 id="Session工作原理"><a href="#Session工作原理" class="headerlink" title="Session工作原理"></a>Session工作原理</h3><p><img src="https://lptexas-cub.github.io/img/post/image-20230720074015101.png" alt="image-20230720074015101"></p><h3 id="在Express中使用Session认证"><a href="#在Express中使用Session认证" class="headerlink" title="在Express中使用Session认证"></a><a href="https://www.npmjs.com/package/express-session">在Express中使用Session认证</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i express-session</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">const</span> express=<span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> session=<span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app=<span class="title function_">express</span>();</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line">    <span class="attr">secret</span>:<span class="string">&#x27;&#x27;</span>, <span class="comment">//可以为任意字符串</span></span><br><span class="line">    <span class="attr">resave</span>:<span class="literal">false</span>, <span class="comment">//固定写法</span></span><br><span class="line">    <span class="attr">saveUninitinalized</span>:<span class="literal">true</span> <span class="comment">//固定写法   </span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><h3 id="向session中存数据"><a href="#向session中存数据" class="headerlink" title="向session中存数据"></a>向session中存数据</h3><p>配置完毕后，可以使用<code>req.session</code>，来访问和使用session对象。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/...&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">    req.<span class="property">session</span>.<span class="property">xxx</span>=xxx;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="取session中的数据"><a href="#取session中的数据" class="headerlink" title="取session中的数据"></a>取session中的数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/...&#x27;</span>,<span class="function">(<span class="params">req,res</span>)=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(req.<span class="property">session</span>.<span class="property">xxx</span>);</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="清空session"><a href="#清空session" class="headerlink" title="清空session"></a>清空session</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req.<span class="property">session</span>.<span class="title function_">destroy</span>();</span><br></pre></td></tr></table></figure><h2 id="JWT认证机制"><a href="#JWT认证机制" class="headerlink" title="JWT认证机制"></a>JWT认证机制</h2><p>推荐前后端分离方式使用。</p><p>Session认证机制需要配合Cookie才能实现。由于Cookie默认不支持跨域访问，所以当涉及前端跨域请求后端接口时，需要做很多额外配置，才能实现跨域Session认证。</p><p>当前端需要跨域请求后端接口时，推荐使用<code>JWT认证机制</code>。</p><h3 id="JWT是什么？"><a href="#JWT是什么？" class="headerlink" title="JWT是什么？"></a>JWT是什么？</h3><p>JWT，JSON Web token是目前最流行的跨域认证解决方案。</p><h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p><img src="https://lptexas-cub.github.io/img/post/image-20230723154056241.png" alt="image-20230723154056241"></p><p>用户信息通过Token字符串的形式，保存在客户端浏览器中。服务器通过还原Token字符串的形式来认证用户的身份。 </p><h3 id="JWT组成部分"><a href="#JWT组成部分" class="headerlink" title="JWT组成部分"></a>JWT组成部分</h3><p>Header头部、Payload有效负载、Signature签名。</p><p>xxxxxxxxxx25 1&#x2F;&#x2F; 引入 events 模块2var events &#x3D; require(‘events’);3&#x2F;&#x2F; 创建 eventEmitter 对象4var eventEmitter &#x3D; new events.EventEmitter();5 6&#x2F;&#x2F; 创建事件处理程序7var connectHandler &#x3D; function connected() {8   console.log(‘连接成功。’);9  10   &#x2F;&#x2F; 触发 data_received 事件 11   eventEmitter.emit(‘data_received’);12}13 14&#x2F;&#x2F; 绑定 connection 事件处理程序15eventEmitter.on(‘connection’, connectHandler);16 17&#x2F;&#x2F; 使用匿名函数绑定 data_received 事件18eventEmitter.on(‘data_received’, function(){19   console.log(‘数据接收成功。’);20});21 22&#x2F;&#x2F; 触发 connection 事件 23eventEmitter.emit(‘connection’);24 25console.log(“程序执行完毕。”);shell</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Header</span>.Payload.Signature</span><br></pre></td></tr></table></figure><ol><li>Header头部和Signature签名，属于安全性相关部分，用于保证Token的安全性。</li><li>Payload有效负载，真正的信息，它由用户信息加密后生成。</li></ol><h3 id="JWT使用方式"><a href="#JWT使用方式" class="headerlink" title="JWT使用方式"></a>JWT使用方式</h3><p>客户端收到的JWT保存在<code>localStorage</code>或<code>sessionStorage</code>中。</p><p>客户端与服务器通信一般将<code>JWT字符</code>放在<code>头部</code>的<code>Authorization</code>字段中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm i jsonwebtoken express-jwt</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">jsonwebtoken用于生成jwt字符串</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">express-jwt用于解析jwt还原成json对象</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> expressJWT = <span class="built_in">require</span>(<span class="string">&#x27;express-jwt&#x27;</span>);</span><br></pre></td></tr></table></figure><h4 id="登录成功后生成jwt字符串，响应给客户端"><a href="#登录成功后生成jwt字符串，响应给客户端" class="headerlink" title="登录成功后生成jwt字符串，响应给客户端"></a>登录成功后生成jwt字符串，响应给客户端</h4><p>调用<code>jsonwebtoken</code>中的<code>sign()</code>方法。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsonwebtoken.<span class="title function_">sign</span>(用户的信息对象,加密的密钥,配置对象如可以配置当前token的时间)</span><br></pre></td></tr></table></figure> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> secretKey=<span class="string">&#x27;LPtexas&#x27;</span></span><br><span class="line"><span class="keyword">const</span> jwtStr=jwt.<span class="title function_">sign</span>(&#123;<span class="attr">userName</span>:req.<span class="property">body</span>.<span class="property">userName</span>,<span class="attr">password</span>:req.<span class="property">body</span>.<span class="property">password</span>&#125;,secretKey,&#123;<span class="attr">expiresIn</span>:<span class="string">&#x27;30m&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure><h4 id="将jwt字符串还原为json对象"><a href="#将jwt字符串还原为json对象" class="headerlink" title="将jwt字符串还原为json对象"></a>将jwt字符串还原为json对象</h4><p>使用<code>express-jwt</code>中间件，调用<code>unless(&#123;&#123;path:["/..."]&#125;&#125;)</code>方法可以指定哪些接口不需要访问权限。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//5.3.3之前的版本使用：</span></span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">expressJWT</span>(&#123;<span class="attr">secret</span>:secretKey&#125;).<span class="title function_">unless</span>(&#123;<span class="attr">path</span>:[<span class="regexp">/正则表达式/</span>]&#125;));</span><br><span class="line"><span class="comment">//使用正则进行匹配path，两个斜线中间写正则表达式</span></span><br><span class="line"><span class="comment">//5.3.3之后的版本使用：</span></span><br><span class="line">app.<span class="title function_">use</span>(expressJWT.<span class="title function_">expressjwt</span>(&#123; <span class="attr">secret</span>: secretKey ,<span class="attr">algorithms</span>:[<span class="string">&quot;HS256&quot;</span>]&#125;).<span class="title function_">unless</span>(&#123; <span class="attr">path</span>: [<span class="regexp">/正则表达式/</span>] &#125;));</span><br></pre></td></tr></table></figure><h4 id="将jwt字符串放入头部的Authorization的字段中"><a href="#将jwt字符串放入头部的Authorization的字段中" class="headerlink" title="将jwt字符串放入头部的Authorization的字段中"></a><a href="https://www.zhihu.com/question/305585277">将jwt字符串放入<code>头部</code>的<code>Authorization</code>的字段中</a></h4><p>注意需要再值前添加<code>Bearer </code></p><p><img src="https://lptexas-cub.github.io/img/post/image-20230723171206339.png" alt="image-20230723171206339"></p><h4 id="使用req-user获取用户信息"><a href="#使用req-user获取用户信息" class="headerlink" title="使用req.user获取用户信息"></a>使用<code>req.user</code>获取用户信息</h4><p>使用了express-jwt后，jwt解析的结果被挂载到了req.user属性中。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//5.3.3版本以前使用：</span></span><br><span class="line">req.<span class="property">user</span></span><br><span class="line"><span class="comment">//5.3.3版本以后使用：</span></span><br><span class="line">req.<span class="property">auth</span></span><br></pre></td></tr></table></figure><h4 id="捕获解析jwt失败后产生的错误"><a href="#捕获解析jwt失败后产生的错误" class="headerlink" title="捕获解析jwt失败后产生的错误"></a>捕获解析jwt失败后产生的错误</h4><p>使用一个中间件来解决。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">use</span>(<span class="function">(<span class="params">err, req, res, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//捕获身份认证错误</span></span><br><span class="line">    <span class="keyword">if</span> (err.<span class="property">name</span> == <span class="string">&#x27;UnauthorizedError&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">send</span>(&#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="number">401</span>,</span><br><span class="line">            <span class="attr">msg</span>: err.<span class="property">message</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    res.<span class="title function_">send</span>(&#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">msg</span>: err.<span class="property">message</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="title function_">next</span>();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="定义secret密钥"><a href="#定义secret密钥" class="headerlink" title="定义secret密钥"></a>定义secret密钥</h3><p>用于保证JWT字符串的安全性。</p><p>用于加密和解密JWT。</p><p>越复杂越好。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> secretKey = <span class="string">&#x27;我是一个复杂的字符串&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue2学习笔记Part1</title>
      <link href="/posts/2614050479/"/>
      <url>/posts/2614050479/</url>
      
        <content type="html"><![CDATA[<h1 id="vue是什么？"><a href="#vue是什么？" class="headerlink" title="vue是什么？"></a>vue是什么？</h1><p>vue是用于快捷构建用户界面的Javascript框架。</p><h1 id="vue的特性"><a href="#vue的特性" class="headerlink" title="vue的特性"></a>vue的特性</h1><h2 id="数据驱动视图"><a href="#数据驱动视图" class="headerlink" title="数据驱动视图"></a>数据驱动视图</h2><p>vue会监听数据变化，当数据发生变化时，会<code>自动渲染</code>页面。</p><p>数据驱动视图是<code>单向的数据绑定</code>。</p><h2 id="双向数据绑定"><a href="#双向数据绑定" class="headerlink" title="双向数据绑定"></a>双向数据绑定</h2><p>不再需要手动操作DOM来获取元素的最新值了，在<code>表单提交的数据会自动提交给元素</code>。</p><p>将标签与变量进行了绑定。</p><h1 id="MVVM"><a href="#MVVM" class="headerlink" title="MVVM"></a>MVVM</h1><p>mvvm是vue实现数据驱动视图和双向数据绑定的核心原理。</p><p>mvvm是指Model模型、View视图、ViewModel视图模型。</p><ul><li>Model是当前渲染所依赖的数据源。</li><li>View是当前页面所渲染的DOM树。</li><li>ViewModel是vue实例，是MVVM的核心。</li></ul><p>ViewModel是连接Model和View的桥梁。</p><ul><li>当数据发送变化时，ViewModel会监听到变化并自动更新View。</li><li>当视图中表单值发生变化时，ViewModel会自动更新Model。</li></ul><h1 id="vue的基本使用"><a href="#vue的基本使用" class="headerlink" title="vue的基本使用"></a>vue的基本使用</h1><ol><li>导入<code>vue.js</code>的脚本文件。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/vue@3/dist/vue.global.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>声明vue的控制域，即声明一个被控制的DOM区域。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 01 设置vue的控制域 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建vue实例对象。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//02 创建vue实例对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm=<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// el:用于指定控制域，值为css选择器。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// data:用于设置数据。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;&#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="vue语法"><a href="#vue语法" class="headerlink" title="vue语法"></a>vue语法</h1><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h3><p>更新元素的 <code>textContent</code>，即：将数据对象的值赋值给标签，类似插值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 01 设置vue的控制域 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;vTextCmd&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//02 创建vue实例对象</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm=<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// el:用于指定控制域，值为css选择器。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// data:用于设置数据。</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">vTextCmd</span>:<span class="string">&quot;我是v-text&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">注意</p><p>使用<code>v-text</code>会覆盖原本的内容，如果需要更新部分内容，建议使用插值表达式。</p></div><h3 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-html">v-html</a></h3><p>更新元素的 <code>innerHTML</code>。详情见下文：插值-原始HTML。</p><h3 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-show">v-show</a></h3><p>根据表达式之真假值，切换元素的 <code>display</code>属性。无论表达式的真假，该元素都将被渲染在DOM树中。</p><p>当条件变化时该指令触发过渡效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;true&quot;</span>&gt;</span>v-show条件渲染<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h3><p>根据表达式之<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Truthy">真值</a>，来有条件地渲染元素。当条件为真时，才会被渲染到DOM树中。</p><p>在切换时元素及它的数据绑定 &#x2F; 组件被销毁并重建。</p><p>如果元素是 <code>&lt;template&gt;</code>，将提取出它的内容作为条件块。</p><p>当条件变化时该指令触发过渡效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;true&quot;</span>&gt;</span>v-if条件渲染<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-else"><a href="#v-else" class="headerlink" title="v-else"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-else">v-else</a></h3><p>前一兄弟元素必须有 <code>v-if</code> 或 <code>v-else-if</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>v-if条件渲染<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>v-else条件渲染<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-else-if"><a href="#v-else-if" class="headerlink" title="v-else-if"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-else-if">v-else-if</a></h3><p>前一兄弟元素必须有 <code>v-if</code> 或 <code>v-else-if</code>。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>v-if条件渲染<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&#x27;true&#x27;</span>&gt;</span>v-else-if条件渲染<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-for">v-for</a></h3><p>表达式为：<code>Array | Object | number | string | Iterable (2.6 新增)</code>对象。</p><p>基于源数据多次渲染元素或模板块。语法 <code>别名 in 表达式</code>，需要为当前遍历的元素提供别名。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以为数组索引指定别名 (或者用于对象的键)：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(item, index) in items&quot;</span>&gt;</span>数组<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(val, key) in object&quot;</span>&gt;</span>对象<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;(val, name, index) in object&quot;</span>&gt;</span>对象<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>v-for</code> 的默认行为会尝试原地修改元素而不是移动它们。要强制其重新排序元素，你需要用特殊属性<code>key</code> 来提供一个排序提示：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-for</span>=<span class="string">&quot;item in items&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;item.id&quot;</span>&gt;</span>  &#123;&#123; item.text &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">key</p><p>key的作用相当于是数据库中的主键，所以key的值不能重复。key的设置能提高性能、防止列表状态紊乱。使用index作为key没有意义。</p></div><h3 id="v-on"><a href="#v-on" class="headerlink" title="v-on"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-on">v-on</a></h3><p>绑定事件监听器。类似：<code>addEventListner</code>。</p><p>用在普通元素上时，只能监听<a href="https://developer.mozilla.org/zh-CN/docs/Web/Events"><strong>原生 DOM 事件</strong></a>。用在自定义元素组件上时，也可以监听子组件触发的<strong>自定义事件</strong>。</p><p>在监听原生 DOM 事件时，方法以事件为唯一的参数。如果使用内联语句，语句可以访问一个 <code>$event</code>属性，如：<code>v-on:click=&quot;handle(&#39;ok&#39;, $event)&quot;</code>。默认情况下，如果是使用方法名，会默认传入<code>$event</code>，如：<code>v-on:click=&quot;handle&quot;</code>。</p><p><strong>缩写</strong>：<code>@</code>。</p><p><strong>事件</strong>：<a href="https://www.runoob.com/jsref/dom-obj-event.html"><code>event</code></a>。</p><p><strong>修饰符</strong>：</p><ul><li><code>.stop</code> - 调用 <code>event.stopPropagation()</code>。</li><li><code>.prevent</code> - 调用 <code>event.preventDefault()</code>。</li><li><code>.capture</code> - 添加事件侦听器时使用 capture 模式。</li><li><code>.self</code> - 只当事件是从侦听器绑定的元素本身触发时才触发回调。</li><li><code>.&#123;keyCode | keyAlias&#125;</code> - 只当事件是从特定键触发时才触发回调。</li><li><code>.native</code> - 监听组件根元素的原生事件。</li><li><code>.once</code> - 只触发一次回调。</li><li><code>.left</code> - (2.2.0) 只当点击鼠标左键时触发。</li><li><code>.right</code> - (2.2.0) 只当点击鼠标右键时触发。</li><li><code>.middle</code> - (2.2.0) 只当点击鼠标中键时触发。</li><li><code>.passive</code> - (2.3.0) 以 <code>&#123; passive: true &#125;</code> 模式添加侦听器</li></ul><h3 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-bind">v-bind</a></h3><p>动态地绑定一个或多个属性，或一个组件 prop 到表达式。</p><p><strong>缩写</strong>：<code>:</code>。</p><p><strong>修饰符</strong>：</p><ul><li><code>.prop</code> - 作为一个 DOM property 绑定而不是作为 attribute 绑定。(<a href="https://stackoverflow.com/questions/6003819/properties-and-attributes-in-html#answer-6004028">差别在哪里？</a>)</li><li><code>.camel</code> - (2.1.0+) 将 kebab-case attribute 名转换为 camelCase。(从 2.1.0 开始支持)</li><li><code>.sync</code> (2.3.0+) 语法糖，会扩展成一个更新父组件绑定值的 <code>v-on</code> 侦听器。</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:placeholder</span>=<span class="string">&quot;ph&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="v-model-lt-gt"><a href="#v-model-lt-gt" class="headerlink" title="v-model &lt;!&gt;"></a><a href="https://v2.cn.vuejs.org/v2/api/#v-model">v-model</a> &lt;!&gt;</h3><p>在表单控件或者组件上创建双向绑定。</p><p>用于快速获取和设置表单中的数据，不用操作DOM。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;value&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="插值"><a href="#插值" class="headerlink" title="插值"></a>插值</h2><p>将 DOM 绑定至底层 Vue 实例的数据，即：用于在html代码中，获取data中设置的数据。</p><p>使用<code>“Mustache”语法</code> 双大括号<code>&#123;&#123;&#125;&#125;</code>的插值。</p><p>默认情况下，当数据对象中的值发生变化时，插值处的数据也会发生变化。</p><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\image-20230801130344815.png" alt="image-20230801130344815"></p><h3 id="一次性插值"><a href="#一次性插值" class="headerlink" title="一次性插值"></a>一次性插值</h3><p>通过使用 <a href="https://v2.cn.vuejs.org/v2/api/#v-once">v-once 指令</a>，让数据改变时，插值处的内容不会更新。</p><p>仅渲染元素和组件一次，并跳过之后的更新。在随后的重新渲染，元素&#x2F;组件及其所有子项将被当作静态内容并跳过渲染。这可以用来优化更新时的性能。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-once</span>&gt;</span>这个将不会改变: &#123;&#123; msg &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="原始-HTML"><a href="#原始-HTML" class="headerlink" title="原始 HTML"></a><a href="https://v2.cn.vuejs.org/v2/guide/syntax.html#%E5%8E%9F%E5%A7%8B-HTML">原始 HTML</a></h3><p>双大括号会将数据解释为普通文本，而非 HTML 代码。为了输出真正的 HTML，你需要使用 <a href="https://v2.cn.vuejs.org/v2/api/#v-html"><code>v-html</code></a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;rawHtml&quot;</span>&gt;</span>&#123;&#123;rawHtml&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用-JavaScript-表达式"><a href="#使用-JavaScript-表达式" class="headerlink" title="使用 JavaScript 表达式"></a><a href="https://v2.cn.vuejs.org/v2/guide/syntax.html#%E4%BD%BF%E7%94%A8-JavaScript-%E8%A1%A8%E8%BE%BE%E5%BC%8F">使用 JavaScript 表达式</a></h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; number + 1 &#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123; ok ? &#x27;YES&#x27; : &#x27;NO&#x27; &#125;&#125; </span><br><span class="line"></span><br><span class="line">&#123;&#123; message.split(&#x27;&#x27;).reverse().join(&#x27;&#x27;) &#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-bind:id</span>=<span class="string">&quot;&#x27;list-&#x27; + id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">注意</p><p>每个绑定都只能包含<strong>单个表达式</strong>，所以下面的例子都<strong>不会</strong>生效。</p><p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 这是语句，不是表达式 --&gt;</span></span><br><span class="line">{{ var a = 1 }}</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 流控制也不会生效，请使用三元表达式 --&gt;</span></span><br><span class="line">{{ if (ok) { return message } }}</span><br></pre></td></tr></table></figure></p></div><h1 id="选项-x2F-声明周期钩子"><a href="#选项-x2F-声明周期钩子" class="headerlink" title="选项&#x2F;声明周期钩子"></a>选项&#x2F;声明周期钩子</h1><h2 id="this变量"><a href="#this变量" class="headerlink" title="this变量"></a>this变量</h2><p>所有生命周期钩子的 <code>this</code> 上下文将自动绑定至实例中，因此你可以访问 data、computed 和 methods。</p><blockquote><p>待续…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webpack前端项目工程化</title>
      <link href="/posts/3146662735/"/>
      <url>/posts/3146662735/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是webpack？"><a href="#什么是webpack？" class="headerlink" title="什么是webpack？"></a><a href="https://www.webpackjs.com/">什么是webpack？</a></h1><p>本质上，<strong>webpack</strong> 是一个用于现代 JavaScript 应用程序的 <em>静态模块打包工具</em>。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 <a href="https://www.webpackjs.com/concepts/dependency-graph/">依赖图(dependency graph)</a>，然后将你项目中所需的每一个模块组合成一个或多个 <em>bundles</em>，它们均为静态资源，用于展示你的内容。</p><h1 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h1><blockquote><p>兼容问题</p></blockquote><p>解决Javascript<code>高级语法</code>在<code>低版本浏览器</code>的兼容问题。</p><p>我们可以放心使用高级的语法，webpack会在运行时<code>自动转换成</code>兼容的语法。</p><blockquote><p>性能优化</p></blockquote><blockquote><p>规范化代码</p></blockquote><blockquote><p>代码压缩混淆</p></blockquote><h1 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h1><h2 id="安装和配置"><a href="#安装和配置" class="headerlink" title="安装和配置"></a>安装和配置</h2><p>安装至<code>devDependencies</code>节点中，仅在开发阶段中使用。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack webpack-cli -D</span><br></pre></td></tr></table></figure><p>在项目<code>根目录</code>创建<code>webpack.config.js</code>配置文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span> <span class="comment">//用于指定构建模式，可选值：development、production</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在<code>package.json</code>中的<code>scripts</code>节点，新增<code>dev脚本</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;dev&quot;</span>:<span class="string">&quot;webpack&quot;</span> <span class="comment">//script节点下的脚本，可以通过npm run执行，如:npm run dev</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition info"><p class="admonition-title">webpack中的默认约定</p><p>webpack 4.x和5.x的版本中，有如下的默认约定：</p><ol><li>默认的打包入口文件为<code>src</code>-&gt;<code>index.js</code></li><li>默认的输出文件路径为<code>dist</code>-&gt;<code>main.js</code>默认约定可以在<code>webpack.config.js</code>中进行修改。</li></ol></div><h2 id="创建列表隔行变色项目"><a href="#创建列表隔行变色项目" class="headerlink" title="创建列表隔行变色项目"></a>创建列表隔行变色项目</h2><blockquote><p>js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"></span><br><span class="line">$(()=&gt;&#123;</span><br><span class="line">    $(<span class="string">&#x27;li:odd&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;red&#x27;</span>);</span><br><span class="line">    $(<span class="string">&#x27;li:even&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>奇偶行变色<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;index.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第1个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第2个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第3个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第4个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第5个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第6个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第7个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第8个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第9个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第一个报错：</p><p><code>Uncaught SyntaxError: Cannot use import statement outside a module</code></p><p>问题出在<code>js</code>第一行<code>import $ from &#39;jquery&#39;</code></p><p>解决方案：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run webpack</span><br></pre></td></tr></table></figure><p>修改导入文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;../dist/main.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="使用代码压缩混淆"><a href="#使用代码压缩混淆" class="headerlink" title="使用代码压缩混淆"></a>使用代码压缩混淆</h2><p>将配置文件<code>webpack.config.js</code>中的<code>mode</code>修改为<code>production</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;production&#x27;</span> <span class="comment">//用于指定构建模式，可选值：development、production</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>压缩时间较长，一般不会在开发阶段使用。</p></blockquote><h2 id="修改默认约定"><a href="#修改默认约定" class="headerlink" title="修改默认约定"></a>修改默认约定</h2><p>在<code>webpack.config.js</code>中进行修改。</p><p>entry：设置入口文件。</p><p>output：设置输出文件的目录和文件名。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    <span class="attr">entry</span>:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./src/index1.js&#x27;</span>),</span><br><span class="line">    <span class="attr">output</span>:&#123;</span><br><span class="line">        <span class="attr">path</span>:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>:<span class="string">&#x27;main1.js&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span> <span class="comment">//用于指定构建模式，可选值：development、production</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="webpack插件"><a href="#webpack插件" class="headerlink" title="webpack插件"></a>webpack插件</h1><h2 id="插件的作用"><a href="#插件的作用" class="headerlink" title="插件的作用"></a>插件的作用</h2><p>第三方插件能够拓展webpack的能力。</p><h2 id="webpack-dev-server"><a href="#webpack-dev-server" class="headerlink" title="webpack-dev-server"></a>webpack-dev-server</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack-dev-server</span><br></pre></td></tr></table></figure><ul><li>类似node.js节点使用nodemon工具</li><li>每当修改源代码，webpack会自动进行项目的打包和构建</li></ul><p>webpack-dev-server打包的js文件存储在<code>内存</code>中。</p><h2 id="html-webpack-plugin"><a href="#html-webpack-plugin" class="headerlink" title="html-webpack-plugin"></a>html-webpack-plugin</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i html-webpack-plugin</span><br></pre></td></tr></table></figure><ul><li>webpack中的HTML插件（类似于一个模板引擎插件）</li><li>可以通过该插件自定义index.html页面的内容</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="comment">//1.导入HTML插件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">HtmlPlugin</span>=<span class="built_in">require</span>(<span class="string">&#x27;html-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="comment">//2.创建HTML对象</span></span><br><span class="line"><span class="keyword">const</span> htmlPlugin=<span class="keyword">new</span> <span class="title class_">HtmlPlugin</span>(&#123;</span><br><span class="line">    <span class="attr">template</span>:<span class="string">&#x27;./src/index.html&#x27;</span>, <span class="comment">//指定源文件的位置</span></span><br><span class="line">    <span class="attr">filename</span>:<span class="string">&#x27;./index.html&#x27;</span> <span class="comment">//指定目标文件的位置</span></span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//3.通过plugins节点，使htmlPlugin实例生效</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    <span class="attr">entry</span>:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./src/index1.js&#x27;</span>),</span><br><span class="line">    <span class="attr">output</span>:&#123;</span><br><span class="line">        <span class="attr">path</span>:path.<span class="title function_">join</span>(__dirname,<span class="string">&#x27;./dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>:<span class="string">&#x27;main1.js&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mode</span>:<span class="string">&#x27;development&#x27;</span>, <span class="comment">//用于指定构建模式，可选值：development、production</span></span><br><span class="line">    <span class="attr">plugins</span>:[htmlPlugin],<span class="comment">//加载并调用插件</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>devServer节点</p></blockquote><p>在<code>webpack.config.js</code>中配置。</p><p>可以配置自动打开浏览器、设置端口号、IP地址等。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devServer</span>:&#123;</span><br><span class="line">    <span class="attr">open</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">port</span>:<span class="number">8081</span>,</span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="webpack-loader"><a href="#webpack-loader" class="headerlink" title="webpack loader"></a>webpack loader</h2><p>webpack默认只能处理<code>js</code>文件。</p><p>webpack处理不了的，需要调用<code>loader</code>加载器才能正常打包。</p><p>loader用于协助webpack打包处理特定的文件模块。</p><ul><li>css-loader</li><li>less-loader</li><li>babel-loader</li></ul><h3 id="使用和配置css-loader"><a href="#使用和配置css-loader" class="headerlink" title="使用和配置css-loader"></a>使用和配置css-loader</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i style-loader css-loader -D</span><br></pre></td></tr></table></figure><p>配置<code>webpack.config.js</code>文件。新增<code>module</code>节点。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">module</span>: &#123;<span class="comment">//所有使用第三方文件模块的匹配规则</span></span><br><span class="line">    <span class="attr">rules</span>: [ <span class="comment">//文件后缀名匹配规则</span></span><br><span class="line">        &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,<span class="attr">use</span>:[<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>]&#125;</span><br><span class="line">        <span class="comment">//test表示文件类型，use表示要调用的loader。</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用和配置url-loader、file-loader"><a href="#使用和配置url-loader、file-loader" class="headerlink" title="使用和配置url-loader、file-loader"></a>使用和配置url-loader、file-loader</h3><p>用于处理样式表中与url路径相关的文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i url-loader file-loader -D</span><br></pre></td></tr></table></figure><p>在<code>webpack.config.js</code>中配置<code>rules</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">module</span>: &#123;<span class="comment">//所有使用第三方文件模块的匹配规则</span></span><br><span class="line">    <span class="attr">rules</span>: [ <span class="comment">//文件后缀名匹配规则</span></span><br><span class="line">        &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,<span class="attr">use</span>:[<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>]&#125;,</span><br><span class="line">        &#123;<span class="attr">test</span>:<span class="regexp">/\.jpg|png|gif$/</span>,<span class="attr">use</span>:<span class="string">&#x27;url-loader?limit=114&#x27;</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>?</code>为loader的参数项：limit用于指定图片的大小，单位是字节。当图片小于等于limit时，url会被转换为<code>base64</code>格式。</p></blockquote><h3 id="使用和配置babel-loader"><a href="#使用和配置babel-loader" class="headerlink" title="使用和配置babel-loader"></a>使用和配置babel-loader</h3><p>应用于webpack都处理不了的js文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i babel-loader @babel/core @babel/plugin-proposal-decorators -D</span><br></pre></td></tr></table></figure><p>配置<code>webpack.config.js</code>文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">module</span>: &#123;<span class="comment">//所有使用第三方文件模块的匹配规则</span></span><br><span class="line">    <span class="attr">rules</span>: [ <span class="comment">//文件后缀名匹配规则</span></span><br><span class="line">        &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,<span class="attr">use</span>:[<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>]&#125;,</span><br><span class="line">        &#123;<span class="attr">test</span>:<span class="regexp">/\.js$/</span>,<span class="attr">use</span>:[<span class="string">&#x27;babel-loader&#x27;</span>],<span class="attr">exclude</span>:<span class="regexp">/node_modules/</span>&#125;<span class="comment">//注意必须排除node_modules目录。</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建<code>babel.config.js</code>配置一些插件，如：用于处理修饰器的<code>@babel/plugin-proposal-decorators</code>插件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    <span class="comment">//声明babel可用的插件</span></span><br><span class="line">    <span class="attr">plugins</span>:[[<span class="string">&#x27;@babel/plugin-proposal-decorators&#x27;</span>,&#123;<span class="attr">legacy</span>:<span class="literal">true</span>&#125;]]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>js</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> $ <span class="keyword">from</span> <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./css/index.css&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///////////babel-loader////////////</span></span><br><span class="line"><span class="comment">//定义修饰器</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">info</span>(<span class="params">target</span>) &#123;</span><br><span class="line">    target.<span class="property">info</span> = <span class="string">&#x27;Person info&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//定义普通类</span></span><br><span class="line">@info</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;&#125;</span><br><span class="line"><span class="comment">//打印普通类中的属性info的值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Person</span>.<span class="property">info</span>);</span><br><span class="line"><span class="comment">////////////////////////////////////</span></span><br><span class="line">$(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    $(<span class="string">&#x27;li:even&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;pink&#x27;</span>);</span><br><span class="line">    $(<span class="string">&#x27;li:odd&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background-color&#x27;</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="clean-webpack-plugin"><a href="#clean-webpack-plugin" class="headerlink" title="clean-webpack-plugin"></a><a href="https://www.npmjs.com/package/clean-webpack-plugin">clean-webpack-plugin</a></h2><p>用于自动删除<code>旧的dist</code>文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev clean-webpack-plugin</span><br></pre></td></tr></table></figure><p>修改<code>webpack.config.js</code>文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">CleanWebpackPlugin</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;clean-webpack-plugin&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> webpackConfig = &#123;</span><br><span class="line">    <span class="attr">plugins</span>: [</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">CleanWebpackPlugin</span>(),</span><br><span class="line">    ],</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = webpackConfig;</span><br></pre></td></tr></table></figure><h1 id="打包发布"><a href="#打包发布" class="headerlink" title="打包发布"></a>打包发布</h1><p>将原本在<code>内存</code>中的文件保存到<code>磁盘</code>中。</p><p>在<code>package.json</code>文件中的<code>scripts</code>脚本中，新增<code>build</code>命令。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;dev&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webpack serve&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;build&quot;</span><span class="punctuation">:</span><span class="string">&quot;webpack --mode production&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><blockquote><p>不添加mode参数也能实现打包，加上后可实现压缩混淆。</p></blockquote><h2 id="分类存放"><a href="#分类存放" class="headerlink" title="分类存放"></a>分类存放</h2><h3 id="将所有js文件放在js目录。"><a href="#将所有js文件放在js目录。" class="headerlink" title="将所有js文件放在js目录。"></a>将所有<code>js</code>文件放在<code>js目录</code>。</h3><p>修改<code>webpack.config.js</code>配置文件。在<code>filename</code>中添加目录<code>js/</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">output</span>: &#123;</span><br><span class="line">    <span class="attr">path</span>: path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;./dist&#x27;</span>),</span><br><span class="line">    <span class="attr">filename</span>: <span class="string">&#x27;js/main1.js&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="将所有的图片资源放在images目录。"><a href="#将所有的图片资源放在images目录。" class="headerlink" title="将所有的图片资源放在images目录。"></a>将所有的<code>图片</code>资源放在<code>images目录</code>。</h3><p>修改<code>webpack.config.js</code>文件。添加<code>outputPath</code>参数，使用<code>&amp;</code>进行连接。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">module</span>: &#123;<span class="comment">//所有使用第三方文件模块的匹配规则</span></span><br><span class="line">    <span class="attr">rules</span>: [ <span class="comment">//文件后缀名匹配规则</span></span><br><span class="line">        &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>,<span class="attr">use</span>:[<span class="string">&#x27;style-loader&#x27;</span>,<span class="string">&#x27;css-loader&#x27;</span>]&#125;,</span><br><span class="line">        &#123;<span class="attr">test</span>:<span class="regexp">/\.jpg|png|gif$/</span>,<span class="attr">use</span>:<span class="string">&#x27;url-loader?limit=8890&amp;outputPath=images&#x27;</span>&#125;,</span><br><span class="line">        &#123;<span class="attr">test</span>:<span class="regexp">/\.js$/</span>,<span class="attr">use</span>:[<span class="string">&#x27;babel-loader&#x27;</span>],<span class="attr">exclude</span>:<span class="regexp">/node_modules/</span>&#125;<span class="comment">//注意必须排除node_modules目录。</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Source-Map"><a href="#Source-Map" class="headerlink" title="Source Map"></a>Source Map</h1><p>SourceMap存储着错误在<code>源文件</code>的位置信息。</p><p>修改<code>webpack.config.js</code>配置文件，开启SourceMap。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="attr">entry</span>: path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;./src/index1.js&#x27;</span>),</span><br><span class="line">    <span class="attr">output</span>: &#123;</span><br><span class="line">        <span class="attr">path</span>: path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;./dist&#x27;</span>),</span><br><span class="line">        <span class="attr">filename</span>: <span class="string">&#x27;js/main1.js&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mode</span>: <span class="string">&#x27;development&#x27;</span>, <span class="comment">//用于指定构建模式，可选值：development、production</span></span><br><span class="line">    <span class="attr">plugins</span>: [htmlPlugin, cleanWebpackPlugin],<span class="comment">//加载并调用插件</span></span><br><span class="line">    <span class="attr">devServer</span>: &#123;</span><br><span class="line">        <span class="attr">open</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">port</span>: <span class="number">8081</span>,</span><br><span class="line">        <span class="attr">host</span>: <span class="string">&#x27;127.0.0.1&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">module</span>: &#123;<span class="comment">//所有使用第三方文件模块的匹配规则</span></span><br><span class="line">        <span class="attr">rules</span>: [ <span class="comment">//文件后缀名匹配规则</span></span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.css$/</span>, <span class="attr">use</span>: [<span class="string">&#x27;style-loader&#x27;</span>, <span class="string">&#x27;css-loader&#x27;</span>] &#125;,</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.jpg|png|gif$/</span>, <span class="attr">use</span>: <span class="string">&#x27;url-loader?limit=889&amp;outputPath=images&#x27;</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">test</span>: <span class="regexp">/\.js$/</span>, <span class="attr">use</span>: [<span class="string">&#x27;babel-loader&#x27;</span>], <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span> &#125;<span class="comment">//注意必须排除node_modules目录。</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">devtool</span>:<span class="string">&#x27;eval-source-map&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code> devtool:&#39;eval-source-map&#39;</code></p></blockquote><p>在生成环境下，为了安全建议关闭SourceMap，也可以设置成只定位行号，不暴露源码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">devtool</span>:<span class="string">&#x27;nosources-source-map&#x27;</span>,</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20230727151657456.png" alt="image-20230727151657456"></p><div class="admonition info"><p class="admonition-title">@在webpack中的使用</p><p><code>@</code>表示<code>src</code>目录，如：<code>import xxx from @/css/index.css</code></p></div><h1 id="一键生成webpack项目"><a href="#一键生成webpack项目" class="headerlink" title="一键生成webpack项目"></a>一键生成webpack项目</h1><p>如何自动生成？</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Webpack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web APIs 学习笔记1</title>
      <link href="/posts/765948946/"/>
      <url>/posts/765948946/</url>
      
        <content type="html"><![CDATA[<h1 id="理论基础"><a href="#理论基础" class="headerlink" title="理论基础"></a>理论基础</h1><h2 id="什么是Web-API"><a href="#什么是Web-API" class="headerlink" title="什么是Web API?"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Introduction">什么是Web API?</a></h2><h3 id="作用和分类"><a href="#作用和分类" class="headerlink" title="作用和分类"></a>作用和分类</h3><p>使用JavaScript操作HTML和浏览器。</p><p>分为：DOM（文档对象模型）、BOM（浏览器对象模型）</p><div class="admonition note"><p class="admonition-title">DOM对象</p><p>使用JS获取到的标签是一个Object，即DOM对象。</p></div><h2 id="什么是DOM"><a href="#什么是DOM" class="headerlink" title="什么是DOM?"></a>什么是DOM?</h2><p>DOM (Document Object Model）文档对象模型是用来呈现以及与任意 HTML 或 XML 文档交互的 API。即：DOM是浏览器提供的一套专门用来操作页面内容的功能。可以实现与用户的交互，如：下拉菜单，点击切换，页面特效等等。</p><h2 id="什么是DOM树？（文档树）"><a href="#什么是DOM树？（文档树）" class="headerlink" title="什么是DOM树？（文档树）"></a>什么是DOM树？（文档树）</h2><p>将HTML文档以树状结构直观的表现出来。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230702175542262.png" alt="image-20230702175542262"></p><p><strong>DOM树很直观的体现了标签与标签之间的关系！</strong></p><h2 id="什么是document？"><a href="#什么是document？" class="headerlink" title="什么是document？"></a>什么是document？</h2><p>document是DOM中的一个对象，且是最大的一个对象。</p><h1 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h1><h2 id="获取DOM元素的方法"><a href="#获取DOM元素的方法" class="headerlink" title="获取DOM元素的方法"></a>获取DOM元素的方法</h2><p>前两个比较常用。</p><h3 id="选择匹配的第一个元素"><a href="#选择匹配的第一个元素" class="headerlink" title="选择匹配的第一个元素"></a>选择匹配的<code>第一个</code>元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;css选择器&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>注意需要加单引号<code>‘’</code></p></blockquote><h3 id="选择匹配多个元素"><a href="#选择匹配多个元素" class="headerlink" title="选择匹配多个元素"></a>选择匹配<code>多个</code>元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;css选择器&#x27;</span>)</span><br></pre></td></tr></table></figure><div class="admonition info"><p class="admonition-title">NodeList</p><p>返回的值为数组（NodeList），这是一个伪数组，有长度和索引，但没有pop()，push()等数组方法，想要获取里面的对象，需要通过遍历（for）的方式。</p></div><h3 id="其它方式获取元素"><a href="#其它方式获取元素" class="headerlink" title="其它方式获取元素"></a>其它方式获取元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElemenntById</span>()</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElemenntByName</span>()</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElemenntByTagName</span>()</span><br><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElemenntByClassName</span>()</span><br></pre></td></tr></table></figure><h2 id="修改DOM元素的内容"><a href="#修改DOM元素的内容" class="headerlink" title="修改DOM元素的内容"></a>修改DOM元素的内容</h2><blockquote><p>下文的element表示获取到的元素对象。</p></blockquote><h3 id="在-lt-x2F-body-gt-前追加文本"><a href="#在-lt-x2F-body-gt-前追加文本" class="headerlink" title="在&lt;&#x2F;body&gt;前追加文本"></a>在&lt;&#x2F;body&gt;前追加文本</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">write</span>(<span class="string">&#x27;文本/标签&#x27;</span>)</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">write()</p><p>使用write()追加标签<code>能够</code>被浏览器解析。</p></div><h3 id="更新元素中的文本"><a href="#更新元素中的文本" class="headerlink" title="更新元素中的文本"></a>更新元素中的文本</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">innerText</span> = <span class="string">&#x27;文本&#x27;</span></span><br><span class="line">element.<span class="property">innerHTML</span> = <span class="string">&#x27;文本/标签&#x27;</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">innerText()</p><p>使用innerText()追加标签<code>不能够</code>被浏览器解析，而innerHTML可以被解析。</p></div><h2 id="修改DOM元素的属性"><a href="#修改DOM元素的属性" class="headerlink" title="修改DOM元素的属性"></a>修改DOM元素的属性</h2><h3 id="修改常用属性"><a href="#修改常用属性" class="headerlink" title="修改常用属性"></a>修改常用属性</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.属性 = <span class="string">&#x27;属性值&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="通过style控制样式"><a href="#通过style控制样式" class="headerlink" title="通过style控制样式"></a>通过style控制样式</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">style</span>.属性 = <span class="string">&#x27;属性值&#x27;</span></span><br></pre></td></tr></table></figure><p>!!! note 关于属性的命名<br>   将<code>横线命名法</code>改为<code>小驼峰命名法</code>，如：background-color改为backgroundColor。</p><h3 id="设置class属性的值"><a href="#设置class属性的值" class="headerlink" title="设置class属性的值"></a>设置class属性的值</h3><blockquote><p>由于class为关键字，要使用className替代</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">className</span> = <span class="string">&#x27;属性值&#x27;</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">设置类名的覆盖问题</p><p>使用className设置类名会将以前的类名都覆盖掉。有3种方式可以解决，第一种，在属性值中保留以前类名的同时添加新类名，如：element.className = '旧类名 新类名'；第二种，使用<code>+=</code>赋值的方式，主要新类名前加个空格，element.className += ' 新类名'；第三中方式，使用<code>classList</code>操作类控制css，见下文。</p></div><h3 id="使用classList设置类"><a href="#使用classList设置类" class="headerlink" title="使用classList设置类"></a>使用classList设置类</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="property">classList</span>.<span class="title function_">add</span>(<span class="string">&#x27;类名&#x27;</span>)</span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">remove</span>(<span class="string">&#x27;类名&#x27;</span>) </span><br><span class="line">element.<span class="property">classList</span>.<span class="title function_">toggle</span>(<span class="string">&#x27;类名&#x27;</span>) <span class="comment">//切换，即原来有的去掉，没有的添加。</span></span><br></pre></td></tr></table></figure><h1 id="定时器（间隙函数）"><a href="#定时器（间隙函数）" class="headerlink" title="定时器（间隙函数）"></a>定时器（间隙函数）</h1><h2 id="开启定时器"><a href="#开启定时器" class="headerlink" title="开启定时器"></a>开启定时器</h2><p>每间隔一段时间，自动执行一段代码。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(函数名不加小括号,间隙时间ms) </span><br></pre></td></tr></table></figure><h2 id="关闭定时器"><a href="#关闭定时器" class="headerlink" title="关闭定时器"></a>关闭定时器</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 变量名=<span class="built_in">setInterval</span>(函数名,间隙时间)</span><br><span class="line"><span class="built_in">clearInterval</span>(变量名)</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">应用场景</p><p>当某些事件发生时，需要停止定时器，比如当用户鼠标放在轮播图上时。</p></div><h1 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h1><p>事件是指编程时系统内发生的动作或发生的事情。如：用户在网页上点击了一个按钮。</p><h2 id="事件监听"><a href="#事件监听" class="headerlink" title="事件监听"></a>事件监听</h2><p>让程序监听某个事件是否发生，发生后调用某个函数做出响应，也叫注册事件。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a><a href="https://www.w3school.com.cn/js/js_htmldom_eventlistener.asp">语法</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">element.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件&#x27;</span>,函数名,useCapture)</span><br></pre></td></tr></table></figure><p>第一个参数是事件的类型（比如 “click” 或 “mousedown”）。</p><p>第二个参数是当事件发生时我们需要调用的函数。</p><p>第三个参数是布尔值，指定使用事件冒泡还是事件捕获。此参数是可选的。</p><p><strong>注意：</strong>请勿对事件使用 “on” 前缀；请使用 “click” 代替 “onclick”。</p><h2 id="常见的事件"><a href="#常见的事件" class="headerlink" title="常见的事件"></a><a href="https://www.w3school.com.cn/jsref/dom_obj_event.asp">常见的事件</a></h2><table><thead><tr><th align="left">事件</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">onchange</td><td align="left">HTML 元素已被改变</td></tr><tr><td align="left">onclick</td><td align="left">用户点击了 HTML 元素</td></tr><tr><td align="left">onmouseover</td><td align="left">用户把鼠标移动到 HTML 元素上</td></tr><tr><td align="left">onmouseout</td><td align="left">用户把鼠标移开 HTML 元素</td></tr><tr><td align="left">onkeydown</td><td align="left">用户按下键盘按键</td></tr><tr><td align="left">onload</td><td align="left">浏览器已经完成页面加载</td></tr></tbody></table><h2 id="resize事件"><a href="#resize事件" class="headerlink" title="resize事件"></a>resize事件</h2><p>当窗口(window)发生变化时，触发的事件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;resize&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.runoob.com/jsref/prop-element-classlist.html">补充一下<code>this</code>的使用</a></p></blockquote><h3 id="移除事件监听"><a href="#移除事件监听" class="headerlink" title="移除事件监听"></a>移除事件监听</h3><p>传统的事件监听</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">btn.<span class="property">onclick</span>=<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    ....</span><br><span class="line">&#125;;</span><br><span class="line">btn.<span class="property">onclick</span>=<span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p>使用EventListener</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">btn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件&#x27;</span>,有名回调函数)</span><br><span class="line">btn.<span class="title function_">removeEventListener</span>(<span class="string">&#x27;事件&#x27;</span>,有名回调函数)</span><br></pre></td></tr></table></figure><h1 id="节点关系"><a href="#节点关系" class="headerlink" title="节点关系"></a><a href="https://juejin.cn/post/7191507897879101500">节点关系</a></h1><h2 id="父子兄节点查询"><a href="#父子兄节点查询" class="headerlink" title="父子兄节点查询"></a>父子兄节点查询</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20230712103816555.png" alt="image-20230712103816555"></p><blockquote><p>下文<code>node</code>表示当前节点</p></blockquote><h3 id="查找节点的父节点"><a href="#查找节点的父节点" class="headerlink" title="查找节点的父节点"></a>查找节点的父节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.<span class="property">parentNode</span></span><br></pre></td></tr></table></figure><h3 id="查找节点的子节点"><a href="#查找节点的子节点" class="headerlink" title="查找节点的子节点"></a>查找节点的子节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.<span class="property">children</span></span><br></pre></td></tr></table></figure><h3 id="查找下一个兄弟节点"><a href="#查找下一个兄弟节点" class="headerlink" title="查找下一个兄弟节点"></a>查找下一个兄弟节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.<span class="property">nextElementSibling</span></span><br></pre></td></tr></table></figure><h3 id="查找前一个兄弟节点"><a href="#查找前一个兄弟节点" class="headerlink" title="查找前一个兄弟节点"></a>查找前一个兄弟节点</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node.<span class="property">previousElementSibling</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">节点关系</p><p>子节点往往有属性节点、文本节点、标签节点，注意不要忽略了某个节点！下文中的<code>Element</code>限制了只在标签节点中进行查找。更多见：<a href="https://juejin.cn/post/7191507897879101500">节点的关系和内部操作</a>。</p></div><h2 id="节点增加"><a href="#节点增加" class="headerlink" title="节点增加"></a>节点增加</h2><h3 id="创建一个标签"><a href="#创建一个标签" class="headerlink" title="创建一个标签"></a>创建一个标签</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> 子元素=<span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;标签名&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="将标签放在某个位置"><a href="#将标签放在某个位置" class="headerlink" title="将标签放在某个位置"></a>将标签放在某个位置</h3><h4 id="插入到父元素的最后一个子元素（追加）"><a href="#插入到父元素的最后一个子元素（追加）" class="headerlink" title="插入到父元素的最后一个子元素（追加）"></a>插入到父元素的最后一个子元素（追加）</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父元素.<span class="title function_">appendChild</span>(子元素)</span><br></pre></td></tr></table></figure><h4 id="插入到父元素的某个子元素前面"><a href="#插入到父元素的某个子元素前面" class="headerlink" title="插入到父元素的某个子元素前面"></a>插入到父元素的某个子元素前面</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父元素.<span class="title function_">insertBefore</span>(子元素,哪个子元素前面)</span><br></pre></td></tr></table></figure><div class="admonition info"><p class="admonition-title">insertBefore</p><p>常常会用到<code>父元素.children[i]</code>的方式，来确定第二个参数的元素位置。</p></div><h2 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="title function_">cloneNode</span>(布尔值)</span><br></pre></td></tr></table></figure><p>布尔值为true，表示克隆时包含后代节点一起克隆；为false，不可龙后代节点。默认为false。</p><h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><p>从父元素中来删除！不存在父子关系删除失败。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父元素.<span class="title function_">removeChild</span>(要删除的元素)</span><br></pre></td></tr></table></figure><p>第二种方法<a href="https://www.w3school.com.cn/jsref/met_element_remove.asp"><code>元素.remove()</code></a></p><h1 id="时间对象"><a href="#时间对象" class="headerlink" title="时间对象"></a>时间对象</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>() #返回当前时间</span><br><span class="line"><span class="keyword">let</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>(’<span class="number">2023</span>-<span class="number">7</span>-<span class="number">1</span>‘) #返回指定日期</span><br><span class="line"><span class="keyword">let</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>(’<span class="number">2023</span>-<span class="number">7</span>-<span class="number">1</span> <span class="number">10</span>:<span class="number">30</span>:<span class="number">00</span>‘) #返回指定日期</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20230714103637902.png" alt="image-20230714103637902"></p><h2 id="时间戳"><a href="#时间戳" class="headerlink" title="时间戳"></a>时间戳</h2><p>时间戳是指从1970年1月1日0时0分0秒到现在的时间差，换算成<code>毫秒数</code>。</p><h2 id="获取时间戳的方法"><a href="#获取时间戳的方法" class="headerlink" title="获取时间戳的方法"></a>获取时间戳的方法</h2><p>三种方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> date=<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"><span class="keyword">let</span> time=date.<span class="title function_">getTime</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> time=+<span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">#只能得到当前的</span><br><span class="line"><span class="keyword">let</span> time=<span class="title class_">Date</span>.<span class="title function_">now</span>();</span><br></pre></td></tr></table></figure><h2 id="时间戳转换"><a href="#时间戳转换" class="headerlink" title="时间戳转换"></a>时间戳转换</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20230714110149696.png" alt="image-20230714110149696"></p><p>注意要先换算出秒！即：<code>总秒数=时间戳/1000</code></p><h1 id="重绘和回流"><a href="#重绘和回流" class="headerlink" title="重绘和回流"></a>重绘和回流</h1><p>浏览器是如何进行界面渲染的？</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230716114801549.png" alt="image-20230716114801549"></p><ol><li><p>HTML解析器解析HTML生成<code>DOM树</code></p></li><li><p>CSS解析器解析CSS生成<code>样式规则</code></p></li><li><p>根据DOM树和样式规则生成<code>渲染树</code></p></li><li><p>进行布局Layout（重排&#x2F;回流）：根据渲染树，得到节点的几何信息（位置和大小）</p></li><li><p>进行绘制Painting：根据计算和获取的信息对整个页面进行绘制</p></li><li><p>Display：显示在页面上</p></li></ol><h2 id="回流"><a href="#回流" class="headerlink" title="回流"></a>回流</h2><p>当Render Tree（渲染树）中部分或者全部元素的尺寸、结构、布局等发生变化时，浏览器就会重新渲染部分或全部文档的过程，称为回流。</p><h2 id="重绘"><a href="#重绘" class="headerlink" title="重绘"></a>重绘</h2><p>由于节点（元素）的样式发生改变但不影响它在文档流中的位置和布局时，称为重绘。</p><div class="admonition note"><p class="admonition-title">重绘和回流</p><p>重绘不一定会引起回流，但回流一定会引起重绘。</p></div><h1 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h1><p>事件对象包含了事件触发时的信息。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>其中的<code>e</code>参数为事件对象。</p><h2 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h2><h3 id="key"><a href="#key" class="headerlink" title="key"></a>key</h3><p>记录了用户按下的键盘值。</p><p>现在不提倡使用<a href="https://www.cnblogs.com/lxwphp/p/9548823.html">KeyCode</a>。</p><h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><p>获取当前的事件类型。如：‘click’，‘mouseenter’等</p><h3 id="clientX-x2F-clientY"><a href="#clientX-x2F-clientY" class="headerlink" title="clientX&#x2F;clientY"></a>clientX&#x2F;clientY</h3><p>获取光标相对于浏览器可见窗左上角的位置。</p><h3 id="offsetX-x2F-offsetY"><a href="#offsetX-x2F-offsetY" class="headerlink" title="offsetX&#x2F;offsetY"></a>offsetX&#x2F;offsetY</h3><p>获取光标相对于当前DOM元素左上角的位置。</p><h3 id="preventDefault"><a href="#preventDefault" class="headerlink" title="preventDefault"></a>preventDefault</h3><p>阻止默认行为，比如：a标签的跳转行为，表单域的提交功能。</p><h3 id="target"><a href="#target" class="headerlink" title="target"></a>target</h3><p>可以得到被点击的元素对象。</p><h1 id="事件流"><a href="#事件流" class="headerlink" title="事件流"></a>事件流</h1><p>事件流是指事件完整执行过程中的流动路径。</p><h2 id="事件捕获和事件冒泡"><a href="#事件捕获和事件冒泡" class="headerlink" title="事件捕获和事件冒泡"></a>事件捕获和事件冒泡</h2><h3 id="事件捕获"><a href="#事件捕获" class="headerlink" title="事件捕获"></a>事件捕获</h3><p>当一个元素的事件被触发，将从DOM的根元素开始执行事件。（从外到内）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">DOM</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件&#x27;</span>,回调函数,是否开启捕获布尔值)</span><br></pre></td></tr></table></figure><h3 id="事件冒泡"><a href="#事件冒泡" class="headerlink" title="事件冒泡"></a>事件冒泡</h3><p>当一个元素的事件被触发，将从被点击的元素开始，依次向上调用所有父级元素的同名事件。</p><h2 id="阻止事件流动"><a href="#阻止事件流动" class="headerlink" title="阻止事件流动"></a>阻止事件流动</h2><p>关闭事件捕获和事件冒泡，让事件只在被点击的元素上发生。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">事件对象.<span class="title function_">stopPropagation</span>();</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">元素.<span class="title function_">addEventListener</span>(<span class="string">&#x27;事件&#x27;</span>,<span class="keyword">function</span>(<span class="params">e</span>)&#123;</span><br><span class="line">    e.<span class="title function_">stopPropagation</span>();</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="mouseover和mouseenter的区别"><a href="#mouseover和mouseenter的区别" class="headerlink" title="mouseover和mouseenter的区别"></a><code>mouseover</code>和<code>mouseenter</code>的区别</h3><p>mouseover和mouseout默认具有冒泡效果</p><p>mouseenter和mouseleave不具有冒泡效果</p><p>在需要使用鼠标经过事件时，推荐使用<code>mouseenter</code>事件实现。</p><h1 id="滚动事件和加载事件"><a href="#滚动事件和加载事件" class="headerlink" title="滚动事件和加载事件"></a>滚动事件和加载事件</h1><h2 id="滚动事件"><a href="#滚动事件" class="headerlink" title="滚动事件"></a>滚动事件</h2><p>监听整个页面或者某个元素的滚动事件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br><span class="line">元素.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="加载事件"><a href="#加载事件" class="headerlink" title="加载事件"></a>加载事件</h2><h2 id="load事件"><a href="#load事件" class="headerlink" title="load事件"></a>load事件</h2><p>常用于在加载完页面后再加载外部资源。也可以用在某个元素上，一般是需要花时间加载的元素比如图片。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;load&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br><span class="line">元素..<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="DOMContentLoaded事件"><a href="#DOMContentLoaded事件" class="headerlink" title="DOMContentLoaded事件"></a>DOMContentLoaded事件</h2><p>相对于<code>load</code>事件，无需等待样式表、图像完全加载。监听页面DOM树加载完毕。</p><p>监听对象为<code>document</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="scroll家族"><a href="#scroll家族" class="headerlink" title="scroll家族"></a>scroll家族</h1><p>获取内容的宽高等。</p><h2 id="scrollWidth和scrollHeight属性"><a href="#scrollWidth和scrollHeight属性" class="headerlink" title="scrollWidth和scrollHeight属性"></a>scrollWidth和scrollHeight属性</h2><p>这两个属性返回的是元素<code>内容</code>的宽高，<code>不带单位</code>。</p><div class="admonition note"><p class="admonition-title">获取html标签</p><p>使用``document.documentElement.xxx<code>的方式获取</code><html>`。</p></div><h2 id="scrollTop和scrollLeft属性"><a href="#scrollTop和scrollLeft属性" class="headerlink" title="scrollTop和scrollLeft属性"></a>scrollTop和scrollLeft属性</h2><p>scrollTop表示的是头部被滚动的距离，即竖向滚动条移动的距离；类似的scrollLeft表示左边被滚动的距离。<code>不带单位</code>。</p><p>可以用于获取，也可以用于赋值以实现<code>回到顶部/底部的功能</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> html=<span class="variable language_">document</span>.<span class="property">documentElement</span>;</span><br><span class="line"><span class="variable language_">window</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;scroll&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(html.<span class="property">scrollTop</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="offset家族"><a href="#offset家族" class="headerlink" title="offset家族"></a>offset家族</h1><p>获取元素的自身宽高，包含元素自身设置的宽高、padding、border。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回该元素自身的宽高，包含padding、border</span></span><br><span class="line">元素.<span class="property">offsetWidth</span></span><br><span class="line">元素.<span class="property">offsetHeight</span></span><br><span class="line"><span class="comment">//返回该元素的相对于父级元素的位置，没有父级元素以body为准</span></span><br><span class="line">元素.<span class="property">offsetLeft</span></span><br><span class="line">元素.<span class="property">offsetTop</span></span><br><span class="line"><span class="comment">//返回该元素的父级元素</span></span><br><span class="line">元素.<span class="property">offsetParent</span></span><br></pre></td></tr></table></figure><h1 id="client家族"><a href="#client家族" class="headerlink" title="client家族"></a>client家族</h1><p>获取元素当前可见内容的宽高。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回该元素自身的宽高，不包含padding、border、滚动条</span></span><br><span class="line">元素.<span class="property">clientWidth</span></span><br><span class="line">元素.<span class="property">clientHeight</span></span><br><span class="line"><span class="comment">//返回元素左边框、上边框的大小</span></span><br><span class="line">元素.<span class="property">clientLeft</span></span><br><span class="line">元素.<span class="property">clientTop</span></span><br><span class="line"><span class="comment">//返回该元素的父级元素</span></span><br><span class="line">元素.<span class="property">clientParent</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Web APIs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot开启热部署</title>
      <link href="/posts/2298776235/"/>
      <url>/posts/2298776235/</url>
      
        <content type="html"><![CDATA[<h1 id="关于热部署"><a href="#关于热部署" class="headerlink" title="关于热部署"></a>关于热部署</h1><p>重启（Restart)∶自定义开发代码，包含类、页面、配置文件等，加载位置restart类加载器<br>重载（ReLoad) : jar包，加载位置base类加载器</p><h1 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a>Eclipse</h1><h2 id="添加坐标"><a href="#添加坐标" class="headerlink" title="添加坐标"></a>添加坐标</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</span><br><span class="line">    &lt;optional&gt;true&lt;/optional&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="重新Build项目"><a href="#重新Build项目" class="headerlink" title="重新Build项目"></a>重新Build项目</h2><blockquote><p>Eclipse中开启了Build Automatically就不用手动再Build了</p></blockquote><h2 id="重新启动项目"><a href="#重新启动项目" class="headerlink" title="重新启动项目"></a>重新启动项目</h2><blockquote><p>完成！</p></blockquote><p>在代码中的改动都会被Spring容器检测到，然后重启服务器。后面就不需要手动重启了！</p><h2 id="设置热部署的范围"><a href="#设置热部署的范围" class="headerlink" title="设置热部署的范围"></a>设置热部署的范围</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="comment">#配置热部署</span></span><br><span class="line">  <span class="attr">devtools:</span></span><br><span class="line">    <span class="attr">restart:</span></span><br><span class="line">      <span class="attr">exclude:</span> <span class="comment">#配置哪些文件的改动不进行热部署,如：static/**</span></span><br></pre></td></tr></table></figure><h2 id="禁用热部署"><a href="#禁用热部署" class="headerlink" title="禁用热部署"></a>禁用热部署</h2><blockquote><p><code>enable</code>属性</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line"><span class="comment">#配置热部署</span></span><br><span class="line">  <span class="attr">devtools:</span></span><br><span class="line">    <span class="attr">restart:</span></span><br><span class="line">      <span class="attr">exclude:</span> <span class="comment">#配置哪些文件的改动不进行热部署,如：static/**</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>!!! info 注意<br>   停用热部署的配置方式有很多种，还可以使用系统属性等等配置方式，不同的配置优先级不同。<a href="https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#boot-features-external-config">-&gt;官方文档说明&lt;-</a></p><br>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之输入输出流</title>
      <link href="/posts/1306940380/"/>
      <url>/posts/1306940380/</url>
      
        <content type="html"><![CDATA[<h1 id="File对象"><a href="#File对象" class="headerlink" title="File对象"></a>File对象</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">File f=<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;path&quot;</span>);</span><br><span class="line">File f=<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;parent&quot;</span>,<span class="string">&quot;child&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="输入流"><a href="#输入流" class="headerlink" title="输入流"></a>输入流</h1><p>InputStream是字节输入流，同时也是抽象类，只提供方法声明，不提供方法的具体实现。<br>FileInputStream 是InputStream子类，以FileInputStream 为例进行文件读取。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream fis=<span class="keyword">new</span> <span class="title class_">FileInputStream</span>();</span><br></pre></td></tr></table></figure><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fis.read(b); <span class="comment">//读取文件中的数据，保存到字节数组中，b为字节数组</span></span><br><span class="line">fis.close(); <span class="comment">//关闭输入流</span></span><br></pre></td></tr></table></figure><h1 id="输出流"><a href="#输出流" class="headerlink" title="输出流"></a>输出流</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileOutStream fos=<span class="keyword">new</span> <span class="title class_">FileOutStream</span>(f);</span><br><span class="line">FileOutStream fos=<span class="keyword">new</span> <span class="title class_">FileOutStream</span>(f,<span class="literal">true</span>); <span class="comment">//第二个参数表示是否开启append拼接模式</span></span><br></pre></td></tr></table></figure><h2 id="常用方法-1"><a href="#常用方法-1" class="headerlink" title="常用方法"></a>常用方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fos.write(b); <span class="comment">//将字节数组中的数据，写入文件</span></span><br><span class="line">fos.close(); <span class="comment">//关闭输出流</span></span><br></pre></td></tr></table></figure><h1 id="字节流"><a href="#字节流" class="headerlink" title="字节流"></a>字节流</h1><p>使用<code>字节数组</code>存储字节流，实现写入。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span>[] b=<span class="keyword">new</span> <span class="title class_">byte</span>[(<span class="type">int</span>)f.length()];</span><br></pre></td></tr></table></figure><h1 id="字符流"><a href="#字符流" class="headerlink" title="字符流"></a>字符流</h1><blockquote><p>Reader字符输入流，Writer字符输出流，专门用于字符的形式读取和写入数据。</p></blockquote><p>使用<code>字符数组</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span>[] c = <span class="keyword">new</span> <span class="title class_">char</span>[(<span class="type">int</span>) f.length()];</span><br></pre></td></tr></table></figure><h2 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h2><p>FileReader 是Reader子类，以FileReader 为例进行文件读取</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileReader fr=<span class="keyword">new</span> <span class="title class_">FileReader</span>(f);</span><br></pre></td></tr></table></figure><h3 id="常用方法-2"><a href="#常用方法-2" class="headerlink" title="常用方法"></a>常用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fr.read(c); <span class="comment">//将字符流写入字符数组</span></span><br><span class="line">fr.close();</span><br></pre></td></tr></table></figure><h2 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileWriter fw=<span class="keyword">new</span> <span class="title class_">FileWriter</span>(f);</span><br></pre></td></tr></table></figure><h3 id="常用方法-3"><a href="#常用方法-3" class="headerlink" title="常用方法"></a>常用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fw.read(c); <span class="comment">//将字符流写入字符数组</span></span><br><span class="line">fw.close();</span><br></pre></td></tr></table></figure><h2 id="InputStreamReader"><a href="#InputStreamReader" class="headerlink" title="InputStreamReader"></a>InputStreamReader</h2><p>FileReader是不能手动设置编码方式的，为了使用其他的编码方式，只能使用InputStreamReader来代替。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//使用InputStreamReader读取UTF-8编码的文本文件</span></span><br><span class="line">FileInputStream fis=<span class="keyword">new</span> <span class="title class_">FileInputSteam</span>(f);</span><br><span class="line"><span class="type">char</span>[] c=<span class="keyword">new</span> <span class="title class_">char</span>[(<span class="type">int</span>)f.length()];</span><br><span class="line"><span class="type">InputStreamReader</span> <span class="variable">isr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(f),Charset.forName(<span class="string">&quot;UTF-8&quot;</span>) ;</span><br><span class="line">isr.read(c);</span><br></pre></td></tr></table></figure><h1 id="缓冲流"><a href="#缓冲流" class="headerlink" title="缓冲流"></a>缓冲流</h1><p><strong>字节流和字符流的弊端</strong><br>在每一次读写的时候，都会访问硬盘。 如果读写的频率比较高的时候，其性能表现不佳。</p><p>为了解决以上弊端，采用缓存流。<br>缓存流在读取的时候，<strong>会一次性读较多的数据到缓存中</strong>，以后每一次的读取，都是在缓存中访问，直到缓存中的数据读取完毕，再到硬盘中读取。</p><h2 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h2><blockquote><p>缓存流必须建立在一个存在的流的基础上</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileReader</span> <span class="variable">fr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(f);</span><br><span class="line">BufferedReader bf=<span class="keyword">new</span> <span class="title class_">BufferedReader</span>(fr);</span><br></pre></td></tr></table></figure><h3 id="常用方法-4"><a href="#常用方法-4" class="headerlink" title="常用方法"></a>常用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bf.readline(); <span class="comment">//一次读入一行</span></span><br></pre></td></tr></table></figure><h2 id="PrintWriter"><a href="#PrintWriter" class="headerlink" title="PrintWriter"></a>PrintWriter</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileWriter</span> <span class="variable">fw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(f);</span><br><span class="line">PrintWriter pw=<span class="keyword">new</span> <span class="title class_">PrintWriter</span>(fw);</span><br></pre></td></tr></table></figure><h3 id="常用方法-5"><a href="#常用方法-5" class="headerlink" title="常用方法"></a>常用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pw.println(<span class="string">&quot;字符串&quot;</span>); <span class="comment">//一次写入一行</span></span><br><span class="line">pw.flush();  <span class="comment">//立即把数据写入到硬盘</span></span><br></pre></td></tr></table></figure><h1 id="数据流"><a href="#数据流" class="headerlink" title="数据流"></a>数据流</h1><p>使用数据流的writeUTF()和readUTF() 可以进行数据的<strong>格式化顺序读写</strong></p><h2 id="DataInputStream"><a href="#DataInputStream" class="headerlink" title="DataInputStream"></a>DataInputStream</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileInputStream</span> <span class="variable">fis</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(f);</span><br><span class="line"><span class="type">DataInputStream</span> <span class="variable">dis</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">DataInputStream</span>(fis);</span><br></pre></td></tr></table></figure><h3 id="常用方法-6"><a href="#常用方法-6" class="headerlink" title="常用方法"></a>常用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> b= dis.readBoolean();</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> dis.readInt();</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> dis.readUTF();</span><br></pre></td></tr></table></figure><h2 id="DataOutputStream"><a href="#DataOutputStream" class="headerlink" title="DataOutputStream"></a>DataOutputStream</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">FileOutputStream</span> <span class="variable">fos</span>  <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(f);</span><br><span class="line"><span class="type">DataOutputStream</span> <span class="variable">dos</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">DataOutputStream</span>(fos);</span><br></pre></td></tr></table></figure><h3 id="常用方法-7"><a href="#常用方法-7" class="headerlink" title="常用方法"></a>常用方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dos.writeBoolean(布尔值);</span><br><span class="line">dos.writeInt(整数);</span><br><span class="line">dos.writeUTF(<span class="string">&quot;字符串&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="对象流"><a href="#对象流" class="headerlink" title="对象流"></a>对象流</h1><p>对象流指的是可以直接<strong>把一个对象以流的形式</strong>传输给其他的介质，比如硬盘。</p><p>一个对象以流的形式进行传输，叫做序列化。 该对象所对应的类，必须是实现<code>Serializable接口</code>。</p><h1 id="System-in"><a href="#System-in" class="headerlink" title="System.in"></a>System.in</h1><blockquote><p>用于获取控制台输入，常常与Scanner结合使用。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 输入输出流 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java框架之Mybatis</title>
      <link href="/posts/2135279175/"/>
      <url>/posts/2135279175/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是Mybatis？"><a href="#什么是Mybatis？" class="headerlink" title="什么是Mybatis？"></a>什么是Mybatis？</h1><p>Mybatis是一款优秀的持久层框架，用于简化JDBC开发。</p><h1 id="传统JDBC开发的缺点"><a href="#传统JDBC开发的缺点" class="headerlink" title="传统JDBC开发的缺点"></a>传统JDBC开发的缺点</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>);</span><br><span class="line">String url=<span class="string">&quot;jdbc:mysql://192.168.31.5:3306/mydb?characterEncoding=utf-8&quot;</span>;</span><br><span class="line">String user=<span class="string">&quot;root&quot;</span>;</span><br><span class="line">String password=<span class="string">&quot;password&quot;</span>;</span><br><span class="line">conn=DriverManager.getConnection(url, user, password);</span><br><span class="line"><span class="type">Statement</span> <span class="variable">statement</span> <span class="operator">=</span> conn.createStatement();</span><br><span class="line"><span class="type">ResultSet</span> <span class="variable">rs</span> <span class="operator">=</span> statement.executeQuery(<span class="string">&quot;select * from user&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (rs.next()) &#123; <span class="comment">//遍历结果</span></span><br><span class="line">System.out.println(rs.getString(<span class="string">&quot;user_name&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li><p>硬编码 &#x3D;&gt; 将字符串放到代码外</p><ul><li>注册驱动 </li><li>获取连接</li><li>SQL语句</li></ul></li><li><p>操作繁琐</p></li></ol><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a><a href="https://mybatis.org/mybatis-3/zh/getting-started.html">快速入门</a></h1><h2 id="普通mybatis项目"><a href="#普通mybatis项目" class="headerlink" title="普通mybatis项目"></a>普通mybatis项目</h2><ol><li><h4 id="创建表，添加数据"><a href="#创建表，添加数据" class="headerlink" title="创建表，添加数据"></a>创建表，添加数据</h4></li><li><h4 id="定义pojo类"><a href="#定义pojo类" class="headerlink" title="定义pojo类"></a>定义pojo类</h4></li></ol><blockquote><p>成员变量对应数据库中的字段，注意类型也要。</p><p>设置getter和setter方法，养成习惯重写toString()方法。<br>3. 创建模块，导入坐标（maven项目）</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>x.x.x<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>x.x.x<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li><h4 id="配置核心配置文件mybatis-config-xml"><a href="#配置核心配置文件mybatis-config-xml" class="headerlink" title="配置核心配置文件mybatis-config.xml"></a>配置核心配置文件<code>mybatis-config.xml</code></h4></li></ol><blockquote><p>配置文件解决了<code>硬编码</code>的问题</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;url&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;username&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;password&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;org/mybatis/example/Mapper.xml&quot;</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mappers 元素则包含了一组映射器（mapper），这些映射器的 XML 映射文件包含了 SQL 代码和映射定义信息。</p><p>!!! info mapper命名规范<br>   一般习惯为<code>表名+Mapper.xml</code>。</p><ol start="5"><li><h4 id="配置Mapper，SQL映射文件"><a href="#配置Mapper，SQL映射文件" class="headerlink" title="配置Mapper，SQL映射文件"></a>配置Mapper，SQL映射文件</h4></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;org.mybatis.example.Mapper&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectTable&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Blog&quot;</span>&gt;</span></span><br><span class="line">    select * from table where id = #&#123;id&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li><h4 id="加载核心配置文件，获取SqlSessionFactory对象"><a href="#加载核心配置文件，获取SqlSessionFactory对象" class="headerlink" title="加载核心配置文件，获取SqlSessionFactory对象"></a>加载核心配置文件，获取SqlSessionFactory对象</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="string">&quot;org/mybatis/example/mybatis-config.xml&quot;</span>;</span><br><span class="line"><span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> Resources.getResourceAsStream(resource);</span><br><span class="line"><span class="type">SqlSessionFactory</span> <span class="variable">sqlSessionFactory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(inputStream);</span><br></pre></td></tr></table></figure><ol start="7"><li>获取SqlSession对象或Map对象，执行SQL语句，操作数据库</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SqlSession</span> <span class="variable">session</span> <span class="operator">=</span> sqlSessionFactory.openSession();</span><br><span class="line"><span class="comment">//操作session执行sql语句</span></span><br><span class="line"><span class="comment">//如：session.selectList(&quot;selectTable&quot;)</span></span><br></pre></td></tr></table></figure><ol start="8"><li><h4 id="释放资源"><a href="#释放资源" class="headerlink" title="释放资源"></a>释放资源</h4></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlSession.close()</span><br></pre></td></tr></table></figure><h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><blockquote><p>mapper中进行配置</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addCategory&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Category&quot;</span> &gt;</span></span><br><span class="line">    insert into category_ ( name ) values (#&#123;name&#125;)   </span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteCategory&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Category&quot;</span> &gt;</span></span><br><span class="line">    delete from category_ where id= #&#123;id&#125;  </span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getCategory&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;_int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Category&quot;</span>&gt;</span></span><br><span class="line">    select * from   category_  where id= #&#123;id&#125;   </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateCategory&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Category&quot;</span> &gt;</span></span><br><span class="line">    update category_ set name=#&#123;name&#125; where id=#&#123;id&#125;   </span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listCategory&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Category&quot;</span>&gt;</span></span><br><span class="line">    select * from   category_     </span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span>    </span><br></pre></td></tr></table></figure><blockquote><p>java代码</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Category</span> <span class="variable">c</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Category</span>();</span><br><span class="line">c.setName(<span class="string">&quot;新增加的Category&quot;</span>);</span><br><span class="line">session.insert(<span class="string">&quot;addCategory&quot;</span>,c);</span><br><span class="line">session.commit();</span><br><span class="line">session.close();</span><br></pre></td></tr></table></figure><h2 id="Spring整合Mybatis"><a href="#Spring整合Mybatis" class="headerlink" title="Spring整合Mybatis"></a><a href="https://blog.csdn.net/qq_42662759/article/details/116757078">Spring整合Mybatis</a></h2><ol start="0"><li>创建Maven项目，导入依赖</li></ol><blockquote><p>依赖清单</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Spring核心</span><br><span class="line">MyBatis核心</span><br><span class="line">MySQL JDBC驱动</span><br><span class="line">log4j日志</span><br><span class="line">JUnit单元测试</span><br><span class="line">Lombok插件</span><br><span class="line">Druid数据库连接池</span><br><span class="line">Spring和的MyBatis整合包</span><br><span class="line">Spring和ORM框架的整合包—此依赖项会自动导入spring-orm，spring-jdbc，spring-tx三个jar包</span><br><span class="line">Spring和JUnit的整合包</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Junit测试 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- MyBatis核心Jar包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- MySql驱动 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Lombok工具 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring核心 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- Spring-test测试 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- slf4j日志包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.25<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- druid阿里的数据库连接池 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring整合ORM --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- Spring整合MyBatis --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>建表，新建pojo类包和实体类</li></ol><blockquote><p>以银行账户为例</p></blockquote><p>MySQL</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 建表</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `account`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `account` (</span><br><span class="line">  `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `account_name` <span class="type">char</span>(<span class="number">32</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `money` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`,`account_name`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">3</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br><span class="line"></span><br><span class="line"># 插入数据</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `account` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;lucy&#x27;</span>, <span class="string">&#x27;5000&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `account` <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;tom&#x27;</span>, <span class="string">&#x27;5000&#x27;</span>);</span><br></pre></td></tr></table></figure><p>com.pojo.account</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pojo;</span><br><span class="line"><span class="meta">@Data</span>  <span class="comment">//使用注解自动生成getter和setter方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String accountName;</span><br><span class="line"><span class="keyword">private</span> <span class="type">float</span> money;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>配置持久层，新建mapper包和对应实体类<code>(AccountMapper)</code>的Mapper接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AccountMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>新建resource资源文件夹（用于存放配置文件），新建jdbc.properties，设置数据库驱动以及连接信息</li></ol><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://<span class="number">192.168</span><span class="number">.31</span><span class="number">.5</span>:<span class="number">3306</span>/managerSys?serverTimezone=GMT%<span class="number">2B8</span>&amp;useSSL=<span class="literal">false</span>&amp;characterEncoding=utf-<span class="number">8</span>&amp;allowPublicKeyRetrieval=<span class="literal">true</span></span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=root</span><br></pre></td></tr></table></figure><ol start="4"><li>新建mybatis.xml配置文件</li></ol><blockquote><p>在spring中集成</p></blockquote><p>使用Spring集成Mybatis<code>可以摒弃</code>mybatis.xml配置文件，<code>也可以只设置如下内容</code>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启延迟加载 该项默认为false，即所有关联属性都会在初始化时加载</span></span><br><span class="line"><span class="comment">true表示延迟按需加载 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;lazyLoadingEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 开启二级缓存 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>默认内容</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>新建<a href="https://so.csdn.net/so/search?q=log4j&spm=1001.2101.3001.7020">log4j</a>.properties日志配置文件（可选）</li></ol><blockquote><p>内容为日志的输出类型和其他配置信息</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">log4j.rootLogger=DEBUG, stdout </span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender </span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout </span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%5p %d %C: %m%n</span><br><span class="line"></span><br><span class="line">log4j.logger.java.sql.ResultSet=INFO</span><br><span class="line">log4j.logger.org.apache=INFO</span><br><span class="line">log4j.logger.java.sql.Connection=DEBUG</span><br><span class="line">log4j.logger.java.sql.Statement=DEBUG</span><br><span class="line">log4j.logger.java.sql.PreparedStatement=DEBUG</span><br></pre></td></tr></table></figure><ol start="5"><li>新建对应实体类<code>（Account）</code>的映射文件mapper.xml<code>(AccountMapper.xml)</code></li></ol><ul><li>在resources下新建包</li><li>包名和上方的mapper接口的包名要一致</li></ul><p><img src="https://lptexas-cub.github.io/img/post/image-20230330105448655.png" alt="image-20230330105448655"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- namespace属性相当于映射文件的名称 属性值任意</span></span><br><span class="line"><span class="comment">    接口代理方式，属性值要写成接口的完整类名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 开启二级缓存 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">   &lt;cache</span></span><br><span class="line"><span class="comment">    size=&quot;1024&quot; //缓存对象的最大个数，默认是1024个</span></span><br><span class="line"><span class="comment">    eviction=&quot;LRU&quot;  //缓存对象的回收策略，默认是LRU算法</span></span><br><span class="line"><span class="comment">      //LRU Least Recently Used 最近最少使用，移除最长时间不被使用的对象</span></span><br><span class="line"><span class="comment">      //FIFO First In First Out 先进先出，按对象进入缓存的顺序来移除它们</span></span><br><span class="line"><span class="comment">      //SOFT 软引用，移除基于垃圾回收器状态和软引用规则的对象</span></span><br><span class="line"><span class="comment">      //WEAK 弱引用，更积极地移除基于垃圾收集器和弱引用规则的对象</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    flushInterval=&quot;60000&quot; //自动清空缓存的间隔时间，单位为毫秒，默认是0，表示无穷大</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    readOnly=&quot;true&quot;  //缓存对象是否只读，默认为false</span></span><br><span class="line"><span class="comment">      //true 从缓存中获取的数据都是只读的，为了加快查询速度，直接返回数据在缓存中的引用，缺点是不安全</span></span><br><span class="line"><span class="comment">      //false 从缓存中获取的数据可能会被修改，为了安全起见，利用序列化和反序列的技术克隆一份新的数据返回，缺点是速度慢</span></span><br><span class="line"><span class="comment">    /&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启MyBatis自带的二级缓存 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">        <span class="attr">size</span>=<span class="string">&quot;1024&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">eviction</span>=<span class="string">&quot;LRU&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- resultType属性指定结果的类型的完整包名</span></span><br><span class="line"><span class="comment">        目前写的是user是因为后期会起一个别名，</span></span><br><span class="line"><span class="comment">        默认的别名就是类名的首字母小写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;findAcountList&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Account&quot;</span>&gt;</span></span><br><span class="line">        select * from account</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>在Mapper接口<code>（AccountMapper接口）</code>中编写映射文件对应的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.pojo.Account;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">AccountMapper</span> &#123;</span><br><span class="line">List&lt;Account&gt; <span class="title function_">findAccountList</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>配置spring主配置文件<code>（applicationContext.xml或SpringConfig配置类）</code></li></ol><blockquote><p>applicationContext.xml</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">        http://www.springframework.org/schema/context/spring-context-3.0.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--&lt;context:component-scan base-package=&quot;com.bean&quot;/&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载数据库连接信息的属性文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置Druid数据源的Bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.driver&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.url&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.username&#125;&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;jdbc.password&#125;&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 配置SessionFactory的Bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sessionFactory&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注入数据源 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 指定MyBatis配置文件的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis.xml&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 给实体类起别名 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;typeAliasesPackage&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">value</span>=<span class="string">&quot;com.pojo&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置mapper接口的扫描器，将Mapper接口的实现类自动注入到IoC容器中 实现类Bean的名称默认为接口类名的首字母小写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.mapper.MapperScannerConfigurer&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- basePackage属性指定自动扫描mapper接口所在的包 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;basePackage&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mapper&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="8"><li>测试</li></ol><h2 id="SpringBoot整合Mybatis"><a href="#SpringBoot整合Mybatis" class="headerlink" title="SpringBoot整合Mybatis"></a>SpringBoot整合Mybatis</h2><blockquote><p>方法一</p></blockquote><ol><li>创建SpringBoot项目，勾选<code>Mybatis Framework</code>和<code>Mysql Driver</code></li></ol><div class="admonition note"><p class="admonition-title">“”</p><p>用什么勾选什么</p></div><ol start="2"><li>配置连接信息  application.properties或application.yml</li></ol><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span> </span><br><span class="line">    <span class="attr">datasource:</span> </span><br><span class="line">        <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">        <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mydb</span></span><br><span class="line">        <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">        <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure><p> application.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#暂时不介绍</span></span><br></pre></td></tr></table></figure><ol start="3"><li><p>定义pojo类</p></li><li><p>定义mapper的接口类和映射配置</p></li></ol><p>增删改查在接口中定义的方法上实现，可以采用配置文件的形式，也可以采用注解的形式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span>&#123;</span><br><span class="line">    <span class="meta">@Select(&quot;...&quot;)</span></span><br><span class="line">    &lt;pojo类&gt; listAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><blockquote><p>方法二，使用Mybatis Plus</p></blockquote><ol><li><p>创建SpringBoot项目，勾选<code>Mysql Driver</code></p></li><li><p>在pom.xml中手动导入<a href="https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter"><code>Mybatis Plus</code></a></p></li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.baomidou/mybatis-plus-boot-starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>定义pojo类</li><li>定义mapper接口类和映射配置</li></ol><p>但是！不需要再手动写对应的方法了，直接继承<code>BaseMapper&lt;泛型&gt;</code>（泛型为定义的pojo类）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt;&#123;</span><br><span class="line">    <span class="comment">//不用再写方法啦~</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Mybatis </tag>
            
            <tag> Spring </tag>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring相关原理总结</title>
      <link href="/posts/3306600581/"/>
      <url>/posts/3306600581/</url>
      
        <content type="html"><![CDATA[<h1 id="BeanFactory和ApplicationContext"><a href="#BeanFactory和ApplicationContext" class="headerlink" title="BeanFactory和ApplicationContext"></a><a href="https://juejin.cn/post/7166381640036384804">BeanFactory和ApplicationContext</a></h1><h2 id="两者关系"><a href="#两者关系" class="headerlink" title="两者关系"></a>两者关系</h2><table><thead><tr><th>BeanFactory</th><th>ApplicationContext</th></tr></thead><tbody><tr><td>早期接口，被称为Spring的Bean工厂</td><td>后期更高级接口，称之为Spring 容器</td></tr><tr><td>BeanFactory的API更偏向底层</td><td>API大多数是对BeanFactory底层API的封装；<br />且有更多的拓展功能：监听功能、国际化功能等</td></tr><tr><td>封装了Bean创建的主要逻辑和功能</td><td>继承了BeanFactory的功能</td></tr><tr><td>Bean的初始化时机不同，原始BeanFactory是在首次调用getBean时才进行Bean的创建</td><td>ApplicationContext则是配置文件加载，容器一创建就将Bean都实例化并初始化好。</td></tr></tbody></table><h2 id="在Spring基础环境下，常用的三个ApplicationContext作用"><a href="#在Spring基础环境下，常用的三个ApplicationContext作用" class="headerlink" title="在Spring基础环境下，常用的三个ApplicationContext作用"></a>在Spring基础环境下，常用的三个ApplicationContext作用</h2><table><thead><tr><th>实现类</th><th>功能描述</th></tr></thead><tbody><tr><td><strong>ClassPathXmlApplicationContext</strong></td><td><strong>加载类路径下的xml配置的ApplicationContext</strong></td></tr><tr><td><strong>FileSystemXmlApplicationContext</strong></td><td><strong>加载磁盘路径下的xml配置的ApplicationContext</strong></td></tr><tr><td><strong>AnnotationConfigApplicationContext</strong></td><td><strong>加载注解配置类的ApplicationContext</strong></td></tr></tbody></table><h2 id="在Spring的web环境下，常用的两个ApplicationContext作用"><a href="#在Spring的web环境下，常用的两个ApplicationContext作用" class="headerlink" title="在Spring的web环境下，常用的两个ApplicationContext作用"></a>在Spring的web环境下，常用的两个ApplicationContext作用</h2><blockquote><p>导入依赖</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>实现类</th><th>功能描述</th></tr></thead><tbody><tr><td>XmlWebApplicationContext</td><td>web环境下，加载类路径下的xml配置的ApplicationContext</td></tr><tr><td>AnnotationConfigWebApplicationContext</td><td>web环境下，加载磁盘路径下的xml配置的ApplicationContext</td></tr></tbody></table><h1 id="InitializingBean-接口"><a href="#InitializingBean-接口" class="headerlink" title="InitializingBean 接口"></a><a href="https://www.cnblogs.com/study-everyday/p/6257127.html">InitializingBean 接口</a></h1><blockquote><p>完成一些Bean的初始化操作</p></blockquote><h2 id="实现InitializingBean接口与在配置文件中指定init-method有什么不同？"><a href="#实现InitializingBean接口与在配置文件中指定init-method有什么不同？" class="headerlink" title="实现InitializingBean接口与在配置文件中指定init-method有什么不同？"></a>实现InitializingBean接口与在配置文件中指定init-method有什么不同？</h2><p>如果同时实现了InitializingBean接口和init-method，那么系统会先调用InitializingBean再调用init-method指定的初始化方法。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h2><p>1：spring为bean提供了两种初始化bean的方式，实现InitializingBean接口，实现afterPropertiesSet方法，或者在配置文件中同过init-method指定，两种方式<code>可以同时使用</code></p><p>2：实现InitializingBean接口是直接调用afterPropertiesSet方法，比通过反射调用init-method指定的方法<code>效率相对来说要高点</code>。但是init-method方式消除了对spring的依赖</p><p>3：<code>如果调用afterPropertiesSet方法时出错，则不调用init-method指定的方法</code>。</p><h2 id="Spring主要的实例化方式"><a href="#Spring主要的实例化方式" class="headerlink" title="Spring主要的实例化方式"></a>Spring主要的实例化方式</h2><ul><li><p>构造方式实例化：底层通过构造方法对Bean进行实例化</p><ul><li>无参构造方法实例化</li><li>有参构造方法实例化<ul><li><constructor-arg> 添加参数</li></ul></li></ul></li><li><p>工厂方式实例化：底层通过调用自定义的工厂方法对Bean进行实例化</p><ul><li>静态工厂方法实例化Bean<ul><li>直接配置工厂对象及其静态方法配置</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 工厂类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean</span> &#123;</span><br><span class="line">    <span class="comment">// 静态工厂方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> UserDaoImpl <span class="title function_">userDaoImpl</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="comment">// 可以在此编写一些其他逻辑代码</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>(name, age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.factory.UserDaoFactoryBean&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;userDaoImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小🐕&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>实例工厂方法实例化Bean<ul><li>先有工厂对象，再用工厂对象去调用非静态方法</li></ul></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 配置实例工厂Bean --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoFactoryBean2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.factory.UserDaoFactoryBean2&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 配置实例工厂Bean的哪个方法作为工厂方法 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoImpl2&quot;</span> <span class="attr">factory-bean</span>=<span class="string">&quot;userDaoFactoryBean2&quot;</span> <span class="attr">factory-method</span>=<span class="string">&quot;userDaoImpl2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;小🐱&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> <span class="attr">value</span>=<span class="string">&quot;18&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 工厂类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean2</span> &#123;</span><br><span class="line">    <span class="comment">// 非静态工厂方法</span></span><br><span class="line">    <span class="keyword">public</span>  UserDaoImpl <span class="title function_">userDaoImpl2</span><span class="params">(String name, <span class="type">int</span> age)</span>&#123;</span><br><span class="line">        <span class="comment">// 可以在此编写一些其他逻辑代码</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>(name, age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现FactoryBean规范延迟实例化Bean</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//工厂类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDaoFactoryBean3</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;UserDao&gt; &#123;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> UserDao <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line"> <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">     <span class="keyword">return</span> UserDao.class;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDao2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.it.factory.UserDaoFactoryBean3&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Bean-实例化的基本流程"><a href="#Bean-实例化的基本流程" class="headerlink" title="Bean 实例化的基本流程"></a>Bean 实例化的基本流程</h1><p>Spring容器在进行初始化时，会将xml配置的的信息（Bean标签）封装成一个BeanDefinition对象，所有的 BeanDefinition存储到一个名为beanDefinitionMap的Map集合中去，Spring框架在对该Map进行遍历，使用反射创建Bean实例对象，创建好的Bean对象存储在一个名为singletonObjects的Map集合中，当调用getBean方法时则最终从该Map集合中取出Bean实例对象返回。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230324112528550.png" alt="image-20230324112528550"></p><h1 id="自定义命名空间的解析过程"><a href="#自定义命名空间的解析过程" class="headerlink" title="自定义命名空间的解析过程"></a>自定义命名空间的解析过程</h1><h1 id="解决循环引用问题：三级缓存"><a href="#解决循环引用问题：三级缓存" class="headerlink" title="解决循环引用问题：三级缓存"></a>解决循环引用问题：三级缓存</h1><p><img src="https://lptexas-cub.github.io/img/post/image-20230324172845976.png" alt="image-20230324172845976"></p><p><img src="https://lptexas-cub.github.io/img/post/Spring%E4%B8%89%E7%BA%A7%E7%BC%93%E5%AD%98%E6%BA%90%E7%A0%81%E5%88%A8%E6%9E%90%E6%80%9D%E8%B7%AF.png" alt="Spring三级缓存源码刨析思路"></p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用IDE的技巧</title>
      <link href="/posts/3868235888/"/>
      <url>/posts/3868235888/</url>
      
        <content type="html"><![CDATA[<h1 id="Eclipse"><a href="#Eclipse" class="headerlink" title="Eclipse"></a>Eclipse</h1><h2 id="代码换行"><a href="#代码换行" class="headerlink" title="代码换行"></a>代码换行</h2><blockquote><p>Alt + Shift + Y</p></blockquote><h2 id="查看源码"><a href="#查看源码" class="headerlink" title="查看源码"></a>查看源码</h2><blockquote><p>F3 </p></blockquote><h2 id="查看类继承和实现关系"><a href="#查看类继承和实现关系" class="headerlink" title="查看类继承和实现关系"></a>查看类继承和实现关系</h2><blockquote><p> F4或Ctrl + T</p></blockquote><h2 id="查看方法的调用层次"><a href="#查看方法的调用层次" class="headerlink" title="查看方法的调用层次"></a>查看方法的调用层次</h2><blockquote><p>Ctrl+Alt+H    </p></blockquote><h2 id="xml开启代码提示"><a href="#xml开启代码提示" class="headerlink" title="xml开启代码提示"></a>xml开启代码提示</h2><blockquote><p>Alt + &#x2F;</p></blockquote><h2 id="查找某个类文件"><a href="#查找某个类文件" class="headerlink" title="查找某个类文件"></a>查找某个类文件</h2><blockquote><p>Ctrl+Shift+T</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>spring初始化一个项目</title>
      <link href="/posts/4267699228/"/>
      <url>/posts/4267699228/</url>
      
        <content type="html"><![CDATA[<h1 id="创建一个spring项目"><a href="#创建一个spring项目" class="headerlink" title="创建一个spring项目"></a>创建一个spring项目</h1><h2 id="手动导入Jar包"><a href="#手动导入Jar包" class="headerlink" title="手动导入Jar包"></a>手动导入Jar包</h2><blockquote><p>创建普通的Java项目，在lib中Spring导入相关包的方法。</p></blockquote><h3 id="Spring相关jar包"><a href="#Spring相关jar包" class="headerlink" title="Spring相关jar包"></a><a href="https://blog.csdn.net/qq_35080796/article/details/111355515">Spring相关jar包</a></h3><blockquote><p>官方下载链接</p><p><a href="https://repo.spring.io/ui/native/release/org/springframework/spring/">https://repo.spring.io/ui/native/release/org/springframework/spring/</a></p></blockquote><h3 id="spring依赖的日志包"><a href="#spring依赖的日志包" class="headerlink" title="spring依赖的日志包"></a>spring依赖的日志包</h3><blockquote><p><a href="http://commons.apache.org/proper/commons-logging/download_logging.cgi">http://commons.apache.org/proper/commons-logging/download_logging.cgi</a></p></blockquote><h3 id="存放-jar包以及加载"><a href="#存放-jar包以及加载" class="headerlink" title="存放 jar包以及加载"></a>存放 jar包以及加载</h3><blockquote><p>解压后将相关jar包放在工程的lib目录下。</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20230320172732004.png" alt="image-20230320172732004"></p><h2 id="创建Maven项目"><a href="#创建Maven项目" class="headerlink" title="创建Maven项目"></a>创建Maven项目</h2><blockquote><p>在maven项目中导入spring依赖，maven会自动完成jar包下载。</p></blockquote><p><a href="https://blog.csdn.net/daponi/article/details/100731341">四个方面：</a><br>1）spring核心依赖<br>      spring-core、spring-beans、spring-context</p><p>2）spring dao依赖（提供JDBCTemplate）<br>      spring-jdbc、spring-tx</p><p>3）spring web依赖<br>      spring-web、spring-webmvc</p><p>4）spring test依赖<br>      spring-test</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 版本可以自己选择 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">spring.version</span>&gt;</span>4.0.0.RELEASE<span class="tag">&lt;/<span class="name">spring.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jms<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-websocket<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-instrument<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;spring.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="在eclipse中查看源码"><a href="#在eclipse中查看源码" class="headerlink" title="在eclipse中查看源码"></a><a href="https://blog.csdn.net/weixin_43992507/article/details/108093905">在eclipse中查看源码</a></h1><blockquote><p>快捷键是<code>F3</code></p></blockquote><ul><li><a href="https://liaoyongguang.blog.csdn.net/article/details/52137203?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-52137203-blog-108093905.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-3-52137203-blog-108093905.pc_relevant_default&utm_relevant_index=4">用maven项目，可以看源码？</a></li><li>这里介绍普通Java项目中的spring项目怎么看源码。</li><li>介绍如何使用Gradle查看源码</li></ul><p>下载spring-Frame源码</p><blockquote><p>github</p><p><a href="https://github.com/spring-projects/spring-framework/tags">https://github.com/spring-projects/spring-framework/tags</a></p></blockquote><h2 id="在普通Java项目中查看源码"><a href="#在普通Java项目中查看源码" class="headerlink" title="在普通Java项目中查看源码"></a>在普通Java项目中查看源码</h2><p>下载完源码后，在需要查看源码的地方如某个注解，按<code>F3</code>，在下图页面中，点击<code>Attach Source</code></p><p>使用文件夹的方式，选择上一步下载的源码解压后的目录。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230320201344093.png" alt="image-20230320201344093"></p><h2 id="使用Gradle查看源码"><a href="#使用Gradle查看源码" class="headerlink" title="使用Gradle查看源码"></a>使用Gradle查看源码</h2><h3 id="安装Gradle以及配置环境"><a href="#安装Gradle以及配置环境" class="headerlink" title="安装Gradle以及配置环境"></a>安装Gradle以及配置环境</h3><blockquote><p><a href="https://gradle.org/releases/">https://gradle.org/releases/</a></p></blockquote><p>选择<code>binary-only</code>，下载完毕后解压，配置<code>系统环境变量</code>。</p><h3 id="在eclipse中import源码"><a href="#在eclipse中import源码" class="headerlink" title="在eclipse中import源码"></a>在eclipse中import源码</h3><blockquote><p>File-&gt;Import-&gt;Gradle-&gt;Project root directory</p><p>Project root directory为源码解压后的根目录</p></blockquote><p>导入过程较久，请耐心等待。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之Spring AOP面向切面编程</title>
      <link href="/posts/751312367/"/>
      <url>/posts/751312367/</url>
      
        <content type="html"><![CDATA[<h1 id="AOP面向切面编程"><a href="#AOP面向切面编程" class="headerlink" title="AOP面向切面编程"></a>AOP面向切面编程</h1><p>用于解决系统层面上的问题，比如：日志、事务、权限等待。它是一种编程范式，不是编程语言。</p><h2 id="优点以及一些概念"><a href="#优点以及一些概念" class="headerlink" title="优点以及一些概念"></a><a href="https://blog.csdn.net/pedro7k/article/details/115415675">优点以及一些概念</a></h2><h3 id="1、AOP的优点"><a href="#1、AOP的优点" class="headerlink" title="1、AOP的优点"></a>1、AOP的优点</h3><ul><li>降低模块之间的耦合度</li><li>使系统更容易扩展</li><li>更好的代码复用</li><li>非业务代码更加集中，不分散，便于统一管理</li><li>业务代码更加简洁纯粹，不掺杂其他的代码的影响</li></ul><h3 id="2、AOP中出现的一些概念"><a href="#2、AOP中出现的一些概念" class="headerlink" title="2、AOP中出现的一些概念"></a>2、<a href="https://blog.csdn.net/Java_xiaobaibai6/article/details/108156664">AOP中出现的一些概念</a></h3><ul><li><h3 id="横切关注点"><a href="#横切关注点" class="headerlink" title="横切关注点"></a><strong>横切关注点</strong></h3></li></ul><p>对哪些方法进行拦截，拦截后怎么处理，这些关注点称之为横切关注点</p><ul><li><h3 id="Aspect-切面"><a href="#Aspect-切面" class="headerlink" title="Aspect 切面"></a>Aspect 切面</h3></li></ul><p>通常是一个类，里面可以定义切入点和通知。</p><ul><li><h3 id="JointPoint-连接点"><a href="#JointPoint-连接点" class="headerlink" title="JointPoint 连接点"></a>JointPoint 连接点</h3></li></ul><p>连接点是在应用执行中能够插入切面的一个点。即程序执行过程中能够应用通知的所有点。</p><p>程序执行过程中明确的点，一般是方法的调用。</p><p>被拦截到的点，因为Spring只支持方法类型的连接点，所以在Spring中连接点指的就是被拦截到的方法，实际上连接点还可以是字段或者构造器。</p><ul><li><h3 id="Advice-通知"><a href="#Advice-通知" class="headerlink" title="Advice 通知"></a>Advice 通知</h3></li></ul><p>AOP在特定的切入点上执行的增强处理</p><ul><li><h3 id="Pointcut-切入点"><a href="#Pointcut-切入点" class="headerlink" title="Pointcut 切入点"></a>Pointcut 切入点</h3></li></ul><p>就是带有通知的连接点，在程序中主要体现为<code>书写切入点表达式</code></p><ul><li><h3 id="Weaving-织入"><a href="#Weaving-织入" class="headerlink" title="Weaving 织入"></a><a href="https://zhuanlan.zhihu.com/p/161705262">Weaving 织入</a></h3></li></ul><p>将切面应用到目标对象，并创建新的代理对象的过程。</p><p>切面在指定的连接点被织入到目标对象中。</p><p>在目标对象的生命周期里有多个点可以进行织入:</p><ol><li>编译期:切面在目标类编译时被织入。这种方式需要特殊的编译器。Aspect的织入编译器就是以这种方式织入切面的。</li><li>类加载期:切面在目标类加载到JVM时被织入。这种方式需要特殊的类加载器(ClassLoader) ,它可以在目标类被引入应用之前增强该目标类的字节码。AspectJ5的加载时织入(load-time weaving, LTW)就支持以这种方式织入切面。</li><li>运行期:切面在应用运行的某个时刻被织入。一般情况下,在织入切面时, AOP容器会为目标对象动态地创建一个代理对象（动态代理）。Spring AOP就是以这种方式织入切面的。</li></ol><ul><li><h3 id="AOP-Proxy-代理"><a href="#AOP-Proxy-代理" class="headerlink" title="AOP Proxy 代理"></a>AOP Proxy 代理</h3></li></ul><p>AOP框架创建的对象，代理就是目标对象的加强。Spring中的AOP代理可以使JDK动态代理，也可以是CGLIB代理，前者基于接口，后者基于子类</p><h1 id="常见通知"><a href="#常见通知" class="headerlink" title="常见通知"></a><a href="https://zhuanlan.zhihu.com/p/161705262">常见通知</a></h1><p>5种Advice</p><ul><li><p><strong>前置通知（Before）</strong>：在目标方法被调用之前调用通知功能。</p></li><li><p><strong>后置通知（After-returning）</strong>：在目标方法成功执行之后调用通知。目标方法异常不执行。</p></li><li><p><strong>异常通知（After-throwing)）</strong>：在目标方法抛出异常后调用通知。</p></li><li><p><strong>环绕通知（Around）</strong> ：通知包裹了被通知的方法，在被通知的方法调用之前和调用之后执行自定义的行为。</p><ul><li>环绕（后）通知，目标方法异常不执行。</li></ul></li><li><p><strong>最终通知（After）</strong>：在目标方法完成之后调用通知，此时不会关心方法的输出是什么。</p></li></ul><h1 id="AOP实践——基于xml的Spring"><a href="#AOP实践——基于xml的Spring" class="headerlink" title="AOP实践——基于xml的Spring"></a>AOP实践——基于xml的Spring</h1><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.aspectj&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;aspectjweaver&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;<span class="number">1.9</span><span class="number">.7</span>&lt;/version&gt;</span><br><span class="line">  &lt;scope&gt;compile&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h2 id="配置命名空间"><a href="#配置命名空间" class="headerlink" title="配置命名空间"></a>配置命名空间</h2><blockquote><p>关于aop的三行</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">context:xsi</span>=<span class="string">&quot;schemaLocation=http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/context/spring-context.xsd&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans </span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">http://www.springframework.org/schema/aop </span></span></span><br><span class="line"><span class="string"><span class="tag">  http://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="AOP的两种配置方式"><a href="#AOP的两种配置方式" class="headerlink" title="AOP的两种配置方式"></a>AOP的两种配置方式</h2><h3 id="第一种，使用-lt-aspect-gt-配置。"><a href="#第一种，使用-lt-aspect-gt-配置。" class="headerlink" title="第一种，使用&lt;aspect&gt;配置。"></a>第一种，使用<code>&lt;aspect&gt;</code>配置。</h3><blockquote><p>这种方式更加灵活。Advice方法的配置用标签实现。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定切入点 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 也可以直接将execution表达式写在pointcut-ref属性中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(void com.service.impl.UserServiceImpl.show())&quot;</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定通知 以及类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;myAdvice&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;beforeAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-returning</span> <span class="attr">method</span>=<span class="string">&quot;afterReturnAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">aop:around</span> <span class="attr">method</span>=<span class="string">&quot;aroundAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after-throwing</span> <span class="attr">method</span>=<span class="string">&quot;afterThrowingAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;afterAdvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.advice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdvice</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">beforeAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了前置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturnAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了后置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">aroundAdvice</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了环绕(前)增强...&quot;</span>);</span><br><span class="line"><span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();<span class="comment">//执行目标方法（目标方法有可能有返回值所以返回Object）</span></span><br><span class="line">System.out.println(<span class="string">&quot;执行了环绕(后)增强...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> proceed;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterThrowingAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了异常后增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterAdvice</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了最终增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二种，使用-lt-advisor-gt-配置。（开发中基本不用）"><a href="#第二种，使用-lt-advisor-gt-配置。（开发中基本不用）" class="headerlink" title="第二种，使用&lt;advisor&gt;配置。（开发中基本不用）"></a>第二种，使用<code>&lt;advisor&gt;</code>配置。（开发中基本不用）</h3><blockquote><p>需要增强类实现<code>相应的Advice接口或其子接口</code>。</p><p>相比于前者，其Advice方法在advice类中实现，标签只需要引用advice类和切入点即可。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(void com.service.impl.UserServiceImpl.show())&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;myPointCut&quot;</span> <span class="attr">advice-ref</span>=<span class="string">&quot;myAdvice2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">aop:advisor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.advice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.AfterReturningAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.MethodBeforeAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.lang.Nullable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdvice2</span> <span class="keyword">implements</span> <span class="title class_">MethodBeforeAdvice</span>, AfterReturningAdvice &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">(Method method, Object[] args, <span class="meta">@Nullable</span> Object target)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了前置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterReturning</span><span class="params">(<span class="meta">@Nullable</span> Object returnValue, Method method, Object[] args, <span class="meta">@Nullable</span> Object target)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;执行了后置增强...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="两种方法的比较"><a href="#两种方法的比较" class="headerlink" title="两种方法的比较"></a><a href="https://juejin.cn/post/7167151634357698590#heading-22">两种方法的比较</a></h3><p><strong>语法形式不同：</strong></p><ul><li>advisor是通过实现接口来确认通知的类型</li><li>aspect是通过配置确认通知的类型，更加灵活</li></ul><p><strong>可配置的切面数量不同：</strong></p><ul><li>一个advisor只能配置一个固定通知和一个切点表达式</li><li>一个aspect可以配置多个通知和多个切点表达式任意组合</li></ul><p><strong>使用场景不同：</strong></p><ul><li>允许随意搭配情况下可以使用aspect进行配置</li><li>如果通知类型单一、切面单一的情况下可以使用advisor进行配置</li><li>在通知类型已经固定，不用人为指定通知类型时，可以使用advisor进行配置，例如后面要学习的 Spring事务控制的配置</li></ul><h2 id="AOP原理刨析"><a href="#AOP原理刨析" class="headerlink" title="AOP原理刨析"></a>AOP原理刨析</h2><blockquote><p><a href="https://www.bilibili.com/video/BV1rt4y1u7q5?t=1406.6&p=90">Bilibili精准空降</a>，<a href="https://juejin.cn/post/7167151634357698590#heading-27">网友文字版</a></p></blockquote><h1 id="AOP实践——基于注解的Spring"><a href="#AOP实践——基于注解的Spring" class="headerlink" title="AOP实践——基于注解的Spring"></a>AOP实践——基于注解的Spring</h1><h2 id="启用AOP的注解"><a href="#启用AOP的注解" class="headerlink" title="启用AOP的注解"></a>启用AOP的注解</h2><blockquote><p>如果你选择使用配置文件来使用注解</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span> /&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用配置类</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br></pre></td></tr></table></figure><h2 id="切面的配置"><a href="#切面的配置" class="headerlink" title="切面的配置"></a>切面的配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span> <span class="comment">//声明切面</span></span><br><span class="line"><span class="meta">@Before()</span> <span class="comment">//前置增强</span></span><br><span class="line"><span class="meta">@AfterReturning()</span>   <span class="comment">//后置增强</span></span><br><span class="line"><span class="meta">@Around()</span> <span class="comment">//环绕增强</span></span><br><span class="line"><span class="meta">@AfterThrowing(value或pointcut=&quot;&quot;,throwing=&quot;&quot;,...)</span> <span class="comment">//抛出异常后增强</span></span><br><span class="line"><span class="meta">@After()</span>       <span class="comment">//最终增强</span></span><br></pre></td></tr></table></figure><h2 id="切点表达式抽取"><a href="#切点表达式抽取" class="headerlink" title="切点表达式抽取"></a>切点表达式抽取</h2><ol><li>写一个<code>空方法</code>，添加注解<code>@Pointcut(&quot;execution(* com.package.*.*(..))&quot;)</code></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyAdvice</span>&#123;</span><br><span class="line"><span class="meta">@Pointcut(&quot;execution(* com.package.*.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">myPointcut</span><span class="params">()</span>;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用<code>类名.方法名()</code>的语法引用切点表达式</li></ol><div class="admonition note"><p class="admonition-title">“ ”</p><p>注意这种格式只是一种语法规范，而不是Java代码！</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Before(&quot;MyAdvice.myPointcut()&quot;)</span> <span class="comment">// &lt;=&gt; @Before(&quot;execution(* com.package.*.*(..))&quot;)</span></span><br></pre></td></tr></table></figure><h1 id="SpringBoot-AOP实践"><a href="#SpringBoot-AOP实践" class="headerlink" title="SpringBoot AOP实践"></a>SpringBoot AOP实践</h1><h2 id="添加依赖-1"><a href="#添加依赖-1" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupld</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupld</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactld</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactld</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="拦截方法"><a href="#拦截方法" class="headerlink" title="拦截方法"></a>拦截方法</h2><h3 id="方法一-声明自定义注解进行拦截"><a href="#方法一-声明自定义注解进行拦截" class="headerlink" title="方法一 声明自定义注解进行拦截"></a>方法一 声明自定义注解进行拦截</h3><blockquote><p>新建<code>Annotation</code>包，新建<code>adminOnly</code>接口</p></blockquote><ul><li>在<code>interface</code>前添加<code>@</code>表明定义的是注解</li><li>添加<code>@annotation</code>注解</li></ul><div class="admonition info"><p class="admonition-title">“”</p><p><a href="https://blog.csdn.net/xsp_happyboy/article/details/80987484">自定义注解有哪些参数呢？</a></p></div><ul><li>添加参数<code>@Retention</code>、<code>@Target</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.Annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span> <span class="comment">//指定了注解的生命周期在运行时</span></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span><span class="comment">//指定了注解应用在方法上</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> adminOnly &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法二-使用execution表达式拦截"><a href="#方法二-使用execution表达式拦截" class="headerlink" title="方法二 使用execution表达式拦截"></a>方法二 使用execution表达式拦截</h3><p>语法格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution(修饰符pattern 返回值pattern 描述包名方法名(参数) 方法抛出异常pattern)</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Pointcut(&quot;execution(public * com.example.controller.*Controller.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">match</span><span class="params">()</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(&quot;match()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 前置通知...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">“”</p><p><a href="https://blog.csdn.net/lk7688535/article/details/51989746">*(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数</a></p></div><h2 id="切面的管理"><a href="#切面的管理" class="headerlink" title="切面的管理"></a>切面的管理</h2><blockquote><p>新建<code>Aspect</code>包对切面进行统一管理，并新建<code>CheckUserAscpect.java</code>类</p></blockquote><ul><li><code>@Aspect</code>注解声明这个类是一个切面</li><li><code>@Component</code>注解，将这个类标记为Spring容器中的一个Bean，这样就可以使用其它注解了（<code>@Autowired</code>）</li><li>使用<code>CheckUserService.java</code>这个类，实现逻辑处理</li><li>编写切入点，<code>@Pointcut(&quot;@annotation(com.mysqlapi.Annotation.adminOnly)&quot;)</code>，其中参数用来指定在何处插入，此处表示<code>在使用了（自定义）注解@adminOnly处切入</code>，也可以使用<code>execution表达式进行拦截</code><ul><li>切入点方法为<code>checkAdmin()</code></li></ul></li><li>编写通知，决定了何时执行，以<code>@Before</code>通知为例，即在执行操作前，检查用户是否为管理员。<code>@Before(&quot;checkAdmin()&quot;)</code>其中的参数为<code>切入点的方法</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.Aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.service.CheckUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckUserAscpect</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CheckUserService checkUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Pointcut(&quot;@annotation(com.mysqlapi.Annotation.adminOnly)&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkAdmin</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(&quot;checkAdmin()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">checkUserService.check();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="修改之前的权限验证"><a href="#修改之前的权限验证" class="headerlink" title="修改之前的权限验证"></a>修改之前的权限验证</h1><blockquote><p>UserService.java</p></blockquote><ul><li>在<code>addUser()</code>方法前，添加注解<code>@adminOnly</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.Aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Before;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.service.CheckUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckUserAscpect</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CheckUserService checkUserService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Pointcut(&quot;@annotation(com.mysqlapi.Annotation.adminOnly)&quot;)</span></span><br><span class="line"><span class="comment">//@Pointcut(&quot;execution(public * com.mysqlapi.service.*.*(..))&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkAdmin</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Before(&quot;checkAdmin()&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">checkUserService.check();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//@Before(&quot;checkAdmin()&quot;)</span></span><br><span class="line"><span class="comment">//public void before(JoinPoint joinPoint)&#123;</span></span><br><span class="line"><span class="comment">//System.out.println(&quot;[前置通知]&quot;+joinPoint);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>进行单元测试</p></blockquote><p>UserServiceTest.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.holder.CurrentUserHolder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserServiceTest2</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserService userService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">CurrentUserHolder.set(<span class="string">&quot;sds&quot;</span>);</span><br><span class="line">userService.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testAddUser</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">CurrentUserHolder.set(<span class="string">&quot;sds&quot;</span>);</span><br><span class="line">userService.addUser();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样可以实现，权限控制。这种添加自定义注解的方式，比在每有一个方法都要添加<code>check()</code>和<code>throws Exception</code>要更加简洁，但还是需要对每个需要权限的方法添加注解。</p><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\image-20230313172948144.png" alt="image-20230313172948144"></p><blockquote><p>用execution表达式的单元测试</p></blockquote><p>AspectTestUserService1.java  &lt;– 这个是service包中的文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AspectTestUserService1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;AspectTestUserService1 查找成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;AspectTestUserService1 插入成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AspectTestUserService1Test.java &lt;– 单元测试文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">AspectTestUserService1Test</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> AspectTestUserService1 aspectTestUserService1;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testFindAll</span><span class="params">()</span> &#123;</span><br><span class="line">aspectTestUserService1.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testAddUser</span><span class="params">()</span> &#123;</span><br><span class="line">aspectTestUserService1.addUser();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="excution表达式"><a href="#excution表达式" class="headerlink" title="excution表达式"></a>excution表达式</h2><p>语法格式</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution (* com.sample.service.impl..*.*(..))</span><br></pre></td></tr></table></figure><p>  整个表达式可以分为五个部分：</p><p>1、execution(): 表达式主体。</p><p> 2、第一个<em>号：表示返回类型，</em>号表示所有的类型。</p><p> 3、包名：表示需要拦截的包名，后面的两个句点表示当前包和当前包的所有子包，com.sample.service.impl包、子孙包下所有类的方法。</p><p> 4、第二个<em>号：表示类名，</em>号表示所有的类。</p><p> 5、*(..):最后这个星号表示方法名，*号表示所有的方法，后面括弧里面表示方法的参数，两个句点表示任何参数。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Spring </tag>
            
            <tag> AOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之SpringBoot数据库API Part2</title>
      <link href="/posts/1059130365/"/>
      <url>/posts/1059130365/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="http://lptexas-cub.github.io/posts/2953060011/">接上一节，SpringBoot数据库API</a></p></blockquote><h1 id="数据库事务"><a href="#数据库事务" class="headerlink" title="数据库事务"></a>数据库事务</h1><blockquote><p>TestTransController.java</p></blockquote><ul><li>事务，要么完全执行，要么完全不执行。</li><li>添加<code>@Transactional</code>注解，表明操作为事务。</li></ul><p>当不加注解运行时，第一条记录会被添加至表中，但第二条记录会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.entity.User;</span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.repository.UserRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.transaction.Transactional;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestTransController</span> &#123;</span><br><span class="line"><span class="comment">//实例化接口</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserRepository repository;</span><br><span class="line"><span class="comment">//注意：数据库要改为InnoDB引擎</span></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/create2Users&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create2Users</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user1.setUserName(<span class="string">&quot;test1&quot;</span>);</span><br><span class="line">    user1.setRole(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    repository.save(user1);</span><br><span class="line"></span><br><span class="line">    <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    user1.setUserName(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">    user2.setRole(<span class="string">&quot;10&quot;</span>); <span class="comment">//此操作会报错</span></span><br><span class="line">    repository.save(user2);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h1><blockquote><p>对软件最小可测试单元（Java，即类）进行测试。</p></blockquote><h2 id="添加依赖工具"><a href="#添加依赖工具" class="headerlink" title="添加依赖工具"></a>添加依赖工具</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span></span><br><span class="line">junit</span><br><span class="line"><span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="进入单元测试"><a href="#进入单元测试" class="headerlink" title="进入单元测试"></a>进入单元测试</h2><blockquote><p><a href="https://blog.csdn.net/qq_44309044/article/details/102687627">eclipse进入单元测试</a></p></blockquote><p>在我们写好一个类时，我们可以使用单元测试对里面的方法进行测试。</p><p>可以借助<code>junit</code>中的<code>Assert</code>类，提供的方法。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230311093458113.png" alt="image-20230311093458113"></p><blockquote><p>执行单元测试类</p></blockquote><p>在<code>class &lt;classname&gt; &#123;&#125;</code>前添加注解</p><ul><li>@RunWith(SpringRunner.<strong>class</strong>)</li><li>@SpringBootTest</li></ul><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><p>不同的用户拥有不同的角色，不同角色的权限不同，可以执行的操作也不一样。如何在SpringBoot中实现对权限的控制呢？</p><p>实现简单的权限管理，我们可以使用cookie、session、线程存储、数据库等。</p><h2 id="示例：线程本地存储"><a href="#示例：线程本地存储" class="headerlink" title="示例：线程本地存储"></a>示例：线程本地存储</h2><blockquote><p>CurrentUserHolder.java</p></blockquote><p>这个类创建了两个方法：</p><ol><li>get()，用户获取线程存储中的数据</li><li>set()，设置线程存储中的数据</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.holder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CurrentUserHolder</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;String&gt; holder = <span class="keyword">new</span> <span class="title class_">ThreadLocal</span>&lt;&gt;();</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">get</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> holder.get()==<span class="literal">null</span>?<span class="string">&quot;null&quot;</span>:holder.get();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">set</span><span class="params">(String username)</span> &#123;</span><br><span class="line">holder.set(username);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">ThreadLocal相关问题</p><p><a href="https://www.zhihu.com/question/477411483">ThreadLocal一个线程只能存放一个变量吗？想存多个怎么搞？</a></p></div><blockquote><p>CheckUserService.java</p></blockquote><p>service层</p><ul><li>进行身份的检查，若不匹配则抛出异常</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysqlapi.holder.CurrentUserHolder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CheckUserService</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">check</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">String user=CurrentUserHolder.get();</span><br><span class="line"><span class="keyword">if</span>(!user.equals(<span class="string">&quot;admin&quot;</span>)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Exception</span>(<span class="string">&quot;[异常]你不是管理员&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>UserService.java</p></blockquote><p>service层</p><ul><li>实例化CheckUserService</li><li>在每个UserService的方法中（以<code>findAll()</code>为例），加入CheckUserService检查（调用<code>check()</code>方法），设置抛出异常（<code>throws Exception</code>）。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> CheckUserService checkUserService;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">checkUserService.check();</span><br><span class="line">System.out.println(<span class="string">&quot;查找成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition info"><p>使用这种方法进行权限管理，我们会发现在<code>UserService.java</code>中，每有一个方法需要权限都要添加<code>check()</code>和<code>throws Exception</code>这样使得我们的代码显得冗余、低效。如何解决呢？这就需要我们学习<code>AOP面向切面编程</code>。在下一节将进行学习。</p></div><br>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Mysql </tag>
            
            <tag> Restful API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之SpringBoot数据库API</title>
      <link href="/posts/2953060011/"/>
      <url>/posts/2953060011/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://lptexas.top/posts/581298918/">接上一节，SpringBoot连接数据库。</a></p></blockquote><p>设计操作数据库的API，让数据库操作更加便捷。</p><h1 id="设计Restful-API"><a href="#设计Restful-API" class="headerlink" title="设计Restful API"></a>设计Restful API</h1><table><thead><tr><th>请求方式</th><th>路径</th><th>功能</th></tr></thead><tbody><tr><td>GET</td><td>&#x2F;users</td><td>获取所有用户信息</td></tr><tr><td>GET</td><td>&#x2F;users&#x2F;{id}</td><td>查询单条记录</td></tr><tr><td>POST</td><td>&#x2F;adduser</td><td>创建一条用户记录</td></tr><tr><td>PUT</td><td>&#x2F;users&#x2F;{id}</td><td>更新单条记录</td></tr></tbody></table><h1 id="创建数据库接口"><a href="#创建数据库接口" class="headerlink" title="创建数据库接口"></a>创建数据库接口</h1><blockquote><p>UserRepository.java</p></blockquote><ul><li>继承<code>JpaRepository接口</code></li><li>可以自定义一些方法。此处我选择直接使用继承的方法，就不写其它东西了。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JpaRepository接口类"><a href="#JpaRepository接口类" class="headerlink" title="JpaRepository接口类"></a>JpaRepository接口类</h2><blockquote><p>这个接口又继承了<code>ListCrudRepository&lt;T, ID&gt;</code>和<code>ListPagingAndSortingRepository&lt;T, ID&gt;</code></p></blockquote><p>这些接口为我们封装了很多方法。具体请创建之后，点进去查看。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230310192452411.png" alt="image-20230310192452411"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20230310192534454.png" alt="image-20230310192534454"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20230310192606010.png" alt="image-20230310192606010"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20230310192546820.png" alt="image-20230310192546820"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20230310192728513.png" alt="image-20230310192728513"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20230310192652324.png" alt="image-20230310192652324"></p><h1 id="完善Controller"><a href="#完善Controller" class="headerlink" title="完善Controller"></a>完善Controller</h1><blockquote><p>UserController.java</p><p>+查询记录</p><p>+增加记录</p><p>+删除记录</p><p>+更改记录</p></blockquote><ul><li>初始化接口</li><li>添加注解<code>@Autowired</code></li><li>添加<code>@GetMapping、@PostMapping</code>等，实现对应的接口方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Optional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PutMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> UserRepository repository;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取所有记录</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/users&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">getAll</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> repository.findAll();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询单条记录</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/users/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">findById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> repository.findById(id).orElse(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一条记录</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/adduser&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">addUser</span><span class="params">(<span class="meta">@RequestParam(&quot;usrn&quot;)</span> String usrn, <span class="meta">@RequestParam(&quot;pswd&quot;)</span> String pswd, <span class="meta">@RequestParam(&quot;role&quot;)</span> String role)</span> &#123;</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setUserName(usrn);</span><br><span class="line">user.setPassword(pswd);</span><br><span class="line">user.setRole(role);</span><br><span class="line"><span class="keyword">return</span> repository.save(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改一条记录</span></span><br><span class="line"><span class="meta">@PutMapping(&quot;/users/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">updateUser</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer PathId, <span class="meta">@RequestParam(&quot;id&quot;)</span> Integer id, <span class="meta">@RequestParam(&quot;usrn&quot;)</span> String usrn, <span class="meta">@RequestParam(&quot;pswd&quot;)</span> String pswd, <span class="meta">@RequestParam(&quot;role&quot;)</span> String role)</span> &#123;</span><br><span class="line">Optional&lt;User&gt; optional = repository.findById(id);</span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="comment">// 是否存在该用户，不存在则返回null</span></span><br><span class="line"><span class="comment">// 方法一（推荐）</span></span><br><span class="line">optional.orElse(<span class="literal">null</span>);</span><br><span class="line"><span class="comment">//// 方法二</span></span><br><span class="line"><span class="comment">//if(optional.isPresent()) &#123;</span></span><br><span class="line"><span class="comment">//user=optional.get();</span></span><br><span class="line"><span class="comment">//&#125;else &#123;</span></span><br><span class="line"><span class="comment">//return null;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="keyword">if</span> (id.toString()!= <span class="literal">null</span>&amp;&amp;id.toString()!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setId(id);</span><br><span class="line">&#125; &#123;</span><br><span class="line">user.setId(optional.get().getId());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (usrn != <span class="literal">null</span>&amp;&amp; usrn!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setUserName(usrn);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">user.setUserName(optional.get().getUserName());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (pswd != <span class="literal">null</span>&amp;&amp; pswd!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setPassword(pswd);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">user.setPassword((optional.get().getPassword()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (role != <span class="literal">null</span>&amp;&amp; role!=<span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">user.setRole(role);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">user.setRole(optional.get().getRole());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> repository.save(user);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">如果在这一步结束，能成功运行吗？</p><p>答案是报错<code>java.lang.IllegalArgumentException: Could not resolve domain type of interface com.mysqlapi.UserRepository</code>，为什么呢？原因是继承<code>jpaRepository</code>时未指定两个类型，即<code>&lt;对应实体类,主键的数据类型&gt;</code></p></div><blockquote><p>修改UserRepository.java</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.data.jpa.repository.JpaRepository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserRepository</span> <span class="keyword">extends</span> <span class="title class_">JpaRepository</span>&lt;User,Integer&gt;&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="执行程序"><a href="#执行程序" class="headerlink" title="执行程序"></a>执行程序</h1><blockquote><p>run as spring boot app</p></blockquote><p>当前的程序还是存在问题，使用PUT更新记录时，当<code>id</code>为<code>空（非null）</code>时，会报错；当<code>某个参数</code>为<code>null</code>时，仍然报错（似乎<code>!=null</code>语句未生效）。思考为什么会发生这种问题？如何解决？</p><div class="admonition note"><p class="admonition-title">数据库中`<tablename>_sequence`表的作用</p><p>该表指定了下一个记录的自增值。用<code>next_val</code>字段表示。如果使用接口插入数据失败，有可能是这里出错，日志中会报错<code>Duplicate entry 'xxx' for key 'xxx.PRIMARY'</code>。只需要修改一下自增值即可。</p></div><h1 id="处理数据库乱码问题"><a href="#处理数据库乱码问题" class="headerlink" title="处理数据库乱码问题"></a>处理数据库乱码问题</h1><blockquote><p>统一项目和数据库中使用的编码。</p></blockquote><h2 id="数据库连接时设置编码"><a href="#数据库连接时设置编码" class="headerlink" title="数据库连接时设置编码"></a>数据库连接时设置编码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=jdbc:mysql:<span class="comment">//localhost:3306/managerSys?useUnicode=true&amp;characterEncoding=utf8</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Mysql </tag>
            
            <tag> Restful API </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之SpringBoot连接数据库</title>
      <link href="/posts/581298918/"/>
      <url>/posts/581298918/</url>
      
        <content type="html"><![CDATA[<ul><li>Hibernate</li><li>SpringBoot</li></ul><h1 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1><ol><li>jpa用于连接增删改数据库的</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>mysql连接驱动</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 我使用下面这个驱动会报错 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h1><blockquote><p>修改<code>application.properties</code>或同目录新建<code>application.yml</code></p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.31.5:3306/managerSys</span> </span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jc.jdbc.Driver</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">driver-class-name</p><p><a href="https://blog.csdn.net/a907691592/article/details/96876030">com.mysql.jdbc.Driver和com.mysql.jc.jdbc.Drive的区别</a></p></div><blockquote><p>建议添加的配置</p><p>hibernate是一种对象关系映射框架，hibernate可以实现自动建表。</p></blockquote><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">jpa:</span> </span><br><span class="line">   <span class="attr">show-sql:</span> <span class="literal">true</span></span><br><span class="line">   <span class="attr">hibernate:</span> </span><br><span class="line">        <span class="attr">ddl-auto:</span> <span class="string">create</span></span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">hibernate的5个模式</p><p>见下文。</p></div><h1 id="hibernate的5个模式"><a href="#hibernate的5个模式" class="headerlink" title="hibernate的5个模式"></a><a href="https://blog.csdn.net/qq_28681387/article/details/97614983">hibernate的5个模式</a></h1><blockquote><p>DDL（Data Definition Language），即数据定义语言，例如建数据库、建表等，都属于数据定义语言。</p></blockquote><h2 id="create模式"><a href="#create模式" class="headerlink" title="create模式"></a>create模式</h2><p>每次运行项目，没有表会新建表，如果表内有数据会被清空</p><h2 id="create-drop模式"><a href="#create-drop模式" class="headerlink" title="create-drop模式"></a>create-drop模式</h2><p>每次运行项目，没有表会新建表，并且每次程序结束后，删除表。</p><h2 id="update模式"><a href="#update模式" class="headerlink" title="update模式"></a>update模式</h2><p>没有表格会新建，不会删除数据，只会对表进行更新操作。</p><h2 id="validate模式"><a href="#validate模式" class="headerlink" title="validate模式"></a>validate模式</h2><p>校验模式，校验字段数据类型是否相同，不同则报错。</p><h2 id="none模式"><a href="#none模式" class="headerlink" title="none模式"></a>none模式</h2><p>关闭ddl，什么都不做，每次启动项目，不会对数据库进行任何验证和操作。</p><h1 id="演示Hibernate自动建表"><a href="#演示Hibernate自动建表" class="headerlink" title="演示Hibernate自动建表"></a>演示Hibernate自动建表</h1><h2 id="新建Entity"><a href="#新建Entity" class="headerlink" title="新建Entity"></a>新建Entity</h2><blockquote><p>User.java</p></blockquote><ul><li>定义成员变量</li><li>@id，设置变量对应为主键</li><li>@GeneratedValue，设置变量为自增</li><li>一键生成getter、setter方法，以及一个无参的构造方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.Entity;</span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.GeneratedValue;</span><br><span class="line"><span class="keyword">import</span> jakarta.persistence.Id;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Entity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line"><span class="meta">@Id</span></span><br><span class="line"><span class="meta">@GeneratedValue</span></span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String userName;</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123; <span class="comment">//构造函数</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getUserName</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> userName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUserName</span><span class="params">(String userName)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.userName = userName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getPassword</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> password;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPassword</span><span class="params">(String password)</span> &#123;</span><br><span class="line"><span class="built_in">this</span>.password = password;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="新建Controller"><a href="#新建Controller" class="headerlink" title="新建Controller"></a>新建Controller</h2><blockquote><p>StudentController.java</p></blockquote><ul><li>暂时啥也不写</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mysqlapi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentController</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运行项目"><a href="#运行项目" class="headerlink" title="运行项目"></a>运行项目</h2><blockquote><p>run  as spring boot app</p></blockquote><p>日志中可以观察到，<code>show-sql: true</code>正常工作。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">Hibernate: <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> <span class="keyword">user</span></span><br><span class="line">Hibernate: <span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> user_seq</span><br><span class="line">Hibernate: <span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span> (id <span class="type">integer</span> <span class="keyword">not</span> <span class="keyword">null</span>, password <span class="type">varchar</span>(<span class="number">255</span>), role <span class="type">varchar</span>(<span class="number">255</span>), user_name <span class="type">varchar</span>(<span class="number">255</span>), <span class="keyword">primary</span> key (id)) engine<span class="operator">=</span>InnoDB</span><br><span class="line">Hibernate: <span class="keyword">create</span> <span class="keyword">table</span> user_seq (next_val <span class="type">bigint</span>) engine<span class="operator">=</span>InnoDB</span><br><span class="line">Hibernate: <span class="keyword">insert</span> <span class="keyword">into</span> user_seq <span class="keyword">values</span> ( <span class="number">1</span> )</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>查看数据库，可以发现已经成功创建！</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230310184516354.png" alt="image-20230310184516354"></p><div class="admonition caution"><p class="admonition-title">ddl-auto使用注意</p><p>一般情况下，<code>ddl-auto</code>使用<code>update</code>模式最安全。</p></div><br>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java之ArrayList动态数组</title>
      <link href="/posts/862504134/"/>
      <url>/posts/862504134/</url>
      
        <content type="html"><![CDATA[<p>参阅：<a href="https://www.runoob.com/java/java-arraylist.html">https://www.runoob.com/java/java-arraylist.html</a></p><h1 id="什么是ArrayList"><a href="#什么是ArrayList" class="headerlink" title="什么是ArrayList?"></a>什么是ArrayList?</h1><blockquote><p>ArrayList 类是一个可以动态修改的数组，与普通数组的区别就是它是没有固定大小的限制，我们可以添加或删除元素。</p><p>ArrayList 继承了 AbstractList ，并实现了 List 接口。</p></blockquote><h2 id="语法格式"><a href="#语法格式" class="headerlink" title="语法格式"></a>语法格式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList; <span class="comment">// 引入 ArrayList 类</span></span><br><span class="line"></span><br><span class="line">ArrayList&lt;E&gt; objectName =<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();　 <span class="comment">// 初始化</span></span><br></pre></td></tr></table></figure><h1 id="ArrayList提供的方法"><a href="#ArrayList提供的方法" class="headerlink" title="ArrayList提供的方法"></a>ArrayList提供的方法</h1><h2 id="add方法"><a href="#add方法" class="headerlink" title="add方法"></a>add方法</h2><blockquote><p>添加元素至数组中。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList; <span class="comment">// 引入 ArrayList 类</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestArrayList</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">ArrayList&lt;String&gt; animals =<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;(); <span class="comment">// 初始化</span></span><br><span class="line">animals.add(<span class="string">&quot;dog&quot;</span>);</span><br><span class="line">animals.add(<span class="string">&quot;cat&quot;</span>);</span><br><span class="line">System.out.println(animals);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#output</span><br><span class="line">[dog, cat]</span><br></pre></td></tr></table></figure><h2 id="get方法"><a href="#get方法" class="headerlink" title="get方法"></a>get方法</h2><blockquote><p>访问元素。</p><p>注意：列表中的索引从0开始。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.get(index);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(animals.get(<span class="number">0</span>));</span><br></pre></td></tr></table></figure><h2 id="set方法"><a href="#set方法" class="headerlink" title="set方法"></a>set方法</h2><blockquote><p>修改元素。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.set(index,value);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animals.set(<span class="number">0</span>,<span class="string">&quot;monkey&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="remove方法"><a href="#remove方法" class="headerlink" title="remove方法"></a>remove方法</h2><blockquote><p>删除元素。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.remove(index);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animals.remove(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="size方法"><a href="#size方法" class="headerlink" title="size方法"></a>size方法</h2><blockquote><p>输出元素个数。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">obj.size();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(animals.size());</span><br></pre></td></tr></table></figure><h1 id="遍历数组列表中的元素的技巧"><a href="#遍历数组列表中的元素的技巧" class="headerlink" title="遍历数组列表中的元素的技巧"></a>遍历数组列表中的元素的技巧</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">for</span><span class="params">(int i : myNumbers)</span></span></span><br></pre></td></tr></table></figure><p>等价于:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(int i <span class="operator">=</span> <span class="number">0</span><span class="comment">; i &lt; myNumbers.size(); i++）&#123;</span></span><br><span class="line">    int j <span class="operator">=</span> myNumbers.get(i)<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python之matplotlib模块</title>
      <link href="/posts/2723459680/"/>
      <url>/posts/2723459680/</url>
      
        <content type="html"><![CDATA[<p>参阅：<a href="http://c.biancheng.net/matplotlib">http://c.biancheng.net/matplotlib</a></p><h1 id="使用matplotlib绘制可视化图形"><a href="#使用matplotlib绘制可视化图形" class="headerlink" title="使用matplotlib绘制可视化图形"></a>使用matplotlib绘制可视化图形</h1><h1 id="正确显示中文"><a href="#正确显示中文" class="headerlink" title="正确显示中文"></a>正确显示中文</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plt<span class="selector-class">.rcParams</span><span class="selector-attr">[<span class="string">&#x27;font.sans-serif&#x27;</span>]</span>=<span class="selector-attr">[<span class="string">&#x27;SimHei&#x27;</span>]</span>#正确显示汉字</span><br><span class="line">plt<span class="selector-class">.rcParams</span><span class="selector-attr">[<span class="string">&#x27;axes.unicode_minus&#x27;</span>]</span>=False #正确显示负号</span><br></pre></td></tr></table></figure><h1 id="axes类"><a href="#axes类" class="headerlink" title="axes类"></a>axes类</h1><h2 id="legend函数"><a href="#legend函数" class="headerlink" title="legend函数"></a>legend函数</h2><blockquote><p>创建图例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ax.legend(handles, labels, loc)</span><br></pre></td></tr></table></figure><ul><li>labels 是一个字符串序列，用来指定标签的名称；</li><li>loc 是指定图例位置的参数，其参数值可以用字符串或整数来表示；</li><li>handles 参数，它也是一个序列，它包含了所有线型的实例；</li><li><a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.axes.Axes.legend.html">更多参数</a>（frameon,ncol等等）</li></ul><h1 id="报错解决方案"><a href="#报错解决方案" class="headerlink" title="报错解决方案"></a>报错解决方案</h1><blockquote><p><a href="https://blog.csdn.net/Crazy__1/article/details/103903962">This application failed to start because it could not find or load the Qt platform plugin “windows”<br>in “”.<br>Reinstalling the application may fix this problem.</a><br>将D:\python36\Library\plugins目录下的platform文件夹复制到D:\python36下。D:\python36是<a href="https://so.csdn.net/so/search?q=anaconda&spm=1001.2101.3001.7020">anaconda</a>安装目录。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python之pandas模块</title>
      <link href="/posts/2301760283/"/>
      <url>/posts/2301760283/</url>
      
        <content type="html"><![CDATA[<p>   Pandas 名字衍生自术语 “panel data”（面板数据）和 “Python data analysis”，一 个强大的分析结构化数据的工具集，基础是 Numpy，可以从各种文件格式比如 CSV、SQL、 Excel 导入数据，对各种数据进行运算操作，比如归并、再成形、选择，还有数据清洗和数 据加工特征。Pandas 广泛应用在学术、金融、统计学等各个数据分析领域。Pandas 的主要 数据结构是 Series （一维数据）与 DataFrame（二维数据）</p><h1 id="Series对象"><a href="#Series对象" class="headerlink" title="Series对象"></a>Series对象</h1><blockquote><p>Series 是一个一维数据，Pandas 会默认用 0 到 n-1 来作为 Series 的 index, 但也可以自己 指定 index（可以把 index 理解为 dict 里面的 key）</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.Series( data, index, dtype, name, copy)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>data</strong>：一组数据(ndarray 类型)。</li><li><strong>index</strong>：数据索引标签，如果不指定，默认从 0 开始。</li><li><strong>dtype</strong>：数据类型，默认会自己判断。</li><li><strong>name</strong>：设置名称。</li><li><strong>copy</strong>：拷贝数据，默认为 False。</li></ul><p><img src="https://lptexas-cub.github.io/img/post/pandas-series.jpg"></p><h2 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h2><h2 id="data为字典"><a href="#data为字典" class="headerlink" title="data为字典"></a>data为字典</h2><blockquote><p>默认根据字典的键码字符串顺序排序，也可以设定顺序。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;<span class="string">&quot;ton&quot;</span>: <span class="number">20</span>, <span class="string">&quot;mary&quot;</span>: <span class="number">18</span>, <span class="string">&quot;jack&quot;</span>: <span class="number">19</span>, <span class="string">&quot;car&quot;</span>: <span class="literal">None</span>&#125;</span><br><span class="line">sa = pd.Series(s)</span><br><span class="line"><span class="built_in">print</span>(sa)  <span class="comment"># 默认根据字典的键码字符串顺序排序</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">car      NaN</span></span><br><span class="line"><span class="string">jack    19.0</span></span><br><span class="line"><span class="string">mary    18.0</span></span><br><span class="line"><span class="string">ton     20.0</span></span><br><span class="line"><span class="string">dtype: float64</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment">## 指定顺序</span></span><br><span class="line">sa = pd.Series(s, index=[<span class="string">&#x27;ton&#x27;</span>, <span class="string">&#x27;mary&#x27;</span>, <span class="string">&#x27;jack&#x27;</span>, <span class="string">&#x27;car&#x27;</span>]) <span class="comment">#指定顺序&#x27;ton&#x27;, &#x27;mary&#x27;, &#x27;jack&#x27;, &#x27;car&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(sa)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">ton     20.0</span></span><br><span class="line"><span class="string">mary    18.0</span></span><br><span class="line"><span class="string">jack    19.0</span></span><br><span class="line"><span class="string">car      NaN</span></span><br><span class="line"><span class="string">dtype: float64</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Pandas数据框（DataFrame）"><a href="#Pandas数据框（DataFrame）" class="headerlink" title="Pandas数据框（DataFrame）"></a>Pandas数据框（DataFrame）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.DataFrame( data, index, columns, dtype, copy)</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>data</strong>：一组数据(ndarray、series, map, lists, dict 等类型)。</li><li><strong>index</strong>：索引值，或者可以称为行标签。</li><li><strong>columns</strong>：列标签，默认为 RangeIndex (0, 1, 2, …, n) 。</li><li><strong>dtype</strong>：数据类型。</li><li><strong>copy</strong>：拷贝数据，默认为 False。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pandas数据框</span></span><br><span class="line">data = &#123;<span class="string">&#x27;id&#x27;</span>: [<span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;Sarah&#x27;</span>, <span class="string">&#x27;Mike&#x27;</span>],</span><br><span class="line"> <span class="string">&#x27;age&#x27;</span>: [<span class="number">18</span>, <span class="number">35</span>, <span class="number">20</span>],</span><br><span class="line"> <span class="string">&#x27;cash&#x27;</span>: [<span class="number">10.53</span>, <span class="number">500.7</span>, <span class="number">13.6</span>]&#125;</span><br><span class="line">df = pd.DataFrame(data) <span class="comment">#调用构造函数并将结果赋值给 df</span></span><br><span class="line"><span class="built_in">print</span>(df) <span class="comment"># 默认根据字典的键码字符串顺序排序</span></span><br><span class="line"><span class="comment">## 指定顺序</span></span><br><span class="line">df = pd.DataFrame(data,index=[<span class="string">&#x27;id&#x27;</span>,<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;cash&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><h3 id="对-DataFrame-对象增加列"><a href="#对-DataFrame-对象增加列" class="headerlink" title="对 DataFrame 对象增加列"></a>对 DataFrame 对象增加列</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">df[&quot;rich&quot;]=df[&quot;cash&quot;]&gt;200</span><br><span class="line">print(df)</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">      age    cash     id   rich</span><br><span class="line">id     18   10.53   Jack  False</span><br><span class="line">age    35  500.70  Sarah   True</span><br><span class="line">cash   20   13.60   Mike  False</span><br><span class="line">&#x27;&#x27;&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 指定列的顺序</span></span><br><span class="line"><span class="attribute">df2</span>=pd.DataFrame(data,columns=[<span class="string">&quot;id&quot;</span>,<span class="string">&quot;age&quot;</span>,<span class="string">&quot;cash&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(df2)</span><br></pre></td></tr></table></figure><h2 id="数据框索引"><a href="#数据框索引" class="headerlink" title="数据框索引"></a><a href="https://blog.csdn.net/qq_41913559/article/details/107561309">数据框索引</a></h2><p>①iloc 主要使用数字来索引数据，而不能使用字符型的标签来索引数据。而 loc 则刚好 相反，只能使用字符型标签来索引数据，不能使用数字来索引数据。注意：数字索引范围不 包括结尾，而字符索引范围包括结尾。</p><p>②ix 是一种混合索引，字符型标签和整型数据索引都可以。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 数据引用</span></span><br><span class="line"><span class="comment">### 引用列、切片、定位某个数据</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(df2[<span class="string">&quot;id&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(df2.iloc[<span class="number">0</span>:<span class="number">2</span>,<span class="number">0</span>:<span class="number">2</span>]) <span class="comment"># 逗号左侧为行，右侧为列</span></span><br><span class="line"><span class="built_in">print</span>(df2.iloc[:])</span><br></pre></td></tr></table></figure><h2 id="数据清洗"><a href="#数据清洗" class="headerlink" title="数据清洗"></a>数据清洗</h2><h2 id="删除空值的行-x2F-列"><a href="#删除空值的行-x2F-列" class="headerlink" title="删除空值的行&#x2F;列"></a><a href="https://blog.csdn.net/qq_17753903/article/details/89817371">删除空值的行&#x2F;列</a></h2><blockquote><p>语法格式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataFrame.dropna(axis=<span class="number">0</span>, how=<span class="string">&#x27;any&#x27;</span>, thresh=<span class="literal">None</span>, subset=<span class="literal">None</span>, inplace=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><blockquote><p>参数详解</p></blockquote><ul><li><p>axis：轴。0或’index’，表示按行删除；1或’columns’，表示按列删除。</p></li><li><p>how：筛选方式。‘any’，表示该行&#x2F;列只要有一个以上的空值，就删除该行&#x2F;列；‘all’，表示该行&#x2F;列全部都为空值，就删除该行&#x2F;列。</p></li><li><p>thresh：非空元素最低数量。int型，默认为None。如果该行&#x2F;列中，非空元素数量小于这个值，就删除该行&#x2F;列。</p></li><li><p>subset：子集。列表，元素为行或者列的索引。如果axis&#x3D;0或者‘index’，subset中元素为列的索引；如果axis&#x3D;1或者‘column’，subset中元素为行的索引。由subset限制的子区域，是判断是否删除该行&#x2F;列的条件判断区域。</p></li><li><p>inplace：是否原地替换。布尔值，默认为False。如果为True，则在原DataFrame上进行操作，返回值为None。</p></li></ul><blockquote><p>案例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">df = pd.read_csv(<span class="string">&#x27;titanic.csv&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(df.head().to_string())</span><br><span class="line"><span class="comment"># print(df.describe().to_string())</span></span><br><span class="line"><span class="comment"># print(df.describe(include=&#x27;all&#x27;).to_string())</span></span><br><span class="line"><span class="comment">## 删除空值的行</span></span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df[<span class="string">&#x27;age&#x27;</span>].isnull())</span><br><span class="line">new_df=df.dropna(subset=[<span class="string">&#x27;age&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(new_df.describe().to_string())</span><br><span class="line"><span class="built_in">print</span>(new_df[<span class="string">&#x27;age&#x27;</span>].isnull().head())</span><br></pre></td></tr></table></figure><h3 id="填充空值"><a href="#填充空值" class="headerlink" title="填充空值"></a>填充空值</h3><blockquote><p>语法结构</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DataFrame.fillna(value=<span class="literal">None</span>, method=<span class="literal">None</span>, axis=<span class="literal">None</span>, inplace=<span class="literal">False</span>, limit=<span class="literal">None</span>, downcast=<span class="literal">None</span>, **kwargs)</span><br></pre></td></tr></table></figure><blockquote><p>参数详解</p></blockquote><ul><li>value: 变量、字典、Series，DataFrame；用于填充填充缺失值，或指定为每个索引（对于Series）或列（对于DataFrame）的缺失值使用字典&#x2F;Series&#x2F;DataFrame的值填充</li><li>method: {‘backfill’, ‘bfill’, ‘pad’, ‘ffill’, None}, 默认None， pad&#x2F;ffill表示向后填充空值，backfill&#x2F;bfill表示向前填充空值</li><li>axis: {0 or ‘index’, 1 or ‘columns’}</li><li>inplace: boolean, 默认为False。若为True， 在原地填满</li><li>limit: int, 默认为None， 如果指定了方法， 则这是连续的NaN值的前向&#x2F;后向填充的最大数量</li><li>downcast: dict, 默认None， 字典中的项为类型向下转换规则。</li></ul><blockquote><p>案例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="built_in">round</span>(df[<span class="string">&#x27;age&#x27;</span>].mean(),<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line">df[<span class="string">&#x27;age&#x27;</span>].fillna(x,inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(df.head().to_string())</span><br></pre></td></tr></table></figure><h3 id="转换列的日期格式"><a href="#转换列的日期格式" class="headerlink" title="转换列的日期格式"></a><a href="https://www.delftstack.com/zh/howto/python-pandas/how-to-convert-dataframe-column-to-datetime-in-pandas/#:~:text=%E5%A6%82%E4%BD%95%E5%9C%A8%20Pandas%20%E4%B8%AD%E5%B0%86%20DataFrame%20%E5%88%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%201%20Pandas%20to_datetime,%E6%96%B9%E6%B3%95%E5%B0%86%20DataFrame%20%E5%88%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%20Datetime%203%20%E5%B0%86%20DataFrame%20%E5%88%97%E8%BD%AC%E6%8D%A2%E4%B8%BA%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E6%96%B9%E6%B3%95%E7%9A%84%E6%80%A7%E8%83%BD%E6%AF%94%E8%BE%83">转换列的日期格式</a></h3><blockquote><p>语法格式</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pandas.to_datetime(param, <span class="built_in">format</span>=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">参数详解</p><p><a href="https://blog.csdn.net/qq_39290225/article/details/98313743">to_datetime的参数详解</a></p></div><blockquote><p>案例</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 处理日期(字符转换为日期)</span></span><br><span class="line">data=&#123;</span><br><span class="line">  <span class="string">&#x27;Date&#x27;</span>:[<span class="string">&#x27;2023/3/1&#x27;</span>,<span class="string">&#x27;2022/1/1&#x27;</span>],</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span>:[<span class="number">50</span>,<span class="number">10</span>]</span><br><span class="line">&#125;</span><br><span class="line">df=pd.DataFrame(data,index=[<span class="string">&#x27;day1&#x27;</span>,<span class="string">&#x27;day2&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br><span class="line">df[<span class="string">&#x27;Date&#x27;</span>]=pd.to_datetime(df[<span class="string">&#x27;Date&#x27;</span>])</span><br><span class="line"><span class="built_in">print</span>(df)</span><br></pre></td></tr></table></figure><h2 id="删除空行后重置索引"><a href="#删除空行后重置索引" class="headerlink" title="删除空行后重置索引"></a><a href="https://cloud.tencent.com/developer/article/2230126#:~:text=%E3%80%90%E6%8A%80%E5%B7%A7%E3%80%91Pandas%E4%BD%BF%E7%94%A8drop%E5%90%8E%E4%BD%BF%E7%94%A8reset_index%E9%87%8D%E7%BD%AE%E7%B4%A2%E6%80%A7%20%E6%88%91%E4%BB%AC%E5%9C%A8%E4%BD%BF%E7%94%A8%20drop,%E5%87%BD%E6%95%B0%E5%88%A0%E9%99%A4%E6%8C%87%E5%AE%9A%E5%80%BC%E7%9A%84%E8%A1%8C%E5%90%8E%EF%BC%8C%20%E5%8E%9F%E6%9D%A5%E7%9A%84%E7%B4%A2%E5%BC%95%E8%BF%98%E6%98%AF%E4%BF%9D%E7%95%99%E7%9A%84%20%EF%BC%81">删除空行后重置索引</a></h2><blockquote><p>reset_index()函数</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df.reset_index(drop=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">箱线图Keyvalue:0报错</p><p>原因可能就是去除了空值，去除了index=0的元素，这个时候将索引重置就可以解决问题</p></div><h1 id="分组汇总"><a href="#分组汇总" class="headerlink" title="分组汇总"></a><a href="https://blog.csdn.net/FGH333xwy/article/details/110672407">分组汇总</a></h1><blockquote><p>groupby()核心用法总结</p></blockquote><ol><li>根据DataFrame本身的某一列或多列内容进行分组聚合:</li></ol><p>（a）若按某一列聚合，则新DataFrame将根据某一列的内容分为不同的维度进行拆解，同时将同一维度的再进行聚合，<br>（b）若按某多列聚合，则新DataFrame将是多列之间维度的笛卡尔积，即：新DataFrame具有一个层次化索引（由唯一的键对组成），例如：“key1”列，有a和b两个维度，而“key2”有one和two两个维度，则按“key1”列和“key2”聚合之后，新DataFrame将有四个group；<br>（c）通过调用get_group()函数可以返回一个按照分组得到的DataFrame对象，该对象是分组中的一种情况；<br>（d）可以将想要计算的列（可以是单列，也可以是多列）通过索引的方式取出来，然后在取出来这列数据的基础上进行汇总计算。eg：df.groupby(“状态”)[“区”]、df.groupby(“状态”)[[“区”,“省”]]</p><p>注意：groupby默认是在axis&#x3D;0上进行分组的，通过设置axis&#x3D;1，也可以在其他任何轴上进行分组。</p><ol start="2"><li>GroupBy对象结合描述统计方法从各个分组中产生标量值：</li></ol><p>（a）这个标量值可以是平均值、数量、中位数等。GroupBy对象常用的描述性统计方法如下表所示：</p><p><img src="https://lptexas-cub.github.io/img/post/groupby.png"></p><h2 id="普通过滤"><a href="#普通过滤" class="headerlink" title="普通过滤"></a>普通过滤</h2><h2 id="分组过滤"><a href="#分组过滤" class="headerlink" title="分组过滤"></a>分组过滤</h2>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识SpringBoot</title>
      <link href="/posts/3446401948/"/>
      <url>/posts/3446401948/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-注解有哪些？"><a href="#Spring-Boot-注解有哪些？" class="headerlink" title="Spring Boot 注解有哪些？"></a>Spring Boot 注解有哪些？</h1><ol><li>了解常见的注解以及使用的层级</li><li>了解注解的含义</li></ol><h1 id="Spring-Boot项目的层级关系以及相关注解"><a href="#Spring-Boot项目的层级关系以及相关注解" class="headerlink" title="Spring Boot项目的层级关系以及相关注解"></a>Spring Boot项目的层级关系以及相关注解</h1><h2 id="entity层"><a href="#entity层" class="headerlink" title="entity层"></a>entity层</h2><p>entity层为数据库实体层，一般一个实体类对应数据库中的一张数据表，类中的属性与数据表中的字段一 一对应。默认情况下，类名即为数据表的表名，属性名则是对应字段名，字段类型也与变量的类型相对应。</p><h3 id="Entity"><a href="#Entity" class="headerlink" title="@Entity"></a>@Entity</h3><p>该注解用于表明这个类是一个实体类，会给他生成一张对应的数据表。</p><h3 id="Table-name-x3D-“table-name”"><a href="#Table-name-x3D-“table-name”" class="headerlink" title="@Table(name &#x3D; “table_name”)"></a>@Table(name &#x3D; “table_name”)</h3><p>该注解主要用于修改表名，name的值就是修改的数据表的名称。</p><h3 id="Id"><a href="#Id" class="headerlink" title="@Id"></a>@Id</h3><p>该注解用于声明主键，标在哪个属性上面对应的哪个字段就是主键</p><h3 id="GeneratedValue-strategy-x3D-GenerationType-IDENTITY"><a href="#GeneratedValue-strategy-x3D-GenerationType-IDENTITY" class="headerlink" title="@GeneratedValue(strategy &#x3D; GenerationType.IDENTITY)"></a>@GeneratedValue(strategy &#x3D; GenerationType.IDENTITY)</h3><p>该注解的strategy属性主要用于设置主键的增长方式，IDENTITY表示主键由数据库自己生成，从1开始单调递增。</p><h3 id="Column-name-x3D-“column-name”"><a href="#Column-name-x3D-“column-name”" class="headerlink" title="@Column(name &#x3D; “column_name”)"></a>@Column(name &#x3D; “column_name”)</h3><p>该注解的name属性用于更改数据表的列名，如果不想用默认的就用这个属性改吧<br>@ManyToMany(cascade &#x3D; CascadeType.ALL, fetch &#x3D; FetchType.LAZY)<br>这个注解得上是本项目得核心了，它声明了实体之间的多对多关系，使两张数据表关联关联起来，一般是通过生成一张映射表来实现这种映射关系。关于上面的cascade属性和fetch属性，有兴趣的读者可以查资料了解。</p><h3 id="JoinTable"><a href="#JoinTable" class="headerlink" title="@JoinTable"></a>@JoinTable</h3><p>这个注解是配套@ManyToMany使用的，一般在多对多关系的维护端标注，用于生成上面提到的映射表。一般该注解常用三个属性：name属性表示生成的数据表的名称，joinColumns属性表示关系维护端的主键，inverseJoinColumns则表示关系被维护端的主键。关于嵌套在里面的@JoinColumn注解，在这里主要用于配置映射表的外键，一般有两个属性：name用于配置外键在映射表中的名称，referencedColumnName 用于表明外键在原表中的字段名称。</p><h3 id="JsonBackReference"><a href="#JsonBackReference" class="headerlink" title="@JsonBackReference"></a>@JsonBackReference</h3><p>关于这个注解，建议先去掉试试然后再加上，对比一下效果。它主要可以使标注属性避免被json序列化，进而避免多对多关系的查询中出现死循环的情况。但是加上了这注解后，就不能进行反向查询了（也就是说不能利用权限名查询拥有这个权限的角色了）</p><h3 id="Data"><a href="#Data" class="headerlink" title="@Data"></a>@Data</h3><p>lombok包提供的工具类，可以自动生成setter和getter等方法。</p><p>在eclipse中使用lombok需要安装lombok插件。<a href="https://projectlombok.org/download">-&gt;官网&lt;-</a></p><h3 id="ConfigurationProperties-prefix-x3D-“键的上一级前缀”"><a href="#ConfigurationProperties-prefix-x3D-“键的上一级前缀”" class="headerlink" title="@ConfigurationProperties(prefix&#x3D;“键的上一级前缀”)"></a>@ConfigurationProperties(prefix&#x3D;“键的上一级前缀”)</h3><p>用于注入配置文件中设置的值。</p><h3 id="EnableConfigurationProperties-Xxx-class"><a href="#EnableConfigurationProperties-Xxx-class" class="headerlink" title="@EnableConfigurationProperties(Xxx.class)"></a>@EnableConfigurationProperties(Xxx.class)</h3><p>与上面的注解相关，表示启用配置属性的注入，用在自定义Bean注入属性。需要注意的是使用了该注解就不需要在自定义bean的类中使用注入Bean的注解了，如：@Component</p><h2 id="repository"><a href="#repository" class="headerlink" title="repository"></a>repository</h2><p>也可以称dao层，或mapper层，是数据持久层。主要负责访问数据库，向数据库发送<a href="https://so.csdn.net/so/search?q=SQL%E8%AF%AD%E5%8F%A5&spm=1001.2101.3001.7020">SQL语句</a>，完成基础的增删查改任务。主要通过定义继承JpaRepository类的接口来实现，&lt;&gt;中填写的是实体类的名称和该实体主键的变量类型。</p><h2 id="service"><a href="#service" class="headerlink" title="service"></a>service</h2><p>service层是业务逻辑层，<strong>主要通过调用持久层的接口，接收持久层返回的数据，完成项目的基本功能设计</strong>。</p><h2 id="controller"><a href="#controller" class="headerlink" title="controller"></a>controller</h2><p>controller层是控制层，其功能为请求和响应控制，负责前后端交互，接受前端请求，调用service层，接收service层返回的数据，最后返回具体的页面和数据到客户端。</p><h3 id="Autowired"><a href="#Autowired" class="headerlink" title="@Autowired"></a><a href="https://www.w3cschool.cn/wkspring/rw2h1mmj.html">@Autowired</a></h3><p>Spring通过提供@Autowired注解来提供基于注解的自动装配。</p><p>自动装配指的就是使用将 Spring 容器中的 bean 自动的和我们需要这个 bean 的类组装在一起。</p><h3 id="Controller"><a href="#Controller" class="headerlink" title="@Controller"></a>@Controller</h3><p>处理http请求</p><h3 id="RestController"><a href="#RestController" class="headerlink" title="@RestController"></a>@RestController</h3><p>返回json（相当于@ResponseBody配合@Controller）</p><h3 id="RequestMapping"><a href="#RequestMapping" class="headerlink" title="@RequestMapping"></a>@RequestMapping</h3><p>配置url映射（可传入数组，Crtl+P查看）</p><h3 id="PathVariable"><a href="#PathVariable" class="headerlink" title="@PathVariable"></a>@PathVariable</h3><p>获取url中的数据</p><h3 id="RequestParam"><a href="#RequestParam" class="headerlink" title="@RequestParam"></a>@RequestParam</h3><p>获取请求参数的值</p><h2 id="其它注解"><a href="#其它注解" class="headerlink" title="其它注解"></a>其它注解</h2><h3 id="Component"><a href="#Component" class="headerlink" title="@Component"></a><a href="https://blog.csdn.net/Thinkingcao/article/details/71171222">@Component</a></h3><p><strong>标注一个类为Spring容器的Bean，（把普通pojo实例化到spring容器中，相当于配置文件中的<bean id="" class=""/>）</strong></p><h1 id="Spring-Boot-应用属性"><a href="#Spring-Boot-应用属性" class="headerlink" title="Spring Boot 应用属性"></a><a href="https://www.cainiaojc.com/springboot/springboot-properties.html">Spring Boot 应用属性</a></h1><h1 id="SpringBoot-Starters"><a href="#SpringBoot-Starters" class="headerlink" title="SpringBoot Starters"></a><a href="https://www.cainiaojc.com/springboot/springboot-starters.html">SpringBoot Starters</a></h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.eclipse.persistence&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;org.eclipse.persistence.jpa&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;<span class="number">2.6</span><span class="number">.0</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20230409120404847.png" alt="image-20230409120404847"></p><h1 id="基于SpringBoot的SSMP整合案例"><a href="#基于SpringBoot的SSMP整合案例" class="headerlink" title="基于SpringBoot的SSMP整合案例"></a>基于SpringBoot的SSMP整合案例</h1><p><img src="https://lptexas-cub.github.io/img/post/image-20230410162800804.png" alt="image-20230410162800804"></p><blockquote><p>图书管理系统</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20230410162901461.png" alt="image-20230410162901461"></p><blockquote><p>Mybatis plus提供的快速开发方案</p></blockquote><ul><li>Dao层继承<code>BaseMapper类</code>，可以实现快速通用数据层方法。</li><li>Servcie层实现<code>IService&lt;T&gt;接口</code>并继承<code>ServiceImpl&lt;M,T&gt;类</code>，可以实现快速通用业务层方法。</li></ul><p><img src="https://lptexas-cub.github.io/img/post/image-20230411194259152.png" alt="image-20230411194259152"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20230411181216577.png" alt="image-20230411181216577"></p><h1 id="Bean属性校验"><a href="#Bean属性校验" class="headerlink" title="Bean属性校验"></a>Bean属性校验</h1><blockquote><p>JSR303规范</p></blockquote><h2 id="导入坐标"><a href="#导入坐标" class="headerlink" title="导入坐标"></a>导入坐标</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jakarta.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jakarta.validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>@Validated 在对应类上使用，用于开启数据格式校验</p><p>具体的校验规则，用于字段的注解：</p><p>@Max() </p><p>@Min()…</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230417155314528.png" alt="image-20230417155314528"></p><div class="admonition info"><p class="admonition-title">补充 使用yaml配置的数字格式问题</p><p>yml格式的文件中配置整数，支持二进制、八进制、十六进制的书写方式。如果单纯使用十进制以字符串形式接受的话，建议使用<code>双引号括起来</code>！</p></div><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>加载测试临时属性应用于小范围的测试环境</p><h2 id="属性测试"><a href="#属性测试" class="headerlink" title="属性测试"></a>属性测试</h2><p>@SpringBootTest注解中可以使用<code>properties参数</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest(properties = &#123;&quot;test.prop=test1&quot;&#125;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringBootProjectApplicationTests</span> &#123;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;test.prop&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String prop;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testProperties</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;prop = &quot;</span>+ prop);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以使用<code>args参数</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest(args = &#123;&quot;--test.prop=test2&quot;&#125;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringBootProjectApplicationTests</span> &#123;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;test.prop&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String prop;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testProperties</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;prop = &quot;</span>+ prop);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>!!! note 优先级关系<br>   args命令行参数形式&gt;properties临时属性配置&gt;配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest(properties = &#123;&quot;test.prop=test1&quot;&#125;, args = &#123;&quot;--test.prop=test2&quot;&#125;)</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SpringBootProjectApplicationTests</span> &#123;</span><br><span class="line"><span class="meta">@Value(&quot;$&#123;test.prop&#125;&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String prop;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testProperties</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;prop = &quot;</span>+ prop);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//结果为 prop = test2</span></span><br></pre></td></tr></table></figure><h2 id="外部bean测试"><a href="#外部bean测试" class="headerlink" title="外部bean测试"></a>外部bean测试</h2><p>在测试中需要使用额外的Bean，这时如何进行测试？</p><p>在测试目录下新建一个需要导入的配置类，类中加载需要使用的第三方Bean。（此处为了方便直接使用String作为外部Bean）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lptexas.config;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MsgConfig</span> &#123;</span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">msg</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;msg config.&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>进行测试</p></blockquote><p>@Import注解，将新建的第三方Bean配置类导入。（如果配置类运行在测试程序的<code>同目录下</code>或<code>子目录下</code>可以省略这个注解也生效）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@Import(MsgConfig.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestMsgConfig</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> String msg;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testMsg</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;msg = &quot;</span>+msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Web环境测试"><a href="#Web环境测试" class="headerlink" title="Web环境测试"></a>Web环境测试</h2><h3 id="导入坐标-1"><a href="#导入坐标-1" class="headerlink" title="导入坐标"></a>导入坐标</h3><p>直接修改原本的spring-boot-starter就行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="准备一个Controller"><a href="#准备一个Controller" class="headerlink" title="准备一个Controller"></a>准备一个Controller</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lptexas.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/books&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Get Mapping Running...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;Get Mapping Running&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="启动环境模拟"><a href="#启动环境模拟" class="headerlink" title="启动环境模拟"></a>启动环境模拟</h3><p>@SpringBootTest提供webEnvironment参数用于配置web环境</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest(webEnvironment = WebEnvironment.DEFINED_PORT)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestWeb</span> &#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20230417170616697.png" alt="image-20230417170616697"></p><h3 id="启动虚拟MVC调用"><a href="#启动虚拟MVC调用" class="headerlink" title="启动虚拟MVC调用"></a>启动虚拟MVC调用</h3><p>@AutoConfigureMockMvc 开启虚拟MVC调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootTest(webEnvironment = WebEnvironment.DEFINED_PORT)</span></span><br><span class="line"><span class="meta">@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)</span></span><br><span class="line"><span class="comment">//开启虚拟MVC调用</span></span><br><span class="line"><span class="meta">@AutoConfigureMockMvc</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestWeb</span> &#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="meta">@Autowired</span> MockMvc mvc)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">//创建虚拟请求，访问&quot;/books&quot;</span></span><br><span class="line">MockHttpServletRequestBuilder builder=MockMvcRequestBuilders.get(<span class="string">&quot;/books&quot;</span>);</span><br><span class="line"><span class="comment">//执行对应请求</span></span><br><span class="line">mvc.perform(builder);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="虚拟请求匹配"><a href="#虚拟请求匹配" class="headerlink" title="虚拟请求匹配"></a>虚拟请求匹配</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootTest(webEnvironment = WebEnvironment.DEFINED_PORT)</span></span><br><span class="line"><span class="meta">@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)</span></span><br><span class="line"><span class="comment">//开启虚拟MVC调用</span></span><br><span class="line"><span class="meta">@AutoConfigureMockMvc</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestWeb</span> &#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="meta">@Autowired</span> MockMvc mvc)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">//创建虚拟请求，访问&quot;/books&quot;</span></span><br><span class="line">MockHttpServletRequestBuilder builder=MockMvcRequestBuilders.get(<span class="string">&quot;/books&quot;</span>);</span><br><span class="line"><span class="comment">//执行对应请求</span></span><br><span class="line"><span class="type">ResultActions</span> <span class="variable">action</span> <span class="operator">=</span> mvc.perform(builder);</span><br><span class="line">        </span><br><span class="line"><span class="comment">//虚拟请求状态匹配</span></span><br><span class="line"><span class="comment">//1.定义执行状态匹配器</span></span><br><span class="line">StatusResultMatchers status=MockMvcResultMatchers.status();</span><br><span class="line"><span class="comment">//2.定义预期执行状态</span></span><br><span class="line">ResultMatcher ok=status.isOk();</span><br><span class="line"><span class="comment">//3.使用真是执行结果与预期执行结果进行比对</span></span><br><span class="line">action.andExpect(ok);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="虚拟请求内容匹配"><a href="#虚拟请求内容匹配" class="headerlink" title="虚拟请求内容匹配"></a>虚拟请求内容匹配</h3><h4 id="String型的返回值（实际不会用到）"><a href="#String型的返回值（实际不会用到）" class="headerlink" title="String型的返回值（实际不会用到）"></a>String型的返回值（实际不会用到）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootTest(webEnvironment = WebEnvironment.DEFINED_PORT)</span></span><br><span class="line"><span class="meta">@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)</span></span><br><span class="line"><span class="comment">//开启虚拟MVC调用</span></span><br><span class="line"><span class="meta">@AutoConfigureMockMvc</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestWeb</span> &#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="meta">@Autowired</span> MockMvc mvc)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">//创建虚拟请求，访问&quot;/books&quot;</span></span><br><span class="line">MockHttpServletRequestBuilder builder=MockMvcRequestBuilders.get(<span class="string">&quot;/books&quot;</span>);</span><br><span class="line"><span class="comment">//执行对应请求</span></span><br><span class="line"><span class="type">ResultActions</span> <span class="variable">action</span> <span class="operator">=</span> mvc.perform(builder);</span><br><span class="line">        </span><br><span class="line"><span class="comment">//虚拟请求内容匹配</span></span><br><span class="line"><span class="comment">//1.定义执行状态匹配器</span></span><br><span class="line">ContentResultMatchers content=MockMvcResultMatchers.content();</span><br><span class="line"><span class="comment">//2.定义预期执行状态</span></span><br><span class="line">ResultMatcher result=content.string(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="comment">//3.使用真是执行结果与预期执行结果进行比对</span></span><br><span class="line">action.andExpect(result);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Json格式的内容"><a href="#Json格式的内容" class="headerlink" title="Json格式的内容"></a>Json格式的内容</h4><p>准备一个Book实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Book</span> &#123;</span><br><span class="line"><span class="keyword">private</span> Integer id;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> String type;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改一下Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/books&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookController</span> &#123;</span><br><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="keyword">public</span> Book <span class="title function_">getById</span><span class="params">(Book book)</span> &#123;</span><br><span class="line">book.setId(<span class="number">1</span>);</span><br><span class="line">book.setName(<span class="string">&quot;TestBook&quot;</span>);</span><br><span class="line">book.setType(<span class="string">&quot;TestType&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> book;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单元测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootTest(webEnvironment = WebEnvironment.DEFINED_PORT)</span></span><br><span class="line"><span class="meta">@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT)</span></span><br><span class="line"><span class="comment">//开启虚拟MVC调用</span></span><br><span class="line"><span class="meta">@AutoConfigureMockMvc</span> </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestWeb</span> &#123;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="meta">@Autowired</span> MockMvc mvc)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">//创建虚拟请求，访问&quot;/books&quot;</span></span><br><span class="line">MockHttpServletRequestBuilder builder=MockMvcRequestBuilders.get(<span class="string">&quot;/books&quot;</span>);</span><br><span class="line"><span class="comment">//执行对应请求</span></span><br><span class="line"><span class="type">ResultActions</span> <span class="variable">action</span> <span class="operator">=</span> mvc.perform(builder);</span><br><span class="line">        </span><br><span class="line"><span class="comment">//虚拟请求内容匹配(Json)</span></span><br><span class="line"><span class="comment">//1.定义执行状态匹配器</span></span><br><span class="line">ContentResultMatchers ctt=MockMvcResultMatchers.content();</span><br><span class="line"><span class="comment">//2.定义预期执行状态</span></span><br><span class="line">ResultMatcher res=ctt.json(<span class="string">&quot;&#123;\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;TestBook\&quot;,\&quot;type\&quot;:\&quot;TestType\&quot;&#125;&quot;</span>);</span><br><span class="line"><span class="comment">//3.使用真是执行结果与预期执行结果进行比对</span></span><br><span class="line">action.andExpect(res);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="匹配Header中数据"><a href="#匹配Header中数据" class="headerlink" title="匹配Header中数据"></a>匹配Header中数据</h4><p>如果要测试错误的结果，需要修改Controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(<span class="string">&quot;Get Mapping Running...&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;TestWeb&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单元测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testHeaderType</span><span class="params">(<span class="meta">@Autowired</span> MockMvc mvc)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"><span class="comment">//创建虚拟请求，访问&quot;/books&quot;</span></span><br><span class="line">       MockHttpServletRequestBuilder builder=MockMvcRequestBuilders.get(<span class="string">&quot;/books&quot;</span>);</span><br><span class="line"><span class="comment">//执行对应请求</span></span><br><span class="line"><span class="type">ResultActions</span> <span class="variable">action</span> <span class="operator">=</span> mvc.perform(builder);</span><br><span class="line">       </span><br><span class="line"><span class="comment">//虚拟请求头部匹配</span></span><br><span class="line"><span class="comment">//1.定义执行状态匹配器</span></span><br><span class="line">HeaderResultMatchers header=MockMvcResultMatchers.header();</span><br><span class="line"><span class="comment">//2.定义预期执行状态</span></span><br><span class="line">ResultMatcher res=header.string(<span class="string">&quot;content-type&quot;</span>, <span class="string">&quot;application/json&quot;</span>);</span><br><span class="line"><span class="comment">//3.使用真是执行结果与预期执行结果进行比对</span></span><br><span class="line">action.andExpect(res);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="业务层测试数据回滚"><a href="#业务层测试数据回滚" class="headerlink" title="业务层测试数据回滚"></a>业务层测试数据回滚</h2><p>即，不希望测试的时候在数据库中产生数据。</p><h3 id="模拟连接数据库的环境"><a href="#模拟连接数据库的环境" class="headerlink" title="模拟连接数据库的环境"></a>模拟连接数据库的环境</h3><p>导入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.8<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.yml 主配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">druid:</span></span><br><span class="line">      <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">      <span class="attr">url:</span> <span class="string">jdbc:mysql://192.168.31.5:3306/managerSys</span></span><br><span class="line">      <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">      <span class="attr">password:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure><p>Book实体类（用上面创建的那个即可）</p><p>BookDao.java 数据层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Book&gt;&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookService.java 服务层接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"><span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Book book)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookService.java 服务层实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">BookService</span> &#123;</span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BookDao bookDao;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">save</span><span class="params">(Book book)</span> &#123;</span><br><span class="line"><span class="keyword">return</span> bookDao.insert(book) &gt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BookController.java 控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">BookDao</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;Book&gt;&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="为测试用例添加事务"><a href="#为测试用例添加事务" class="headerlink" title="为测试用例添加事务"></a>为测试用例添加事务</h3><p>@Transactional注解 SpringBoot会对用力对应的事务提交操作进行回滚</p><p>@Rollback(<strong>true</strong>) 可以设置是否穷回滚，默认为true</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="meta">@Rollback(false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestService</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BookService bookService;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testSave</span><span class="params">()</span> &#123;</span><br><span class="line">Book book=<span class="keyword">new</span> <span class="title class_">Book</span>();</span><br><span class="line">book.setName(<span class="string">&quot;TestBook&quot;</span>);</span><br><span class="line">book.setType(<span class="string">&quot;TestType&quot;</span>);</span><br><span class="line">book.setDescription(<span class="string">&quot;TestDescription&quot;</span>);</span><br><span class="line">bookService.save(book);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试用例使用随机数据"><a href="#测试用例使用随机数据" class="headerlink" title="测试用例使用随机数据"></a>测试用例使用随机数据</h2><p>application.yaml 配置文件</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230417205245002.png" alt="image-20230417205245002"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">test:</span></span><br><span class="line">  <span class="attr">book:</span></span><br><span class="line">     <span class="attr">id:</span> <span class="string">$&#123;random.int(100)&#125;</span></span><br><span class="line">     <span class="attr">type:</span> <span class="string">$&#123;random.int(10,20)&#125;</span></span><br><span class="line">     <span class="attr">uuid:</span> <span class="string">$&#123;random.uuid&#125;</span></span><br><span class="line">     <span class="attr">name:</span> <span class="string">$&#123;random.value&#125;</span></span><br><span class="line">     <span class="attr">publishTime:</span> <span class="string">$&#123;random.long&#125;</span></span><br></pre></td></tr></table></figure><p>需要创建一个数据模型与之对应</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;test.book&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BookCase</span> &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> type;</span><br><span class="line"><span class="keyword">private</span> String uuid;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">long</span> publishTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单元测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BookCase bookCase;</span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">testBookCase</span><span class="params">()</span> &#123;</span><br><span class="line">System.out.println(bookCase);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> LinuxDeploy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql安装以及配置</title>
      <link href="/posts/1508968307/"/>
      <url>/posts/1508968307/</url>
      
        <content type="html"><![CDATA[<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linuxdeploy中需要为用户添加特权</span></span><br><span class="line">usermod -a -G aid_inet,aid_net_raw mysql</span><br><span class="line">usermod -a -G aid_inet,aid_net_raw root</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mysqld</span></span><br><span class="line">service mysql start </span><br></pre></td></tr></table></figure><h1 id="允许所有主机登录"><a href="#允许所有主机登录" class="headerlink" title="允许所有主机登录"></a>允许所有主机登录</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">USE mysql;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">改表法</span></span><br><span class="line">UPDATE user SET host=&#x27;%&#x27; WHERE user=&#x27;root&#x27;;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">授权法</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED BY <span class="string">&#x27;mypassword&#x27;</span> WITH GRANT OPTION;</span></span><br></pre></td></tr></table></figure><h1 id="修改登录授权方式"><a href="#修改登录授权方式" class="headerlink" title="修改登录授权方式"></a>修改登录授权方式</h1><p><a href="https://blog.csdn.net/cruiserblog/article/details/106934570">MySQL8.0的版本更改了root账户的授权方式，默认是auth_socket。也就是说需要通过 Unix socket 文件来验证所有连接到localhost的用户，不能使用提供密码的方式了。我们需要通过下面的指令更一下授权方式。</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改配置文件</span></span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">user=mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">validate_password.policy=LOW</span></span><br><span class="line">default_authentication_plugin=mysql_native_password</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ALTER USER <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;可访问root的主机&#x27;</span> IDENTIFIED WITH mysql_native_password BY <span class="string">&#x27;root的密码&#x27;</span>;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置密码</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h1 id="重启mysql"><a href="#重启mysql" class="headerlink" title="重启mysql"></a>重启mysql</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Mysql </tag>
            
            <tag> LinuxDeploy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zerotier部署planet根节点，提高速度及稳定性</title>
      <link href="/posts/2649205773/"/>
      <url>/posts/2649205773/</url>
      
        <content type="html"><![CDATA[<div class="admonition info"><p class="admonition-title">参阅</p><p><strong><a href="https://gitee.com/opopop880">opopop880</a></strong>.<a href="https://blog.csdn.net/opopop880/article/details/122880479">一键搭建zerotier planet服务器脚本</a>.[1]</p></div><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><ul><li>需要具有公网ip的机器，开放3443、9993端口</li></ul><h1 id="安装ztncui可视化控制器"><a href="#安装ztncui可视化控制器" class="headerlink" title="安装ztncui可视化控制器"></a>安装ztncui可视化控制器</h1><blockquote><p>这里使用<a href="https://gitee.com/opopop880/zerotier_planet/blob/master/zerotier_planet.sh">火木木制作</a>大佬制作的脚本</p></blockquote><p><a href="https://gitee.com/opopop880/zerotier_planet/blob/master/zerotier_planet.sh">centos</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/opopop880/zerotier_planet/raw/master/zerotier_planet.sh &amp;&amp; chmod +x zerotier_planet.sh &amp;&amp; bash zerotier_planet.sh</span><br></pre></td></tr></table></figure><p><a href="https://gitee.com/opopop880/zerotier_planet/blob/master/zerotier_planet_debain.sh">debain</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://gitee.com/opopop880/zerotier_planet/raw/master/zerotier_planet_debain.sh &amp;&amp; chmod +x zerotier_planet_debain.sh &amp;&amp; bash zerotier_planet_debain.sh</span><br></pre></td></tr></table></figure><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><blockquote><p>ztncui控制器的使用方法类似zerotier官网。请自行研究，很简单。</p></blockquote><h2 id="首先，添加网络"><a href="#首先，添加网络" class="headerlink" title="首先，添加网络"></a>首先，添加网络</h2><p>设置一个网络的名称。</p><h2 id="然后，嫌麻烦可直接点击简易安装"><a href="#然后，嫌麻烦可直接点击简易安装" class="headerlink" title="然后，嫌麻烦可直接点击简易安装"></a>然后，嫌麻烦可直接点击简易安装</h2>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zerotier </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible学习笔记Part5</title>
      <link href="/posts/632481897/"/>
      <url>/posts/632481897/</url>
      
        <content type="html"><![CDATA[<h1 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h1><blockquote><p>迭代：with_items</p></blockquote><h2 id="标准循环"><a href="#标准循环" class="headerlink" title="标准循环"></a>标准循环</h2><blockquote><p>以创建多个文件和用户为例</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">centos</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">touch</span> <span class="string">some</span> <span class="string">files.</span></span><br><span class="line">      <span class="attr">file:</span> <span class="string">name=/data/&#123;&#123;</span> <span class="string">item</span> <span class="string">&#125;&#125;</span> <span class="string">state=touch</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file1</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">file2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">add</span> <span class="string">several</span> <span class="string">users.</span></span><br><span class="line">      <span class="attr">user:</span> <span class="string">name=&#123;&#123;</span> <span class="string">item.usrname</span> <span class="string">&#125;&#125;</span> <span class="string">groups=&#123;&#123;</span> <span class="string">item.groups</span> <span class="string">&#125;&#125;</span> <span class="string">state=present</span></span><br><span class="line">      <span class="attr">with_items:</span></span><br><span class="line">       <span class="bullet">-</span> &#123; <span class="attr">usrname:</span> <span class="string">&#x27;user1&#x27;</span>,<span class="attr">groups:</span> <span class="string">&#x27;root&#x27;</span>&#125;</span><br><span class="line">       <span class="bullet">-</span> &#123; <span class="attr">usrname:</span> <span class="string">&#x27;user2&#x27;</span>,<span class="attr">groups:</span> <span class="string">&#x27;root&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h2 id="嵌套循环"><a href="#嵌套循环" class="headerlink" title="嵌套循环"></a><a href="http://ansible.com.cn/docs/playbooks_loops.html#id19">嵌套循环</a></h2><p>循环也可以嵌套:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- name: give<span class="built_in"> users </span>access <span class="keyword">to</span> multiple databases</span><br><span class="line">  mysql_user: name=&#123;&#123; item[0] &#125;&#125; priv=&#123;&#123; item[1] &#125;&#125;.*:ALL <span class="attribute">append_privs</span>=<span class="literal">yes</span> <span class="attribute">password</span>=foo</span><br><span class="line">  with_nested:</span><br><span class="line">    - [ <span class="string">&#x27;alice&#x27;</span>, <span class="string">&#x27;bob&#x27;</span> ]</span><br><span class="line">    - [ <span class="string">&#x27;clientdb&#x27;</span>, <span class="string">&#x27;employeedb&#x27;</span>, <span class="string">&#x27;providerdb&#x27;</span> ]</span><br></pre></td></tr></table></figure><p>和以上介绍的’with_items’一样,你也可以使用预定义变量.:</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">- name: here, &#x27;users&#x27; contains the above list of employees</span></span><br><span class="line"><span class="language-xml">  mysql_user: name=</span><span class="template-variable">&#123;&#123; <span class="name">item</span>[0] &#125;&#125;</span><span class="language-xml"> priv=</span><span class="template-variable">&#123;&#123; <span class="name">item</span>[1] &#125;&#125;</span><span class="language-xml">.*:ALL append_privs=yes password=foo</span></span><br><span class="line"><span class="language-xml">  with_nested:</span></span><br><span class="line"><span class="language-xml">    - &quot;</span><span class="template-variable">&#123;&#123;<span class="name">users</span>&#125;&#125;</span><span class="language-xml">&quot;</span></span><br><span class="line"><span class="language-xml">    - [ &#x27;clientdb&#x27;, &#x27;employeedb&#x27;, &#x27;providerdb&#x27; ]</span></span><br></pre></td></tr></table></figure><h2 id="Playbook中template-for-if"><a href="#Playbook中template-for-if" class="headerlink" title="Playbook中template for if"></a>Playbook中template for if</h2><blockquote><p>for循环和if条件判断的语法格式</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for x in list %&#125;</span><br><span class="line">expression</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% if bool %&#125;</span><br><span class="line">expression</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>案例</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">centos</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">vars:</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">81</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">82</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">conf</span></span><br><span class="line">      <span class="attr">template:</span> <span class="string">src=for1.conf.j2</span> <span class="string">dest=/data/for1.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for port in ports %&#125;</span><br><span class="line">server&#123;</span><br><span class="line">  listen &#123;&#123; port &#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><blockquote><p>补充：yaml中vars变量还可以采用列表嵌套字典的方式，定义更多的键值对。</p></blockquote><h1 id="role"><a href="#role" class="headerlink" title="role"></a><a href="http://ansible.com.cn/docs/playbooks_roles.html?highlight=role">role</a></h1><blockquote><p><strong>Role</strong>s 的概念来自于这样的想法：通过 include 包含文件并将它们组合在一起，组织成一个简洁、可重用的抽象对象。这种方式可使你将注意力更多地放在大局上，只有在需要时才去深入了解细节。</p></blockquote><ul><li>role提高了playbook的复用率</li></ul><blockquote><p>role的推荐目录为<code>/etc/ansible/roles</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">roles/</span><br><span class="line">├── httpd</span><br><span class="line">├── memcache</span><br><span class="line">└── mysql</span><br></pre></td></tr></table></figure><p><img src="/"></p><h2 id="场景模拟"><a href="#场景模拟" class="headerlink" title="场景模拟"></a>场景模拟</h2><p><img src="https://lptexas-cub.github.io/img/post/ansible-role-tree.png" alt="ansible-role-tree"></p><p><a href="https://aluopy.cn/ansible/dir-arrange/">目录编排</a></p><p>每个角色，以特定的层级目录结构进行组织。</p><p><strong>roles 目录结构：</strong> playbook.yml roles&#x2F; project&#x2F; tasks&#x2F; files&#x2F; vars&#x2F; templates&#x2F; handlers&#x2F; default&#x2F; meta&#x2F;</p><p><strong>Roles 各目录作用：</strong> <code>roles/project/ </code>：项目名称，有以下子目录</p><ul><li><code>files/</code> ：存放由 copy 或 script 模块等调用的文件</li><li><code>templates/</code>：template 模块查找所需要模板文件的目录</li><li><code>tasks/</code>：定义 task，role 的基本元素，至少应该包含一个名为 main.yml 的文件；其它的文件需要在此文件中通过 include 进行包含</li><li><code>handlers/</code>：至少应该包含一个名为 main.yml 的文件；其它的文件需要在此文件中通过 include 进行包含</li><li><code>vars/</code>：定义变量，至少应该包含一个名为 main.yml 的文件；其它的文件需要在此文件中通过 include 进行包含</li><li><code>meta/</code>：定义当前角色的特殊设定及其依赖关系，至少应该包含一个名为 main.yml 的文件，其它文件需在此文件中通过 include 进行包含</li><li><code>default/</code>：设定默认变量时使用此目录中的 main.yml 文件，比 vars 的优先级低</li></ul><div class="admonition note"><p class="admonition-title">注意</p><p>未来使用playbook调用role时，要将playbook文件放在role平级目录下</p></div><blockquote><p>需要实现一个nginx的role</p></blockquote><p>思路</p><ol><li>创建组nginx</li><li>创建用户nginx</li><li>安装nginx</li><li>使用模板文件，修改配置</li><li>启动service</li></ol><h3 id="首先"><a href="#首先" class="headerlink" title="首先"></a>首先</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /etc/ansible/roles/nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos网络问题解决方案</title>
      <link href="/posts/3307706676/"/>
      <url>/posts/3307706676/</url>
      
        <content type="html"><![CDATA[<h1 id="eth1无ip4地址"><a href="#eth1无ip4地址" class="headerlink" title="eth1无ip4地址"></a>eth1无ip4地址</h1><h2 id="环境："><a href="#环境：" class="headerlink" title="环境："></a>环境：</h2><ul><li>桥接模式</li></ul><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p>手动创建<code>ifcfg-eth1</code>文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ifcfg-eth1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">只需要两项就可以解决</span></span><br><span class="line">DEVICE=eth1</span><br><span class="line">BOOTPROTO=dhcp</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">完整网卡文件内容</span></span><br><span class="line">TYPE=Ethernet</span><br><span class="line">PROXY_METHOD=none</span><br><span class="line">BROWSER_ONLY=no</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">DEFROUTE=yes</span><br><span class="line">IPV4_FAILURE_FATAL=no</span><br><span class="line">IPV6INIT=yes</span><br><span class="line">IPV6_AUTOCONF=yes</span><br><span class="line">IPV6_DEFROUTE=yes</span><br><span class="line">IPV6_FAILURE_FATAL=no</span><br><span class="line">IPV6_ADDR_GEN_MODE=stable-privacy</span><br><span class="line">NAME=ens33</span><br><span class="line">UUID=aa6a1ea8-c991-48aa-9b11-ce366363f592</span><br><span class="line">DEVICE=ens33</span><br><span class="line">ONBOOT=yes</span><br><span class="line">IPADDR=192.168.41.89</span><br><span class="line">PREFIX=24</span><br><span class="line">GATEWAY=192.168.41.2</span><br><span class="line">DNS1=114.114.114.114</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启网络服务</span></span><br><span class="line">systemctl restart NetworkManager</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible学习笔记Part4</title>
      <link href="/posts/1387649279/"/>
      <url>/posts/1387649279/</url>
      
        <content type="html"><![CDATA[<h1 id="Playbook中变量的使用"><a href="#Playbook中变量的使用" class="headerlink" title="Playbook中变量的使用"></a><a href="https://www.cnblogs.com/f-ck-need-u/p/7571974.html#1-1-ansible-facts">Playbook中变量的使用</a></h1><h2 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h2><div class="admonition info"><p class="admonition-title">变量名</p><p>仅字母、数字和下划线组成，且只能以字母开头</p></div><div class="admonition note"><p class="admonition-title">playbook中变量的表示以及赋值</p><p>使用<code>&#123;&#123;&#125;&#125;</code> mustache语法，运行playbook时添加<code>-e 参数</code>为变量赋值。</p></div><ol><li>setup模块</li></ol><blockquote><p>内置的setup模块，用于查询内置变量。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- name: Gathers facts about remote hosts</span><br><span class="line">  setup:</span><br><span class="line">      fact_path:             # Path used for local ansible facts (`*.fact&#x27;) - files in this dir will be run (if executable) and their results be added to  `ansible_local&#x27; facts if a file is not executable it is read. Check notes for Windows options. (from 2.1 on) File/results format can be JSON or INI-format. The default `fact_path&#x27; can be  specified in `ansible.cfg&#x27; for when setup is automatically called as part of `gather_facts&#x27;.</span><br><span class="line">      filter:               # 过滤内容，支持通配符  # If supplied, only return facts that match this shell-style (fnmatch) wildcard.</span><br><span class="line">      gather_subset:         # If supplied, restrict the additional facts collected to the given subset. Possible values: `all&#x27;, `min&#x27;, `hardware&#x27;,  `network&#x27;, `virtual&#x27;, `ohai&#x27;, and `facter&#x27;. Can specify a list of values to specify a larger subset. Values can also be used with an initial `!&#x27; to specify that that specific subset should not be collected.  For instance: `!hardware,!network,!virtual,!ohai,!facter&#x27;. If `!all&#x27; is specified then only the min subset is collected. To avoid collecting even the min subset,  specify `!all,!min&#x27;. To collect only specific facts, use `!all,!min&#x27;, and specify the particular fact subsets. Use the filter parameter if you do not want to display some collected  facts.</span><br><span class="line">     gather_timeout:        # Set the default timeout in seconds for individual fact gathering.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">cmdline</span></span><br><span class="line">ansible host -m setup -a &#x27;filter=&lt;..&gt;&#x27;</span><br></pre></td></tr></table></figure><ol start="2"><li>在playbook中定义变量</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- hosts:</span><br><span class="line">  remote_user:</span><br><span class="line">  vars:</span><br><span class="line">    - var1: #变量值1</span><br><span class="line">    - var2: #变量值2</span><br></pre></td></tr></table></figure><ol start="3"><li>利用命令行指定变量</li></ol><div class="admonition note"><p class="admonition-title">优先级</p><p>命令行的优先级要高于配置文件。</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-playbook -e &#x27;var1=value1 var2=value2&#x27; file.yaml</span><br></pre></td></tr></table></figure><ol start="4"><li>在<code>/etc/ansible/hosts</code>中定义</li></ol><div class="admonition note"><p class="admonition-title">主机清单中定义变量</p><p>分为<code>普通变量</code>和<code>公共（组）变量</code>，普通变量优先级<code>高于</code>公共（组）变量。</p></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">websrvs</span>]</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.10</span> <span class="string">var1=value1</span> <span class="string">var2=value2</span>  <span class="comment">#普通变量</span></span><br><span class="line">[<span class="string">websrvs:vars</span>] <span class="comment">#公共（组）变量</span></span><br><span class="line"><span class="string">var3=value3</span></span><br><span class="line"><span class="string">var1=value0</span> <span class="comment">#由于普通变量优先于公共（组）变量，所以此处不会应用于192.168.1.10主机</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_41056224/article/details/105455329">为了避免混乱，还可以采用文件的形式来定义。</a></p><ol start="5"><li>在外部yaml文件定义变量并在playbook中引用</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -e &quot;var1:value1\nvar2:value2&quot; &gt;&gt; /etc/ansible/vars.yaml</span><br></pre></td></tr></table></figure><blockquote><p>在playbook文件中，使用<code>vars_files</code>引用外部文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">- hosts: </span><br><span class="line">  remote_user:</span><br><span class="line">  vars_files:</span><br><span class="line">    - /path/to/vars.yaml</span><br><span class="line">    </span><br><span class="line">   tasks:</span><br><span class="line">     - name:</span><br><span class="line">        &lt;moduel&gt;:</span><br></pre></td></tr></table></figure><ol start="6"><li>在role文件中定义变量</li></ol><h1 id="模板templates"><a href="#模板templates" class="headerlink" title="模板templates"></a>模板templates</h1><blockquote><p>使用<a href="http://docs.jinkan.org/docs/jinja2/"><code>Jinja2</code>语法</a></p></blockquote><div class="admonition note"><p class="admonition-title">注意</p><p>template模块只能在playbook文件中使用。</p></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">ubuntu</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">       <span class="attr">apt:</span> <span class="string">name=nginx</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">template</span></span><br><span class="line">       <span class="attr">template:</span> <span class="string">src=nginx.conf.j2</span> <span class="string">dest=/etc/nginx/nginx.conf</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">       <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br></pre></td></tr></table></figure><h2 id="在playbook文件使用条件判断"><a href="#在playbook文件使用条件判断" class="headerlink" title="在playbook文件使用条件判断"></a>在playbook文件使用条件判断</h2><blockquote><p>when语句</p><p>在task后添加when子句可用于条件测试</p></blockquote><div class="admonition info"><p class="admonition-title">补充</p><p>when语句还支持Jinja2表达式语法。如：<code>when: var==&quot;value&quot;</code></p></div><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">ubuntu</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">package</span></span><br><span class="line">       <span class="attr">apt:</span> <span class="string">name=nginx</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">template</span></span><br><span class="line">       <span class="attr">template:</span> <span class="string">src=nginx.conf.j2</span> <span class="string">dest=/etc/nginx/nginx.conf</span></span><br><span class="line">       <span class="attr">when:</span> <span class="string">var==&quot;value“</span></span><br><span class="line">     <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">service</span></span><br><span class="line">       <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux安装Ubuntu等操作系统的过程记录</title>
      <link href="/posts/1970583601/"/>
      <url>/posts/1970583601/</url>
      
        <content type="html"><![CDATA[<div class="admonition info"><p class="admonition-title">参阅</p></div><p>​    <a href="https://gitee.com/KudouShinnyan">工藤新喵</a>.<a href="https://gitee.com/KudouShinnyan/ubuntu-in-termux">ubuntu-in-termux</a>.Gitee.[1]<br>​    <a href="https://github.com/xiliuya">xiliuya</a>.<a href="https://github.com/xiliuya/termux-linux/">termux-linux</a>.Github.[2]</p><h1 id="centos安装"><a href="#centos安装" class="headerlink" title="centos安装"></a>centos安装</h1><blockquote><p><a href="https://github.com/xiliuya/termux-linux/releases/download/untagged-d42e22a770f3c95aac45/install_linux.sh">脚本</a>——这个脚本还可以安装很多其它的操作系统，而且下载速度还不赖</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行脚本，根据提示输入对应的系统</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建议装8-stream，目前9还有一些东西不支持</span></span><br><span class="line">bash install_linux.sh</span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">centos</span></span><br><span class="line"><span class="meta prompt_">&gt;</span><span class="language-bash">9</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/qq_22938603/article/details/128109424">换源（9-stream）</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清华源</span></span><br><span class="line">mv /etc/yum.repos.d/centos.repo /etc/yum.repos.d/centos.repo.bk</span><br><span class="line">touch /etc/yum.repos.d/centos.repo</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">手动复制一下</span></span><br><span class="line">[baseos]</span><br><span class="line">name=CentOS Stream $releasever - BaseOS</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mirrorlist=http://mirrorlist.centos.org/?release=<span class="variable">$stream</span>&amp;<span class="built_in">arch</span>=<span class="variable">$basearch</span>&amp;repo=BaseOS&amp;infra=<span class="variable">$infra</span></span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-stream/9-stream/BaseOS/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br><span class="line">[appstream]</span><br><span class="line">name=CentOS Stream $releasever - AppStream</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">mirrorlist=http://mirrorlist.centos.org/?release=<span class="variable">$stream</span>&amp;<span class="built_in">arch</span>=<span class="variable">$basearch</span>&amp;repo=AppStream&amp;infra=<span class="variable">$infra</span></span></span><br><span class="line">baseurl=https://mirrors.ustc.edu.cn/centos-stream/9-stream/AppStream/$basearch/os/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-centosofficial</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/wswind/p/11751829.html">换源（8-stream）</a></p></blockquote><blockquote><p>更新</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache &amp;&amp; yum update -y</span><br></pre></td></tr></table></figure><h1 id="ubuntu安装"><a href="#ubuntu安装" class="headerlink" title="ubuntu安装"></a>ubuntu安装</h1><blockquote><p><a href="https://gitee.com/KudouShinnyan/ubuntu-in-termux">脚本</a></p></blockquote><blockquote><p>换源</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">souces.list</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">See http://help.ubuntu.com/community/UpgradeNotes <span class="keyword">for</span> how to upgrade to</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">newer versions of the distribution.</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Major bug fix updates produced after the final release of the</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># distribution.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># team. Also, please note that software in universe WILL NOT receive any</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># review or updates from the Ubuntu security team.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy universe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy universe</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-updates universe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-updates universe</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># team, and may not be under a free licence. Please satisfy yourself as to</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># your rights to use the software. Also, please note that software in</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># multiverse WILL NOT receive any review or updates from the Ubuntu</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># security team.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy multiverse</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-updates multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-updates multiverse</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># N.B. software from this repository may not have been tested as</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># extensively as that contained in the main release, although it includes</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># newer versions of some applications which may provide useful features.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Also, please note that software in backports WILL NOT receive any review</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># or updates from the Ubuntu security team.</span></span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-security main restricted</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-security main restricted</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-security universe</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-security universe</span></span><br><span class="line">deb http://ports.ubuntu.com/ubuntu-ports/ jammy-security multiverse</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">deb-src http://ports.ubuntu.com/ubuntu-ports/ jammy-security multiverse</span></span><br><span class="line">deb https://download.webmin.com/download/repository sarge contrib</span><br></pre></td></tr></table></figure><h1 id="常用软件"><a href="#常用软件" class="headerlink" title="常用软件"></a>常用软件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt install vim</span><br><span class="line">apt install ssh</span><br></pre></td></tr></table></figure><h1 id="mysql数据库"><a href="#mysql数据库" class="headerlink" title="mysql数据库"></a><a href="https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/">mysql数据库</a></h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;var&#x2F;log&#x2F;mysql&#x2F;error.log</p><p>Plugin mysqlx reported: ‘Setup of bind-address: ‘127.0.0.1’ port: 33060 failed, <code>socket()</code> failed with error: Permission denied(13)’</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">尝试使用user=root启动</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">直接使用mysqld启动</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">usermod -a -G aid_inet,aid_net_raw mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">usermod -a -G aid_inet,aid_net_raw root</span></span><br></pre></td></tr></table></figure><h2 id="vnc服务器"><a href="#vnc服务器" class="headerlink" title="vnc服务器"></a><a href="https://www.cnblogs.com/liyuanhong/articles/15487147.html">vnc服务器</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">待续</span></span><br></pre></td></tr></table></figure><h1 id="声卡驱动"><a href="#声卡驱动" class="headerlink" title="声卡驱动"></a>声卡驱动</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install pulseaudio</span><br><span class="line">sudo apt install pavucontrol</span><br><span class="line">pactl list sources short</span><br><span class="line">echo  &#x27;load-module module-simple-protocol-tcp rate=44100 format=s16le channels=2 source=0 record=true port=23217&#x27;&gt;&gt; /etc/pulse/default.pa</span><br><span class="line">pulseaudio --start</span><br></pre></td></tr></table></figure><h1 id="宝塔面板"><a href="#宝塔面板" class="headerlink" title="宝塔面板"></a>宝塔面板</h1><blockquote><p>Ubuntu</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh https://download.bt.cn/install/install-ubuntu_6.0.sh &amp;&amp; sudo bash install.sh ed8484bec</span><br></pre></td></tr></table></figure><h1 id="问题方案"><a href="#问题方案" class="headerlink" title="问题方案"></a>问题方案</h1><blockquote><p><a href="https://blog.csdn.net/zong596568821xp/article/details/90747263">dpkg: error processing package mariadb-common (–configure):<br> installed mariadb-common package post-installation script subprocess returned error exit status 2<br>Errors were encountered while processing:<br> mariadb-common<br>E: Sub-process &#x2F;usr&#x2F;bin&#x2F;dpkg returned an error code (1)</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /var/lib/dpkg</span><br><span class="line">sudo mv info info.bak</span><br><span class="line">sudo mkdir info</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://399s.com/3089.html">debconf: unable to initialize frontend: Dialog<br>debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at &#x2F;usr&#x2F;share&#x2F;perl5&#x2F;Debconf&#x2F;FrontEnd&#x2F;Dialog.pm line 78.)</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install dialog</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/wtlll/article/details/119059267">sudo: &#x2F;etc&#x2F;sudo.conf is owned by uid 10187, should be 0<br>sudo: &#x2F;etc&#x2F;sudo.conf is owned by uid 10187, should be 0<br>sudo: error in &#x2F;etc&#x2F;sudo.conf, line 0 while loading plugin “sudoers_policy”<br>sudo: &#x2F;usr&#x2F;libexec&#x2F;sudo&#x2F;sudoers.so must be owned by uid 0<br>sudo: fatal error, unable to load plugins</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chown root:root /etc/sudo.conf;</span><br><span class="line">chown root:root  /usr/libexec/sudo/sudoers.so;</span><br><span class="line">chown root:root /etc/sudoers;</span><br><span class="line">chown root:root /etc/sudoers.d -R</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">chown</span> root:root /etc/sudoers.d/README</span>               </span><br><span class="line">chown root:root /etc/sudo -R</span><br></pre></td></tr></table></figure><blockquote><p>[&#x2F;usr&#x2F;sbin&#x2F;service: line 3: &#x2F;etc&#x2F;init.d&#x2F;functions: No such file or directory](&#x2F;usr&#x2F;sbin&#x2F;service: line 3: &#x2F;etc&#x2F;init.d&#x2F;functions: No such file or directory)</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y initscripts</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://zhuanlan.zhihu.com/p/386480011">W: GPG error: https://download.webmin.com/download/repository sarge Release: The following signatures couldn't be verified because the public key is not available: NO_PUBKEY D97A3AE911F63C51<br>E: The repository ‘https://download.webmin.com/download/repository sarge Release' is not signed.<br>N: Updating from such a repository can’t be done securely, and is therefore disabled by default.<br>N: See apt-secure(8) manpage for repository creation and user configuration details.</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D97A3AE911F63C51</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.cnblogs.com/sw-code/p/14998645.html">Running in chroot, ignoring command ‘start’</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/smaknsk/servicectl/archive/1.0.tar.gz</span><br><span class="line">tar -xf 1.0.tar.gz -C /usr/local/lib/</span><br><span class="line">ln -s /usr/local/lib/servicectl-1.0/servicectl /usr/bin/servicectl</span><br><span class="line">ln -s /usr/local/lib/servicectl-1.0/serviced /usr/bin/serviced</span><br><span class="line">mv /usr/bin/systemctl /usr/bin/systemctl.bak</span><br><span class="line">mv /usr/bin/servicectl /usr/bin/systemctl</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;usr&#x2F;bin&#x2F;systemctl: 16: [: -ne: unexpected operator<br>&#x2F;usr&#x2F;bin&#x2F;systemctl: 23: Syntax error: “(“ unexpected</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解释器错误</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改首行 shebang</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh -&gt;<span class="comment">#!/bin/bash</span></span></span><br></pre></td></tr></table></figure><blockquote><p>子进程 已安装 post-installation 脚本 返回了错误号 1</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /var/lib/dpkg/info /var/lib/dpkg/info_old </span><br><span class="line">sudo mkdir /var/lib/dpkg/info</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -f install </span><br><span class="line">sudo mv /var/lib/dpkg/info/* /var/lib/dpkg/info_old </span><br><span class="line">sudo rm -rf /var/lib/dpkg/info</span><br><span class="line">sudo mv /var/lib/dpkg/info_old /var/lib/dpkg/info </span><br></pre></td></tr></table></figure><blockquote><p>hostname: Name or service not known<br>make-ssl-cert: Could not get FQDN, using ‘localhost’.<br>make-ssl-cert: You may want to fix your &#x2F;etc&#x2F;hosts and&#x2F;or DNS setup and run<br>make-ssl-cert: ‘make-ssl-cert generate-default-snakeoil –force-overwrite’<br>make-ssl-cert: again.</p></blockquote><blockquote><p>&#x2F;usr&#x2F;bin&#x2F;deb-systemd-helper: error: systemctl preset failed on ubuntu-advantage.service: No such file or directory</p></blockquote><blockquote><p>invoke-rc.d: could not determine current runlevel<br>Scheduling reload of GNOME Display Manager configuration gdm3                                 setpriv: setresgid failed: Operation not permitted<br>invoke-rc.d: initscript gdm3, action “reload” failed.</p></blockquote><blockquote><p>setpriv: setresgid failed: Operation not permitted</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod a+s /bin/su</span><br><span class="line">chmod a+s /bin/sudo</span><br></pre></td></tr></table></figure><blockquote><p>Failed to execute child process “dbus-launch“</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install dbus-x11</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://askubuntu.com/questions/338382/pulseaudio-not-working-home-directory-not-accessible-permission-denied">W: [pulseaudio] main.c: 不应以 root 身份运行本程序(除非指定 –system 参数)。<br>E: [autospawn] core-util.c: Home directory not accessible: 权限不够<br>W: [autospawn] lock-autospawn.c: 不能访问自动执行锁。<br>E: [pulseaudio] main.c: Failed to acquire autospawn lock</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown root:root $HOME/</span><br><span class="line">sudo chown -R $USER:$USER $HOME/</span><br></pre></td></tr></table></figure><blockquote><p>The connection was refused by the computer</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">.vnc/config</span></span><br><span class="line">echo localhost=no &gt;&gt; .vnc/config</span><br></pre></td></tr></table></figure><blockquote><p>新用户tab无法补全</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改解释器为SHELL=/bin/bash</span></span><br><span class="line">vim /etc/default/useradd</span><br></pre></td></tr></table></figure><blockquote><p>N: [pulseaudio] main.c: User-configured server at 127.0.0.1:23217, refusing to start&#x2F;autospawn.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">找到问题所在了</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">是 linux deploy在/etc/profile.d/下的pulse.sh脚本的问题</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解决方案是移出脚本或注释所以内容</span></span><br></pre></td></tr></table></figure><blockquote><p>Connection failure: Connection refused<br>pa_context_connect() failed: Connection refused</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>赋予root网络相关权限，解决apt update的连接错误提示（应该是用这个解决的，也可能是通过修改linuxdeploy的dns配置为自动）</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usermod -a -G aid_inet,aid_net_raw root</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决curl命令报错</title>
      <link href="/posts/880228874/"/>
      <url>/posts/880228874/</url>
      
        <content type="html"><![CDATA[<div class="admonition info"><p class="admonition-title">curl: symbol lookup error: curl: undefined symbol: curl_easy_nextheader</p><p>Saeed.<a href="https://stackoverflow.com/questions/66017956/bash-usr-local-bin-curl-no-such-file-or-directory#comment116723638_66018012">stackoverflow.com</a>.[1]</p></div><h1 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h1><blockquote><p><a href="https://blog.csdn.net/Cappuccino_jay/article/details/125219983">首先，卸载本机的curl，此处仅介绍编译安装如何卸载。</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在原来执行make的目录下，查找install_manifest.txt文件。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果已经删除了源码安装的文件，可用重新下载编译安装一遍再卸载。</span></span><br><span class="line">cat install_manifest.txt | sudo xargs rm</span><br></pre></td></tr></table></figure><blockquote><p>卸载libcurl4</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt remove libcurl4</span><br></pre></td></tr></table></figure><blockquote><p>重新安装curl</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install curl</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> curl </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible学习笔记Part3</title>
      <link href="/posts/3436268892/"/>
      <url>/posts/3436268892/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://lptexas.top/posts/3151396298/">接上一节</a></p></blockquote><h1 id="常用模块"><a href="#常用模块" class="headerlink" title="常用模块"></a>常用模块</h1><h2 id="hostname主机名"><a href="#hostname主机名" class="headerlink" title="hostname主机名"></a>hostname主机名</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">只有一个参数name，用于指定主机名</span></span><br></pre></td></tr></table></figure><h2 id="cron定时任务"><a href="#cron定时任务" class="headerlink" title="cron定时任务"></a>cron定时任务</h2><blockquote><p>支持：分时日月周（minute,hour,day,month,weekday）</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS (= is mandatory):</span><br><span class="line"></span><br><span class="line">- backup</span><br><span class="line">        If set, create a backup of the crontab before it is modified. The location of the backup is returned in the</span><br><span class="line">        `backup_file&#x27; variable by this module.</span><br><span class="line">        [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line"></span><br><span class="line">- cron_file</span><br><span class="line">        If specified, uses this file instead of an individual user&#x27;s crontab.</span><br><span class="line">        If this is a relative path, it is interpreted with respect to `/etc/cron.d&#x27;.</span><br><span class="line">        If it is absolute, it will typically be `/etc/crontab&#x27;.</span><br><span class="line">        Many linux distros expect (and some require) the filename portion to consist solely of upper- and lower-case letters,</span><br><span class="line">        digits, underscores, and hyphens.</span><br><span class="line">        To use the `cron_file&#x27; parameter you must specify the `user&#x27; as well.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- day</span><br><span class="line">        Day of the month the job should run ( 1-31, *, */2, etc )</span><br><span class="line">        (Aliases: dom)[Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- disabled</span><br><span class="line">        If the job should be disabled (commented out) in the crontab.</span><br><span class="line">        Only has effect if `state=present&#x27;.</span><br><span class="line">        [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.0</span><br><span class="line"></span><br><span class="line">- env</span><br><span class="line">        If set, manages a crontab&#x27;s environment variable.</span><br><span class="line">        New variables are added on top of crontab.</span><br><span class="line">        `name&#x27; and `value&#x27; parameters are the name and the value of environment variable.</span><br><span class="line">       [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.1</span><br><span class="line"></span><br><span class="line">- hour</span><br><span class="line">        Hour when the job should run ( 0-23, *, */2, etc )</span><br><span class="line">        [Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- insertafter</span><br><span class="line">        Used with `state=present&#x27; and `env&#x27;.</span><br><span class="line">        If specified, the environment variable will be inserted after the declaration of specified environment variable.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 2.1</span><br><span class="line"></span><br><span class="line">- insertbefore</span><br><span class="line">        Used with `state=present&#x27; and `env&#x27;.</span><br><span class="line">        If specified, the environment variable will be inserted before the declaration of specified environment variable.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 2.1</span><br><span class="line"></span><br><span class="line">- job</span><br><span class="line">        The command to execute or, if env is set, the value of environment variable.</span><br><span class="line">        The command should not contain line breaks.</span><br><span class="line">        Required if `state=present&#x27;.</span><br><span class="line">        (Aliases: value)[Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- minute</span><br><span class="line">        Minute when the job should run ( 0-59, *, */2, etc )</span><br><span class="line">        [Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- month</span><br><span class="line">        Month of the year the job should run ( 1-12, *, */2, etc )</span><br><span class="line">        [Default: *]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- name</span><br><span class="line">        Description of a crontab entry or, if env is set, the name of environment variable.</span><br><span class="line">        Required if `state=absent&#x27;.</span><br><span class="line">        Note that if name is not set and `state=present&#x27;, then a new crontab entry will always be created, regardless of</span><br><span class="line">        existing ones.</span><br><span class="line">        This parameter will always be required in future releases.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- reboot</span><br><span class="line">        If the job should be run at reboot. This option is deprecated. Users should use special_time.</span><br><span class="line">        [Default: False]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 1.0</span><br><span class="line"></span><br><span class="line">- special_time</span><br><span class="line">        Special time specification nickname.</span><br><span class="line">        (Choices: annually, daily, hourly, monthly, reboot, weekly, yearly)[Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 1.3</span><br><span class="line"></span><br><span class="line">- state</span><br><span class="line">        Whether to ensure the job or environment variable is present or absent.</span><br><span class="line">        (Choices: absent, present)[Default: present]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- user</span><br><span class="line">        The specific user whose crontab should be modified.</span><br><span class="line">        When unset, this parameter defaults to using `root&#x27;.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- weekday</span><br><span class="line">        Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )</span><br><span class="line">        (Aliases: dow)[Default: *]</span><br><span class="line">        type: str</span><br></pre></td></tr></table></figure><blockquote><p>创建一个定时任务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible host -m cron -a &#x27;&#x27;minute=*/5 job=/path/to/job/&#x27;</span><br></pre></td></tr></table></figure><h2 id="yum包管理"><a href="#yum包管理" class="headerlink" title="yum包管理"></a>yum包管理</h2><blockquote><p>需要机器支持yum包管理器</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">常用参数</span></span><br><span class="line">- name </span><br><span class="line">- state</span><br><span class="line">        Whether to install (`present&#x27; or `installed&#x27;, `latest&#x27;), or remove (`absent&#x27; or `removed&#x27;) a package.</span><br><span class="line">        `present&#x27; and `installed&#x27; will simply ensure that a desired package is installed.</span><br><span class="line">        `latest&#x27; will update the specified package if it&#x27;s not of the latest available version.</span><br><span class="line">        `absent&#x27; and `removed&#x27; will remove the specified package.</span><br><span class="line">        Default is `None&#x27;, however in effect the default action is `present&#x27; unless the `autoremove&#x27; option is enabled for</span><br><span class="line">        this module, then `absent&#x27; is inferred.</span><br><span class="line">        (Choices: absent, installed, latest, present, removed)[Default: (null)]</span><br><span class="line">- list</span><br><span class="line">        Package name to run the equivalent of yum list --show-duplicates &lt;package&gt; against. In addition to listing packages,</span><br><span class="line">        use can also list the following: `installed&#x27;, `updates&#x27;, `available&#x27; and `repos&#x27;.</span><br><span class="line">        This parameter is mutually exclusive with `name&#x27;.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">-...</span><br></pre></td></tr></table></figure><h2 id="service服务管理"><a href="#service服务管理" class="headerlink" title="service服务管理"></a>service服务管理</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">常用参数</span></span><br><span class="line">- name: # 介绍功能</span><br><span class="line">  service:</span><br><span class="line">    name: # 服务名</span><br><span class="line">    state: # 状态，可选参数started、restarted、reloaded、stopped</span><br><span class="line">    enable: # bool型，是否开启开机自启</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># commandline</span></span></span><br><span class="line">ansible host -m service -a &#x27;name=&lt;...&gt; state=&lt;...&gt; enable=&lt;true|false&gt;&#x27;</span><br></pre></td></tr></table></figure><h2 id="user管理用户"><a href="#user管理用户" class="headerlink" title="user管理用户"></a>user管理用户</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">- name: Manage user accounts</span><br><span class="line">  user:</span><br><span class="line">      append:                # If `yes&#x27;, add the user to the groups specified in `groups&#x27;. If `no&#x27;, user will only be added to the groups specified in `groups&#x27;, removing them from all other groups. Mutually exclusive with `local&#x27;</span><br><span class="line">      authorization:         # Sets the authorization of the user. Does nothing when used with other platforms. Can set multiple authorizations using comma separation. To delete all authorizations, use `authorization=&#x27;&#x27;&#x27;. Currently supported on Illumos/Solaris.</span><br><span class="line">      comment:               # 描述信息# Optionally sets the description (aka `GECOS&#x27;) of user account.</span><br><span class="line">      create_home:           # Unless set to `no&#x27;, a home directory will be made for the user when the account is created or if the home directory does not</span><br><span class="line">                               exist. Changed from `createhome&#x27; to `create_home&#x27; in Ansible 2.5.</span><br><span class="line">      expires:              # 设置账号有效期 # An expiry time for the user in epoch, it will be ignored on platforms that do not support this. Currently supported on GNU/Linux, FreeBSD, and DragonFlyBSD. Since Ansible 2.6 you can remove the expiry time specify a negative value. Currently supported on GNU/Linux and FreeBSD.</span><br><span class="line">      force:                 # This only affects `state=absent&#x27;, it forces removal of the user and associated directories on supported platforms. The behavior is the same as `userdel --force&#x27;, check the man page for `userdel&#x27; on your system for details and support. When used with `generate_ssh_key=yes&#x27; this forces an existing key to be overwritten.</span><br><span class="line">      generate_ssh_key:      # Whether to generate a SSH key for the user in question. This will *not* overwrite an existing SSH key unless used with  `force=yes&#x27;.</span><br><span class="line">      group:                 # 设置主组 # Optionally sets the user&#x27;s primary group (takes a group name).</span><br><span class="line">      groups:                # 设置附加组 # List of groups user will be added to. When set to an empty string `&#x27;&#x27;&#x27;, the user is removed from all groups except the primary group. Before Ansible 2.3, the only input format allowed was a comma separated string. Mutually exclusive with `local&#x27;</span><br><span class="line">      hidden:                # macOS only, optionally hide the user from the login window and system preferences. The default will be `yes&#x27; if the `system&#x27; option is used.</span><br><span class="line">      home:                # 指定用户家目录  # Optionally set the user&#x27;s home directory.</span><br><span class="line">      local:                 # Forces the use of &quot;local&quot; command alternatives on platforms that implement it. This is useful in environments that use centralized authentification when you want to manipulate the local users (i.e. it uses `luseradd&#x27; instead of `useradd&#x27;). This will check `/etc/passwd&#x27; for an existing account before invoking commands. If the local account database exists somewhere other than `/etc/passwd&#x27;, this setting will not work properly. This requires that the above commands as well as `/etc/passwd&#x27; must exist on the target host, otherwise it will be a fatal error. Mutually exclusive with `groups&#x27; and `append&#x27;</span><br><span class="line">      login_class:           # Optionally sets the user&#x27;s login class, a feature of most BSD OSs.</span><br><span class="line">      move_home:             # If set to `yes&#x27; when used with `home: &#x27;, attempt to move the user&#x27;s old home directory to the specified directory if it isn&#x27;t there already and the old home exists.</span><br><span class="line">      name:                 # 设置用户名 # (required) Name of the user to create, remove or modify.</span><br><span class="line">      non_unique:            # Optionally when used with the -u option, this option allows to change the user ID to a non-unique value.</span><br><span class="line">      password:              # 设置用户的密码 # Optionally set the user&#x27;s password to this crypted value. On macOS systems, this value has to be cleartext. Beware of security issues. To create a disabled account on Linux systems, set this to `&#x27;!&#x27;&#x27; or `&#x27;*&#x27;&#x27;. To create a disabled account on OpenBSD, set this to `&#x27;*************&#x27;&#x27;. See https://docs.ansible.com/ansible/faq.html#how-do-i-generate-encrypted-passwords-for-the-user-module for details on various ways to generate these password values. </span><br><span class="line">      password_lock:         # Lock the password (`usermod -L&#x27;, `usermod -U&#x27;, `pw lock&#x27;). Implementation differs by platform. This option does not always mean the user cannot login using other methods. This option does not disable the user, only lock the password. This must be set to `False&#x27; in order to unlock a currently locked password. The absence of this parameter will not unlock a password. Currently supported on Linux, FreeBSD, DragonFlyBSD, NetBSD, OpenBSD.</span><br><span class="line">      profile:               # Sets the profile of the user. Does nothing when used with other platforms. Can set multiple profiles using comma separation.  To delete all the profiles, use `profile=&#x27;&#x27;&#x27;. Currently supported on Illumos/Solaris.</span><br><span class="line">      remove:               #是否在删除用户的同时删除家目录 # This only affects `state=absent&#x27;, it attempts to remove directories associated with the user. The behavior is the same as   `userdel --remove&#x27;, check the man page for details and support.</span><br><span class="line">      role:                  # Sets the role of the user. Does nothing when used with other platforms. Can set multiple roles using comma separation. To delete all roles, use `role=&#x27;&#x27;&#x27;. Currently supported on Illumos/Solaris.</span><br><span class="line">      seuser:                # Optionally sets the seuser type (user_u) on selinux enabled systems.</span><br><span class="line">      shell:                 # Optionally set the user&#x27;s shell. On macOS, before Ansible 2.5, the default shell for non-system users was `/usr/bin/false&#x27;.  Since Ansible 2.5, the default shell for non-system users on macOS is `/bin/bash&#x27;. On other operating systems, the default shell is determined by the underlying tool being used. See Notes   for details.</span><br><span class="line">      skeleton:              # Optionally set a home skeleton directory. Requires `create_home&#x27; option!</span><br><span class="line">      ssh_key_bits:          # Optionally specify number of bits in SSH key to create.</span><br><span class="line">      ssh_key_comment:       # Optionally define the comment for the SSH key.</span><br><span class="line">      ssh_key_file:          # Optionally specify the SSH key filename. If this is a relative filename then it will be relative to the user&#x27;s home directory. This parameter defaults to `.ssh/id_rsa&#x27;.</span><br><span class="line">      ssh_key_passphrase:    # Set a passphrase for the SSH key. If no passphrase is provided, the SSH key will default to having no passphrase.</span><br><span class="line">      ssh_key_type:          # Optionally specify the type of SSH key to generate. Available SSH key types will depend on implementation present on target   host.</span><br><span class="line">      state:               # 对用户进行的操作（删除absent，默认present创建） # Whether the account should exist or not, taking action if the state is different from what is stated.</span><br><span class="line">      system:               # 是否设置用户为系统用户 # When creating an account `state=present&#x27;, setting this to `yes&#x27; makes the user a system account. This setting cannot be</span><br><span class="line">                               changed on existing users.</span><br><span class="line">      uid:                   # 手动设置用户的uid # Optionally sets the `UID&#x27; of the user.</span><br><span class="line">      update_password:      # 更行用户密码 # `always&#x27; will update passwords if they differ. `on_create&#x27; will only set the password for newly created users.</span><br></pre></td></tr></table></figure><h2 id="group管理组"><a href="#group管理组" class="headerlink" title="group管理组"></a>group管理组</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">- name: Add or remove groups</span><br><span class="line">  group:</span><br><span class="line">      gid:                   # Optional `GID&#x27; to set for the group.</span><br><span class="line">      local:                 # Forces the use of &quot;local&quot; command alternatives on platforms that implement it. This is useful in environments that use centralized authentication when you want to manipulate the local groups. (e.g. it uses `lgroupadd&#x27; instead of `groupadd&#x27;). This requires that these commands exist on the targeted host, otherwise it will be a fatal error.</span><br><span class="line">      name:                  # (required) Name of the group to manage.</span><br><span class="line">      non_unique:            # This option allows to change the group ID to a non-unique value. Requires `gid&#x27;. Not supported on macOS or BusyBox distributions.</span><br><span class="line">      state:                 # Whether the group should be present or not on the remote host.</span><br><span class="line">      system:                # If `yes&#x27;, indicates that the group created is a system group.</span><br></pre></td></tr></table></figure><h1 id="ansible-galaxy命令"><a href="#ansible-galaxy命令" class="headerlink" title="ansible-galaxy命令"></a>ansible-galaxy命令</h1><blockquote><p>连接<a href="https://galaxy.ansible.com下载相应的roles./">https://galaxy.ansible.com下载相应的roles。</a></p></blockquote><h2 id="列出roles"><a href="#列出roles" class="headerlink" title="列出roles"></a>列出roles</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy list</span><br></pre></td></tr></table></figure><h2 id="下载roles"><a href="#下载roles" class="headerlink" title="下载roles"></a>下载roles</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy install &lt;&gt;</span><br></pre></td></tr></table></figure><h2 id="删除roles"><a href="#删除roles" class="headerlink" title="删除roles"></a>删除roles</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-galaxy remove &lt;&gt;</span><br></pre></td></tr></table></figure><h1 id="ansible-playbook命令"><a href="#ansible-playbook命令" class="headerlink" title="ansible-playbook命令"></a>ansible-playbook命令</h1><blockquote><p>剧本</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">optional arguments:</span><br><span class="line">  --ask-vault-pass      ask for vault password</span><br><span class="line">  --flush-cache         clear the fact cache for every host in inventory</span><br><span class="line">  --force-handlers      run handlers even if a task fails</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">列出主机</span></span><br><span class="line">  --list-hosts          outputs a list of matching hosts; does not execute</span><br><span class="line">                        anything else</span><br><span class="line"><span class="meta prompt_"> # </span><span class="language-bash">列出所有标签</span></span><br><span class="line">  --list-tags           list all available tags</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">列出所有任务</span></span><br><span class="line">  --list-tasks          list all tasks that would be executed</span><br><span class="line">  --skip-tags SKIP_TAGS</span><br><span class="line">                        only run plays and tasks whose tags do not match these</span><br><span class="line">                        values</span><br><span class="line">  --start-at-task START_AT_TASK</span><br><span class="line">                        start the playbook at the task matching this name</span><br><span class="line">  --step                one-step-at-a-time: confirm each task before running</span><br><span class="line">  --syntax-check        perform a syntax check on the playbook, but do not</span><br><span class="line">                        execute it</span><br><span class="line">  --vault-id VAULT_IDS  the vault identity to use</span><br><span class="line">  --vault-password-file VAULT_PASSWORD_FILES</span><br><span class="line">                        vault password file</span><br><span class="line">  --version             show program&#x27;s version number, config file location,</span><br><span class="line">                        configured module search path, module location,</span><br><span class="line">                        executable location and exit</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">运行测试，并不会做修改</span></span><br><span class="line">  -C, --check           don&#x27;t make any changes; instead, try to predict some</span><br><span class="line">                        of the changes that may occur</span><br><span class="line">  -D, --diff            when changing (small) files and templates, show the</span><br><span class="line">                        differences in those files; works great with --check</span><br><span class="line">  -M MODULE_PATH, --module-path MODULE_PATH</span><br><span class="line">                        prepend colon-separated path(s) to module library (def</span><br><span class="line">                        ault=~/.ansible/plugins/modules:/usr/share/ansible/plu</span><br><span class="line">                        gins/modules)</span><br><span class="line">  -e EXTRA_VARS, --extra-vars EXTRA_VARS</span><br><span class="line">                        set additional variables as key=value or YAML/JSON, if</span><br><span class="line">                        filename prepend with @</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">修改并发数目，默认为5</span></span><br><span class="line">  -f FORKS, --forks FORKS</span><br><span class="line">                        specify number of parallel processes to use</span><br><span class="line">                        (default=5)</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -i INVENTORY, --inventory INVENTORY, --inventory-file INVENTORY</span><br><span class="line">                        specify inventory host path or comma separated host</span><br><span class="line">                        list. --inventory-file is deprecated</span><br><span class="line">  -l SUBSET, --limit SUBSET</span><br><span class="line">                        further limit selected hosts to an additional pattern</span><br><span class="line">  -t TAGS, --tags TAGS  only run plays and tasks tagged with these values</span><br><span class="line">  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable</span><br><span class="line">                        connection debugging)</span><br><span class="line">Privilege Escalation Options:</span><br><span class="line">  control how and which user you become as on target hosts</span><br><span class="line"></span><br><span class="line">  --become-method BECOME_METHOD</span><br><span class="line">                        privilege escalation method to use (default=sudo), use</span><br><span class="line">                        `ansible-doc -t become -l` to list valid choices.</span><br><span class="line">  --become-user BECOME_USER</span><br><span class="line">                        run operations as this user (default=root)</span><br><span class="line">  -K, --ask-become-pass</span><br><span class="line">                        ask for privilege escalation password</span><br><span class="line">  -b, --become          run operations with become (does not imply password</span><br><span class="line">                        prompting)</span><br></pre></td></tr></table></figure><h1 id="ansible-vault命令"><a href="#ansible-vault命令" class="headerlink" title="ansible-vault命令"></a>ansible-vault命令</h1><blockquote><p>对yml剧本文件进行加密解密</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">positional arguments:</span><br><span class="line">  &#123;create,decrypt,edit,view,encrypt,encrypt_string,rekey&#125;</span><br><span class="line">    create              Create new vault encrypted file</span><br><span class="line">    decrypt             Decrypt vault encrypted file</span><br><span class="line">    edit                Edit vault encrypted file</span><br><span class="line">    view                View vault encrypted file</span><br><span class="line">    encrypt             Encrypt YAML file</span><br><span class="line">    encrypt_string      Encrypt a string</span><br><span class="line">    rekey               Re-key a vault encrypted file</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  --version             show program&#x27;s version number, config file location,</span><br><span class="line">                        configured module search path, module location,</span><br><span class="line">                        executable location and exit</span><br><span class="line">  -h, --help            show this help message and exit</span><br><span class="line">  -v, --verbose         verbose mode (-vvv for more, -vvvv to enable</span><br><span class="line">                        connection debugging)</span><br></pre></td></tr></table></figure><h2 id="加密-x2F-解密"><a href="#加密-x2F-解密" class="headerlink" title="加密&#x2F;解密"></a>加密&#x2F;解密</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible-vault encrypt/decrypt &lt;&gt;</span><br></pre></td></tr></table></figure><h1 id="剧本yaml文件语法"><a href="#剧本yaml文件语法" class="headerlink" title="剧本yaml文件语法"></a>剧本yaml文件语法</h1><h2 id="结合ansible做简单介绍"><a href="#结合ansible做简单介绍" class="headerlink" title="结合ansible做简单介绍"></a>结合ansible做简单介绍</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">---</span> <span class="comment">#开头三个连接符表示档案的开始，可以不写，这只是一个习惯</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="comment">#指定主机，类似ansible后的第一个参数</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="comment">#指定登录的用户</span></span><br><span class="line">  </span><br><span class="line">  <span class="attr">tasks:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="comment">#任务模块，描述信息，一个name对应一个模块</span></span><br><span class="line">      <span class="string">&lt;module&gt;:</span> <span class="comment">#模块名和参数的键值对（这是最常用的形式）</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> </span><br><span class="line">      <span class="attr">action:</span> <span class="string">&lt;module&gt;</span> <span class="string">&lt;argues&gt;</span> <span class="comment">#这是第二种形式（不常用）</span></span><br><span class="line"><span class="string">...</span> <span class="comment">#表示结尾，可以不写</span></span><br></pre></td></tr></table></figure><h2 id="tasks-handlers和tags"><a href="#tasks-handlers和tags" class="headerlink" title="tasks,handlers和tags"></a>tasks,handlers和tags</h2><blockquote><p>tasks中的任务是依次执行的，当出现前一个任务修改了配置文件，后一个任务是启动服务的情况时，tasks无法让服务重启使新的配置生效。</p></blockquote><div class="admonition note"><p class="admonition-title">handlers</p><p>handlers触发器，可以用来解决上述问题。</p></div><h2 id="handlers"><a href="#handlers" class="headerlink" title="handlers"></a>handlers</h2><blockquote><p>与tasks平级，需要使用<code>notify</code>绑定事件</p></blockquote><p>以nginx服务为例</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">centos</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line"><span class="comment">#    - name: install nginx</span></span><br><span class="line"><span class="comment">#      yum: name=nginx</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=/etc/nginx/nginx.conf</span> <span class="string">dest=/etc/nginx/</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">restart</span> <span class="string">nginx</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">check</span> <span class="string">nginx</span> <span class="string">process</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">copy_config</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">nginx</span> <span class="string">service</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=started</span> <span class="string">enabled=yes</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">handlers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">restart</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=restarted</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">check</span> <span class="string">nginx</span> <span class="string">process</span></span><br><span class="line">      <span class="attr">shell:</span> <span class="string">killall</span> <span class="number">-0</span> <span class="string">nginx</span> <span class="string">&gt;</span> <span class="string">/tmp/nginx.log</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="tags"><a href="#tags" class="headerlink" title="tags"></a>tags</h2><blockquote><p>使用标签，可以用于特定执行某些动作。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ...</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">copy:</span> <span class="string">src=/etc/nginx/nginx.conf</span> <span class="string">dest=/etc/nginx/</span></span><br><span class="line">      <span class="attr">notify:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">restart</span> <span class="string">nginx</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">check</span> <span class="string">nginx</span> <span class="string">process</span></span><br><span class="line">      <span class="attr">tags:</span> <span class="string">copy_config</span></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用-t参数可以指定标签</span></span><br><span class="line">ansible-playbook nginx.yml -t copy_config</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible学习笔记Part2</title>
      <link href="/posts/3151396298/"/>
      <url>/posts/3151396298/</url>
      
        <content type="html"><![CDATA[<h1 id="ansible的Host-pattern"><a href="#ansible的Host-pattern" class="headerlink" title="ansible的Host-pattern"></a>ansible的Host-pattern</h1><blockquote><p>双引号和单引号的使用要留意。</p></blockquote><blockquote><p>直接通配符</p></blockquote><ol><li>all 表示所有主机列表中的主机</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible all -m ping</span><br></pre></td></tr></table></figure><ol start="2"><li><ul><li>缺省通配符</li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;*est&quot; -m ping</span><br></pre></td></tr></table></figure><ol start="3"><li>: 或关系</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;websrvs:appsrvs&quot; -m ping</span><br></pre></td></tr></table></figure><ol start="4"><li>:&amp; 逻辑与</li></ol><p>如：在A组且在B组中的主机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;A:&amp;B&quot; -m ping</span><br></pre></td></tr></table></figure><ol start="5"><li>:! 逻辑非</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &#x27;A:!B&#x27; -m ping</span><br></pre></td></tr></table></figure><ol start="6"><li>~ 正则表达式</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &quot;~(web|db).*&quot;</span><br></pre></td></tr></table></figure><h1 id="ansible执行状态"><a href="#ansible执行状态" class="headerlink" title="ansible执行状态"></a>ansible执行状态</h1><ul><li><p>绿色表示执行成功且未做更改；</p></li><li><p>黄色表示执行成功且做了更改；</p></li><li><p>红色表示执行失败；</p></li><li><p>蓝色表示详细过程；</p></li><li><p>紫色表示警告；</p></li><li><p>深灰表示debug；</p></li><li><p>褐色表示弃用。</p></li></ul><h1 id="ansible常用模块"><a href="#ansible常用模块" class="headerlink" title="ansible常用模块"></a>ansible常用模块</h1><blockquote><p>使用一个模块前，可以使用<code>ansible-doc &lt;moduel&gt;</code>查看一些帮助。</p></blockquote><h2 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h2><blockquote><p>功能：在远程主机执行命令。</p><p>不好用，建议用shell模块代替</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">- argv</span><br><span class="line">        Passes the command as a list rather than a string.</span><br><span class="line">        Use `argv&#x27; to avoid quoting values that would otherwise be interpreted incorrectly (for example &quot;user name&quot;).</span><br><span class="line">        Only the string or the list form can be provided, not both.  One or the other must be provided.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: list</span><br><span class="line">        version_added: 2.6</span><br><span class="line"></span><br><span class="line">- chdir</span><br><span class="line">        Change into this directory before running the command.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.6</span><br><span class="line"></span><br><span class="line">- cmd</span><br><span class="line">        The command to run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- creates</span><br><span class="line">        A filename or (since 2.0) glob pattern. If it already exists, this step *won&#x27;t* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line"></span><br><span class="line">- free_form</span><br><span class="line">        The command module takes a free form command to run.</span><br><span class="line">        There is no actual parameter named &#x27;free form&#x27;.</span><br><span class="line">        [Default: (null)]</span><br><span class="line"></span><br><span class="line">- removes</span><br><span class="line">        A filename or (since 2.0) glob pattern. If it already exists, this step *will* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.8</span><br><span class="line"></span><br><span class="line">- stdin</span><br><span class="line">        Set the stdin of the command directly to the specified value.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- stdin_add_newline</span><br><span class="line">        If set to `yes&#x27;, append a newline to stdin data.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.8</span><br><span class="line"></span><br><span class="line">- strip_empty_ends</span><br><span class="line">        Strip empty lines from the end of stdout/stderr in result.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.8</span><br><span class="line"></span><br><span class="line">- warn</span><br><span class="line">        Enable or disable task warnings.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 1.8</span><br></pre></td></tr></table></figure><p>不支持：$变量、特殊符号（分号，重定向，管道符等）。</p><h2 id="shell模块"><a href="#shell模块" class="headerlink" title="shell模块"></a>shell模块</h2><blockquote><p>功能：调用bash，在远程主机执行命令。</p><p>在执行一些复杂命令时也可能会报错。一般解决方案为写脚本执行，再将结果拉回。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS (= is mandatory):</span><br><span class="line"></span><br><span class="line">- chdir</span><br><span class="line">        Change into this directory before running the command.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.6</span><br><span class="line"></span><br><span class="line">- cmd</span><br><span class="line">        The command to run followed by optional arguments.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- creates</span><br><span class="line">        A filename, when it already exists, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line"></span><br><span class="line">- executable</span><br><span class="line">        Change the shell used to execute the command.</span><br><span class="line">        This expects an absolute path to the executable.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.9</span><br><span class="line"></span><br><span class="line">- free_form</span><br><span class="line">        The shell module takes a free form command to run, as a string.</span><br><span class="line">        There is no actual parameter named &#x27;free form&#x27;.</span><br><span class="line">        See the examples on how to use this module.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- removes</span><br><span class="line">        A filename, when it does not exist, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: path</span><br><span class="line">        version_added: 0.8</span><br><span class="line"></span><br><span class="line">- stdin</span><br><span class="line">        Set the stdin of the command directly to the specified value.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- stdin_add_newline</span><br><span class="line">        Whether to append a newline to stdin data.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.8</span><br><span class="line"></span><br><span class="line">- warn</span><br><span class="line">        Whether to enable task warnings.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 1.8</span><br></pre></td></tr></table></figure><h2 id="script模块"><a href="#script模块" class="headerlink" title="script模块"></a>script模块</h2><blockquote><p>功能：运行脚本。自动完成复制脚本在远程主机完成。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS (= is mandatory):</span><br><span class="line"></span><br><span class="line">- chdir</span><br><span class="line">        Change into this directory on the remote node before running the script.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- cmd</span><br><span class="line">        Path to the local script to run followed by optional arguments.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        type: str</span><br><span class="line"></span><br><span class="line">- creates</span><br><span class="line">        A filename on the remote node, when it already exists, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 1.5</span><br><span class="line"></span><br><span class="line">- decrypt</span><br><span class="line">        This option controls the autodecryption of source files using vault.</span><br><span class="line">        [Default: True]</span><br><span class="line">        type: bool</span><br><span class="line">        version_added: 2.4</span><br><span class="line"></span><br><span class="line">- executable</span><br><span class="line">        Name or path of a executable to invoke the script with.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 2.6</span><br><span class="line"></span><br><span class="line">- free_form</span><br><span class="line">        Path to the local script file followed by optional arguments.</span><br><span class="line">        [Default: (null)]</span><br><span class="line"></span><br><span class="line">- removes</span><br><span class="line">        A filename on the remote node, when it does not exist, this step will *not* be run.</span><br><span class="line">        [Default: (null)]</span><br><span class="line">        version_added: 1.5</span><br></pre></td></tr></table></figure><h2 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h2><blockquote><p>复制文件至远程主机。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">请用ansible-doc copy查看</span></span><br><span class="line">copy:</span><br><span class="line">      attributes:            # The attributes the resulting file or directory should have. To get supported flags look at the man page for `chattr&#x27; on the</span><br><span class="line">                               target system. This string should contain the attributes in the same order as the one displayed</span><br><span class="line">                               by `lsattr&#x27;. The `=&#x27; operator is assumed as default, otherwise `+&#x27; or `-&#x27; operators need to be</span><br><span class="line">                               included in the string.</span><br><span class="line">      backup:                # Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it</span><br><span class="line">                               incorrectly.</span><br><span class="line">      checksum:              # SHA1 checksum of the file being transferred. Used to validate that the copy of the file was successful. If this is not</span><br><span class="line">                               provided, ansible will use the local calculated checksum of the src file.</span><br><span class="line">      content:               # When used instead of `src&#x27;, sets the contents of a file directly to the specified value. Works only when `dest&#x27; is a file.</span><br><span class="line">                               Creates the file if it does not exist. For advanced formatting or if `content&#x27; contains a</span><br><span class="line">                               variable, use the [template] module.</span><br><span class="line">      decrypt:               # This option controls the autodecryption of source files using vault.</span><br><span class="line">      dest:                  # (required) Remote absolute path where the file should be copied to. If `src&#x27; is a directory, this must be a directory too. If</span><br><span class="line">                               `dest&#x27; is a non-existent path and if either `dest&#x27; ends with &quot;/&quot; or `src&#x27; is a directory,</span><br><span class="line">                               `dest&#x27; is created. If `dest&#x27; is a relative path, the starting directory is determined by the</span><br><span class="line">                               remote host. If `src&#x27; and `dest&#x27; are files, the parent directory of `dest&#x27; is not created and</span><br><span class="line">                               the task fails if it does not already exist.</span><br><span class="line">      directory_mode:        # When doing a recursive copy set the mode for the directories. If this is not set we will use the system defaults. The mode is</span><br><span class="line">                               only set on directories which are newly created, and will not affect those that already</span><br><span class="line">                               existed.</span><br><span class="line">      follow:                # This flag indicates that filesystem links in the destination, if they exist, should be followed.</span><br><span class="line">      force:                 # Influence whether the remote file must always be replaced. If `yes&#x27;, the remote file will be replaced when contents are</span><br><span class="line">                               different than the source. If `no&#x27;, the file will only be transferred if the destination does</span><br><span class="line">                               not exist. Alias `thirsty&#x27; has been deprecated and will be removed in 2.13.</span><br><span class="line">      group:                 # Name of the group that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">      local_follow:          # This flag indicates that filesystem links in the source tree, if they exist, should be followed.</span><br><span class="line">      mode:                  # The permissions of the destination file or directory. For those used to `/usr/bin/chmod&#x27; remember that modes are actually</span><br><span class="line">                               octal numbers. You must either add a leading zero so that Ansible&#x27;s YAML parser knows it is an</span><br><span class="line">                               octal number (like `0644&#x27; or `01777&#x27;)or quote it (like `&#x27;644&#x27;&#x27; or `&#x27;1777&#x27;&#x27;) so Ansible receives</span><br><span class="line">                               a string and can do its own conversion from string into number. Giving Ansible a number without</span><br><span class="line">                               following one of these rules will end up with a decimal number which will have unexpected</span><br><span class="line">                               results. As of Ansible 1.8, the mode may be specified as a symbolic mode (for example, `u+rwx&#x27;</span><br><span class="line">                               or `u=rw,g=r,o=r&#x27;). As of Ansible 2.3, the mode may also be the special string `preserve&#x27;.</span><br><span class="line">                               `preserve&#x27; means that the file will be given the same permissions as the source file.</span><br><span class="line">      owner:                 # Name of the user that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">      remote_src:            # Influence whether `src&#x27; needs to be transferred or already is present remotely. If `no&#x27;, it will search for `src&#x27; at</span><br><span class="line">                               originating/master machine. If `yes&#x27; it will go to the remote/target machine for the `src&#x27;.</span><br><span class="line">                               `remote_src&#x27; supports recursive copying as of version 2.8. `remote_src&#x27; only works with</span><br><span class="line">                               `mode=preserve&#x27; as of version 2.6.</span><br><span class="line">      selevel:               # The level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range&#x27;. When set to</span><br><span class="line">                               `_default&#x27;, it will use the `level&#x27; portion of the policy if available.</span><br><span class="line">      serole:                # The role part of the SELinux file context. When set to `_default&#x27;, it will use the `role&#x27; portion of the policy if available.</span><br><span class="line">      setype:                # The type part of the SELinux file context. When set to `_default&#x27;, it will use the `type&#x27; portion of the policy if available.</span><br><span class="line">      seuser:                # The user part of the SELinux file context. By default it uses the `system&#x27; policy, where applicable. When set to `_default&#x27;,</span><br><span class="line">                               it will use the `user&#x27; portion of the policy if available.</span><br><span class="line">      src:                   # Local path to a file to copy to the remote server. This can be absolute or relative. If path is a directory, it is copied</span><br><span class="line">                               recursively. In this case, if path ends with &quot;/&quot;, only inside contents of that directory are</span><br><span class="line">                               copied to destination. Otherwise, if it does not end with &quot;/&quot;, the directory itself with all</span><br><span class="line">                               contents is copied. This behavior is similar to the `rsync&#x27; command line tool.</span><br><span class="line">      unsafe_writes:         # Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file. By default this</span><br><span class="line">                               module uses atomic operations to prevent data corruption or inconsistent reads from the target</span><br><span class="line">                               files, but sometimes systems are configured or just broken in ways that prevent this. One</span><br><span class="line">                               example is docker mounted files, which cannot be updated atomically from inside the container</span><br><span class="line">                               and can only be written in an unsafe manner. This option allows Ansible to fall back to unsafe</span><br><span class="line">                               methods of updating files when atomic operations fail (however, it doesn&#x27;t force Ansible to</span><br><span class="line">                               perform unsafe writes). IMPORTANT! Unsafe writes are subject to race conditions and can lead to</span><br><span class="line">                               data corruption.</span><br><span class="line">      validate:              # The validation command to run before copying into place. The path to the file to validate is passed in via &#x27;%s&#x27; which must be</span><br><span class="line">                               present as in the examples below. The command is passed securely so shell features like</span><br><span class="line">                               expansion and pipes will not work.</span><br></pre></td></tr></table></figure><h2 id="fetch模块"><a href="#fetch模块" class="headerlink" title="fetch模块"></a>fetch模块</h2><blockquote><p>从远程主机拉取文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">fetch:</span><br><span class="line">      dest:                  # (required) A directory to save the file into. For example, if the `dest&#x27; directory is `/backup&#x27; a `src&#x27; file named</span><br><span class="line">                               `/etc/profile&#x27; on host `host.example.com&#x27;, would be saved into</span><br><span class="line">                               `/backup/host.example.com/etc/profile&#x27;. The host name is based on the inventory name.</span><br><span class="line">      fail_on_missing:       # When set to `yes&#x27;, the task will fail if the remote file cannot be read for any reason. Prior to Ansible 2.5, setting this</span><br><span class="line">                               would only fail if the source file was missing. The default was changed to `yes&#x27; in Ansible</span><br><span class="line">                               2.5.</span><br><span class="line">      flat:                  # Allows you to override the default behavior of appending hostname/path/to/file to the destination. If `dest&#x27; ends with &#x27;/&#x27;, it</span><br><span class="line">                               will use the basename of the source file, similar to the copy module. This can be useful if</span><br><span class="line">                               working with a single host, or if retrieving files that are uniquely named per host. If using</span><br><span class="line">                               multiple hosts with the same filename, the file will be overwritten for each host.</span><br><span class="line">      src:                   # (required) The file on the remote system to fetch. This `must&#x27; be a file, not a directory. Recursive fetching may be supported</span><br><span class="line">                               in a later release.</span><br><span class="line">      validate_checksum:     # Verify that the source and destination checksums match after the files are fetched.</span><br></pre></td></tr></table></figure><h2 id="file模块"><a href="#file模块" class="headerlink" title="file模块"></a>file模块</h2><blockquote><p>管理文件和文件属性</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">access_time:           # This parameter indicates the time the file&#x27;s access time should be set to. Should be `preserve&#x27; when no modification is</span><br><span class="line">                         required, `YYYYMMDDHHMM.SS&#x27; when using default time format, or `now&#x27;. Default is `None&#x27; meaning</span><br><span class="line">                         that `preserve&#x27; is the default for `state=[file,directory,link,hard]&#x27; and `now&#x27; is default for</span><br><span class="line">                         `state=touch&#x27;.</span><br><span class="line">access_time_format:    # When used with `access_time&#x27;, indicates the time format that must be used. Based on default Python format (see time.strftime</span><br><span class="line">                         doc).</span><br><span class="line">attributes:            # The attributes the resulting file or directory should have. To get supported flags look at the man page for `chattr&#x27; on the</span><br><span class="line">                         target system. This string should contain the attributes in the same order as the one displayed</span><br><span class="line">                         by `lsattr&#x27;. The `=&#x27; operator is assumed as default, otherwise `+&#x27; or `-&#x27; operators need to be</span><br><span class="line">                         included in the string.</span><br><span class="line">follow:                # This flag indicates that filesystem links, if they exist, should be followed. Previous to Ansible 2.5, this was `no&#x27; by</span><br><span class="line">                         default.</span><br><span class="line">force:                 # Force the creation of the symlinks in two cases: the source file does not exist (but will appear later); the destination</span><br><span class="line">                         exists and is a file (so, we need to unlink the `path&#x27; file and create symlink to the `src&#x27;</span><br><span class="line">                         file in place of it).</span><br><span class="line">group:                 # Name of the group that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">mode:                  # The permissions the resulting file or directory should have. For those used to `/usr/bin/chmod&#x27; remember that modes are</span><br><span class="line">                         actually octal numbers. You must either add a leading zero so that Ansible&#x27;s YAML parser knows</span><br><span class="line">                         it is an octal number (like `0644&#x27; or `01777&#x27;) or quote it (like `&#x27;644&#x27;&#x27; or `&#x27;1777&#x27;&#x27;) so</span><br><span class="line">                         Ansible receives a string and can do its own conversion from string into number. Giving Ansible</span><br><span class="line">                         a number without following one of these rules will end up with a decimal number which will have</span><br><span class="line">                         unexpected results. As of Ansible 1.8, the mode may be specified as a symbolic mode (for</span><br><span class="line">                         example, `u+rwx&#x27; or `u=rw,g=r,o=r&#x27;).</span><br><span class="line">modification_time:     # This parameter indicates the time the file&#x27;s modification time should be set to. Should be `preserve&#x27; when no modification is</span><br><span class="line">                         required, `YYYYMMDDHHMM.SS&#x27; when using default time format, or `now&#x27;. Default is None meaning</span><br><span class="line">                         that `preserve&#x27; is the default for `state=[file,directory,link,hard]&#x27; and `now&#x27; is default for</span><br><span class="line">                         `state=touch&#x27;.</span><br><span class="line">modification_time_format:   # When used with `modification_time&#x27;, indicates the time format that must be used. Based on default Python format (see</span><br><span class="line">                         time.strftime doc).</span><br><span class="line">owner:                 # Name of the user that should own the file/directory, as would be fed to `chown&#x27;.</span><br><span class="line">path:                  # (required) Path to the file being managed.</span><br><span class="line">recurse:               # Recursively set the specified file attributes on directory contents. This applies only when `state&#x27; is set to `directory&#x27;.</span><br><span class="line">selevel:               # The level part of the SELinux file context. This is the MLS/MCS attribute, sometimes known as the `range&#x27;. When set to</span><br><span class="line">                         `_default&#x27;, it will use the `level&#x27; portion of the policy if available.</span><br><span class="line">serole:                # The role part of the SELinux file context. When set to `_default&#x27;, it will use the `role&#x27; portion of the policy if available.</span><br><span class="line">setype:                # The type part of the SELinux file context. When set to `_default&#x27;, it will use the `type&#x27; portion of the policy if available.</span><br><span class="line">seuser:                # The user part of the SELinux file context. By default it uses the `system&#x27; policy, where applicable. When set to `_default&#x27;,</span><br><span class="line">                         it will use the `user&#x27; portion of the policy if available.</span><br><span class="line">src:                   # Path of the file to link to. This applies only to `state=link&#x27; and `state=hard&#x27;. For `state=link&#x27;, this will also accept a</span><br><span class="line">                         non-existing path. Relative paths are relative to the file being created (`path&#x27;) which is how</span><br><span class="line">                         the Unix command `ln -s SRC DEST&#x27; treats relative paths.</span><br><span class="line">state:                 # If `absent&#x27;, directories will be recursively deleted, and files or symlinks will be unlinked. In the case of a directory, if</span><br><span class="line">                         `diff&#x27; is declared, you will see the files and folders deleted listed under `path_contents&#x27;.</span><br><span class="line">                         Note that `absent&#x27; will not cause `file&#x27; to fail if the `path&#x27; does not exist as the state did</span><br><span class="line">                         not change. If `directory&#x27;, all intermediate subdirectories will be created if they do not</span><br><span class="line">                         exist. Since Ansible 1.7 they will be created with the supplied permissions. If `file&#x27;, without</span><br><span class="line">                         any other options this works mostly as a &#x27;stat&#x27; and will return the current state of `path&#x27;.</span><br><span class="line">                         Even with other options (i.e `mode&#x27;), the file will be modified but will NOT be created if it</span><br><span class="line">                         does not exist; see the `touch&#x27; value or the [copy] or [template] module if you want that</span><br><span class="line">                         behavior. If `hard&#x27;, the hard link will be created or changed. If `link&#x27;, the symbolic link</span><br><span class="line">                         will be created or changed. If `touch&#x27; (new in 1.4), an empty file will be created if the</span><br><span class="line">                         `path&#x27; does not exist, while an existing file or directory will receive updated file access and</span><br><span class="line">                         modification times (similar to the way `touch&#x27; works from the command line).</span><br><span class="line">unsafe_writes:         # Influence when to use atomic operation to prevent data corruption or inconsistent reads from the target file. By default this</span><br><span class="line">                         module uses atomic operations to prevent data corruption or inconsistent reads from the target</span><br><span class="line">                         files, but sometimes systems are configured or just broken in ways that prevent this. One</span><br><span class="line">                         example is docker mounted files, which cannot be updated atomically from inside the container</span><br><span class="line">                         and can only be written in an unsafe manner. This option allows Ansible to fall back to unsafe</span><br><span class="line">                         methods of updating files when atomic operations fail (however, it doesn&#x27;t force Ansible to</span><br><span class="line">                         perform unsafe writes). IMPORTANT! Unsafe writes are subject to race conditions and can lead to</span><br><span class="line">                         data corruption.</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible学习笔记Part1</title>
      <link href="/posts/585051248/"/>
      <url>/posts/585051248/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参阅：</p><p>[1].<a href="http://ansible.com.cn/index.html">权威中文指南</a></p><p>[2].珂儿吖.<a href="https://www.cnblogs.com/keerya/p/7987886.html">自动化运维工具-ansible详解</a> </p><p>[3].马哥教育高薪实战中心.<a href="https://www.bilibili.com/video/BV18t411f7CN/?p=2&spm_id_from=pageDriver&vd_source=2dc7eca5405c9a121d23c3264875a285">ansible教程-马哥2019全新ansible入门到精通</a></p></blockquote><h1 id="ansible-简介"><a href="#ansible-简介" class="headerlink" title="ansible 简介"></a>ansible 简介</h1><p>传统的远程访问为C&#x2F;S模式，多台客户机访问一台服务器。</p><p>但ansible相反，一个主机（主控端）控制多台主机（被控端），且在控制端不需要安装agent，而是直接借助SSH服务实现（但存在效率差的问题）。</p><p>适用于中小型应用环境。</p><h2 id="ansible-是什么"><a href="#ansible-是什么" class="headerlink" title="ansible 是什么"></a>ansible 是什么</h2><h2 id="ansible-特点"><a href="#ansible-特点" class="headerlink" title="ansible 特点"></a>ansible 特点</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20230120151509309.png" alt="image-20230120151509309"></p><h2 id="ansible-架构图"><a href="#ansible-架构图" class="headerlink" title="ansible 架构图"></a>ansible 架构图</h2><p><img src="https://lptexas-cub.github.io/img/post/1204916-20171205163000628-69838828.png" alt="ansible 架构图"></p><ul><li><code>Ansible</code>：Ansible核心程序。</li><li><code>HostInventory</code>：记录由Ansible管理的主机信息，包括端口、密码、ip等。<ul><li>主机清单，让ansible知道访问哪些主机。</li></ul></li><li><code>Playbooks</code>：“剧本”YAML格式文件，多个任务定义在一个文件中，定义主机需要调用哪些模块来完成的功能。</li><li><code>CoreModules</code>：<strong>核心模块</strong>，主要操作是通过调用核心模块来完成管理任务。</li><li><code>CustomModules</code>：自定义模块，完成核心模块无法完成的功能，支持多种语言。</li><li><code>ConnectionPlugins</code>：连接插件，Ansible和Host通信使用。<ul><li>基于SSH协议实现</li></ul></li></ul><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20230120152353845.png" alt="image-20230120152353845"></p><p>ansible的命令来源</p><ul><li>cmdb(配置管理数据库) api调用</li><li>public&#x2F;private cloud api调用</li><li>user，普通用户<ul><li>实现管理的方式（1）<ul><li>Ad-Hoc方式，类似命令行的，一条一条命令执行。用于临时命令使用场景</li></ul></li></ul></li><li>ansible playbook，用户编写的剧本（命令集）<ul><li>实现管理的方式（2）<ul><li>Ansible-playbook方式，用于长期规划好的，大型项目场景，需要提前规划</li></ul></li></ul></li></ul><blockquote><p>通常使用后两种</p></blockquote><h1 id="ansible-任务执行"><a href="#ansible-任务执行" class="headerlink" title="ansible 任务执行"></a>ansible 任务执行</h1><h2 id="ansible-任务执行模式"><a href="#ansible-任务执行模式" class="headerlink" title="ansible 任务执行模式"></a>ansible 任务执行模式</h2><h2 id="ansible-执行流程"><a href="#ansible-执行流程" class="headerlink" title="ansible 执行流程"></a>ansible 执行流程</h2><h2 id="ansible-命令执行过程"><a href="#ansible-命令执行过程" class="headerlink" title="ansible 命令执行过程"></a>ansible 命令执行过程</h2><h1 id="ansible-配置详解"><a href="#ansible-配置详解" class="headerlink" title="ansible 配置详解"></a>ansible 配置详解</h1><h2 id="ansible-安装方式"><a href="#ansible-安装方式" class="headerlink" title="ansible 安装方式"></a>ansible 安装方式</h2><p>三种安装方法</p><blockquote><p>其它方法请参考<a href="http://ansible.com.cn/index.html">中文指南</a></p></blockquote><ol><li>使用红帽包管理器</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install epel-release -y #需要先安装epel包</span><br><span class="line">yum install ansible –y</span><br></pre></td></tr></table></figure><ol start="2"><li>使用pip工具</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install ansible</span><br></pre></td></tr></table></figure><ol start="3"><li>源码安装</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone git://github.com/ansible/ansible.git --recursive</span><br><span class="line">cd ./ansible</span><br><span class="line">source ./hacking/env-setup</span><br><span class="line">. ./hacking/env-setup.fish</span><br></pre></td></tr></table></figure><h1 id="ansible-命令详解"><a href="#ansible-命令详解" class="headerlink" title="ansible 命令详解"></a>ansible 命令详解</h1><p>命令的具体格式如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ansible &lt;host-pattern&gt; [-f forks] [-m module_name] [-a args]</span><br></pre></td></tr></table></figure><p>可以通过<code>ansible -h</code>来查看帮助</p><p>部分含义：</p><ul><li><code>-a MODULE_ARGS</code>　　　#模块的参数，如果执行默认COMMAND的模块，即是命令参数，如： “date”，“pwd”等等</li><li><code>-k</code>，<code>--ask-pass</code> #ask for SSH password。登录密码，提示输入SSH密码而不是假设基于密钥的验证</li><li><code>--ask-su-pass</code> #ask for su password。su切换密码</li><li><code>-K</code>，<code>--ask-sudo-pass</code> #ask for sudo password。提示密码使用sudo，sudo表示提权操作</li><li><code>--ask-vault-pass</code> #ask for vault password。假设我们设定了加密的密码，则用该选项进行访问</li><li><code>-B SECONDS</code> #后台运行超时时间</li><li><code>-C</code> #模拟运行环境并进行预运行，可以进行查错测试</li><li><code>-c CONNECTION</code> #连接类型使用</li><li><code>-f FORKS</code> #并行任务数，默认为5</li><li><code>-i INVENTORY</code> #指定主机清单的路径，默认为<code>/etc/ansible/hosts</code></li><li><code>--list-hosts</code> #查看有哪些主机组</li><li><code>-m MODULE_NAME</code> #执行模块的名字，默认使用 command 模块，所以如果是只执行单一命令可以不用 -m参数</li><li><code>-o</code> #压缩输出，尝试将所有结果在一行输出，一般针对收集工具使用</li><li><code>-S</code> #用 su 命令</li><li><code>-R SU_USER</code> #指定 su 的用户，默认为 root 用户</li><li><code>-s</code> #用 sudo 命令</li><li><code>-U SUDO_USER</code> #指定 sudo 到哪个用户，默认为 root 用户</li><li><code>-T TIMEOUT</code> #指定 ssh 默认超时时间，默认为10s，也可在配置文件中修改</li><li><code>-u REMOTE_USER</code> #远程用户，默认为 root 用户</li><li><code>-v</code> #查看详细信息，同时支持<code>-vvv</code>，<code>-vvvv</code>可查看更详细信息</li></ul><blockquote><p>在主机清单文件(&#x2F;etc&#x2F;ansible&#x2F;hosts)中，使用<code>ansible_ssh_port/user</code>可指定端口和用户</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nodejs学习笔记Part1</title>
      <link href="/posts/284660587/"/>
      <url>/posts/284660587/</url>
      
        <content type="html"><![CDATA[<h1 id="初识Nodejs"><a href="#初识Nodejs" class="headerlink" title="初识Nodejs"></a>初识Nodejs</h1><p>将JavaScript运行在Nodejs中，使其可以用于<code>后端开发</code>。</p><p>​——如果写了一段js在浏览器运行，那么是作为前端；如果写了一段js在Nodejs中运行，那么是作为后端开发。</p><p>Nodejs基于<code>V8引擎解析</code>和运行js代码。</p><p>Nodejs无法调用<code>BOM</code>和<code>DOM</code>等<code>浏览器内置API</code>。Nodejs提供一些基础的API类似浏览器内置的API。</p><h1 id="fs模块"><a href="#fs模块" class="headerlink" title="fs模块"></a><a href="https://blog.csdn.net/qq_30071415/article/details/117548642">fs模块</a></h1><p>官方提供的，用于操作文件的模块。它提供了一系列方法和属性，用来满足用户对文件操作的需求。</p><h2 id="模块使用"><a href="#模块使用" class="headerlink" title="模块使用"></a>模块使用</h2><blockquote><p>导入模块</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs= <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="方法和属性"><a href="#方法和属性" class="headerlink" title="方法和属性"></a><a href="https://blog.csdn.net/qq_30071415/article/details/117548642#t2">方法和属性</a></h2><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;1文件路径&#x27;</span>,<span class="string">&#x27;编码格式&#x27;</span>,回调函数(失败后返回的结果,成功后返回的结果)&#123;执行的函数操作&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1 导入</span></span><br><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//2 调用</span></span><br><span class="line"><span class="comment">//fs.readFile(&#x27;文件路径&#x27;,&#x27;编码格式&#x27;,回调函数(失败后返回的结果,成功后返回的结果)&#123;函数要执行的操作&#125;)</span></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;1.txt&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>,<span class="keyword">function</span>(<span class="params">err,data</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;————我是分隔符————&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="写入数据"><a href="#写入数据" class="headerlink" title="写入数据"></a>写入数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;1文件路径&#x27;</span>,<span class="string">&#x27;2写入的内容&#x27;</span>,<span class="string">&#x27;（3可选参数）数据编码格式&#x27;</span>,<span class="number">4</span>回调函数(失败后返回的结果)&#123;执行的函数操作&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fs=<span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;2.txt&#x27;</span>,<span class="string">&#x27;我是要写入的数据&#x27;</span>,<span class="string">&#x27;utf-8&#x27;</span>,<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">&#125;)</span><br><span class="line">fs.<span class="title function_">writeFile</span>(<span class="string">&#x27;2.txt&#x27;</span>,<span class="string">&#x27;我是要写入的数据&#x27;</span>,<span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="fs动态路径拼接问题"><a href="#fs动态路径拼接问题" class="headerlink" title="fs动态路径拼接问题"></a>fs动态路径拼接问题</h2><p>注意每次执行<code>node</code>命令时，会以执行命令所在目录作为路径，这会影响文件中使用相对路径的代码。</p><p>如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">PS</span> <span class="attr">D</span>:\<span class="title class_">Onedrive</span>\<span class="title class_">NodejsWork</span>\<span class="number">01</span> fs模块的使用&gt; cd ../</span><br><span class="line"><span class="variable constant_">PS</span> <span class="attr">D</span>:\<span class="title class_">Onedrive</span>\<span class="title class_">NodejsWork</span>&gt; node <span class="string">&#x27;.\01 fs模块的使用\01-readFile方法的使用.js&#x27;</span></span><br><span class="line">[<span class="title class_">Error</span>: <span class="attr">ENOENT</span>: no such file or directory, open <span class="string">&#x27;D:\Onedrive\NodejsWork\1.txt&#x27;</span>] &#123;</span><br><span class="line">  <span class="attr">errno</span>: -<span class="number">4058</span>,</span><br><span class="line">  <span class="attr">code</span>: <span class="string">&#x27;ENOENT&#x27;</span>,</span><br><span class="line">  <span class="attr">syscall</span>: <span class="string">&#x27;open&#x27;</span>,</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;D:\\Onedrive\\NodejsWork\\1.txt&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">————我是分隔符————</span><br><span class="line"><span class="literal">undefined</span></span><br></pre></td></tr></table></figure><p>解决方法：在代码中<code>使用绝对路径</code>。</p><div class="admonition info"><p class="admonition-title">简易方法</p><p>使用<code>__dirname</code>变量，可以获取当前文件所在目录的路径。</p></div><h1 id="path模块"><a href="#path模块" class="headerlink" title="path模块"></a>path模块</h1><p>官方提供的用于处理路径的模块。</p><h2 id="模块使用-1"><a href="#模块使用-1" class="headerlink" title="模块使用"></a>模块使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path=<span class="title function_">requre</span>(<span class="string">&#x27;path&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="方法和属性-1"><a href="#方法和属性-1" class="headerlink" title="方法和属性"></a><a href="https://www.runoob.com/nodejs/nodejs-path-module.html">方法和属性</a></h2><h3 id="连接路径"><a href="#连接路径" class="headerlink" title="连接路径"></a>连接路径</h3><p>用于连接路径。该方法的主要用途在于，会正确使用当前系统的路径分隔符，Unix系统是”&#x2F;“，Windows系统是”&quot;。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.<span class="title function_">join</span>([path1][, path2][, ...]) </span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">path.<span class="title function_">join</span>(<span class="string">&#x27;/a/b/c&#x27;</span>,<span class="string">&#x27;../&#x27;</span>,<span class="string">&#x27;d&#x27;</span>)</span><br><span class="line"><span class="comment">//结果为：/a/b/d   注意:  “ ../ ”会抵消一层路径</span></span><br></pre></td></tr></table></figure><h3 id="获取文件名"><a href="#获取文件名" class="headerlink" title="获取文件名"></a>获取文件名</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.<span class="title function_">basename</span>(<span class="string">&#x27;路径&#x27;</span>[, <span class="string">&#x27;需要被移除的后缀&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> path=<span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> pth=<span class="string">&#x27;/a/b/c.haha&#x27;</span></span><br><span class="line"><span class="keyword">const</span> name=path.<span class="title function_">basename</span>(pth,<span class="string">&#x27;.haha&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name) <span class="comment">//c</span></span><br></pre></td></tr></table></figure><p>获取文件后缀名</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path.<span class="title function_">extname</span>(<span class="string">&#x27;文件路径&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="http模块"><a href="#http模块" class="headerlink" title="http模块"></a>http模块</h1><p>官方提供的用于<code>创建web服务器</code>的模块，通过模块提供的<code>http.createServer()</code>方法可以方便的创建一台web服务器，对外提供Web资源服务。</p><h2 id="模块使用-2"><a href="#模块使用-2" class="headerlink" title="模块使用"></a>模块使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http=<span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="Web服务器组成"><a href="#Web服务器组成" class="headerlink" title="Web服务器组成"></a>Web服务器组成</h2><ol><li><strong>引入 required 模块：</strong>我们可以使用 <strong>require</strong> 指令来载入 Node.js 模块。</li><li><strong>创建服务器：</strong>服务器可以监听客户端的请求，类似于 Apache 、Nginx 等 HTTP 服务器。</li><li><strong>接收请求与响应请求</strong> 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。</li></ol><h3 id="创建第一个简单的web服务器"><a href="#创建第一个简单的web服务器" class="headerlink" title="创建第一个简单的web服务器"></a>创建第一个简单的web服务器</h3><blockquote><p>例1</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1 导入</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="comment">//2 创建服务器实例</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>();</span><br><span class="line"><span class="comment">//3 为服务器绑定request事件</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Someone visit our server!&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//4 启动服务器</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;server running at http://127.0.0.1:80&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>例2</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 required 模块</span></span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建服务器</span></span><br><span class="line">http.<span class="title function_">createServer</span>(<span class="keyword">function</span> (<span class="params">request, response</span>) &#123;</span><br><span class="line">    <span class="comment">// 发送 HTTP 头部 </span></span><br><span class="line">    <span class="comment">// HTTP 状态值: 200 : OK</span></span><br><span class="line">    <span class="comment">// 内容类型: text/plain</span></span><br><span class="line">    response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/plain&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 发送响应数据 &quot;Hello World&quot;</span></span><br><span class="line">    response.<span class="title function_">end</span>(<span class="string">&#x27;Hello World\n&#x27;</span>);</span><br><span class="line">&#125;).<span class="title function_">listen</span>(<span class="number">8088</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 终端打印如下信息</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server running at http://127.0.0.1:8088/&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="request请求对象"><a href="#request请求对象" class="headerlink" title="request请求对象"></a>request请求对象</h2><blockquote><p>绑定的requset方法中的回调函数，可以使用一个请求对象参数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;requset&#x27;</span>,<span class="keyword">function</span>(<span class="params">req</span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="请求对象常用属性"><a href="#请求对象常用属性" class="headerlink" title="请求对象常用属性"></a><a href="https://www.cnblogs.com/mpci/p/12971642.html">请求对象常用属性</a></h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">req.headers:</span> 返回的是一个对象, 对象中包揽了所有的请求报文头</span><br><span class="line"><span class="symbol">req.rawHeaders:</span> 返回的是一个数组, 数组中保存的都是请求报文头的字符串</span><br><span class="line"><span class="symbol">req.httpVersion:</span> 获取客户端请求所使用的HTTP版本</span><br><span class="line"><span class="symbol">req.method:</span> 获取客户端请求的方法</span><br><span class="line"><span class="symbol">req.url:</span> 获取客户端请求的路径</span><br></pre></td></tr></table></figure><h2 id="response响应对象"><a href="#response响应对象" class="headerlink" title="response响应对象"></a><a href="https://www.cnblogs.com/mpci/p/12973143.html">response响应对象</a></h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1 导入</span></span><br><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="comment">//2 创建服务器实例</span></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>();</span><br><span class="line"><span class="comment">//3 为服务器绑定request事件</span></span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>,<span class="keyword">function</span>(<span class="params">req,res</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Someone visit our server!&#x27;</span>)</span><br><span class="line">    res.<span class="title function_">end</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//4 启动服务器</span></span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">80</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server running at http://127.0.0.1:80&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="响应对象常用属性"><a href="#响应对象常用属性" class="headerlink" title="响应对象常用属性"></a><a href="https://www.cnblogs.com/mpci/p/12973143.html">响应对象常用属性</a></h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">res.<span class="title function_">write</span>(): 发送数据</span><br><span class="line">res.<span class="title function_">end</span>(): 每个请求都必须要调用response.<span class="title function_">end</span>(), 告诉服务器该响应的报文头, 报文体等等全部都已经响应完毕了, 可以结束本次响应如果要用response.<span class="title function_">end</span>()来响应数据的话, 数据必须是<span class="title class_">String</span>类型或者是<span class="title class_">Buffer</span>类型</span><br><span class="line"> res.<span class="title function_">setHeader</span>():  设置响应报文头, 如果不设置, 系统也会有默认的响应报文头, 并且会默认发送给浏览器当已经发送过响应报文头后,res.<span class="title function_">setHeader</span>()再次设置响应报文头, 否则会报错</span><br><span class="line">res.<span class="property">statusCode</span>: 设置<span class="variable constant_">HTTP</span>响应状态码</span><br><span class="line">res.<span class="property">statusMessage</span>: 设置<span class="variable constant_">HTTP</span>响应状态码对应的消息</span><br><span class="line">res.<span class="title function_">writeHead</span>(): 直接向客户端响应<span class="variable constant_">HTTP</span>响应报文头</span><br><span class="line"></span><br><span class="line">用法: </span><br><span class="line">            response.<span class="title function_">writeHead</span>(响应状态码, 响应消息, &#123;</span><br><span class="line">                <span class="string">&#x27;键&#x27;</span>: <span class="string">&#x27;值&#x27;</span>, </span><br><span class="line">                ...</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">中文乱码问题</p><p>在使用<code>res.end()</code>方法响应中文内容时乱码，可以尝试设置响应头<code>res.setHeader('Content-Type','text/html;charset=utf-8')</code>。</p></div><h2 id="根据不同url响应不同网页"><a href="#根据不同url响应不同网页" class="headerlink" title="根据不同url响应不同网页"></a>根据不同url响应不同网页</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> server = http.<span class="title function_">createServer</span>()</span><br><span class="line">server.<span class="title function_">on</span>(<span class="string">&#x27;request&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> url = req.<span class="property">url</span>;</span><br><span class="line">    <span class="keyword">let</span> content = <span class="string">&#x27;&lt;p&gt;404 not found&lt;/p&gt;&#x27;</span>;</span><br><span class="line">    res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Content-type&#x27;</span>, <span class="string">&#x27;text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (url === <span class="string">&#x27;/&#x27;</span>) url = <span class="string">&#x27;/index.html&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> fpath = path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;./05-根据不同url响应不同网页&#x27;</span>, url)</span><br><span class="line">    fs.<span class="title function_">readFile</span>(fpath, <span class="string">&#x27;utf-8&#x27;</span>, <span class="function">(<span class="params">err, data</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.<span class="title function_">end</span>(content+<span class="string">&quot;&lt;br&gt;&quot;</span>+err.<span class="property">message</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(err.<span class="property">message</span>)</span><br><span class="line">        &#125;;</span><br><span class="line">        content = data;</span><br><span class="line">        res.<span class="title function_">end</span>(content);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">server.<span class="title function_">listen</span>(<span class="number">80</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Server is running at 127.0.0.1:80&#x27;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h1><p>模块化是指在解决一个复杂问题时，自顶而下逐层将系统划分为若干模块的过程（化繁为简）。模块是可以组合、分解、更换的单元。</p><h2 id="模块分类"><a href="#模块分类" class="headerlink" title="模块分类"></a>模块分类</h2><h3 id="内置模块"><a href="#内置模块" class="headerlink" title="内置模块"></a>内置模块</h3><p>由Nodejs官方提供的，例如：fs、path、http等模块。</p><h3 id="自定义模块"><a href="#自定义模块" class="headerlink" title="自定义模块"></a>自定义模块</h3><p>由用户创建的每个js文件，都是自定义模块。</p><h3 id="第三方模块"><a href="#第三方模块" class="headerlink" title="第三方模块"></a>第三方模块</h3><p>非官方提供的模块。</p><h2 id="模块的加载和创建方法"><a href="#模块的加载和创建方法" class="headerlink" title="模块的加载和创建方法"></a>模块的加载和创建方法</h2><h3 id="加载模块"><a href="#加载模块" class="headerlink" title="加载模块"></a>加载模块</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 内置模块和第三方模块</span></span><br><span class="line"><span class="keyword">const</span> 常量名=<span class="built_in">require</span>(<span class="string">&#x27;直接使用模块名&#x27;</span>)</span><br><span class="line"><span class="comment">// 2. 用户自定义模块·</span></span><br><span class="line"><span class="keyword">const</span> 常量名=<span class="built_in">require</span>(<span class="string">&#x27;使用相对路径，文件名可以不写后缀&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="创建模块"><a href="#创建模块" class="headerlink" title="创建模块"></a>创建模块</h3><blockquote><p>自定义模块需要使用<code>module对象</code>在<code>exports属性</code>中挂载成员，外部才能使用模块的成员。</p></blockquote><h2 id="模块作用域"><a href="#模块作用域" class="headerlink" title="模块作用域"></a>模块作用域</h2><p>与函数作用域相似，在自定义模块中定义的变量、函数等，只能在模块内访问，这种模块级别的访问限制叫作模块作用域。</p><h3 id="作用域的优点"><a href="#作用域的优点" class="headerlink" title="作用域的优点"></a>作用域的优点</h3><p>防止了全局变量污染。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20230714193949406.png" alt="image-20230714193949406"></p><div class="admonition note"><p class="admonition-title">全局变量污染</p><p>如上图所示，在两个js文件中都对username的值进行了定义，但最终输出在控制台的值为ls，这是因为第二个文件login.js在reg.js之后被引入，所以后来者覆盖了之前的值。</p></div><h3 id="对外共享成员"><a href="#对外共享成员" class="headerlink" title="对外共享成员"></a>对外共享成员</h3><h4 id="module对象"><a href="#module对象" class="headerlink" title="module对象"></a>module对象</h4><p>存在于每个自定义模块中，它<code>存储了当前模块的相关信息</code>。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">module</span>)</span><br></pre></td></tr></table></figure><h5 id="共享的方法"><a href="#共享的方法" class="headerlink" title="共享的方法"></a>共享的方法</h5><blockquote><p>使用module对象的export属性共享模块中的成员</p></blockquote><p>方法一 挂载属性和方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.属性=<span class="string">&#x27;属性值&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.方法=<span class="keyword">function</span>(<span class="params">...</span>)&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方法二 直接指向一个新对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    属性:<span class="string">&#x27;属性值&#x27;</span>,</span><br><span class="line">    方法:<span class="keyword">function</span>(<span class="params">...</span>)&#123;...&#125;,</span><br><span class="line">        ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="exports对象"><a href="#exports对象" class="headerlink" title="exports对象"></a>exports对象</h4><blockquote><p>与module.exports指向同一个对象。用于简化书写。</p></blockquote><p>用法于<code>module.exports</code>相同。</p><p>建议不要混合使用。</p><div class="admonition note"><p class="admonition-title">使用注意</p><p>若将exports对象直接指向一个新对象，在使用require()导入时，则获取不到共享出去的成员了！</p></div><h4 id="exports和module-exports的使用误区"><a href="#exports和module-exports的使用误区" class="headerlink" title="exports和module.exports的使用误区"></a>exports和module.exports的使用误区</h4><p>虽然用法上相同，但是使用<code>require()</code>方法导入模块时，永远得到的是<code>module.exports</code>所指向的对象。</p><h2 id="模块化规范-CommonJS"><a href="#模块化规范-CommonJS" class="headerlink" title="模块化规范 CommonJS"></a>模块化规范 CommonJS</h2><p>Nodejs遵循了CommonJS模块化规范，CommonJS中规定了<code>模块的特性</code>和<code>各模块之间如何依赖</code>。</p><h3 id="CommonJS规定"><a href="#CommonJS规定" class="headerlink" title="CommonJS规定"></a>CommonJS规定</h3><ol><li>每个模块内部，module变量代表当前模块。</li><li>module变量是一个对象，它的exports属性是对外的接口。</li><li>加载某个模块，其实是加载模块的module.exports属性。require()方法用于加载模块。</li></ol><h1 id="npm和包"><a href="#npm和包" class="headerlink" title="npm和包"></a>npm和包</h1><p>Nodejs中第三方模块又称为包。</p><p>包由第三方开发，免费使用。</p><p>Nodejs内置模块仅提供一些底层API，而包基于内置模块封装而来，提供更高级的API，极大的提高了开发效率。</p><p>使用npm工具下载包。</p><h2 id="常用npm包"><a href="#常用npm包" class="headerlink" title="常用npm包"></a>常用npm包</h2><p><a href="https://momentjs.com/">格式化时间moment</a></p><h2 id="模块的加载机制"><a href="#模块的加载机制" class="headerlink" title="模块的加载机制"></a>模块的加载机制</h2><h3 id="内置模块-1"><a href="#内置模块-1" class="headerlink" title="内置模块"></a>内置模块</h3><p>优先从缓存中加载，不会反复执行<code>require</code>方法。</p><p>内置模块的优先级高于自定义模块。</p><h3 id="自定义模块-1"><a href="#自定义模块-1" class="headerlink" title="自定义模块"></a>自定义模块</h3><p>匹配自定义模块时Node会依次按照<code>确切文件名</code>、<code>补全.js</code>、<code>补全.json</code>、<code>补全.node</code>方式尝试导入。 </p><h3 id="第三方模块-1"><a href="#第三方模块-1" class="headerlink" title="第三方模块"></a>第三方模块</h3><p>首先查找当前目录下的<code>node_modules\tools</code>，其次是上一级目录，再是用户目录下（<code>C:\User\node_modules\tools</code>）、最后是node的安装目录下。</p><h3 id="目录作为模块"><a href="#目录作为模块" class="headerlink" title="目录作为模块"></a>目录作为模块</h3><ol><li>查找package.json文件，寻找main属性值，作为required的入口</li><li>找不到package.json或没有main属性值或无法解析，则加载目录下的index.js文件</li><li>上面都失败了，则报错。</li></ol><h1 id="Node-js-REPL-交互式解释器"><a href="#Node-js-REPL-交互式解释器" class="headerlink" title="Node.js REPL(交互式解释器)"></a><a href="https://www.runoob.com/nodejs/nodejs-repl.html">Node.js REPL(交互式解释器)</a></h1><blockquote><p>Node.js REPL(Read Eval Print Loop:交互式解释器) 表示一个电脑的环境，类似 Windows 系统的终端或 Unix&#x2F;Linux shell，我们可以在终端中输入命令，并接收系统的响应。</p></blockquote><p>Node 自带了交互式解释器，可以执行以下任务：</p><ul><li><strong>读取</strong> - 读取用户输入，解析输入的 Javascript 数据结构并存储在内存中。</li><li><strong>执行</strong> - 执行输入的数据结构</li><li><strong>打印</strong> - 输出结果</li><li><strong>循环</strong> - 循环操作以上步骤直到用户两次按下 <strong>ctrl-c</strong> 按钮退出。</li></ul><h1 id="Node-js-回调函数"><a href="#Node-js-回调函数" class="headerlink" title="Node.js 回调函数"></a>Node.js 回调函数</h1><blockquote><p>Node.js 异步编程的直接体现就是回调。</p><p>异步编程依托于回调来实现，但不能说使用了回调后程序就异步化了。</p><p>回调函数在完成任务后就会被调用，Node 使用了大量的回调函数，Node 所有 API 都支持回调函数。</p><p>回调函数一般作为函数的最后一个参数出现。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">foo1</span>(<span class="params">name, age, callback</span>) &#123; &#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo2</span>(<span class="params">value, callback1, callback2</span>) &#123; &#125;</span><br></pre></td></tr></table></figure><h2 id="阻塞代码"><a href="#阻塞代码" class="headerlink" title="阻塞代码"></a>阻塞代码</h2><blockquote><p>创建input文件，文件内容为<code>Hello world!</code></p></blockquote><blockquote><p>创建zusai.js文件，代码为</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;input.txt&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行结束!&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="非阻塞代码"><a href="#非阻塞代码" class="headerlink" title="非阻塞代码"></a>非阻塞代码</h2><blockquote><p>创建feizusai.js，代码为：</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"></span><br><span class="line">fs.<span class="title function_">readFile</span>(<span class="string">&#x27;input.txt&#x27;</span>, <span class="keyword">function</span> (<span class="params">err, data</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(err);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data.<span class="title function_">toString</span>());</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;程序执行结束!&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>两者效果相同，但效率不同。</p><p>前者需要先读取文件后执行输出程序，后者同时进行。</p></blockquote><h1 id="事件驱动程序"><a href="#事件驱动程序" class="headerlink" title="事件驱动程序"></a>事件驱动程序</h1><blockquote><p>监听事件触发操作</p></blockquote><blockquote><p>创建listenEvents.js</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">// 引入 events 模块</span><br><span class="line">var events = require(&#x27;events&#x27;);</span><br><span class="line">// 创建 eventEmitter 对象</span><br><span class="line">var eventEmitter = new events.EventEmitter();</span><br><span class="line"> </span><br><span class="line">// 创建事件处理程序</span><br><span class="line">var connectHandler = function connected() &#123;</span><br><span class="line">   console.log(&#x27;连接成功。&#x27;);</span><br><span class="line">  </span><br><span class="line">   // 触发 data_received 事件 </span><br><span class="line">   eventEmitter.emit(&#x27;data_received&#x27;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">// 绑定 connection 事件处理程序</span><br><span class="line">eventEmitter.on(&#x27;connection&#x27;, connectHandler);</span><br><span class="line"> </span><br><span class="line">// 使用匿名函数绑定 data_received 事件</span><br><span class="line">eventEmitter.on(&#x27;data_received&#x27;, function()&#123;</span><br><span class="line">   console.log(&#x27;数据接收成功。&#x27;);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">// 触发 connection 事件 </span><br><span class="line">eventEmitter.emit(&#x27;connection&#x27;);</span><br><span class="line"> </span><br><span class="line">console.log(&quot;程序执行完毕。&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ansible报错解决方案</title>
      <link href="/posts/2213938717/"/>
      <url>/posts/2213938717/</url>
      
        <content type="html"><![CDATA[<h1 id="配置相关"><a href="#配置相关" class="headerlink" title="配置相关"></a>配置相关</h1><blockquote><p>10.10.10.5 | FAILED! &#x3D;&gt; {<br> “msg”: “Using a SSH password instead of a key is not possible because Host Key checking is enabled and sshpass does not support this.  Please add this host’s fingerprint to your known_hosts file to manage this host.”<br>}</p></blockquote><p>需要添加对应主机到信任清单。</p><p>解决方法：</p><ol><li><p>使用ssh连接一次对应主机（会让你输入yes&#x2F;no，输入yes）</p></li><li><p>设置参数为不检查key</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ansible/ansible.cfg</span><br><span class="line">在文件中进行搜索定位到</span><br><span class="line"></span><br><span class="line">:/host_key_checking</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">uncomment this to <span class="built_in">disable</span> SSH key host checking</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">host_key_checking = False</span></span><br><span class="line">修改后：</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">uncomment this to <span class="built_in">disable</span> SSH key host checking</span></span><br><span class="line"></span><br><span class="line">host_key_checking = False</span><br></pre></td></tr></table></figure><blockquote><p>[WARNING]: Platform linux on host -.-.-.- is using the discovered Python interpreter at &#x2F;usr&#x2F;bin&#x2F;python, but future installation of another Python interpreter could change this. See <a href="https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html">https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html</a> for more information.</p></blockquote><p>在<code>/etc/ansible/ansible.cfg</code>中的<code>[default]</code>中添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">interpreter_python=auto_legacy_silent</span></span><br></pre></td></tr></table></figure><blockquote><p>ssh-copy-id出现以下错误Permission denied, please try again.</p></blockquote><p>在目标主机的<code>sshd_config</code>文件中开启<code>允许root用户登录</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sshd_config</span></span><br><span class="line">PermitRootLogin yes</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启ssh服务</span></span><br><span class="line">/path/to/ssh restart</span><br></pre></td></tr></table></figure><h1 id="roles相关"><a href="#roles相关" class="headerlink" title="roles相关"></a>roles相关</h1><blockquote><p>[ERROR]: failed to download the file: <urlopen error timed out><br>[WARNING]: - geerlingguy.nginx was NOT installed successfully.<br>ERROR! - you can use –ignore-errors to skip failed roles and finish processing the list.</p></blockquote><p>安装某些role时，出现<urlopen error timed out>错误</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ansible </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vi/vim文本编辑工具</title>
      <link href="/posts/561881313/"/>
      <url>/posts/561881313/</url>
      
        <content type="html"><![CDATA[<h1 id="启用右键粘贴"><a href="#启用右键粘贴" class="headerlink" title="启用右键粘贴"></a><a href="https://blog.csdn.net/foryouslgme/article/details/52688285">启用右键粘贴</a></h1><p>方法一</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set mouse-=a</span><br></pre></td></tr></table></figure><p>方法二</p><blockquote><p>编辑 ~&#x2F;.vimrc 文件，加入如下代码：</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if has(&#x27;mouse&#x27;) </span><br><span class="line">set mouse-=a </span><br><span class="line">endif </span><br></pre></td></tr></table></figure><blockquote><p>补充：</p><p>vi的三种模式:<code>命令模式</code>、<code>插入模式</code>、<code>可视模式</code>。鼠标可以启动于各种模式中:</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">The mouse can be enabled for different modes:</span><br><span class="line">n Normal mode（普通模式）</span><br><span class="line">v Visual mode（可视模式）</span><br><span class="line">i Insert mode（插入模式）</span><br><span class="line">c Command-line mode（命令行模式）</span><br><span class="line">h all previous modes when editing a help file（当编辑一个帮助文件时，开启所有模式）</span><br><span class="line">a all previous modes（所有模式）</span><br><span class="line">r for |hit-enter| and |more-prompt| prompt（提示输入|更多提示|提示 模式）</span><br></pre></td></tr></table></figure><h1 id="显示行号"><a href="#显示行号" class="headerlink" title="显示行号"></a>显示行号</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:set num</span><br></pre></td></tr></table></figure><h2 id="切换至某行"><a href="#切换至某行" class="headerlink" title="切换至某行"></a>切换至某行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:n #n为行号</span><br></pre></td></tr></table></figure><h2 id="设置为系统默认编辑器"><a href="#设置为系统默认编辑器" class="headerlink" title="设置为系统默认编辑器"></a>设置为系统默认编辑器</h2><blockquote><p>修改环境变量<code>EDITOR</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">临时</span></span><br><span class="line">export EDITOR=vim</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">登录时生效（~/.bashrc或~/.profile）</span></span><br><span class="line">echo &quot;export EDITOR=vim&quot; &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置到全局（/etc/bashrc或/etc/profile）</span></span><br><span class="line">echo &quot;export EDITOR=vim&quot; &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure><h1 id="快速复制-x2F-粘贴一行"><a href="#快速复制-x2F-粘贴一行" class="headerlink" title="快速复制&#x2F;粘贴一行"></a>快速复制&#x2F;粘贴一行</h1><h2 id="复制"><a href="#复制" class="headerlink" title="复制"></a>复制</h2><p><code>yy</code></p><div class="admonition note"><p class="admonition-title">复制多行</p><p><code>nyy</code>，如<code>3yy</code>，复制三行</p></div><h2 id="粘贴"><a href="#粘贴" class="headerlink" title="粘贴"></a>粘贴</h2><p><code>p</code></p><h1 id="删除行"><a href="#删除行" class="headerlink" title="删除行"></a>删除行</h1><h2 id="删除一行"><a href="#删除一行" class="headerlink" title="删除一行"></a>删除一行</h2><p><code>dd</code></p><h2 id="删除多行"><a href="#删除多行" class="headerlink" title="删除多行"></a>删除多行</h2><p><code>ndd</code></p><h2 id="删除包括所在行前面的全部"><a href="#删除包括所在行前面的全部" class="headerlink" title="删除包括所在行前面的全部"></a>删除包括所在行<code>前面</code>的全部</h2><p><code>dG</code></p><h2 id="删除包括所在行后面的全部"><a href="#删除包括所在行后面的全部" class="headerlink" title="删除包括所在行后面的全部"></a>删除包括所在行<code>后面</code>的全部</h2><p><code>dgg</code></p><h1 id="撤销一次操作"><a href="#撤销一次操作" class="headerlink" title="撤销一次操作"></a>撤销一次操作</h1><p><code>u</code></p><h1 id="还原一次操作"><a href="#还原一次操作" class="headerlink" title="还原一次操作"></a>还原一次操作</h1><p><code>Ctrl+r</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文本编辑器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记Part4</title>
      <link href="/posts/1236126269/"/>
      <url>/posts/1236126269/</url>
      
        <content type="html"><![CDATA[<h1 id="Python-MySQL-mysql-connector-驱动"><a href="#Python-MySQL-mysql-connector-驱动" class="headerlink" title="Python MySQL - mysql-connector 驱动"></a>Python MySQL - mysql-connector 驱动</h1><blockquote><p>报错</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Host &#x27;xxx&#x27; is not allowed to connect to this MariaDB server</span><br></pre></td></tr></table></figure><blockquote><p>解决方案</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &#x27;root&#x27;@&#x27;%&#x27; identified by &#x27;password&#x27; with grant option;</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">注意</p><p><em>注</em>**意：**<em>如果你的 MySQL 是 8.0 版本，密码插件验证方式发生了变化，早期版本为 mysql_native_password，8.0 版本为 caching_sha2_password，所以需要做些改变：</em></p><p>[mysqld]</p><h1>user=mysql</h1><h1>validate_password.policy=LOW</h1><p>default_authentication_plugin=mysql_native_password</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者</span></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;可访问root的主机&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root的密码&#x27;;</span><br></pre></td></tr></table></figure><h2 id="创建数据库链接"><a href="#创建数据库链接" class="headerlink" title="创建数据库链接"></a>创建数据库链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import mysql.connector as mysqlc</span><br><span class="line">mydb=mysqlc.connect(</span><br><span class="line">host=&quot; &quot;,</span><br><span class="line">    user=&quot; &quot;,</span><br><span class="line">    passwd=&quot; &quot;,</span><br><span class="line">)</span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line">mycursor.execute(&quot;&quot;)</span><br></pre></td></tr></table></figure><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#创建数据库test_db</span><br><span class="line">mycursor = mydb.cursor()</span><br><span class="line">mycursor.execute(&quot;CREATE DATABASE test_db&quot;)</span><br></pre></td></tr></table></figure><blockquote><p> 使用execute()执行sql语句</p></blockquote><h2 id="关闭数据库链接"><a href="#关闭数据库链接" class="headerlink" title="关闭数据库链接"></a>关闭数据库链接</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mydb.close()</span><br></pre></td></tr></table></figure><h2 id="数据库查询操作"><a href="#数据库查询操作" class="headerlink" title="数据库查询操作"></a>数据库查询操作</h2><p>Python查询Mysql使用 fetchone() 方法获取单条数据, 使用fetchall() 方法获取多条数据。</p><ul><li><strong>fetchone():</strong> 该方法获取下一个查询结果集。结果集是一个对象</li><li><strong>fetchall():</strong> 接收全部的返回结果行.</li><li><strong>rowcount:</strong> 这是一个只读属性，并返回执行execute()方法后影响的行数。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记Part1</title>
      <link href="/posts/969359026/"/>
      <url>/posts/969359026/</url>
      
        <content type="html"><![CDATA[<h1 id="Python的安装配置及编辑器的使用"><a href="#Python的安装配置及编辑器的使用" class="headerlink" title="Python的安装配置及编辑器的使用"></a>Python的安装配置及编辑器的使用</h1><h1 id="Anaconda介绍"><a href="#Anaconda介绍" class="headerlink" title="Anaconda介绍"></a>Anaconda介绍</h1><p>Anaconda是一种主流的工具包，第三方资源包丰富，不仅内嵌 Python，还包括了 Numpy、Pandas、SciPy、<br>Scikit-learn、Matplotlib、NLTK 等科学计算的主流模块以及两款不同风格的编辑器 Jupyter<br>和 Spyder。</p><h1 id="Python的基础语法"><a href="#Python的基础语法" class="headerlink" title="Python的基础语法"></a>Python的基础语法</h1><h2 id="编码设置"><a href="#编码设置" class="headerlink" title="编码设置"></a><a href="https://www.php.cn/python-tutorials-415790.html#:~:text=python%E8%AE%BE%E7%BD%AE%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%9A1%E3%80%81%E4%BD%BF%E7%94%A8%E2%80%9Ccoding%3D%3C%E7%BC%96%E7%A0%81%E5%90%8D%E7%A7%B0%3E%E2%80%9D%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%BE%E7%BD%AE%EF%BC%9B2%E3%80%81%E4%BD%BF%E7%94%A8%E2%80%9C-%2A-%20coding%3A%20%3C%E7%BC%96%E7%A0%81%E5%90%8D%E7%A7%B0%3E%20-%2A-%E2%80%9D%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%BE%E7%BD%AE%EF%BC%9B3%E3%80%81%E4%BD%BF%E7%94%A8%E2%80%9Cvim%3A%20set,fileencoding%3D%3C%E7%BC%96%E7%A0%81%E5%90%8D%E7%A7%B0%3E%20%3A%E2%80%9D%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AE%BE%E7%BD%AE%E3%80%82%20%E5%9C%A8python2%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E4%B8%AD%E5%A6%82%E6%9E%9C%E8%A6%81%E5%A1%AB%E5%86%99%E4%B8%AD%E6%96%87%EF%BC%8C%E5%BF%85%E9%A1%BB%E8%A6%81%E5%8A%A0%E4%B8%80%E8%A1%8C%E4%BB%A3%E7%A0%81%E7%94%A8%E6%9D%A5%E5%A3%B0%E6%98%8E%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E7%9A%84%E6%B3%A8%E9%87%8A%EF%BC%8C%E5%90%A6%E5%88%99python2%E4%BC%9A%E6%8A%A5%E9%94%99%E3%80%82%20%E5%9B%A0%E4%B8%BA%E5%AE%83%E9%BB%98%E8%AE%A4%E7%9A%84%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F%E6%98%AFASCII%E3%80%82%20%E8%80%8C%E5%9C%A8python3%E4%B8%AD%E5%B7%B2%E7%BB%8F%E6%B2%A1%E6%9C%89%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%E4%BA%86%EF%BC%8Cpython3%E9%BB%98%E8%AE%A4%E7%9A%84%E6%96%87%E4%BB%B6%E7%BC%96%E7%A0%81%E6%98%AFUTF-8%E3%80%82">编码设置</a></h2><blockquote><p>编码注释一般放在第一或第二行（第一行一般是<a href="https://blog.csdn.net/weixin_43343549/article/details/104877211">shebang</a>）</p></blockquote><h3 id="方法一-冒号形式"><a href="#方法一-冒号形式" class="headerlink" title="方法一 冒号形式"></a>方法一 冒号形式</h3><blockquote><p>这种带冒号的方法，在大多数编译器中都能被正确识别。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python </span></span><br><span class="line"><span class="comment"># -*- coding: &lt;编码名称&gt; -*-</span></span><br></pre></td></tr></table></figure><h3 id="方法二-等号形式"><a href="#方法二-等号形式" class="headerlink" title="方法二 等号形式"></a>方法二 等号形式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python </span></span><br><span class="line"><span class="comment"># coding=&lt;编码名称&gt;</span></span><br></pre></td></tr></table></figure><h3 id="方法三-vim形式"><a href="#方法三-vim形式" class="headerlink" title="方法三 vim形式"></a>方法三 vim形式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python </span></span><br><span class="line"><span class="comment"># vim: set fileencoding=&lt;编码名称&gt; :</span></span><br></pre></td></tr></table></figure><h2 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a><a href="https://www.runoob.com/python3/python3-basic-syntax.html">标识符</a></h2><ul><li>第一个字符必须是字母表中字母或下划线 <strong>_</strong> 。</li><li>标识符的其他的部分由字母、数字和下划线组成。</li><li>标识符对大小写敏感。</li></ul><p>在 Python 3 中，可以用中文作为变量名，非 ASCII 标识符也是允许的了。</p><h2 id="python保留字"><a href="#python保留字" class="headerlink" title="python保留字"></a>python保留字</h2><blockquote><p>保留字即关键字，我们不能把它们用作任何标识符名称。Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> keyword</span><br><span class="line"><span class="built_in">print</span>(keyword.kwlist)</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><h3 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a>单行注释</h3><blockquote><p>使用#号</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是单行注释</span></span><br></pre></td></tr></table></figure><h3 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a>多行注释</h3><blockquote><p>使用<code>’’&#39;</code>或<code>”&quot;&quot;</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一个注释</span></span><br><span class="line"><span class="comment"># 第二个注释</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">第三注释</span></span><br><span class="line"><span class="string">第四注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">第五注释</span></span><br><span class="line"><span class="string">第六注释</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h2 id="行与缩进"><a href="#行与缩进" class="headerlink" title="行与缩进"></a>行与缩进</h2><blockquote><p>python最具特色的就是使用缩进来表示代码块，不需要使用大括号 <strong>{}</strong> 。</p><p>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数。</p></blockquote><h2 id="多行语句"><a href="#多行语句" class="headerlink" title="多行语句"></a>多行语句</h2><blockquote><p>Python 通常是一行写完一条语句，但如果语句很长，我们可以使用反斜杠 *<em>*</em> 来实现多行语句，例如：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">total = item_one + \</span><br><span class="line">        item_two + \</span><br><span class="line">        item_three</span><br></pre></td></tr></table></figure><blockquote><p>在 [], {}, 或 () 中的多行语句，不需要使用反斜杠 <code>\</code>，例如：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">total = [<span class="string">&#x27;item_one&#x27;</span>, <span class="string">&#x27;item_two&#x27;</span>, <span class="string">&#x27;item_three&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;item_four&#x27;</span>, <span class="string">&#x27;item_five&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="Python2-与-Python3-print-不换行"><a href="#Python2-与-Python3-print-不换行" class="headerlink" title="Python2 与 Python3 print 不换行"></a>Python2 与 Python3 print 不换行</h2><h3 id="Python-3-x"><a href="#Python-3-x" class="headerlink" title="Python 3.x"></a>Python 3.x</h3><blockquote><p>在 Python 3.x 中，我们可以在 <strong>print()</strong> 函数中添加 <strong>end&#x3D;””</strong> 参数，这样就可以实现不换行效果。</p><p>在 Python3 中， print 函数的参数 <strong><code>end</code></strong> 默认值为 **”\n”<strong>，即</strong>end&#x3D;”\n”<strong>，表示换行，给 <strong><code>end</code></strong> 赋值为空, 即</strong>end&#x3D;””**，就不会换行了，例如：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world&#x27;</span>,end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="Python-2-x"><a href="#Python-2-x" class="headerlink" title="Python 2.x"></a>Python 2.x</h3><blockquote><p>在 Python 2.x中， 可以使用逗号 <strong>,</strong> 来实现不换行效果：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="string">&#x27;hello world&#x27;</span> ,</span><br></pre></td></tr></table></figure><h3 id="Python2-x-与-Python3-x-兼容模式"><a href="#Python2-x-与-Python3-x-兼容模式" class="headerlink" title="Python2.x 与 Python3.x 兼容模式"></a>Python2.x 与 Python3.x 兼容模式</h3><blockquote><p>如果 Python2.x 版本想使用 Python3.x 的 <strong>print</strong> 函数，可以导入 <strong><strong>future</strong></strong> 包，该包禁用 Python2.x 的 print 语句，采用 Python3.x 的 <strong>print</strong> 函数。以下代码在 Python2.x 与 Python3.x 都能正确执行：</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br></pre></td></tr></table></figure><h2 id="import-与-from…import"><a href="#import-与-from…import" class="headerlink" title="import 与 from…import"></a>import 与 from…import</h2><p>在 python 用 <strong>import</strong> 或者 <strong>from…import</strong> 来导入相应的模块。</p><ul><li>将整个模块(somemodule)导入，格式为： <strong>import somemodule</strong></li><li>从某个模块中导入某个函数,格式为： <strong>from somemodule import somefunction</strong></li><li>从某个模块中导入多个函数,格式为： <strong>from somemodule import firstfunc, secondfunc, thirdfunc</strong></li><li>将某个模块中的全部函数导入，格式为： <strong>from somemodule import *</strong></li></ul><h2 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a><a href="https://www.runoob.com/python3/python3-command-line-arguments.html">命令行参数</a></h2><blockquote><p>在命令行中运行某程序时，携带的参数</p></blockquote><h1 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h1><p>内置的 <code>type()</code> 函数可以用来查询变量所指的对象类型。</p><blockquote><p>多个变量赋值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = b = c = <span class="number">1</span></span><br><span class="line">a, b, c = <span class="number">1</span>, <span class="number">2</span>, <span class="string">&quot;c&quot;</span></span><br></pre></td></tr></table></figure><h2 id="数字型Number"><a href="#数字型Number" class="headerlink" title="数字型Number"></a>数字型Number</h2><blockquote><p>python中数字有四种类型：整数、布尔型、浮点数和复数。</p></blockquote><ul><li><strong>int</strong> (整数), 如 1, 只有一种整数类型 int，表示为长整型，没有 python2 中的 Long。</li><li><strong>bool</strong> (布尔), 如 True。</li><li><strong>float</strong> (浮点数), 如 1.23、3E-2</li><li><strong>complex</strong> (复数), 如 1 + 2j、 1.1 + 2.2j</li></ul><p>使用<code>isinstance()</code>函数判断是否为<code>int</code>型</p><hr><p>isinstance 和 type 的区别在于：</p><ul><li>type()不会认为子类是一种父类类型。</li><li>isinstance()会认为子类是一种父类类型。</li></ul><hr><h2 id="字符串String"><a href="#字符串String" class="headerlink" title="字符串String"></a>字符串String</h2><ul><li>Python 中单引号 <strong>‘</strong> 和双引号 <strong>“</strong> 使用完全相同。</li><li>使用三引号(<strong>‘’’</strong> 或 <strong>“””</strong>)可以指定一个多行字符串。</li><li>转义符 <code>\</code>。</li><li>反斜杠可以用来转义，使用 <strong>r</strong> 可以让反斜杠不发生转义。 如 <strong>r”this is a line with \n”</strong> 则 <strong>\n</strong> 会显示，并不是换行。</li><li>按字面意义级联字符串，如 <strong>“this “ “is “ “string”</strong> 会被自动转换为 <strong>this is string</strong>。</li><li>字符串可以用 <strong>+</strong> 运算符连接在一起，用 ***** 运算符重复。</li><li>Python 中的字符串有两种索引方式，从左往右以 <strong>0</strong> 开始，从右往左以 <strong>-1</strong> 开始。</li><li>Python 中的字符串不能改变。</li><li>Python 没有单独的字符类型，一个字符就是长度为 1 的字符串。</li><li>字符串的截取的语法格式如下：<strong>变量[头下标:尾下标:步长]</strong></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">word = <span class="string">&#x27;字符串&#x27;</span></span><br><span class="line">sentence = <span class="string">&quot;这是一个句子。&quot;</span></span><br><span class="line">paragraph = <span class="string">&quot;&quot;&quot;这是一个段落，</span></span><br><span class="line"><span class="string">可以由多行组成&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;123456789&#x27;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)                 <span class="comment"># 输出字符串</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">0</span>:-<span class="number">1</span>])           <span class="comment"># 输出第一个到倒数第二个的所有字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">0</span>])              <span class="comment"># 输出字符串第一个字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">2</span>:<span class="number">5</span>])            <span class="comment"># 输出从第三个开始到第五个的字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">2</span>:])             <span class="comment"># 输出从第三个开始后的所有字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>[<span class="number">1</span>:<span class="number">5</span>:<span class="number">2</span>])          <span class="comment"># 输出从第二个开始到第五个且每隔一个的字符（步长为2）</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span> * <span class="number">2</span>)             <span class="comment"># 输出字符串两次</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span> + <span class="string">&#x27;你好&#x27;</span>)         <span class="comment"># 连接字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------------------------------&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello\nworld&#x27;</span>)      <span class="comment"># 使用反斜杠(\)+n转义特殊字符</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">r&#x27;hello\nworld&#x27;</span>)     <span class="comment"># 在字符串前面添加一个 r，表示原始字符串，不会发生转义</span></span><br></pre></td></tr></table></figure><h2 id="列表型List"><a href="#列表型List" class="headerlink" title="列表型List"></a>列表型List</h2><blockquote><p>列表可以完成大多数集合类的数据结构实现。</p><p>列表中元素的类型可以不相同，它支持数字，字符串甚至可以包含列表（所谓嵌套）。</p><p>列表是写在方括号 <strong>[]</strong> 之间、用逗号分隔开的元素列表。</p><p>和字符串一样，列表同样可以被索引和截取，列表被截取后返回一个包含所需元素的新列表。</p></blockquote><p><a href="https://blog.csdn.net/weixin_39933895/article/details/110554524">切片表达式</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">变量[头下标:尾下标]</span><br><span class="line"><span class="comment">#完整的切片表达式</span></span><br><span class="line">变量[头下表:尾下标:步长]  <span class="comment">#object[start_index : end_index : step]</span></span><br></pre></td></tr></table></figure><blockquote><p>step为1时，表示从左往右截取（默认）；</p><p>step为-1时，表示从右往左截取。</p></blockquote><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\list_slicing1_new1.png"></p><blockquote><p>List 内置了有很多方法，例如 append()、pop() 等等</p></blockquote><h2 id="集合Set"><a href="#集合Set" class="headerlink" title="集合Set"></a><a href="https://www.runoob.com/python3/python3-set.html">集合Set</a></h2><blockquote><p>集合（set）是由一个或数个形态各异的大小整体组成的，构成集合的事物或对象称作元素或是成员。</p><p>基本功能是进行成员关系测试和删除重复元素。</p><p>可以使用大括号 <strong>{ }</strong> 或者 <strong>set()</strong> 函数创建集合。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">parame = &#123;value01,value02,...&#125;</span><br><span class="line"><span class="comment">#或者</span></span><br><span class="line">parame = <span class="built_in">set</span>(iteration) <span class="comment">#其中，iteration 就表示字符串、列表、元组、range 对象等可迭代对象。</span></span><br></pre></td></tr></table></figure><p>注意：创建一个空集合必须用 <strong>set()</strong> 而不是 **{ }**，因为 <strong>{ }</strong> 是用来创建一个空字典。</p><h2 id="字典Dictionary"><a href="#字典Dictionary" class="headerlink" title="字典Dictionary"></a>字典Dictionary</h2><blockquote><p>列表是有序的对象集合，字典是无序的对象集合。两者之间的区别在于：字典当中的元素是通过键来存取的，而不是通过偏移存取。</p><ol><li>字典是一种映射类型，字典用 <strong>{ }</strong> 标识，它是一个无序的 <strong>键(key) : 值(value)</strong> 的集合。</li><li>键(key)必须使用不可变类型。</li><li>在同一个字典中，键(key)必须是唯一的。</li></ol><p>可以使用大括号**{ }**或 **dict()**函数创建字典。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#构造函数 dict() 可以直接从键值对序列中构建字典</span></span><br><span class="line"><span class="built_in">dict</span>([(<span class="string">&#x27;key1&#x27;</span>:value1),(<span class="string">&#x27;key2&#x27;</span>,value2),...]) </span><br><span class="line"><span class="built_in">dict</span>(key1=value1,key2=value2,...) </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Python推导式</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>&#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;</span><br><span class="line">&#123;<span class="number">2</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">6</span>: <span class="number">36</span>&#125;</span><br></pre></td></tr></table></figure><blockquote><p>**{x: x*<em>2 for x in (2, 4, 6)}</em>* 该代码使用的是字典推导式，更多推导式内容可以参考：<a href="https://www.runoob.com/python3/python-comprehensions.html">Python 推导式</a>。</p></blockquote><h2 id="元组Tuple"><a href="#元组Tuple" class="headerlink" title="元组Tuple"></a>元组Tuple</h2><blockquote><p>与列表和字符串一样，元组也是序列的一种，使用()定义，元组与列表不同的是元组中的值不能改变，字符串和元组都具有不可变性。</p></blockquote><h2 id="文件File"><a href="#文件File" class="headerlink" title="文件File"></a>文件File</h2><blockquote><p>文件可以永久保存数据，数据分析中最普遍的是对 txt、csv、excel 等文件进行读写处理。下面分别以上述类型文件为例，掌握在 Python 中如何读取这些类型文件。</p></blockquote><h4 id="txt"><a href="#txt" class="headerlink" title="txt"></a>txt</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#读取</span></span><br><span class="line">fp=<span class="built_in">open</span>(<span class="string">&#x27;news.txt&#x27;</span>)</span><br><span class="line">a=fp.read()</span><br><span class="line">fp.close()</span><br><span class="line"><span class="built_in">print</span>(a) </span><br><span class="line"><span class="comment">#写入</span></span><br></pre></td></tr></table></figure><h3 id="csv"><a href="#csv" class="headerlink" title="csv"></a>csv</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#读取</span></span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_colwidth&#x27;</span>, <span class="number">50</span>) </span><br><span class="line"><span class="comment">#设置列的宽度</span></span><br><span class="line">train=pd.read_csv(<span class="string">&quot;doubanpd.csv&quot;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line"><span class="comment">#encoding=&#x27;gbk&#x27;表示对中文进行解码</span></span><br><span class="line"><span class="built_in">print</span>(train[<span class="string">&#x27;reviews&#x27;</span>].head())</span><br><span class="line"><span class="comment">#写入</span></span><br></pre></td></tr></table></figure><h3 id="excel"><a href="#excel" class="headerlink" title="excel"></a>excel</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment">#读取</span></span><br><span class="line"><span class="comment">#列名与数据对齐显示</span></span><br><span class="line">pd.set_option(<span class="string">&#x27;display.unicode.ambiguous_as_wide&#x27;</span>, <span class="literal">True</span>) </span><br><span class="line">pd.set_option(<span class="string">&#x27;display.unicode.east_asian_width&#x27;</span>, <span class="literal">True</span>) </span><br><span class="line">x=pd.read_excel(<span class="string">&#x27;mtpl.xls&#x27;</span>, <span class="string">&#x27;Sheet1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(x.head()) </span><br><span class="line"><span class="comment">#默认显示前 5 行</span></span><br><span class="line"><span class="comment">#写入</span></span><br></pre></td></tr></table></figure><h1 id="Python数据类型转换"><a href="#Python数据类型转换" class="headerlink" title="Python数据类型转换"></a>Python数据类型转换</h1><p>Python 数据类型转换可以分为两种：</p><ul><li>隐式类型转换 - 自动完成</li><li>显式类型转换 - 需要使用类型函数来转换</li></ul><h2 id="隐式类型转换"><a href="#隐式类型转换" class="headerlink" title="隐式类型转换"></a>隐式类型转换</h2><p>在进行运算时，会自动完成。如整型与浮点型计算会转换为浮点型。即较小的数据类型会转换为较大的数据类型。</p><h2 id="显式类型转换"><a href="#显式类型转换" class="headerlink" title="显式类型转换"></a>显式类型转换</h2><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-int.html">int(x[ ,base])</a></td><td align="left">将x转换为一个整数</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-float.html">float(x)</a></td><td align="left">将x转换到一个浮点数</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-complex.html">complex(real [,imag])</a></td><td align="left">创建一个复数</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-str.html">str(x)</a></td><td align="left">将对象 x 转换为字符串</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-repr.html">repr(x)</a></td><td align="left">将对象 x 转换为表达式字符串</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-eval.html">eval(str)</a></td><td align="left">用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-tuple.html">tuple(s)</a></td><td align="left">将序列 s 转换为一个元组</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(s)</a></td><td align="left">将序列 s 转换为一个列表</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-set.html">set(s)</a></td><td align="left">转换为可变集合</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-dict.html">dict(d)</a></td><td align="left">创建一个字典。d 必须是一个 (key, value)元组序列。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-frozenset.html">frozenset(s)</a></td><td align="left">转换为不可变集合</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-chr.html">chr(x)</a></td><td align="left">将一个整数转换为一个字符</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-ord.html">ord(x)</a></td><td align="left">将一个字符转换为它的整数值</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-hex.html">hex(x)</a></td><td align="left">将一个整数转换为一个十六进制字符串</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python-func-oct.html">oct(x)</a></td><td align="left">将一个整数转换为一个八进制字符串</td></tr></tbody></table><h1 id="Python-推导式"><a href="#Python-推导式" class="headerlink" title="Python 推导式"></a>Python 推导式</h1><p>Python 推导式是一种独特的数据处理方式，可以从一个数据序列构建另一个新的数据序列的结构体。</p><p>Python 支持各种数据结构的推导式：</p><ul><li>列表(list)推导式</li><li>字典(dict)推导式</li><li>集合(set)推导式</li><li>元组(tuple)推导式</li></ul><h2 id="列表推导式"><a href="#列表推导式" class="headerlink" title="列表推导式"></a>列表推导式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[表达式 <span class="keyword">for</span> 变量 <span class="keyword">in</span> 列表] </span><br><span class="line">[out_exp_res <span class="keyword">for</span> out_exp <span class="keyword">in</span> input_list]</span><br><span class="line"></span><br><span class="line">或者 </span><br><span class="line"></span><br><span class="line">[表达式 <span class="keyword">for</span> 变量 <span class="keyword">in</span> 列表 <span class="keyword">if</span> 条件]</span><br><span class="line">[out_exp_res <span class="keyword">for</span> out_exp <span class="keyword">in</span> input_list <span class="keyword">if</span> condition]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>names = [<span class="string">&#x27;Bob&#x27;</span>,<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;alice&#x27;</span>,<span class="string">&#x27;Jerry&#x27;</span>,<span class="string">&#x27;Wendy&#x27;</span>,<span class="string">&#x27;Smith&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>new_names = [name.upper()<span class="keyword">for</span> name <span class="keyword">in</span> names <span class="keyword">if</span> <span class="built_in">len</span>(name)&gt;<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">print</span>(new_names)</span><br><span class="line">[<span class="string">&#x27;ALICE&#x27;</span>, <span class="string">&#x27;JERRY&#x27;</span>, <span class="string">&#x27;WENDY&#x27;</span>, <span class="string">&#x27;SMITH&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="字典推导式"><a href="#字典推导式" class="headerlink" title="字典推导式"></a>字典推导式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123; key_expr: value_expr <span class="keyword">for</span> value <span class="keyword">in</span> collection &#125;</span><br><span class="line">&#123;键表达式:键值表达式 <span class="keyword">for</span> 变量 <span class="keyword">in</span> 列表&#125;</span><br><span class="line"></span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line">&#123; key_expr: value_expr <span class="keyword">for</span> value <span class="keyword">in</span> collection <span class="keyword">if</span> condition &#125;</span><br><span class="line">&#123;键表达式:键值表达式 <span class="keyword">for</span> 变量 <span class="keyword">in</span> 列表 <span class="keyword">if</span> 条件&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">listdemo = [<span class="string">&#x27;Google&#x27;</span>,<span class="string">&#x27;User&#x27;</span>, <span class="string">&#x27;Taobao&#x27;</span>]</span><br><span class="line"><span class="comment"># 将列表中各字符串值为键，各字符串的长度为值，组成键值对</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>newdict = &#123;key:<span class="built_in">len</span>(key) <span class="keyword">for</span> key <span class="keyword">in</span> listdemo&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>newdict</span><br><span class="line">&#123;<span class="string">&#x27;Google&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;User&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;Taobao&#x27;</span>: <span class="number">6</span>&#125;</span><br><span class="line">-------------------------------------------</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic = &#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> (<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dic</span><br><span class="line">&#123;<span class="number">2</span>: <span class="number">4</span>, <span class="number">4</span>: <span class="number">16</span>, <span class="number">6</span>: <span class="number">36</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(dic)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="集合推导式"><a href="#集合推导式" class="headerlink" title="集合推导式"></a>集合推导式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123; expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> &#125;</span><br><span class="line">或</span><br><span class="line">&#123; expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> <span class="keyword">if</span> conditional &#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#计算数字 1,2,3 的平方数：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>setnew = &#123;i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>setnew</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>&#125;</span><br><span class="line"><span class="comment">#判断不是 abc 的字母并输出：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = &#123;x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="string">&#x27;abracadabra&#x27;</span> <span class="keyword">if</span> x <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&#x27;abc&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&#123;<span class="string">&#x27;d&#x27;</span>, <span class="string">&#x27;r&#x27;</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(a)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;set&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="元组推导式（生成器表达式）"><a href="#元组推导式（生成器表达式）" class="headerlink" title="元组推导式（生成器表达式）"></a>元组推导式（生成器表达式）</h2><blockquote><p>元组推导式可以利用 range 区间、元组、列表、字典和集合等数据类型，快速生成一个满足指定需求的元组。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> )</span><br><span class="line">或</span><br><span class="line">(expression <span class="keyword">for</span> item <span class="keyword">in</span> <span class="type">Sequence</span> <span class="keyword">if</span> conditional )</span><br></pre></td></tr></table></figure><blockquote><p>元组推导式和列表推导式的用法也完全相同，只是元组推导式是用 <strong>()</strong> 圆括号将各部分括起来，而列表推导式用的是中括号 **[]**，另外元组推导式返回的结果是一个生成器对象。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#生成一个包含数字 1~9 的元组：</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = (x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">&lt;generator <span class="built_in">object</span> &lt;genexpr&gt; at <span class="number">0x7faf6ee20a50</span>&gt;  <span class="comment"># 返回的是生成器对象</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">tuple</span>(a)       <span class="comment"># 使用 tuple() 函数，可以直接将生成器对象转换成元组</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>)</span><br></pre></td></tr></table></figure><h1 id="Python3-解释器"><a href="#Python3-解释器" class="headerlink" title="Python3 解释器"></a><a href="https://www.runoob.com/python3/python3-interpreter.html">Python3 解释器</a></h1><h2 id="交互式编程"><a href="#交互式编程" class="headerlink" title="交互式编程"></a>交互式编程</h2><h2 id="脚本式编程"><a href="#脚本式编程" class="headerlink" title="脚本式编程"></a>脚本式编程</h2><h1 id="Python3-运算符"><a href="#Python3-运算符" class="headerlink" title="Python3 运算符"></a>Python3 运算符</h1><h2 id="Python数值运算"><a href="#Python数值运算" class="headerlink" title="Python数值运算"></a>Python数值运算</h2><blockquote><p>运算符</p><p>以下假设变量 <strong>a&#x3D;10</strong>，变量 <strong>b&#x3D;21</strong>：</p></blockquote><table><thead><tr><th>+</th><th>加 - 两个对象相加</th><th>a + b 输出结果 30</th></tr></thead><tbody><tr><td>-</td><td>减 - 得到负数或是一个数减去另一个数</td><td>a - b 输出结果 -10</td></tr><tr><td>*</td><td>乘 - 两个数相乘或是返回一个被重复若干次的字符串</td><td>a * b 输出结果 200</td></tr><tr><td>&#x2F;</td><td>除 - x除以y</td><td>b &#x2F; a 输出结果 2</td></tr><tr><td>%</td><td>取模 - 返回除法的余数</td><td>b % a 输出结果 0</td></tr><tr><td>**</td><td>幂 - 返回x的y次幂</td><td>a**b 为10的20次方， 输出结果 100000000000000000000</td></tr><tr><td>&#x2F;&#x2F;</td><td>取整除 - 返回商的整数部分（<strong>向下取整</strong>）</td><td>&gt;&gt;&gt; 9&#x2F;&#x2F;2<br> 4 <br>&gt;&gt; -9&#x2F;&#x2F;2 <br>-5</td></tr></tbody></table><h2 id="Python比较运算符"><a href="#Python比较运算符" class="headerlink" title="Python比较运算符"></a>Python比较运算符</h2><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&#x3D;&#x3D;</td><td align="left">等于 - 比较对象是否相等</td><td align="left">(a &#x3D;&#x3D; b) 返回 False。</td></tr><tr><td align="left">!&#x3D;</td><td align="left">不等于 - 比较两个对象是否不相等</td><td align="left">(a !&#x3D; b) 返回 True。</td></tr><tr><td align="left">&gt;</td><td align="left">大于 - 返回x是否大于y</td><td align="left">(a &gt; b) 返回 False。</td></tr><tr><td align="left">&lt;</td><td align="left">小于 - 返回x是否小于y。所有比较运算符返回1表示真，返回0表示假。这分别与特殊的变量True和False等价。注意，这些变量名的大写。</td><td align="left">(a &lt; b) 返回 True。</td></tr><tr><td align="left">&gt;&#x3D;</td><td align="left">大于等于 - 返回x是否大于等于y。</td><td align="left">(a &gt;&#x3D; b) 返回 False。</td></tr><tr><td align="left">&lt;&#x3D;</td><td align="left">小于等于 - 返回x是否小于等于y。</td><td align="left">(a &lt;&#x3D; b) 返回 True。</td></tr></tbody></table><h2 id="Python赋值运算符"><a href="#Python赋值运算符" class="headerlink" title="Python赋值运算符"></a>Python赋值运算符</h2><p>以下假设变量a为10，变量b为20：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">简单的赋值运算符</td><td align="left">c &#x3D; a + b 将 a + b 的运算结果赋值为 c</td></tr><tr><td align="left">+&#x3D;</td><td align="left">加法赋值运算符</td><td align="left">c +&#x3D; a 等效于 c &#x3D; c + a</td></tr><tr><td align="left">-&#x3D;</td><td align="left">减法赋值运算符</td><td align="left">c -&#x3D; a 等效于 c &#x3D; c - a</td></tr><tr><td align="left">*&#x3D;</td><td align="left">乘法赋值运算符</td><td align="left">c *&#x3D; a 等效于 c &#x3D; c * a</td></tr><tr><td align="left">&#x2F;&#x3D;</td><td align="left">除法赋值运算符</td><td align="left">c &#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F; a</td></tr><tr><td align="left">%&#x3D;</td><td align="left">取模赋值运算符</td><td align="left">c %&#x3D; a 等效于 c &#x3D; c % a</td></tr><tr><td align="left">**&#x3D;</td><td align="left">幂赋值运算符</td><td align="left">c **&#x3D; a 等效于 c &#x3D; c ** a</td></tr><tr><td align="left">&#x2F;&#x2F;&#x3D;</td><td align="left">取整除赋值运算符</td><td align="left">c &#x2F;&#x2F;&#x3D; a 等效于 c &#x3D; c &#x2F;&#x2F; a</td></tr><tr><td align="left">:&#x3D;</td><td align="left">海象运算符，可在表达式内部为变量赋值。<strong>Python3.8 版本新增运算符</strong>。</td><td align="left">在这个示例中，赋值表达式可以避免调用 len() 两次:<code>if (n := len(a)) &gt; 10:    print(f&quot;List is too long (&#123;n&#125; elements, expected &lt;= 10)&quot;)</code></td></tr></tbody></table><h2 id="Python位运算符"><a href="#Python位运算符" class="headerlink" title="Python位运算符"></a>Python位运算符</h2><p>按位运算符是把数字看作二进制来进行计算的。Python中的按位运算法则如下：</p><p>下表中变量 a 为 60，b 为 13二进制格式如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">a</span> <span class="string">=</span> <span class="number">0011 </span><span class="number">1100</span></span><br><span class="line"></span><br><span class="line"><span class="string">b</span> <span class="string">=</span> <span class="number">0000 </span><span class="number">1101</span></span><br><span class="line"></span><br><span class="line"><span class="string">-----------------</span></span><br><span class="line"></span><br><span class="line"><span class="string">a&amp;b</span> <span class="string">=</span> <span class="number">0000 </span><span class="number">1100</span></span><br><span class="line"></span><br><span class="line"><span class="string">a|b</span> <span class="string">=</span> <span class="number">0011 </span><span class="number">1101</span></span><br><span class="line"></span><br><span class="line"><span class="string">a^b</span> <span class="string">=</span> <span class="number">0011 </span><span class="number">0001</span></span><br><span class="line"></span><br><span class="line"><span class="string">~a</span>  <span class="string">=</span> <span class="number">1100 </span><span class="number">0011</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">&amp;</td><td align="left">按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0</td><td align="left">(a &amp; b) 输出结果 12 ，二进制解释： 0000 1100</td></tr><tr><td align="left">|</td><td align="left">按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。</td><td align="left">(a | b) 输出结果 61 ，二进制解释： 0011 1101</td></tr><tr><td align="left">^</td><td align="left">按位异或运算符：当两对应的二进位相异时，结果为1</td><td align="left">(a ^ b) 输出结果 49 ，二进制解释： 0011 0001</td></tr><tr><td align="left">~</td><td align="left">按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。**~x** 类似于 <strong>-x-1</strong></td><td align="left">(~a ) 输出结果 -61 ，二进制解释： 1100 0011， 在一个有符号二进制数的补码形式。</td></tr><tr><td align="left">&lt;&lt;</td><td align="left">左移动运算符：运算数的各二进位全部左移若干位，由”&lt;&lt;”右边的数指定移动的位数，高位丢弃，低位补0。</td><td align="left">a &lt;&lt; 2 输出结果 240 ，二进制解释： 1111 0000</td></tr><tr><td align="left">&gt;&gt;</td><td align="left">右移动运算符：把”&gt;&gt;”左边的运算数的各二进位全部右移若干位，”&gt;&gt;”右边的数指定移动的位数</td><td align="left">a &gt;&gt; 2 输出结果 15 ，二进制解释： 0000 1111</td></tr></tbody></table><h2 id="Python逻辑运算符"><a href="#Python逻辑运算符" class="headerlink" title="Python逻辑运算符"></a>Python逻辑运算符</h2><p>Python语言支持逻辑运算符，以下假设变量 a 为 10, b为 20:</p><table><thead><tr><th align="left">运算符</th><th align="left">逻辑表达式</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">and</td><td align="left">x and y</td><td align="left">布尔”与” - 如果 x 为 False，x and y 返回 x 的值，否则返回 y 的计算值。</td><td align="left">(a and b) 返回 20。</td></tr><tr><td align="left">or</td><td align="left">x or y</td><td align="left">布尔”或” - 如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。</td><td align="left">(a or b) 返回 10。</td></tr><tr><td align="left">not</td><td align="left">not x</td><td align="left">布尔”非” - 如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。</td><td align="left">not(a and b) 返回 False</td></tr></tbody></table><h2 id="Python成员运算符"><a href="#Python成员运算符" class="headerlink" title="Python成员运算符"></a>Python成员运算符</h2><p>除了以上的一些运算符之外，Python还支持成员运算符，测试实例中包含了一系列的成员，包括字符串，列表或元组。</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">in</td><td align="left">如果在指定的序列中找到值返回 True，否则返回 False。</td><td align="left">x 在 y 序列中 , 如果 x 在 y 序列中返回 True。</td></tr><tr><td align="left">not in</td><td align="left">如果在指定的序列中没有找到值返回 True，否则返回 False。</td><td align="left">x 不在 y 序列中 , 如果 x 不在 y 序列中返回 True。</td></tr></tbody></table><h2 id="Python身份运算符"><a href="#Python身份运算符" class="headerlink" title="Python身份运算符"></a>Python身份运算符</h2><p>身份运算符用于比较两个对象的存储单元</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">is</td><td align="left">is 是判断两个标识符是不是引用自一个对象</td><td align="left"><strong>x is y</strong>, 类似 <strong>id(x) &#x3D;&#x3D; id(y)</strong> , 如果引用的是同一个对象则返回 True，否则返回 False</td></tr><tr><td align="left">is not</td><td align="left">is not 是判断两个标识符是不是引用自不同对象</td><td align="left"><strong>x is not y</strong> ， 类似 **id(x) !&#x3D; id(y)**。如果引用的不是同一个对象则返回结果 True，否则返回 False。</td></tr></tbody></table><p><strong>注：</strong> <a href="https://www.runoob.com/python/python-func-id.html">id()</a> 函数用于获取对象内存地址。</p><p><strong>is 与 &#x3D;&#x3D; 区别：</strong></p><ul><li>is 用于判断两个变量引用对象是否为同一个， &#x3D;&#x3D; 用于判断引用变量的值是否相等。</li></ul><h2 id="Python运算符优先级"><a href="#Python运算符优先级" class="headerlink" title="Python运算符优先级"></a>Python运算符优先级</h2><p>以下表格列出了从最高到最低优先级的所有运算符， 相同单元格内的运算符具有相同优先级。 运算符均指二元运算，除非特别指出。 相同单元格内的运算符从左至右分组（除了幂运算是从右至左分组）：</p><table><thead><tr><th align="left">运算符</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>(expressions...)</code>,<code>[expressions...]</code>, <code>&#123;key: value...&#125;</code>, <code>&#123;expressions...&#125;</code></td><td align="left">圆括号的表达式</td></tr><tr><td align="left"><code>x[index]</code>, <code>x[index:index]</code>, <code>x(arguments...)</code>, <code>x.attribute</code></td><td align="left">读取，切片，调用，属性引用</td></tr><tr><td align="left">await x</td><td align="left">await 表达式</td></tr><tr><td align="left"><code>**</code></td><td align="left">乘方(指数)</td></tr><tr><td align="left"><code>+x</code>, <code>-x</code>, <code>~x</code></td><td align="left">正，负，按位非 NOT</td></tr><tr><td align="left"><code>*</code>, <code>@</code>, <code>/</code>, <code>//</code>, <code>%</code></td><td align="left">乘，矩阵乘，除，整除，取余</td></tr><tr><td align="left"><code>+</code>, <code>-</code></td><td align="left">加和减</td></tr><tr><td align="left"><code>&lt;&lt;</code>, <code>&gt;&gt;</code></td><td align="left">移位</td></tr><tr><td align="left"><code>&amp;</code></td><td align="left">按位与 AND</td></tr><tr><td align="left"><code>^</code></td><td align="left">按位异或 XOR</td></tr><tr><td align="left">&#96;</td><td align="left">&#96;</td></tr><tr><td align="left"><code>in,not in, is,is not, &lt;, &lt;=, &gt;, &gt;=, !=, ==</code></td><td align="left">比较运算，包括成员检测和标识号检测</td></tr><tr><td align="left"><code>not x</code></td><td align="left">逻辑非 NOT</td></tr><tr><td align="left"><code>and</code></td><td align="left">逻辑与 AND</td></tr><tr><td align="left"><code>or</code></td><td align="left">逻辑或 OR</td></tr><tr><td align="left"><code>if -- else</code></td><td align="left">条件表达式</td></tr><tr><td align="left"><code>lambda</code></td><td align="left">lambda 表达式</td></tr><tr><td align="left"><code>:=</code></td><td align="left">赋值表达式</td></tr></tbody></table><h1 id="数字Number"><a href="#数字Number" class="headerlink" title="数字Number"></a>数字Number</h1><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a>数学函数</h2><table><thead><tr><th align="left">函数</th><th align="left">返回值 ( 描述 )</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-abs.html">abs(x)</a></td><td align="left">返回数字的绝对值，如abs(-10) 返回 10</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-ceil.html">ceil(x)</a></td><td align="left">返回数字的上入整数，如math.ceil(4.1) 返回 5</td></tr><tr><td align="left">cmp(x, y)</td><td align="left">如果 x &lt; y 返回 -1, 如果 x &#x3D;&#x3D; y 返回 0, 如果 x &gt; y 返回 1。 <strong>Python 3 已废弃，使用 (x&gt;y)-(x&lt;y) 替换</strong>。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-exp.html">exp(x)</a></td><td align="left">返回e的x次幂(ex),如math.exp(1) 返回2.718281828459045</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-fabs.html">fabs(x)</a></td><td align="left">返回数字的绝对值，如math.fabs(-10) 返回10.0</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-floor.html">floor(x)</a></td><td align="left">返回数字的下舍整数，如math.floor(4.9)返回 4</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-log.html">log(x)</a></td><td align="left">如math.log(math.e)返回1.0,math.log(100,10)返回2.0</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-log10.html">log10(x)</a></td><td align="left">返回以10为基数的x的对数，如math.log10(100)返回 2.0</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-max.html">max(x1, x2,…)</a></td><td align="left">返回给定参数的最大值，参数可以为序列。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-min.html">min(x1, x2,…)</a></td><td align="left">返回给定参数的最小值，参数可以为序列。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-modf.html">modf(x)</a></td><td align="left">返回x的整数部分与小数部分，两部分的数值符号与x相同，整数部分以浮点型表示。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-pow.html">pow(x, y)</a></td><td align="left">x**y 运算后的值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-round.html">round(x [,n])</a></td><td align="left">返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数。<strong>其实准确的说是保留值将保留到离上一位更近的一端。</strong></td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-sqrt.html">sqrt(x)</a></td><td align="left">返回数字x的平方根。</td></tr></tbody></table><h2 id="随机数函数"><a href="#随机数函数" class="headerlink" title="随机数函数"></a>随机数函数</h2><p>随机数可以用于数学，游戏，安全等领域中，还经常被嵌入到算法中，用以提高算法效率，并提高程序的安全性。</p><p>Python包含以下常用随机数函数：</p><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-choice.html">choice(seq)</a></td><td align="left">从序列的元素中随机挑选一个元素，比如random.choice(range(10))，从0到9中随机挑选一个整数。</td></tr><tr><td align="left">[randrange (<a href="https://www.runoob.com/python3/python3-func-number-randrange.html">start,] stop [,step])</a></td><td align="left">从指定范围内，按指定基数递增的集合中获取一个随机数，基数默认值为 1</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-random.html">random()</a></td><td align="left">随机生成下一个实数，它在[0,1)范围内。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-seed.html">seed([x])</a></td><td align="left">改变随机数生成器的种子seed。如果你不了解其原理，你不必特别去设定seed，Python会帮你选择seed。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-shuffle.html">shuffle(lst)</a></td><td align="left">将序列的所有元素随机排序</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-uniform.html">uniform(x, y)</a></td><td align="left">随机生成下一个实数，它在[x,y]范围内。</td></tr></tbody></table><h2 id="三角函数"><a href="#三角函数" class="headerlink" title="三角函数"></a>三角函数</h2><p>Python包括以下三角函数：</p><table><thead><tr><th align="left">函数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-acos.html">acos(x)</a></td><td align="left">返回x的反余弦弧度值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-asin.html">asin(x)</a></td><td align="left">返回x的反正弦弧度值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-atan.html">atan(x)</a></td><td align="left">返回x的反正切弧度值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-atan2.html">atan2(y, x)</a></td><td align="left">返回给定的 X 及 Y 坐标值的反正切值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-cos.html">cos(x)</a></td><td align="left">返回x的弧度的余弦值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-hypot.html">hypot(x, y)</a></td><td align="left">返回欧几里德范数 sqrt(x<em>x + y</em>y)。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-sin.html">sin(x)</a></td><td align="left">返回的x弧度的正弦值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-tan.html">tan(x)</a></td><td align="left">返回x弧度的正切值。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-degrees.html">degrees(x)</a></td><td align="left">将弧度转换为角度,如degrees(math.pi&#x2F;2) ， 返回90.0</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/python3-func-number-radians.html">radians(x)</a></td><td align="left">将角度转换为弧度</td></tr></tbody></table><h2 id="数学常量"><a href="#数学常量" class="headerlink" title="数学常量"></a>数学常量</h2><table><thead><tr><th align="left">常量</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">pi</td><td align="left">数学常量 pi（圆周率，一般以π来表示）</td></tr><tr><td align="left">e</td><td align="left">数学常量 e，e即自然常数（自然常数）。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记Part2</title>
      <link href="/posts/3620298654/"/>
      <url>/posts/3620298654/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3-字符串"><a href="#Python3-字符串" class="headerlink" title="Python3 字符串"></a>Python3 字符串</h1><h2 id="Python转义字符"><a href="#Python转义字符" class="headerlink" title="Python转义字符"></a>Python转义字符</h2><p>在需要在字符中使用特殊字符时，python 用反斜杠 *<em>*</em> 转义字符。如下表：</p><table><thead><tr><th align="left">转义字符</th><th align="left">描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">(在行尾时)</td><td align="left">续行符</td><td align="left"><code>&gt;&gt;&gt; print(&quot;line1 \ ... line2 \ ... line3&quot;) line1 line2 line3 &gt;&gt;&gt; </code></td></tr><tr><td align="left">\</td><td align="left">反斜杠符号</td><td align="left"><code>&gt;&gt;&gt; print(&quot;\\&quot;) \</code></td></tr><tr><td align="left">&#39;</td><td align="left">单引号</td><td align="left"><code>&gt;&gt;&gt; print(&#39;\&#39;&#39;) &#39;</code></td></tr><tr><td align="left">&quot;</td><td align="left">双引号</td><td align="left"><code>&gt;&gt;&gt; print(&quot;\&quot;&quot;) &quot;</code></td></tr><tr><td align="left">\a</td><td align="left">响铃</td><td align="left"><code>&gt;&gt;&gt; print(&quot;\a&quot;)</code>执行后电脑有响声。</td></tr><tr><td align="left">\b</td><td align="left">退格(Backspace)</td><td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \b World!&quot;) Hello World!</code></td></tr><tr><td align="left">\000</td><td align="left">空</td><td align="left"><code>&gt;&gt;&gt; print(&quot;\000&quot;) &gt;&gt;&gt; </code></td></tr><tr><td align="left">\n</td><td align="left">换行</td><td align="left"><code>&gt;&gt;&gt; print(&quot;\n&quot;)  &gt;&gt;&gt;</code></td></tr><tr><td align="left">\v</td><td align="left">纵向制表符</td><td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \v World!&quot;) Hello        World! &gt;&gt;&gt;</code></td></tr><tr><td align="left">\t</td><td align="left">横向制表符</td><td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \t World!&quot;) Hello    World! &gt;&gt;&gt;</code></td></tr><tr><td align="left">\r</td><td align="left">回车，将 <strong>\r</strong> 后面的内容移到字符串开头，并逐一替换开头部分的字符，直至将 <strong>\r</strong> 后面的内容完全替换完成。</td><td align="left"><code>&gt;&gt;&gt; print(&quot;Hello\rWorld!&quot;) World! &gt;&gt;&gt; print(&#39;google User taobao\r123456&#39;) 123456 User taobao</code></td></tr><tr><td align="left">\f</td><td align="left">换页</td><td align="left"><code>&gt;&gt;&gt; print(&quot;Hello \f World!&quot;) Hello        World! &gt;&gt;&gt; </code></td></tr><tr><td align="left">\yyy</td><td align="left">八进制数，y 代表 0~7 的字符，例如：\012 代表换行。</td><td align="left"><code>&gt;&gt;&gt; print(&quot;\110\145\154\154\157\40\127\157\162\154\144\41&quot;) Hello World!</code></td></tr><tr><td align="left">\xyy</td><td align="left">十六进制数，以 \x 开头，y 代表的字符，例如：\x0a 代表换行</td><td align="left"><code>&gt;&gt;&gt; print(&quot;\x48\x65\x6c\x6c\x6f\x20\x57\x6f\x72\x6c\x64\x21&quot;) Hello World!</code></td></tr><tr><td align="left">\other</td><td align="left">其它的字符以普通格式输出</td><td align="left"></td></tr></tbody></table><h2 id="Python-字符串格式化"><a href="#Python-字符串格式化" class="headerlink" title="Python 字符串格式化"></a>Python 字符串格式化</h2><p>Python 支持格式化字符串的输出 。尽管这样可能会用到非常复杂的表达式，但最基本的用法是将一个值插入到一个有字符串格式符 %s 的字符串中。</p><p>在 Python 中，字符串格式化使用与 C 中 sprintf 函数一样的语法。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;我叫 %s 今年 %d 岁!&quot;</span> % (<span class="string">&#x27;小明&#x27;</span>, <span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>python字符串格式化符号:</p><table><thead><tr><th align="left">符  号</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">%c</td><td align="left">格式化字符及其ASCII码</td></tr><tr><td align="left">%s</td><td align="left">格式化字符串</td></tr><tr><td align="left">%d</td><td align="left">格式化整数</td></tr><tr><td align="left">%u</td><td align="left">格式化无符号整型</td></tr><tr><td align="left">%o</td><td align="left">格式化无符号八进制数</td></tr><tr><td align="left">%x</td><td align="left">格式化无符号十六进制数</td></tr><tr><td align="left">%X</td><td align="left">格式化无符号十六进制数（大写）</td></tr><tr><td align="left">%f</td><td align="left">格式化浮点数字，可指定小数点后的精度</td></tr><tr><td align="left">%e</td><td align="left">用科学计数法格式化浮点数</td></tr><tr><td align="left">%E</td><td align="left">作用同%e，用科学计数法格式化浮点数</td></tr><tr><td align="left">%g</td><td align="left">%f和%e的简写</td></tr><tr><td align="left">%G</td><td align="left">%f 和 %E 的简写</td></tr><tr><td align="left">%p</td><td align="left">用十六进制数格式化变量的地址</td></tr></tbody></table><p>格式化操作符辅助指令:</p><table><thead><tr><th align="left">符号</th><th align="left">功能</th></tr></thead><tbody><tr><td align="left">*</td><td align="left">定义宽度或者小数点精度</td></tr><tr><td align="left">-</td><td align="left">用做左对齐</td></tr><tr><td align="left">+</td><td align="left">在正数前面显示加号( + )</td></tr><tr><td align="left"><sp></td><td align="left">在正数前面显示空格</td></tr><tr><td align="left">#</td><td align="left">在八进制数前面显示零(‘0’)，在十六进制前面显示’0x’或者’0X’(取决于用的是’x’还是’X’)</td></tr><tr><td align="left">0</td><td align="left">显示的数字前面填充’0’而不是默认的空格</td></tr><tr><td align="left">%</td><td align="left">‘%%’输出一个单一的’%’</td></tr><tr><td align="left">(var)</td><td align="left">映射变量(字典参数)</td></tr><tr><td align="left">m.n.</td><td align="left">m 是显示的最小总宽度,n 是小数点后的位数(如果可用的话)</td></tr></tbody></table><p>Python2.6 开始，新增了一种格式化字符串的函数 <a href="https://www.runoob.com/python/att-string-format.html">str.format()</a>，它增强了字符串格式化的功能。</p><h2 id="Python三引号"><a href="#Python三引号" class="headerlink" title="Python三引号"></a>Python三引号</h2><p>python三引号允许一个字符串跨多行，字符串中可以包含换行符、制表符以及其他特殊字符。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"> </span><br><span class="line">para_str = <span class="string">&quot;&quot;&quot;这是一个多行字符串的实例</span></span><br><span class="line"><span class="string">多行字符串可以使用制表符</span></span><br><span class="line"><span class="string">TAB ( \t )。</span></span><br><span class="line"><span class="string">也可以使用换行符 [ \n ]。</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">print</span> (para_str)</span><br></pre></td></tr></table></figure><h2 id="f-string"><a href="#f-string" class="headerlink" title="f-string"></a>f-string</h2><p>f-string 是 python3.6 之后版本添加的，称之为字面量格式化字符串，是新的格式化字符串的语法。</p><p>之前我们习惯用百分号 (%):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="string">&quot;usage&quot;</span></span><br><span class="line">var2=<span class="string">&quot;f-string&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The %s of %s&#x27;</span> %(var1,var2)) </span><br></pre></td></tr></table></figure><p><strong>f-string</strong> 格式化字符串以 <strong>f</strong> 开头，后面跟着字符串，字符串中的表达式用大括号 {} 包起来，它会将变量或表达式计算后的值替换进去，实例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var1=<span class="string">&quot;usage&quot;</span></span><br><span class="line">var2=<span class="string">&quot;f-string&quot;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;The <span class="subst">&#123;var1&#125;</span> of <span class="subst">&#123;var2&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="Unicode-字符串"><a href="#Unicode-字符串" class="headerlink" title="Unicode 字符串"></a>Unicode 字符串</h2><p>在Python2中，普通字符串是以8位ASCII码进行存储的，而Unicode字符串则存储为16位unicode字符串，这样能够表示更多的字符集。使用的语法是在字符串前面加上前缀 <strong>u</strong>。</p><p>在Python3中，所有的字符串都是Unicode字符串。</p><h2 id="Python-的字符串内建函数"><a href="#Python-的字符串内建函数" class="headerlink" title="Python 的字符串内建函数"></a>Python 的字符串内建函数</h2><p>Python 的字符串常用内建函数如下：</p><table><thead><tr><th align="left">序号</th><th align="left">方法及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-capitalize.html">capitalize()</a> 将字符串的第一个字符转换为大写</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-center.html">center(width, fillchar)</a>返回一个指定的宽度 width 居中的字符串，fillchar 为填充的字符，默认为空格。</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-count.html">count(str, beg&#x3D; 0,end&#x3D;len(string))</a> 返回 str 在 string 里面出现的次数，如果 beg 或者 end 指定则返回指定范围内 str 出现的次数</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-decode.html">bytes.decode(encoding&#x3D;”utf-8”, errors&#x3D;”strict”)</a> Python3 中没有 decode 方法，但我们可以使用 bytes 对象的 decode() 方法来解码给定的 bytes 对象，这个 bytes 对象可以由 str.encode() 来编码返回。</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-encode.html">encode(encoding&#x3D;’UTF-8’,errors&#x3D;’strict’)</a> 以 encoding 指定的编码格式编码字符串，如果出错默认报一个ValueError 的异常，除非 errors 指定的是’ignore’或者’replace’</td></tr><tr><td align="left">6</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-endswith.html">endswith(suffix, beg&#x3D;0, end&#x3D;len(string))</a> 检查字符串是否以 suffix 结束，如果 beg 或者 end 指定则检查指定的范围内是否以 suffix 结束，如果是，返回 True,否则返回 False。</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-expandtabs.html">expandtabs(tabsize&#x3D;8)</a> 把字符串 string 中的 tab 符号转为空格，tab 符号默认的空格数是 8 。</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-find.html">find(str, beg&#x3D;0, end&#x3D;len(string))</a> 检测 str 是否包含在字符串中，如果指定范围 beg 和 end ，则检查是否包含在指定范围内，如果包含返回开始的索引值，否则返回-1</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-index.html">index(str, beg&#x3D;0, end&#x3D;len(string))</a> 跟find()方法一样，只不过如果str不在字符串中会报一个异常。</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isalnum.html">isalnum()</a> 如果字符串至少有一个字符并且所有字符都是字母或数字则返 回 True，否则返回 False</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isalpha.html">isalpha()</a> 如果字符串至少有一个字符并且所有字符都是字母或中文字则返回 True, 否则返回 False</td></tr><tr><td align="left">12</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isdigit.html">isdigit()</a> 如果字符串只包含数字则返回 True 否则返回 False..</td></tr><tr><td align="left">13</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-islower.html">islower()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是小写，则返回 True，否则返回 False</td></tr><tr><td align="left">14</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isnumeric.html">isnumeric()</a> 如果字符串中只包含数字字符，则返回 True，否则返回 False</td></tr><tr><td align="left">15</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isspace.html">isspace()</a> 如果字符串中只包含空白，则返回 True，否则返回 False.</td></tr><tr><td align="left">16</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-istitle.html">istitle()</a> 如果字符串是标题化的(见 title())则返回 True，否则返回 False</td></tr><tr><td align="left">17</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isupper.html">isupper()</a> 如果字符串中包含至少一个区分大小写的字符，并且所有这些(区分大小写的)字符都是大写，则返回 True，否则返回 False</td></tr><tr><td align="left">18</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-join.html">join(seq)</a> 以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</td></tr><tr><td align="left">19</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-len.html">len(string)</a> 返回字符串长度</td></tr><tr><td align="left">20</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-ljust.html">ljust(width[, fillchar])</a> 返回一个原字符串左对齐,并使用 fillchar 填充至长度 width 的新字符串，fillchar 默认为空格。</td></tr><tr><td align="left">21</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-lower.html">lower()</a> 转换字符串中所有大写字符为小写.</td></tr><tr><td align="left">22</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-lstrip.html">lstrip()</a> 截掉字符串左边的空格或指定字符。</td></tr><tr><td align="left">23</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-maketrans.html">maketrans()</a> 创建字符映射的转换表，对于接受两个参数的最简单的调用方式，第一个参数是字符串，表示需要转换的字符，第二个参数也是字符串表示转换的目标。</td></tr><tr><td align="left">24</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-max.html">max(str)</a> 返回字符串 str 中最大的字母。</td></tr><tr><td align="left">25</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-min.html">min(str)</a> 返回字符串 str 中最小的字母。</td></tr><tr><td align="left">26</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-replace.html">replace(old, new [, max])</a> 把 将字符串中的 old 替换成 new,如果 max 指定，则替换不超过 max 次。</td></tr><tr><td align="left">27</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rfind.html">rfind(str, beg&#x3D;0,end&#x3D;len(string))</a> 类似于 find()函数，不过是从右边开始查找.</td></tr><tr><td align="left">28</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rindex.html">rindex( str, beg&#x3D;0, end&#x3D;len(string))</a> 类似于 index()，不过是从右边开始.</td></tr><tr><td align="left">29</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rjust.html">rjust(width,[, fillchar])</a> 返回一个原字符串右对齐,并使用fillchar(默认空格）填充至长度 width 的新字符串</td></tr><tr><td align="left">30</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-rstrip.html">rstrip()</a> 删除字符串末尾的空格或指定字符。</td></tr><tr><td align="left">31</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-split.html">split(str&#x3D;””, num&#x3D;string.count(str))</a> 以 str 为分隔符截取字符串，如果 num 有指定值，则仅截取 num+1 个子字符串</td></tr><tr><td align="left">32</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-splitlines.html">splitlines([keepends])</a> 按照行(‘\r’, ‘\r\n’, \n’)分隔，返回一个包含各行作为元素的列表，如果参数 keepends 为 False，不包含换行符，如果为 True，则保留换行符。</td></tr><tr><td align="left">33</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-startswith.html">startswith(substr, beg&#x3D;0,end&#x3D;len(string))</a> 检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果beg 和 end 指定值，则在指定范围内检查。</td></tr><tr><td align="left">34</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-strip.html">strip([chars])</a> 在字符串上执行 lstrip()和 rstrip()</td></tr><tr><td align="left">35</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-swapcase.html">swapcase()</a> 将字符串中大写转换为小写，小写转换为大写</td></tr><tr><td align="left">36</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-title.html">title()</a> 返回”标题化”的字符串,就是说所有单词都是以大写开始，其余字母均为小写(见 istitle())</td></tr><tr><td align="left">37</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-translate.html">translate(table, deletechars&#x3D;””)</a> 根据 table 给出的表(包含 256 个字符)转换 string 的字符, 要过滤掉的字符放到 deletechars 参数中</td></tr><tr><td align="left">38</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-upper.html">upper()</a> 转换字符串中的小写字母为大写</td></tr><tr><td align="left">39</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-zfill.html">zfill (width)</a> 返回长度为 width 的字符串，原字符串右对齐，前面填充0</td></tr><tr><td align="left">40</td><td align="left"><a href="https://www.runoob.com/python3/python3-string-isdecimal.html">isdecimal()</a> 检查字符串是否只包含十进制字符，如果是返回 true，否则返回 false。</td></tr></tbody></table><h1 id="Python3-列表"><a href="#Python3-列表" class="headerlink" title="Python3 列表"></a>Python3 列表</h1><h2 id="更新列表"><a href="#更新列表" class="headerlink" title="更新列表"></a>更新列表</h2><p>你可以对列表的数据项进行修改或更新，你也可以使用 append() 方法来添加列表项，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">list</span>=[<span class="string">&#x27;book&#x27;</span>,<span class="string">&#x27;pen&#x27;</span>,<span class="string">&#x27;rubber&#x27;</span>]</span><br><span class="line"><span class="built_in">list</span>=<span class="built_in">list</span>.append(<span class="string">&#x27;notebook&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h2><p>可以使用 del 语句来删除列表的的元素，如下实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> <span class="built_in">list</span>[n]</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://cloud.tencent.com/developer/article/1817666">del语句的更多用法</a></p></blockquote><h2 id="Python列表脚本操作符"><a href="#Python列表脚本操作符" class="headerlink" title="Python列表脚本操作符"></a>Python列表脚本操作符</h2><p>列表对 + 和 * 的操作符与字符串相似。+ 号用于组合列表，* 号用于重复列表。</p><p>如下所示：</p><table><thead><tr><th align="left">Python 表达式</th><th align="left">结果</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">len([1, 2, 3])</td><td align="left">3</td><td align="left">长度</td></tr><tr><td align="left">[1, 2, 3] + [4, 5, 6]</td><td align="left">[1, 2, 3, 4, 5, 6]</td><td align="left">组合</td></tr><tr><td align="left">[‘Hi!’] * 4</td><td align="left">[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td><td align="left">重复</td></tr><tr><td align="left">3 in [1, 2, 3]</td><td align="left">True</td><td align="left">元素是否存在于列表中</td></tr><tr><td align="left">for x in [1, 2, 3]: print(x, end&#x3D;” “)</td><td align="left">1 2 3</td><td align="left">迭代</td></tr></tbody></table><h2 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h2><p>使用嵌套列表即在列表里创建其它列表，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Nested list</span></span><br><span class="line">a=[<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;1&#x27;</span>]</span><br><span class="line">b=[<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;2&#x27;</span>]</span><br><span class="line">n=[a,b]</span><br><span class="line"><span class="built_in">print</span>(n)</span><br></pre></td></tr></table></figure><h2 id="列表比较"><a href="#列表比较" class="headerlink" title="列表比较"></a>列表比较</h2><p>列表比较需要引入 <strong>operator</strong> 模块的 <strong>eq</strong> 方法（详见：<a href="https://www.runoob.com/python3/python-operator.html">Python operator 模块</a>）：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 导入 operator 模块</span></span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"></span><br><span class="line">a = [<span class="number">1</span>, <span class="number">2</span>]</span><br><span class="line">b = [<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">c = [<span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;operator.eq(a,b): &quot;</span>, operator.eq(a,b))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;operator.eq(c,b): &quot;</span>, operator.eq(c,b))</span><br></pre></td></tr></table></figure><h3 id="运算符函数"><a href="#运算符函数" class="headerlink" title="运算符函数"></a>运算符函数</h3><p>operator 模块提供了一套与 Python 的内置运算符对应的高效率函数。例如，<strong>operator.add(x, y)</strong> 与表达式 <strong>x+y</strong> 相同。</p><p>函数包含的种类有：对象的比较运算、逻辑运算、数学运算以及序列运算。</p><p>对象比较函数适用于所有的对象，函数名根据它们对应的比较运算符命名。</p><p>许多函数名与特殊方法名相同，只是没有双下划线。为了向后兼容性，也保留了许多包含双下划线的函数，为了表述清楚，建议使用没有双下划线的函数。</p><table><thead><tr><th align="left">运算</th><th align="left">语法</th><th align="left">函数</th></tr></thead><tbody><tr><td align="left">加法</td><td align="left"><code>a + b</code></td><td align="left"><code>add(a, b)</code></td></tr><tr><td align="left">字符串拼接</td><td align="left"><code>seq1 + seq2</code></td><td align="left"><code>concat(seq1, seq2)</code></td></tr><tr><td align="left">包含测试</td><td align="left"><code>obj in seq</code></td><td align="left"><code>contains(seq, obj)</code></td></tr><tr><td align="left">除法</td><td align="left"><code>a / b</code></td><td align="left"><code>truediv(a, b)</code></td></tr><tr><td align="left">除法</td><td align="left"><code>a // b</code></td><td align="left"><code>floordiv(a, b)</code></td></tr><tr><td align="left">按位与</td><td align="left"><code>a &amp; b</code></td><td align="left"><code>and_(a, b)</code></td></tr><tr><td align="left">按位异或</td><td align="left"><code>a ^ b</code></td><td align="left"><code>xor(a, b)</code></td></tr><tr><td align="left">按位取反</td><td align="left"><code>~ a</code></td><td align="left"><code>invert(a)</code></td></tr><tr><td align="left">按位或</td><td align="left">&#96;a</td><td align="left">b&#96;</td></tr><tr><td align="left">取幂</td><td align="left"><code>a ** b</code></td><td align="left"><code>pow(a, b)</code></td></tr><tr><td align="left">标识</td><td align="left"><code>a is b</code></td><td align="left"><code>is_(a, b)</code></td></tr><tr><td align="left">标识</td><td align="left"><code>a is not b</code></td><td align="left"><code>is_not(a, b)</code></td></tr><tr><td align="left">索引赋值</td><td align="left"><code>obj[k] = v</code></td><td align="left"><code>setitem(obj, k, v)</code></td></tr><tr><td align="left">索引删除</td><td align="left"><code>del obj[k]</code></td><td align="left"><code>delitem(obj, k)</code></td></tr><tr><td align="left">索引取值</td><td align="left"><code>obj[k]</code></td><td align="left"><code>getitem(obj, k)</code></td></tr><tr><td align="left">左移</td><td align="left"><code>a &lt;&lt; b</code></td><td align="left"><code>lshift(a, b)</code></td></tr><tr><td align="left">取模</td><td align="left"><code>a % b</code></td><td align="left"><code>mod(a, b)</code></td></tr><tr><td align="left">乘法</td><td align="left"><code>a * b</code></td><td align="left"><code>mul(a, b)</code></td></tr><tr><td align="left">矩阵乘法</td><td align="left"><code>a @ b</code></td><td align="left"><code>matmul(a, b)</code></td></tr><tr><td align="left">取反（算术）</td><td align="left"><code>- a</code></td><td align="left"><code>neg(a)</code></td></tr><tr><td align="left">取反（逻辑）</td><td align="left"><code>not a</code></td><td align="left"><code>not_(a)</code></td></tr><tr><td align="left">正数</td><td align="left"><code>+ a</code></td><td align="left"><code>pos(a)</code></td></tr><tr><td align="left">右移</td><td align="left"><code>a &gt;&gt; b</code></td><td align="left"><code>rshift(a, b)</code></td></tr><tr><td align="left">切片赋值</td><td align="left"><code>seq[i:j] = values</code></td><td align="left"><code>setitem(seq, slice(i, j), values)</code></td></tr><tr><td align="left">切片删除</td><td align="left"><code>del seq[i:j]</code></td><td align="left"><code>delitem(seq, slice(i, j))</code></td></tr><tr><td align="left">切片取值</td><td align="left"><code>seq[i:j]</code></td><td align="left"><code>getitem(seq, slice(i, j))</code></td></tr><tr><td align="left">字符串格式化</td><td align="left"><code>s % obj</code></td><td align="left"><code>mod(s, obj)</code></td></tr><tr><td align="left">减法</td><td align="left"><code>a - b</code></td><td align="left"><code>sub(a, b)</code></td></tr><tr><td align="left">真值测试</td><td align="left"><code>obj</code></td><td align="left"><code>truth(obj)</code></td></tr><tr><td align="left">比较</td><td align="left"><code>a &lt; b</code></td><td align="left"><code>lt(a, b)</code></td></tr><tr><td align="left">比较</td><td align="left"><code>a &lt;= b</code></td><td align="left"><code>le(a, b)</code></td></tr><tr><td align="left">相等</td><td align="left"><code>a == b</code></td><td align="left"><code>eq(a, b)</code></td></tr><tr><td align="left">不等</td><td align="left"><code>a != b</code></td><td align="left"><code>ne(a, b)</code></td></tr><tr><td align="left">比较</td><td align="left"><code>a &gt;= b</code></td><td align="left"><code>ge(a, b)</code></td></tr><tr><td align="left">比较</td><td align="left"><code>a &gt; b</code></td><td align="left"><code>gt(a, b)</code></td></tr></tbody></table><div class="admonition note"><p class="admonition-title">切片操作</p><p>切片操作只会输出开头索引值，不包括结尾索引的值。</p></div><h2 id="Python列表函数-amp-方法"><a href="#Python列表函数-amp-方法" class="headerlink" title="Python列表函数&amp;方法"></a>Python列表函数&amp;方法</h2><p>Python包含以下函数:</p><table><thead><tr><th align="left">序号</th><th align="left">函数</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-len.html">len(list)</a> 列表元素个数</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-max.html">max(list)</a> 返回列表元素最大值</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-min.html">min(list)</a> 返回列表元素最小值</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(seq)</a> 将元组转换为列表</td></tr></tbody></table><p>Python包含以下方法:</p><table><thead><tr><th align="left">序号</th><th align="left">方法</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-append.html">list.append(obj)</a> 在列表末尾添加新的对象</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-count.html">list.count(obj)</a> 统计某个元素在列表中出现的次数</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-extend.html">list.extend(seq)</a> 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-index.html">list.index(obj)</a> 从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-insert.html">list.insert(index, obj)</a> 将对象插入列表</td></tr><tr><td align="left">6</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-pop.html">list.pop([index&#x3D;-1])</a> 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-remove.html">list.remove(obj)</a> 移除列表中某个值的第一个匹配项</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-reverse.html">list.reverse()</a> 反向列表中元素</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-sort.html">list.sort( key&#x3D;None, reverse&#x3D;False)</a> 对原列表进行排序（<strong>reverse &#x3D; True</strong> 降序， <strong>reverse &#x3D; False</strong> 升序（默认））</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-clear.html">list.clear()</a> 清空列表</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-copy.html">list.copy()</a> 复制列表</td></tr></tbody></table><div class="admonition note"><p class="admonition-title">复制列表补充</p><p>列表可进行复制，浅复制没有复制子对象，原始数据子对象改变，复制对象子对象也会 跟着改变。深复制复制了子对象，原始数据子对象改变，复制对象子对象不会改变。   下面举个内嵌copy函数和copy模块的例子：</p></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">encoding:utf-8</span></span><br><span class="line"><span class="string">author:yh</span></span><br><span class="line"><span class="string">date:2023/2/22 11:20</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="comment"># 模块copy和内嵌copy函数的对比</span></span><br><span class="line"><span class="built_in">list</span>=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,[<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>]]</span><br><span class="line">list1=<span class="built_in">list</span>.copy() <span class="comment">## list内嵌的copy函数为浅复制</span></span><br><span class="line">list2=copy.copy(<span class="built_in">list</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>,list1,list2,sep=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">10</span>)</span><br><span class="line"><span class="built_in">list</span>.append(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="built_in">list</span>[<span class="number">2</span>].append(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>,list1,list2,sep=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">10</span>)</span><br><span class="line"><span class="built_in">list</span>.append(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>,list1,list2,sep=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 使用copy模块的例子</span></span><br><span class="line"><span class="built_in">list</span>=[<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,[<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>]]</span><br><span class="line">list1=copy.copy(<span class="built_in">list</span>)</span><br><span class="line">list2=copy.deepcopy(<span class="built_in">list</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>,list1,list2,sep=<span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;-&quot;</span>*<span class="number">10</span>)</span><br><span class="line"><span class="built_in">list</span>.append(<span class="string">&#x27;c&#x27;</span>)</span><br><span class="line"><span class="built_in">list</span>[<span class="number">2</span>].append(<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">list</span>,list1,list2,sep=<span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="Python3-元组"><a href="#Python3-元组" class="headerlink" title="Python3 元组"></a>Python3 元组</h1><blockquote><p>Python 的元组与列表类似，不同之处在于元组的元素不能修改。</p><p>元组使用小括号 **( )**，列表使用方括号 **[ ]**。</p><p>元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tup1=(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">tup2=<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(tup1,tup2)</span><br></pre></td></tr></table></figure><blockquote><p>创建空元组</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tup0=()</span><br></pre></td></tr></table></figure><blockquote><p>元组中只包含一个元素时，需要在元素后面添加逗号<code> ,</code> ，否则括号会被当作运算符使用</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tup3=(<span class="string">&#x27;1&#x27;</span>,)</span><br><span class="line">tup4=(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(tup3),<span class="built_in">type</span>(tup4))</span><br></pre></td></tr></table></figure><h2 id="修改元组"><a href="#修改元组" class="headerlink" title="修改元组"></a>修改元组</h2><p>元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tup1=(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>)</span><br><span class="line">tup2=<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span></span><br><span class="line">tup3=tup1+tup2</span><br><span class="line"><span class="built_in">print</span>(tup3)</span><br></pre></td></tr></table></figure><h2 id="删除元组"><a href="#删除元组" class="headerlink" title="删除元组"></a>删除元组</h2><p>元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> tup3</span><br><span class="line"><span class="built_in">print</span>(tup3)</span><br></pre></td></tr></table></figure><h2 id="元组内置函数"><a href="#元组内置函数" class="headerlink" title="元组内置函数"></a>元组内置函数</h2><p>Python元组包含了以下内置函数</p><table><thead><tr><th align="left">方法及描述</th></tr></thead><tbody><tr><td align="left">len(tuple) 计算元组元素个数。</td></tr><tr><td align="left">max(tuple) 返回元组中元素最大值。</td></tr><tr><td align="left">min(tuple) 返回元组中元素最小值。</td></tr><tr><td align="left">tuple(iterable) 将可迭代系列转换为元组。</td></tr></tbody></table><h3 id="关于元组是不可变的"><a href="#关于元组是不可变的" class="headerlink" title="关于元组是不可变的"></a>关于元组是不可变的</h3><p>所谓元组的不可变指的是元组所指向的内存中的内容不可变。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">id</span>(tup1),<span class="built_in">id</span>(tup2)) <span class="comment">#id()可以查询内存地址</span></span><br></pre></td></tr></table></figure><h1 id="Python3-字典"><a href="#Python3-字典" class="headerlink" title="Python3 字典"></a>Python3 字典</h1><h2 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h2><p>向字典添加新内容的方法是增加新的键&#x2F;值对，修改或删除已有键&#x2F;值对如下实例:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dict</span>=[<span class="string">&#x27;fruit&#x27;</span>:<span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;phone&#x27;</span>:<span class="string">&#x27;redmi&#x27;</span>]</span><br><span class="line"><span class="built_in">dict</span>[<span class="string">&#x27;fruit&#x27;</span>]=<span class="string">&#x27;pear&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="删除字典元素"><a href="#删除字典元素" class="headerlink" title="删除字典元素"></a>删除字典元素</h2><p>能删单一的元素也能清空字典，清空只需一项操作。</p><p>显式删除一个字典用del命令，如下实例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> <span class="built_in">dict</span>[<span class="string">&#x27;phone&#x27;</span>]</span><br></pre></td></tr></table></figure><h2 id="字典内置函数-amp-方法"><a href="#字典内置函数-amp-方法" class="headerlink" title="字典内置函数&amp;方法"></a>字典内置函数&amp;方法</h2><p>Python字典包含了以下内置函数：</p><table><thead><tr><th align="left">序号</th><th align="left">函数及描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">len(dict) 计算字典元素个数，即键的总数。</td><td align="left"><code>&gt;&gt;&gt; tinydict = &#123;&#39;Name&#39;: &#39;User&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;&#125; &gt;&gt;&gt; len(tinydict) 3</code></td></tr><tr><td align="left">2</td><td align="left">str(dict) 输出字典，可以打印的字符串表示。</td><td align="left"><code>&gt;&gt;&gt; tinydict = &#123;&#39;Name&#39;: &#39;User&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;&#125; &gt;&gt;&gt; str(tinydict) &quot;&#123;&#39;Name&#39;: &#39;User&#39;, &#39;Class&#39;: &#39;First&#39;, &#39;Age&#39;: 7&#125;&quot;</code></td></tr><tr><td align="left">3</td><td align="left">type(variable) 返回输入的变量类型，如果变量是字典就返回字典类型。</td><td align="left"><code>&gt;&gt;&gt; tinydict = &#123;&#39;Name&#39;: &#39;User&#39;, &#39;Age&#39;: 7, &#39;Class&#39;: &#39;First&#39;&#125; &gt;&gt;&gt; type(tinydict) &lt;class &#39;dict&#39;&gt;</code></td></tr></tbody></table><p>Python字典包含了以下内置方法：</p><table><thead><tr><th align="left">序号</th><th align="left">函数及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-clear.html">dict.clear()</a> 删除字典内所有元素</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-copy.html">dict.copy()</a> 返回一个字典的浅复制</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-fromkeys.html">dict.fromkeys()</a> 创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-get.html">dict.get(key, default&#x3D;None)</a> 返回指定键的值，如果键不在字典中返回 default 设置的默认值</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-in.html">key in dict</a> 如果键在字典dict里返回true，否则返回false</td></tr><tr><td align="left">6</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-items.html">dict.items()</a> 以列表返回一个视图对象</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-keys.html">dict.keys()</a> 返回一个视图对象</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-setdefault.html">dict.setdefault(key, default&#x3D;None)</a> 和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-update.html">dict.update(dict2)</a> 把字典dict2的键&#x2F;值对更新到dict里</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-values.html">dict.values()</a> 返回一个视图对象</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-pop.html">pop(key[,default])</a> 删除字典 key（键）所对应的值，返回被删除的值。</td></tr><tr><td align="left">12</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-popitem.html">popitem()</a> 返回并删除字典中的最后一对键和值。</td></tr></tbody></table><h1 id="Python3-集合"><a href="#Python3-集合" class="headerlink" title="Python3 集合"></a>Python3 集合</h1><h2 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h2><p><strong>语法格式如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.add( x )</span><br></pre></td></tr></table></figure><p>还有一个方法，也可以添加元素，且参数可以是列表，元组，字典等，语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.update( x )</span><br></pre></td></tr></table></figure><p>x 可以有多个，用逗号分开。</p><h2 id="移除元素"><a href="#移除元素" class="headerlink" title="移除元素"></a>移除元素</h2><p><strong>语法格式如下：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.remove( x )</span><br></pre></td></tr></table></figure><p>此外还有一个方法也是移除集合中的元素，且如果元素不存在，不会发生错误。格式如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.discard( x )</span><br></pre></td></tr></table></figure><p>我们也可以设置随机删除集合中的一个元素，语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.pop() </span><br></pre></td></tr></table></figure><p>多次执行测试结果都不一样。</p><p>set 集合的 pop 方法会对集合进行无序的排列，然后将这个无序排列集合的左面第一个元素进行删除。</p><h2 id="计算集合元素个数"><a href="#计算集合元素个数" class="headerlink" title="计算集合元素个数"></a>计算集合元素个数</h2><p><strong>语法格式如下：</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">len</span><span class="params">(s)</span></span></span><br></pre></td></tr></table></figure><p>计算集合 s 元素个数。</p><h2 id="清空集合"><a href="#清空集合" class="headerlink" title="清空集合"></a>清空集合</h2><p><strong>语法格式如下：</strong></p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.<span class="built_in">clear</span>()</span><br></pre></td></tr></table></figure><p>清空集合 s。</p><h2 id="判断元素是否在集合中存在"><a href="#判断元素是否在集合中存在" class="headerlink" title="判断元素是否在集合中存在"></a>判断元素是否在集合中存在</h2><p><strong>语法格式如下：</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">x in s</span></span><br></pre></td></tr></table></figure><p>判断元素 x 是否在集合 s 中，存在返回 True，不存在返回 False。</p><h2 id="集合内置方法完整列表"><a href="#集合内置方法完整列表" class="headerlink" title="集合内置方法完整列表"></a>集合内置方法完整列表</h2><table><thead><tr><th align="left">方法</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-add.html">add()</a></td><td align="left">为集合添加元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-clear.html">clear()</a></td><td align="left">移除集合中的所有元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-copy.html">copy()</a></td><td align="left">拷贝一个集合</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-difference.html">difference()</a></td><td align="left">返回多个集合的差集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-difference_update.html">difference_update()</a></td><td align="left">移除集合中的元素，该元素在指定的集合也存在。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-discard.html">discard()</a></td><td align="left">删除集合中指定的元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-intersection.html">intersection()</a></td><td align="left">返回集合的交集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-intersection_update.html">intersection_update()</a></td><td align="left">返回集合的交集。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-isdisjoint.html">isdisjoint()</a></td><td align="left">判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-issubset.html">issubset()</a></td><td align="left">判断指定集合是否为该方法参数集合的子集。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-issuperset.html">issuperset()</a></td><td align="left">判断该方法的参数集合是否为指定集合的子集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-pop.html">pop()</a></td><td align="left">随机移除元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-remove.html">remove()</a></td><td align="left">移除指定元素</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-symmetric_difference.html">symmetric_difference()</a></td><td align="left">返回两个集合中不重复的元素集合。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-symmetric_difference_update.html">symmetric_difference_update()</a></td><td align="left">移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中。</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-union.html">union()</a></td><td align="left">返回两个集合的并集</td></tr><tr><td align="left"><a href="https://www.runoob.com/python3/ref-set-update.html">update()</a></td><td align="left">给集合添加元素</td></tr></tbody></table><h1 id="Python3-条件控制"><a href="#Python3-条件控制" class="headerlink" title="Python3 条件控制"></a>Python3 条件控制</h1><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition_1:</span><br><span class="line">    statement_block_1</span><br><span class="line"><span class="keyword">elif</span> condition_2:</span><br><span class="line">    statement_block_2</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    statement_block_3</span><br></pre></td></tr></table></figure><h2 id="if-嵌套"><a href="#if-嵌套" class="headerlink" title="if 嵌套"></a>if 嵌套</h2><blockquote><p>在嵌套 if 语句中，可以把 if…elif…else 结构放在另外一个 if…elif…else 结构中。</p></blockquote><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">if 表达式1</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">语句</span></span><br><span class="line"><span class="attribute">    if 表达式2</span><span class="punctuation">:</span></span><br><span class="line">        <span class="attribute">语句</span></span><br><span class="line"><span class="attribute">    elif 表达式3</span><span class="punctuation">:</span></span><br><span class="line">        <span class="attribute">语句</span></span><br><span class="line"><span class="attribute">    else</span><span class="punctuation">:</span></span><br><span class="line">        <span class="attribute">语句</span></span><br><span class="line"><span class="attribute">elif 表达式4</span><span class="punctuation">:</span></span><br><span class="line">    <span class="attribute">语句</span></span><br><span class="line"><span class="attribute">else</span><span class="punctuation">:</span></span><br><span class="line">    语句</span><br></pre></td></tr></table></figure><h2 id="match…case"><a href="#match…case" class="headerlink" title="match…case"></a>match…case</h2><blockquote><p>Python 3.10 增加了 <strong>match…case</strong> 的条件判断，不需要再使用一连串的 <strong>if-else</strong> 来判断了。</p><p>match 后的对象会依次与 case 后的内容进行匹配，如果匹配成功，则执行匹配到的表达式，否则直接跳过，**_** 可以匹配一切。</p></blockquote><p>语法格式如下：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">match</span> subject:</span><br><span class="line">    case <span class="variable">&lt;pattern_1&gt;</span>:</span><br><span class="line">        <span class="variable">&lt;action_1&gt;</span></span><br><span class="line">    case <span class="variable">&lt;pattern_2&gt;</span>:</span><br><span class="line">        <span class="variable">&lt;action_2&gt;</span></span><br><span class="line">    case <span class="variable">&lt;pattern_3&gt;</span>:</span><br><span class="line">        <span class="variable">&lt;action_3&gt;</span></span><br><span class="line">    case _:</span><br><span class="line">        <span class="variable">&lt;action_wildcard&gt;</span></span><br></pre></td></tr></table></figure><p><strong>case _:</strong> 类似于 C 和 Java 中的 **default:**，当其他 case 都无法匹配时，匹配这条，保证永远会匹配成功。</p><p>一个 case 也可以设置多个匹配条件，条件使用 <strong>｜</strong> 隔开，例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="keyword">case</span> <span class="number">401</span>|<span class="number">403</span>|<span class="number">404</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Not allowed&quot;</span></span><br></pre></td></tr></table></figure><h1 id="Python3-循环语句"><a href="#Python3-循环语句" class="headerlink" title="Python3 循环语句"></a>Python3 循环语句</h1><h2 id="while-循环"><a href="#while-循环" class="headerlink" title="while 循环"></a>while 循环</h2><p>Python 中 while 语句的一般形式：</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> 判断条件<span class="comment">(condition)</span>：</span><br><span class="line">    执行语句<span class="comment">(statements)</span>……</span><br></pre></td></tr></table></figure><h3 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h3><p>我们可以通过设置条件表达式永远不为 false 来实现无限循环，实例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> var==<span class="number">1</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;循环中&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="while-循环使用-else-语句"><a href="#while-循环使用-else-语句" class="headerlink" title="while 循环使用 else 语句"></a>while 循环使用 else 语句</h3><p>如果 while 后面的条件语句为 false 时，则执行 else 的语句块。</p><p>语法格式如下：</p><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">while</span></span> &lt;<span class="variable">expr</span>&gt;:</span><br><span class="line">    &lt;<span class="function"><span class="title">statement</span>(<span class="variable">s</span>)&gt;</span></span><br><span class="line"><span class="function"><span class="variable"><span class="keyword">else</span></span>:</span></span><br><span class="line"><span class="function">    &lt;<span class="title">additional_statement</span>(<span class="variable">s</span>)&gt;</span></span><br></pre></td></tr></table></figure><p>expr 条件语句为 true 则执行 statement(s) 语句块，如果为 false，则执行 additional_statement(s)。</p><h3 id="简单语句组"><a href="#简单语句组" class="headerlink" title="简单语句组"></a>简单语句组</h3><p>类似 if 语句的语法，如果你的 while 循环体中只有一条语句，你可以将该语句与 while 写在同一行中， 如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flag=<span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (flag): <span class="built_in">print</span> (<span class="string">&#x27;循环中&#x27;</span>)</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>以上的无限循环你可以使用 CTRL+C 来中断循环。</p><h2 id="for-语句"><a href="#for-语句" class="headerlink" title="for 语句"></a>for 语句</h2><p>Python for 循环可以遍历任何可迭代对象，如一个列表或者一个字符串。</p><p>for循环的一般格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> &lt;variable&gt; <span class="keyword">in</span> &lt;sequence&gt;:   </span><br><span class="line">    &lt;statements&gt; </span><br><span class="line"><span class="keyword">else</span>:    </span><br><span class="line">    &lt;statements&gt;</span><br></pre></td></tr></table></figure><h3 id="for…else"><a href="#for…else" class="headerlink" title="for…else"></a>for…else</h3><p>在 Python 中，for…else 语句用于在循环结束后执行一段代码。</p><p>语法格式如下：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">item</span> <span class="keyword">in</span> iterable:</span><br><span class="line">    <span class="comment"># 循环主体</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 循环结束后执行的代码</span></span><br></pre></td></tr></table></figure><h2 id="range-函数"><a href="#range-函数" class="headerlink" title="range() 函数"></a><a href="https://www.runoob.com/python3/python3-func-range.html">range() 函数</a></h2><p>如果你需要遍历数字序列，可以使用内置 range() 函数。它会生成数列，例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line"><span class="meta">... </span>    <span class="built_in">print</span>(i)</span><br><span class="line">...</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h2 id="break-和-continue-语句及循环中的-else-子句"><a href="#break-和-continue-语句及循环中的-else-子句" class="headerlink" title="break 和 continue 语句及循环中的 else 子句"></a>break 和 continue 语句及循环中的 else 子句</h2><blockquote><p><strong>break</strong> 语句可以跳出 for 和 while 的循环体。如果你从 for 或 while 循环中终止，任何对应的循环 else 块将不执行。</p><p><strong>continue</strong> 语句被用来告诉 Python 跳过当前循环块中的剩余语句，然后继续进行下一轮循环。</p></blockquote><h2 id="pass-语句"><a href="#pass-语句" class="headerlink" title="pass 语句"></a>pass 语句</h2><p>Python pass是空语句，是为了保持程序结构的完整性。</p><p>pass 不做任何事情，一般用做占位语句。</p><h1 id="Python3-迭代器与生成器"><a href="#Python3-迭代器与生成器" class="headerlink" title="Python3 迭代器与生成器"></a><a href="https://www.runoob.com/python3/python3-iterator-generator.html">Python3 迭代器与生成器</a></h1><hr><h2 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h2><blockquote><p>迭代是Python最强大的功能之一，是访问集合元素的一种方式。</p><p>迭代器是一个可以记住遍历的位置的对象。</p><p>迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。</p><p>迭代器只能往前不会后退。</p><p>迭代器有两个基本的方法：<strong>iter()</strong> 和 **next()**。</p><p>字符串，列表或元组对象都可用于创建迭代器：</p></blockquote><h3 id="iter-创建迭代器对象"><a href="#iter-创建迭代器对象" class="headerlink" title="iter()创建迭代器对象"></a>iter()创建迭代器对象</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">list=[1,2,3,4]</span><br><span class="line">it = iter(list) </span><br></pre></td></tr></table></figure><blockquote><p>迭代器对象可以使用常规for语句进行遍历</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> it:</span><br><span class="line">    <span class="built_in">print</span> (x, end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="next-函数访问下一个对象"><a href="#next-函数访问下一个对象" class="headerlink" title="next()函数访问下一个对象"></a>next()函数访问下一个对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">it.<span class="built_in">next</span>()</span><br></pre></td></tr></table></figure><h2 id="生成器"><a href="#生成器" class="headerlink" title="生成器"></a><a href="https://zhuanlan.zhihu.com/p/268605982">生成器</a></h2><blockquote><p>在 Python 中，使用了 yield 的函数被称为生成器（generator）。</p><p>跟普通函数不同的是，生成器是一个返回迭代器的函数，只能用于迭代操作，更简单点理解生成器就是一个迭代器。</p><p>在调用生成器运行的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息，返回 yield 的值, 并在下一次执行 next() 方法时从当前位置继续运行。</p><p>调用一个生成器函数，返回的是一个迭代器对象。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">example</span>():</span><br><span class="line">    x=<span class="number">1</span></span><br><span class="line">    <span class="keyword">yield</span> x</span><br><span class="line">    <span class="keyword">yield</span> x+<span class="number">1</span></span><br><span class="line">ex=example()</span><br><span class="line"><span class="built_in">next</span>(ex)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python学习笔记Part3</title>
      <link href="/posts/3620298655/"/>
      <url>/posts/3620298655/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3-函数"><a href="#Python3-函数" class="headerlink" title="Python3 函数"></a>Python3 函数</h1><blockquote><p>函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。</p><p>函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。但你也可以自己创建函数，这被叫做用户自定义函数。</p></blockquote><h2 id="定义一个函数"><a href="#定义一个函数" class="headerlink" title="定义一个函数"></a>定义一个函数</h2><p>你可以定义一个由自己想要功能的函数，以下是简单的规则：</p><ul><li>函数代码块以 <strong>def</strong> 关键词开头，后接函数标识符名称和圆括号 **()**。</li><li>任何传入参数和自变量必须放在圆括号中间，圆括号之间可以用于定义参数。</li><li>函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。</li><li>函数内容以冒号 <strong>:</strong> 起始，并且缩进。</li><li><strong>return [表达式]</strong> 结束函数，选择性地返回一个值给调用方，不带表达式的 return 相当于返回 None。</li></ul><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>Python 定义函数使用 def 关键字，一般格式如下：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> 函数名（参数列表）:</span></span><br><span class="line"><span class="function">    函数体</span></span><br></pre></td></tr></table></figure><p>默认情况下，参数值和参数名称是按函数声明中定义的顺序匹配起来的。</p><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><p>定义一个函数：给了函数一个名称，指定了函数里包含的参数，和代码块结构。</p><p>这个函数的基本结构完成以后，你可以通过另一个函数调用执行，也可以直接从 Python 命令提示符执行。</p><h3 id="可更改-mutable-与不可更改-immutable-对象"><a href="#可更改-mutable-与不可更改-immutable-对象" class="headerlink" title="可更改(mutable)与不可更改(immutable)对象"></a>可更改(mutable)与不可更改(immutable)对象</h3><p>在 python 中，strings, tuples, 和 numbers 是不可更改的对象，而 list,dict 等则是可以修改的对象。</p><ul><li><strong>不可变类型：</strong>变量赋值 <strong>a&#x3D;5</strong> 后再赋值 <strong>a&#x3D;10</strong>，这里实际是新生成一个 int 值对象 10，再让 a 指向它，而 5 被丢弃，不是改变 a 的值，相当于新生成了 a。</li><li><strong>可变类型：</strong>变量赋值 <strong>la&#x3D;[1,2,3,4]</strong> 后再赋值 <strong>la[2]&#x3D;5</strong> 则是将 list la 的第三个元素值更改，本身la没有动，只是其内部的一部分值被修改了。</li></ul><p>python 函数的参数传递：</p><ul><li><strong>不可变类型：</strong>类似 C++ 的值传递，如整数、字符串、元组。如 fun(a)，传递的只是 a 的值，没有影响 a 对象本身。如果在 fun(a) 内部修改 a 的值，则是新生成一个 a 的对象。</li><li><strong>可变类型：</strong>类似 C++ 的引用传递，如 列表，字典。如 fun(la)，则是将 la 真正的传过去，修改后 fun 外部的 la 也会受影响</li></ul><p>python 中一切都是对象，严格意义我们不能说值传递还是引用传递，我们应该说传不可变对象和传可变对象。</p><h3 id="python-传不可变对象实例"><a href="#python-传不可变对象实例" class="headerlink" title="python 传不可变对象实例"></a>python 传不可变对象实例</h3><p>通过 <strong>id()</strong> 函数来查看内存地址变化</p><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>以下是调用函数时可使用的正式参数类型：</p><ul><li>必需参数</li><li>关键字参数</li><li>默认参数</li><li>不定长参数</li></ul><h3 id="必需参数"><a href="#必需参数" class="headerlink" title="必需参数"></a>必需参数</h3><p>必需参数须以正确的顺序传入函数。调用时的数量必须和声明时的一样。</p><p>调用 printme() 函数，你必须传入一个参数，不然会出现语法错误</p><h3 id="关键字参数"><a href="#关键字参数" class="headerlink" title="关键字参数"></a>关键字参数</h3><p>关键字参数和函数调用关系紧密，函数调用使用关键字参数来确定传入的参数值。</p><p>使用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值。</p><h3 id="默认参数"><a href="#默认参数" class="headerlink" title="默认参数"></a>默认参数</h3><p>调用函数时，如果没有传递参数，则会使用默认参数。以下实例中如果没有传入 age 参数，则使用默认值。</p><h3 id="不定长参数"><a href="#不定长参数" class="headerlink" title="不定长参数"></a>不定长参数</h3><p>你可能需要一个函数能处理比当初声明时更多的参数。这些参数叫做不定长参数，和上述 2 种参数不同，声明时不会命名。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">functionname</span>(<span class="params">[formal_args,] *var_args_tuple </span>):</span><br><span class="line">   <span class="string">&quot;函数_文档字符串&quot;</span></span><br><span class="line">   function_suite</span><br><span class="line">   <span class="keyword">return</span> [expression]</span><br></pre></td></tr></table></figure><p>加了星号 ***** 的参数会以元组(tuple)的形式导入，存放所有未命名的变量参数。</p><p>还有一种就是参数带两个星号 ******基本语法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">functionname</span>(<span class="params">[formal_args,] **var_args_dict </span>):</span><br><span class="line">   <span class="string">&quot;函数_文档字符串&quot;</span></span><br><span class="line">   function_suite</span><br><span class="line">   <span class="keyword">return</span> [expression]</span><br></pre></td></tr></table></figure><p>如果单独出现星号 **<em><strong>，则</strong>星号 * 后的参数必须用关键字传入</em>*</p><blockquote><p>Python 3 中可以定义一种只能以关键字形式来指定的参数，从而确保调用该函数的代码读起来会比较明确。这些参数必须以关键字的形式提供，而不能按位置提供。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a,b,*,c</span>):</span><br><span class="line">    <span class="keyword">return</span> a+b+c</span><br><span class="line">x=f(<span class="number">1</span>,<span class="number">2</span>,c=<span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><p>Python 使用 <strong>lambda</strong> 来创建匿名函数。</p><p>所谓匿名，意即不再使用 <strong>def</strong> 语句这样标准的形式定义一个函数。</p><ul><li><strong>lambda</strong> 只是一个表达式，函数体比 <strong>def</strong> 简单很多。</li><li>lambda 的主体是一个表达式，而不是一个代码块。仅仅能在 lambda 表达式中封装有限的逻辑进去。</li><li>lambda 函数拥有自己的命名空间，且不能访问自己参数列表之外或全局命名空间里的参数。</li><li>虽然 lambda 函数看起来只能写一行，却不等同于 C 或 C++ 的内联函数，后者的目的是调用小函数时不占用栈内存从而增加运行效率。</li></ul><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">lambda</span> [arg1 [,arg2,.....argn]]<span class="symbol">:expression</span></span><br></pre></td></tr></table></figure><h3 id=""><a href="#" class="headerlink" title=""></a></h3><h2 id="return-语句"><a href="#return-语句" class="headerlink" title="return 语句"></a>return 语句</h2><p><strong>return [表达式]</strong> 语句用于退出函数，选择性地向调用方返回一个表达式。不带参数值的 return 语句返回 None。</p><h2 id="强制位置参数"><a href="#强制位置参数" class="headerlink" title="强制位置参数"></a>强制位置参数</h2><p>Python3.8 新增了一个函数形参语法 <code>/ </code>用来指明函数形参必须使用指定位置参数，不能使用关键字参数的形式。</p><p>在以下的例子中，形参 a 和 b 必须使用指定位置参数，c 或 d 可以是位置形参或关键字形参，而 e 和 f 要求为关键字形参:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">a, b, /, c, d, *, e, f</span>):</span><br><span class="line">    <span class="built_in">print</span>(a, b, c, d, e, f)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f(<span class="number">10</span>, b=<span class="number">20</span>, c=<span class="number">30</span>, d=<span class="number">40</span>, e=<span class="number">50</span>, f=<span class="number">60</span>)   <span class="comment"># b 不能使用关键字参数的形式</span></span><br><span class="line">f(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, f=<span class="number">60</span>)           <span class="comment"># e 必须使用关键字参数的形式</span></span><br></pre></td></tr></table></figure><h1 id="Python3-模块"><a href="#Python3-模块" class="headerlink" title="Python3 模块"></a>Python3 模块</h1><blockquote><p>用 python 解释器来编程，如果你从 Python 解释器退出再进入，那么你定义的所有的方法和变量就都消失了。为此 Python 提供了一个办法，把这些定义存放在文件中，为一些脚本或者交互式的解释器实例使用，这个文件被称为模块。</p></blockquote><h2 id="name-属性"><a href="#name-属性" class="headerlink" title="__name__属性"></a>__name__属性</h2><p>一个模块被另一个程序第一次引入时，其主程序将运行。如果我们想在模块被引入时，模块中的某一程序块不执行，我们可以用__name__属性来使该程序块仅在该模块自身运行时执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;程序自身在运行&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="built_in">print</span>(<span class="string">&#x27;我来自另一模块&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="dir-函数"><a href="#dir-函数" class="headerlink" title="dir() 函数"></a>dir() 函数</h2><p>内置的函数 dir() 可以找到模块内定义的所有名称。以一个字符串列表的形式返回:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dir</span>(&lt;module_name&gt;)</span><br><span class="line"><span class="comment">#如</span></span><br><span class="line"><span class="built_in">dir</span>(sys)</span><br></pre></td></tr></table></figure><h2 id="标准模块"><a href="#标准模块" class="headerlink" title="标准模块"></a>标准模块</h2><p>Python 本身带着一些标准的模块库。有些模块直接被构建在解析器里，这些虽然不是一些语言内置的功能，但是他却能很高效的使用，甚至是系统级调用也没问题。这些组件会根据不同的操作系统进行不同形式的配置，比如 winreg 这个模块就只会提供给 Windows 系统。应该注意到这有一个特别的模块 sys ，它内置在每一个 Python 解析器中。变量 sys.ps1 和 sys.ps2 定义了主提示符和副提示符所对应的字符串:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">sys.ps1</span><br><span class="line">sys.ps2</span><br></pre></td></tr></table></figure><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><p>包是一种管理 Python 模块命名空间的形式，采用”点模块名称”。</p><p>比如一个模块的名称是 A.B， 那么他表示一个包 A中的子模块 B 。</p><p>可能的包结构（在分层的文件系统中）:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sound/                          顶层包</span><br><span class="line">      __init__.py               初始化 sound 包</span><br><span class="line">      formats/                  文件格式转换子包</span><br><span class="line">              __init__.py</span><br><span class="line">              wavread.py</span><br><span class="line">              wavwrite.py</span><br><span class="line">              aiffread.py</span><br><span class="line">              aiffwrite.py</span><br><span class="line">              auread.py</span><br><span class="line">              auwrite.py</span><br><span class="line">              ...</span><br><span class="line">      effects/                  声音效果子包</span><br><span class="line">              __init__.py</span><br><span class="line">              echo.py</span><br><span class="line">              surround.py</span><br><span class="line">              reverse.py</span><br><span class="line">              ...</span><br><span class="line">      filters/                  filters 子包</span><br><span class="line">              __init__.py</span><br><span class="line">              equalizer.py</span><br><span class="line">              vocoder.py</span><br><span class="line">              karaoke.py</span><br><span class="line">              ...</span><br></pre></td></tr></table></figure><p>在导入一个包的时候，Python 会根据 sys.path 中的目录来寻找这个包中包含的子目录。</p><p>目录只有包含一个叫做 __init__.py 的文件才会被认作是一个包，主要是为了避免一些滥俗的名字（比如叫做 string）影响搜索路径中的有效模块。</p><h2 id="使用路径形式导入"><a href="#使用路径形式导入" class="headerlink" title="使用路径形式导入"></a><a href="https://blog.csdn.net/QuantMaster/article/details/83618950">使用路径形式导入</a></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#当前目录</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> &lt;function&gt;</span><br><span class="line"><span class="comment">#上一级目录</span></span><br><span class="line"><span class="keyword">from</span> .. <span class="keyword">import</span> &lt;function&gt;</span><br><span class="line"><span class="comment">#上一级目录中的某个目录</span></span><br><span class="line"><span class="keyword">from</span> ..&lt;folder&gt; <span class="keyword">import</span> &lt;function&gt;</span><br></pre></td></tr></table></figure><h1 id="Python3-输入和输出"><a href="#Python3-输入和输出" class="headerlink" title="Python3 输入和输出"></a>Python3 输入和输出</h1><h2 id="输出值的方式"><a href="#输出值的方式" class="headerlink" title="输出值的方式"></a>输出值的方式</h2><h3 id="表达式语句"><a href="#表达式语句" class="headerlink" title="表达式语句"></a><a href="https://docs.python.org/zh-cn/3.10/reference/simple_stmts.html#expression-statements">表达式语句</a></h3><p>表达式语句用于计算和写入值（大多是在交互模式下），或者（通常情况）调用一个过程 (过程就是不返回有意义结果的函数；在 Python 中，过程的返回值为 <code>None</code>)。</p><h3 id="print-函数"><a href="#print-函数" class="headerlink" title="print()函数"></a>print()函数</h3><h3 id="文件对象的-write-方法"><a href="#文件对象的-write-方法" class="headerlink" title="文件对象的 write() 方法"></a>文件对象的 write() 方法</h3><h2 id="将输出的值转成字符串"><a href="#将输出的值转成字符串" class="headerlink" title="将输出的值转成字符串"></a>将输出的值转成字符串</h2><ul><li><strong>str()：</strong> 函数返回一个用户易读的表达形式。</li><li><strong>repr()：</strong> 产生一个解释器易读的表达形式。</li></ul><h2 id="格式化输出值"><a href="#格式化输出值" class="headerlink" title="格式化输出值"></a>格式化输出值</h2><h3 id="str-format-的基本使用"><a href="#str-format-的基本使用" class="headerlink" title="str.format() 的基本使用"></a>str.format() 的基本使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#按顺序传入</span></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;&#123;&#125; &#123;&#125; &#123;&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.<span class="built_in">format</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"><span class="comment">#在括号中的数字用于指向传入对象在 format() 中的位置</span></span><br><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;&#123;0&#125; &#123;1&#125; &#123;2&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.<span class="built_in">format</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>))</span><br><span class="line"><span class="built_in">str</span>=<span class="string">&#x27;&#123;A&#125; &#123;B&#125; &#123;C&#125;&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>.<span class="built_in">format</span>(A=<span class="string">&#x27;a&#x27;</span>,B=<span class="string">&#x27;b&#x27;</span>,C=<span class="string">&#x27;c&#x27;</span>))</span><br></pre></td></tr></table></figure><h2 id="读取键盘输入"><a href="#读取键盘输入" class="headerlink" title="读取键盘输入"></a>读取键盘输入</h2><p>Python 提供了 <a href="https://www.runoob.com/python3/python3-func-input.html">input() 内置函数</a>从标准输入读入一行文本，默认的标准输入是键盘。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="built_in">input</span>(<span class="string">&quot;请输入：&quot;</span>);</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;你输入的内容是: &quot;</span>, <span class="built_in">str</span>)</span><br></pre></td></tr></table></figure><h2 id="读和写文件"><a href="#读和写文件" class="headerlink" title="读和写文件"></a>读和写文件</h2><p>open() 将会返回一个 file 对象，基本语法格式如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">open</span>(filename, mode=<span class="string">&#x27;r&#x27;</span>, buffering=-<span class="number">1</span>, encoding=<span class="literal">None</span>, errors=<span class="literal">None</span>, newline=<span class="literal">None</span>, closefd=<span class="literal">True</span>, opener=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><ul><li>filename：包含了你要访问的文件名称的字符串值。</li><li>mode：决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。</li><li>buffering: 设置缓冲</li><li>encoding: 一般使用utf8</li><li>errors: 报错级别</li><li>newline: 区分换行符</li><li>closefd: 传入的file参数类型</li><li>opener: 设置自定义开启器，开启器的返回值必须是一个打开的文件描述符。</li></ul><p>不同模式打开文件的完全列表：</p><table><thead><tr><th align="left">模式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">r</td><td align="left">以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr><tr><td align="left">rb</td><td align="left">以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。</td></tr><tr><td align="left">r+</td><td align="left">打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td align="left">rb+</td><td align="left">以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr><tr><td align="left">w</td><td align="left">打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="left">wb</td><td align="left">以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="left">w+</td><td align="left">打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="left">wb+</td><td align="left">以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr><tr><td align="left">a</td><td align="left">打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="left">ab</td><td align="left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr><tr><td align="left">a+</td><td align="left">打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr><tr><td align="left">ab+</td><td align="left">以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr></tbody></table><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\2112205-861c05b2bdbc9c28.png"></p><table><thead><tr><th align="center">模式</th><th align="center">r</th><th align="center">r+</th><th align="center">w</th><th align="center">w+</th><th align="center">a</th><th align="center">a+</th></tr></thead><tbody><tr><td align="center">读</td><td align="center">+</td><td align="center">+</td><td align="center"></td><td align="center">+</td><td align="center"></td><td align="center">+</td></tr><tr><td align="center">写</td><td align="center"></td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td></tr><tr><td align="center">创建</td><td align="center"></td><td align="center"></td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td></tr><tr><td align="center">覆盖</td><td align="center"></td><td align="center"></td><td align="center">+</td><td align="center">+</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">指针在开始</td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center">+</td><td align="center"></td><td align="center"></td></tr><tr><td align="center">指针在结尾</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center">+</td><td align="center">+</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个文件</span></span><br><span class="line">f=<span class="built_in">open</span>(filename,mode)</span><br><span class="line">f.write(<span class="built_in">str</span>)</span><br><span class="line"><span class="comment"># 关闭打开的文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><ul><li>第一个参数为要打开的文件名。</li><li>第二个参数描述文件如何使用的字符。 mode 可以是 ‘r’ 如果文件只读, ‘w’ 只用于写 (如果存在同名文件则将被删除), 和 ‘a’ 用于追加文件内容; 所写的任何数据都会被自动增加到末尾. ‘r+’ 同时用于读写。 mode 参数是可选的; ‘r’ 将是默认值。</li></ul><h2 id="文件对象的方法"><a href="#文件对象的方法" class="headerlink" title="文件对象的方法"></a>文件对象的方法</h2><p>本节中剩下的例子假设已经创建了一个称为 f 的文件对象。</p><h3 id="f-read"><a href="#f-read" class="headerlink" title="f.read()"></a>f.read()</h3><p>为了读取一个文件的内容，调用 f.read(size), 这将读取一定数目的数据, 然后作为字符串或字节对象返回。</p><p>size 是一个可选的数字类型的参数。 当 size 被忽略了或者为负, 那么该文件的所有内容都将被读取并且返回。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个文件</span></span><br><span class="line">f=<span class="built_in">open</span>(filename,mode)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> =f.read(size) <span class="comment">#size 是一个可选的数字类型的参数。 </span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭打开的文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="f-readline"><a href="#f-readline" class="headerlink" title="f.readline()"></a>f.readline()</h3><p>f.readline() 会从文件中读取单独的一行。换行符为 ‘\n’。f.readline() 如果返回一个空字符串, 说明已经已经读取到最后一行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;/tmp/foo.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = f.readline()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭打开的文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="f-readlines"><a href="#f-readlines" class="headerlink" title="f.readlines()"></a>f.readlines()</h3><p>f.readlines() 将返回该文件中包含的所有行。</p><p>如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;/tmp/foo.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">str</span> = f.readlines()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭打开的文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><p>另一种方式是迭代一个文件对象然后读取每行:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开一个文件</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;/tmp/foo.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    <span class="built_in">print</span>(line, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭打开的文件</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="f-tell"><a href="#f-tell" class="headerlink" title="f.tell()"></a>f.tell()</h3><p>f.tell() 返回文件对象当前所处的位置, 它是从文件开头开始算起的字节数。</p><h3 id="f-seek"><a href="#f-seek" class="headerlink" title="f.seek()"></a>f.seek()</h3><p>如果要改变文件指针当前的位置, 可以使用 f.seek(offset, from_what) 函数。</p><p>from_what 的值, 如果是 0 表示开头, 如果是 1 表示当前位置, 2 表示文件的结尾，例如：</p><ul><li>seek(x,0) ： 从起始位置即文件首行首字符开始移动 x 个字符</li><li>seek(x,1) ： 表示从当前位置往后移动x个字符</li><li>seek(-x,2)：表示从文件的结尾往前移动x个字符</li></ul><h3 id="f-close"><a href="#f-close" class="headerlink" title="f.close()"></a>f.close()</h3><p>在文本文件中 (那些打开文件的模式下没有 b 的), 只会相对于文件起始位置进行定位。</p><p>当你处理完一个文件后, 调用 f.close() 来关闭文件并释放系统的资源，如果尝试再调用该文件，则会抛出异常。</p><h1 id="Python3-面向对象"><a href="#Python3-面向对象" class="headerlink" title="Python3 面向对象"></a>Python3 面向对象</h1><blockquote><p> 类介绍</p></blockquote><ul><li><strong>类(Class):</strong> 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。</li><li><strong>方法：</strong>类中定义的函数。</li><li><strong>类变量：</strong>类变量在整个实例化的对象中是公用的。类变量定义在类中且在函数体之外。类变量通常不作为实例变量使用。</li><li><strong>数据成员：</strong>类变量或者实例变量用于处理类及其实例对象的相关的数据。</li><li><strong>方法重写：</strong>如果从父类继承的方法不能满足子类的需求，可以对其进行改写，这个过程叫方法的覆盖（override），也称为方法的重写。</li><li><strong>局部变量：</strong>定义在方法中的变量，只作用于当前实例的类。</li><li><strong>实例变量：</strong>在类的声明中，属性是用变量来表示的，这种变量就称为实例变量，实例变量就是一个用 self 修饰的变量。</li><li><strong>继承：</strong>即一个派生类（derived class）继承基类（base class）的字段和方法。继承也允许把一个派生类的对象作为一个基类对象对待。例如，有这样一个设计：一个Dog类型的对象派生自Animal类，这是模拟”是一个（is-a）”关系（例图，Dog是一个Animal）。</li><li><strong>实例化：</strong>创建一个类的实例，类的具体对象。</li><li><strong>对象：</strong>通过类定义的数据结构实例。对象包括两个数据成员（类变量和实例变量）和方法。</li></ul><p>和其它编程语言相比，Python 在尽可能不增加新的语法和语义的情况下加入了类机制。</p><p>Python中的类提供了面向对象编程的所有基本功能：类的继承机制允许多个基类，派生类可以覆盖基类中的任何方法，方法中可以调用基类中的同名方法。</p><p>对象可以包含任意数量和类型的数据。</p><h2 id="类定义"><a href="#类定义" class="headerlink" title="类定义"></a>类定义</h2><p>语法格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ClassName</span>:</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure><h2 id="类对象"><a href="#类对象" class="headerlink" title="类对象"></a>类对象</h2><p>类对象支持两种操作：属性引用和实例化。</p><p>属性引用使用和 Python 中所有的属性引用一样的标准语法：<strong>obj.name</strong>。</p><p>类对象创建后，类命名空间中所有的命名都是有效属性名。所以如果类定义是这样:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>:</span><br><span class="line">    a=<span class="number">1</span></span><br><span class="line">    b=<span class="number">2</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sum</span>():</span><br><span class="line">        <span class="built_in">print</span>(a+b)</span><br><span class="line">myClass=MyClass()</span><br><span class="line"><span class="built_in">print</span>(myClass.a)</span><br><span class="line">        </span><br></pre></td></tr></table></figure><p>类有一个名为 __init__() 的特殊方法（<strong>构造方法</strong>），该方法在类实例化时会自动调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>():</span><br><span class="line">       self.data = []</span><br></pre></td></tr></table></figure><p> __init__() 方法可以有参数，参数通过 __init__() 传递到类的实例化操作上。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">InitClass</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, realpart, imagpart</span>):</span><br><span class="line">        self.r = realpart</span><br><span class="line">        self.i = imagpart</span><br><span class="line">ic=InitClass(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(ic.r,ic.i)</span><br></pre></td></tr></table></figure><h3 id="self代表类的实例，而非类"><a href="#self代表类的实例，而非类" class="headerlink" title="self代表类的实例，而非类"></a>self代表类的实例，而非类</h3><p>类的方法与普通的函数只有一个特别的区别——它们必须有一个额外的<strong>第一个参数名称</strong>, 按照惯例它的名称是 self。</p><p>self 不是 python 关键字，所以可以自定义。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MyClass</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">prt</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self)</span><br><span class="line">        <span class="built_in">print</span>(self.__class__) </span><br><span class="line">x=MyClass()</span><br><span class="line">x.prt()</span><br><span class="line"><span class="comment">#self 代表的是类的实例，代表当前对象的地址，而 self.class 则指向类。</span></span><br></pre></td></tr></table></figure><h2 id="类的方法"><a href="#类的方法" class="headerlink" title="类的方法"></a>类的方法</h2><p>在类的内部，使用 <strong>def</strong> 关键字来定义一个方法，与一般函数定义不同，类方法必须包含参数 self, 且为第一个参数，self 代表的是类的实例。</p><ul><li>调用私有属性时，需要调用<code>self</code></li></ul><h2 id="类的属性"><a href="#类的属性" class="headerlink" title="类的属性"></a>类的属性</h2><ul><li>定义基本属性</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name = <span class="string">&#x27;&#x27;</span></span><br><span class="line">age = <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>定义私有属性,私有属性在类外部无法直接进行访问</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__weight = <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>Python 同样支持类的继承，如果一种语言不支持继承，类就没有什么意义。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedClassName</span>(<span class="title class_ inherited__">BaseClassName</span>):</span><br><span class="line">    &lt;statement-<span class="number">1</span>&gt;</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    .</span><br><span class="line">    &lt;statement-N&gt;</span><br></pre></td></tr></table></figure><p>子类（派生类 DerivedClassName）会继承父类（基类 BaseClassName）的属性和方法。</p><p>BaseClassName（实例中的基类名）必须与派生类定义在一个作用域内。除了类，还可以用表达式，基类定义在另一个模块中时这一点非常有用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">DerivedClassName</span>(modname.BaseClassName):</span><br></pre></td></tr></table></figure><p>多继承使用逗号分隔。</p><p>需要注意圆括号中父类的顺序，若是父类中有相同的方法名，而在子类使用时未指定，python从左至右搜索 即方法在子类中未找到时，从左到右查找父类中是否包含方法。</p><h2 id="方法重写"><a href="#方法重写" class="headerlink" title="方法重写"></a>方法重写</h2><p>如果你的父类方法的功能不能满足你的需求，你可以在子类重写你父类的方法。</p><p><a href="https://www.runoob.com/python/python-func-super.html">super() 函数</a>是用于调用父类(超类)的一个方法。</p><h2 id="类属性与方法"><a href="#类属性与方法" class="headerlink" title="类属性与方法"></a>类属性与方法</h2><h3 id="类的私有属性"><a href="#类的私有属性" class="headerlink" title="类的私有属性"></a>类的私有属性</h3><p><strong>__private_attrs</strong>：两个下划线开头，声明该属性为私有，不能在类的外部被使用或直接访问。在类内部的方法中使用时 <strong>self.__private_attrs</strong>。</p><h3 id="类的方法-1"><a href="#类的方法-1" class="headerlink" title="类的方法"></a>类的方法</h3><p>在类的内部，使用 def 关键字来定义一个方法，与一般函数定义不同，类方法必须包含参数 <strong>self</strong>，且为第一个参数，<strong>self</strong> 代表的是类的实例。</p><p><strong>self</strong> 的名字并不是规定死的，也可以使用 <strong>this</strong>，但是最好还是按照约定使用 <strong>self</strong>。</p><h3 id="类的私有方法"><a href="#类的私有方法" class="headerlink" title="类的私有方法"></a>类的私有方法</h3><p><strong>__private_method</strong>：两个下划线开头，声明该方法为私有方法，只能在类的内部调用 ，不能在类的外部调用。<strong>self.__private_methods</strong>。</p><h3 id="类的专有方法："><a href="#类的专有方法：" class="headerlink" title="类的专有方法："></a>类的专有方法：</h3><ul><li><strong><strong>init</strong> :</strong> 构造函数，在生成对象时调用</li><li><strong><strong>del</strong> :</strong> 析构函数，释放对象时使用</li><li><strong><strong>repr</strong> :</strong> 打印，转换</li><li><strong><strong>setitem</strong> :</strong> 按照索引赋值</li><li><strong><strong>getitem</strong>:</strong> 按照索引获取值</li><li><strong><strong>len</strong>:</strong> 获得长度</li><li><strong><strong>cmp</strong>:</strong> 比较运算</li><li><strong><strong>call</strong>:</strong> 函数调用</li><li><strong><strong>add</strong>:</strong> 加运算</li><li><strong><strong>sub</strong>:</strong> 减运算</li><li><strong><strong>mul</strong>:</strong> 乘运算</li><li><strong><strong>truediv</strong>:</strong> 除运算</li><li><strong><strong>mod</strong>:</strong> 求余运算</li><li><strong><strong>pow</strong>:</strong> 乘方</li></ul><h3 id="运算符重载"><a href="#运算符重载" class="headerlink" title="运算符重载"></a>运算符重载</h3><p>Python同样支持运算符重载，我们可以对类的专有方法进行重载。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Vector</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, a, b</span>):</span><br><span class="line">      self.a = a</span><br><span class="line">      self.b = b</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&#x27;Vector (%d, %d)&#x27;</span> % (self.a, self.b)</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__add__</span>(<span class="params">self,other</span>):</span><br><span class="line">      <span class="keyword">return</span> Vector(self.a + other.a, self.b + other.b)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">prt</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(self.a+self.b)</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">v1 = Vector(<span class="number">2</span>,<span class="number">10</span>)</span><br><span class="line">v2 = Vector(<span class="number">5</span>,-<span class="number">2</span>)</span><br><span class="line"><span class="comment"># print (v1 + v2)</span></span><br><span class="line">v3=v1+v2 <span class="comment">#Vector(7,8)</span></span><br><span class="line">v1.prt() <span class="comment">#12</span></span><br><span class="line">v2.prt() <span class="comment">#3</span></span><br><span class="line">v3.prt() <span class="comment">#15</span></span><br></pre></td></tr></table></figure><h1 id="Python3-命名空间和作用域"><a href="#Python3-命名空间和作用域" class="headerlink" title="Python3 命名空间和作用域"></a>Python3 命名空间和作用域</h1><blockquote><p>命名空间(Namespace)是从名称到对象的映射，大部分的命名空间都是通过 Python 字典来实现的。</p><p>命名空间提供了在项目中避免名字冲突的一种方法。各个命名空间是独立的，没有任何关系的，所以一个命名空间中不能有重名，但不同的命名空间是可以重名而没有任何影响。</p></blockquote><p>一般有三种命名空间：</p><ul><li><strong>内置名称（built-in names</strong>）， Python 语言内置的名称，比如函数名 abs、char 和异常名称 BaseException、Exception 等等。</li><li><strong>全局名称（global names）</strong>，模块中定义的名称，记录了模块的变量，包括函数、类、其它导入的模块、模块级的变量和常量。</li><li><strong>局部名称（local names）</strong>，函数中定义的名称，记录了函数的变量，包括函数的参数和局部定义的变量。（类中定义的也是）</li></ul><blockquote><p>命名空间查找顺序</p></blockquote><p> Python 的查找顺序为：<strong>局部的命名空间 -&gt; 全局命名空间 -&gt; 内置命名空间</strong>。</p><blockquote><p>命名空间的生命周期</p></blockquote><p>命名空间的生命周期取决于对象的作用域，如果对象执行完成，则该命名空间的生命周期就结束。因此，我们无法从外部命名空间访问内部命名空间的对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># var1 是全局名称</span></span><br><span class="line">var1 = <span class="number">5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">some_func</span>():</span><br><span class="line"> </span><br><span class="line">    <span class="comment"># var2 是局部名称</span></span><br><span class="line">    var2 = <span class="number">6</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">some_inner_func</span>():</span><br><span class="line"> </span><br><span class="line">        <span class="comment"># var3 是内嵌的局部名称</span></span><br><span class="line">        var3 = <span class="number">7</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\namespaces.png"></p><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>作用域就是一个 Python 程序可以直接访问命名空间的正文区域。</p><p>在一个 python 程序中，直接访问一个变量，会从内到外依次访问所有的作用域直到找到，否则会报未定义的错误。</p><p>Python 中，程序的变量并不是在哪个位置都可以访问的，访问权限决定于这个变量是在哪里赋值的。</p><p>变量的作用域决定了在哪一部分程序可以访问哪个特定的变量名称</p><blockquote><p>四种作用域</p></blockquote><ul><li><strong>L（Local）</strong>：最内层，包含局部变量，比如一个函数&#x2F;方法内部。</li><li><strong>E（Enclosing）</strong>：包含了非局部(non-local)也非全局(non-global)的变量。比如两个嵌套函数，一个函数（或类） A 里面又包含了一个函数 B ，那么对于 B 中的名称来说 A 中的作用域就为 nonlocal。</li><li><strong>G（Global）</strong>：当前脚本的最外层，比如当前模块的全局变量。</li><li><strong>B（Built-in）</strong>： 包含了内建的变量&#x2F;关键字等，最后被搜索。</li></ul><p>规则顺序： <strong>L –&gt; E –&gt; G –&gt; B</strong>。</p><p>在局部找不到，便会去局部外的局部找（例如闭包），再找不到就会去全局找，再者去内置中找。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">g_count = <span class="number">0</span>  <span class="comment"># 全局作用域</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">outer</span>():</span><br><span class="line">    o_count = <span class="number">1</span>  <span class="comment"># 闭包函数外的函数中</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">inner</span>():</span><br><span class="line">        i_count = <span class="number">2</span>  <span class="comment"># 局部作用域</span></span><br></pre></td></tr></table></figure><h3 id="全局变量和局部变量"><a href="#全局变量和局部变量" class="headerlink" title="全局变量和局部变量"></a>全局变量和局部变量</h3><p>定义在函数内部的变量拥有一个局部作用域，定义在函数外的拥有全局作用域。</p><p>局部变量只能在其被声明的函数内部访问，而全局变量可以在整个程序范围内访问。调用函数时，所有在函数内声明的变量名称都将被加入到作用域中。</p><h3 id="global-和-nonlocal关键字"><a href="#global-和-nonlocal关键字" class="headerlink" title="global 和 nonlocal关键字"></a>global 和 nonlocal关键字</h3><p>当内部作用域想修改外部作用域的变量时，就要用到 global 和 nonlocal 关键字了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">function</span>():</span><br><span class="line">    <span class="keyword">global</span> a</span><br><span class="line">    a=<span class="number">1</span></span><br><span class="line">    <span class="keyword">nonlocal</span> b</span><br><span class="line">    b=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(a,b)</span><br></pre></td></tr></table></figure><h1 id="Python3-标准库概览"><a href="#Python3-标准库概览" class="headerlink" title="Python3 标准库概览"></a>Python3 标准库概览</h1><h2 id="操作系统接口"><a href="#操作系统接口" class="headerlink" title="操作系统接口"></a>操作系统接口</h2><h2 id="文件通配符"><a href="#文件通配符" class="headerlink" title="文件通配符"></a>文件通配符</h2><p>glob模块提供了一个函数用于从目录通配符搜索中生成文件列表</p><h2 id="命令行参数"><a href="#命令行参数" class="headerlink" title="命令行参数"></a>命令行参数</h2><p>通用工具脚本经常调用命令行参数。这些命令行参数以链表形式存储于 sys 模块的 argv 变量。</p><h2 id="错误输出重定向和程序终止"><a href="#错误输出重定向和程序终止" class="headerlink" title="错误输出重定向和程序终止"></a><a href="https://www.runoob.com/python3/python3-stdlib.html">错误输出重定向和程序终止</a></h2><p>sys 还有 stdin，stdout 和 stderr 属性，即使在 stdout 被重定向时，后者也可以用于显示警告和错误信息。</p><h2 id="字符串正则匹配"><a href="#字符串正则匹配" class="headerlink" title="字符串正则匹配"></a>字符串正则匹配</h2><p>re模块为高级字符串处理提供了正则表达式工具。</p><h2 id="数学"><a href="#数学" class="headerlink" title="数学"></a>数学</h2><p>math模块为浮点运算提供了对底层C函数库。random提供了生成随机数的工具。</p><h2 id="访问互联网"><a href="#访问互联网" class="headerlink" title="访问互联网"></a>访问互联网</h2><p>有几个模块用于访问互联网以及处理网络通信协议。其中最简单的两个是用于处理从 urls 接收的数据的 urllib.request 以及用于发送电子邮件的 smtplib</p><h2 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h2><p>datetime模块为日期和时间处理同时提供了简单和复杂的方法。</p><p>支持日期和时间算法的同时，实现的重点放在更有效的处理和格式化输出。</p><p>该模块还支持时区处理。</p><h2 id="数据压缩"><a href="#数据压缩" class="headerlink" title="数据压缩"></a>数据压缩</h2><p>以下模块直接支持通用的数据打包和压缩格式：zlib，gzip，bz2，zipfile，以及 tarfile。</p><h2 id="性能度量"><a href="#性能度量" class="headerlink" title="性能度量"></a>性能度量</h2><p>有些用户对了解解决同一问题的不同方法之间的性能差异很感兴趣。Python 提供了一个度量工具，为这些问题提供了直接答案。</p><h2 id="测试模块"><a href="#测试模块" class="headerlink" title="测试模块"></a>测试模块</h2><p>开发高质量软件的方法之一是为每一个函数开发测试代码，并且在开发过程中经常进行测试</p><p>doctest模块提供了一个工具，扫描模块并根据程序中内嵌的文档字符串执行测试。</p><p>测试构造如同简单的将它的输出结果剪切并粘贴到文档字符串中。</p><p>通过用户提供的例子，它强化了文档，允许 doctest 模块确认代码的结果是否与文档一致。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NovelAi搭建笔记</title>
      <link href="/posts/1305155614/"/>
      <url>/posts/1305155614/</url>
      
        <content type="html"><![CDATA[<h1 id="硬件要求"><a href="#硬件要求" class="headerlink" title="硬件要求"></a>硬件要求</h1><ul><li><p>N卡</p></li><li><p>显卡内存大于4G</p></li><li><p>显卡驱动最新</p></li></ul><h1 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h1><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><blockquote><p>用于拉取生成程序</p></blockquote><h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><blockquote><p>要求3.10.6以上的版本</p></blockquote><p><a href="https://note.com/api/v2/attachments/download/e80d94ac2cd28c8cf0e471ee789203f7">Python 3.10.6 免安装版</a></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a><a href="https://www.python.org/downloads/">安装</a></h3><blockquote><p>记住勾选<code>to PATH</code>选项，这样就不要去手动配置环境了。</p></blockquote><p>在windows下，可用通过<code>where</code>命令，查询python的路径。</p><blockquote><p><a href="https://blog.csdn.net/m0_50679156/article/details/116230889">python更换国内镜像，解决下载torch、torchvision慢的问题。</a></p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">豆瓣：http://pypi.douban.com/simple/</span><br><span class="line">中科大：https://pypi.mirrors.ustc.edu.cn/simple/</span><br><span class="line">清华：https://pypi.tuna.tsinghua.edu.cn/simple/</span><br><span class="line">阿里云：https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config <span class="built_in">set</span> global.index<span class="literal">-url</span> https://mirrors.aliyun.com/pypi/simple/</span><br></pre></td></tr></table></figure><h2 id="便捷化启动脚本"><a href="#便捷化启动脚本" class="headerlink" title="便捷化启动脚本"></a>便捷化启动脚本</h2><p><a href="https://note.com/api/v2/attachments/download/daf4113be7365fc23afcedb15d153040">START_webui.bat[706B]</a></p><h2 id="AUTOMATIC1111"><a href="#AUTOMATIC1111" class="headerlink" title="AUTOMATIC1111"></a>AUTOMATIC1111</h2><blockquote><p>AI运行程序，运行生成图片的程序，<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui">直接从GitHub克隆</a></p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/AUTOMATIC1111/stable<span class="literal">-diffusion-webui</span>.git</span><br></pre></td></tr></table></figure><blockquote><p>第一种方案</p></blockquote><p>双击<code>webui-user.bat</code>文件，直接运行程序。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221215153919191.png" alt="image-20221215153919191"></p><p>如果出现环境报错，请在生成的<code>venv\pyvenv.cfg</code>文件中，修改python的路径。</p><p>这个安装过程相当慢！</p><p>安装完毕后，会有一个网址。但我还没有成功过，家里网络差，花了很多时间都没有反映。</p><blockquote><p>第二种方案。</p></blockquote><p>手动安装各种依赖。</p><ol><li>repositories文件文件中</li></ol><ul><li><a href="https://github.com/salesforce/BLIP/archive/refs/heads/main.zip">BLIP [6.94MB]</a> - <a href="https://github.com/salesforce/BLIP">GitHub地址</a></li><li><a href="https://github.com/sczhou/CodeFormer/archive/refs/heads/master.zip">CodeFormer [11.6]</a> - <a href="https://github.com/sczhou/CodeFormer">GitHub地址</a></li><li><a href="https://github.com/CompVis/stable-diffusion/archive/refs/heads/main.zip">stable-diffusion [42.5MB]</a> - <a href="https://github.com/CompVis/stable-diffusion">GitHub地址</a></li><li><a href="https://github.com/crowsonkb/k-diffusion/archive/refs/heads/master.zip">k-diffusion [39.5KB]</a> - <a href="https://github.com/crowsonkb/k-diffusion">GitHub地址</a></li><li><a href="https://github.com/CompVis/taming-transformers/archive/refs/heads/master.zip">taming-transformers [140MB]</a> - <a href="https://github.com/CompVis/taming-transformers">GitHub地址</a></li></ul><ol start="2"><li>软件本体必要python包</li></ol><ul><li><a href="https://github.com/TencentARC/GFPGAN/archive/refs/heads/master.zip">GFPGAN-master.zip [5.72 MB]</a> - <a href="https://github.com/TencentARC/GFPGAN">GitHub地址</a></li><li><a href="https://github.com/openai/CLIP/archive/refs/heads/main.zip">CLIP-main.zip[4.11MB]</a> - <a href="https://github.com/openai/CLIP">GitHub地址</a></li></ul><ol start="3"><li>杂项</li></ol><ul><li><a href="https://github.com/TencentARC/GFPGAN/releases/download/v1.3.0/GFPGANv1.4.pth">GFPGANv1.4.pth [332MB]</a>- <a href="https://github.com/TencentARC/GFPGAN">GitHub地址</a></li></ul><blockquote><p><a href="https://pytorch.org/get-started/locally/">手动安装Pytorch</a></p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install torch torchvision torchaudio <span class="literal">--extra-index-url</span> https://download.pytorch.org/whl/cu116</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221216014117194.png" alt="image-20221216014117194"></p><blockquote><p>安装依赖包</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#切换至各个依赖文件夹下</span></span><br><span class="line"><span class="built_in">cd</span> D:\sdwai\repositories\xxx <span class="comment">#如：cd D:\sdwai\repositories\GFPGAN</span></span><br><span class="line">D:\sdwai\Python310\python.exe setup.py install </span><br><span class="line">D:\sdwai\Python310\python.exe <span class="literal">-m</span> pip install xxx <span class="comment">#如：D:\sdwai\Python310\python.exe -m pip install gfpgan</span></span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#建议安装顺序</span></span><br><span class="line">D:\sdwai\repositories\GFPGAN<span class="literal">-master</span>\setup.py</span><br><span class="line">D:\sdwai\repositories\CLIP<span class="literal">-main</span>\setup.py</span><br><span class="line">D:\sdwai\repositories\stable<span class="literal">-diffusion</span>\setup.py</span><br><span class="line">D:\sdwai\repositories\k<span class="literal">-diffusion</span>\setup.py</span><br><span class="line">D:\sdwai\repositories\taming<span class="literal">-transformers</span>\setup.py</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221216085328773.png" alt="image-20221216085328773"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#重新克隆</span></span><br><span class="line">git clone xxx</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221216111326219.png" alt="image-20221216111326219"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221216122715231.png" alt="image-20221216122715231"></p><h2 id="NovelAi-models"><a href="#NovelAi-models" class="headerlink" title="NovelAi-models"></a>NovelAi-models</h2><blockquote><p>Ai模型文件</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">magnet:?xt=urn:btih:5bde442da86265b670a3e5ea3163afad2c6f8ecc</span><br></pre></td></tr></table></figure><p>下载stablekpt目录中的某个模型即可</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221216162514987.png" alt="image-20221216162514987"></p><p>下载完毕后</p><ol><li>将模型文件夹中的model.ckpt、config.xml放入<code>...\models\Stable-diffusion</code> 目录中</li><li>然后分别改名为model.ckpt、model.xml。</li></ol><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a><a href="https://zhuanlan.zhihu.com/p/571731191">开始使用</a></h1><p>运行<code>START_webui.bat</code>，等等本地网页部署。</p><blockquote><p>正向参数</p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">masterpiece, best quality, <span class="number">1</span>girl, white <span class="keyword">and</span> purple hair, red buttons, blue hair, transparent sleeves, light smile</span><br></pre></td></tr></table></figure><blockquote><p>负面参数</p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lowres, bad anatomy, bad hands, text, error, missing fingers, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, watermark, username, blurry</span><br></pre></td></tr></table></figure><ul><li><strong>Sampling Steps</strong>是迭代次数，越大越耗时，一般20左右就足够了，太大提升也有限。</li><li><strong>Sampling method</strong>是迭代算法，可以自己试试，感觉Euler和DDIM就不错，不同算法适合的迭代次数不尽相同。</li><li><strong>Width</strong>和<strong>Height</strong>是图像大小，不建议开太大，这个模型不太擅长生成大尺寸图片，特别是只有一个人的情况下，而且贼慢，可以考虑后期用waifu2x等工具超分辨率。</li><li>接下来三个选项我也没用过。</li><li><strong>Batch count</strong>是连续生成几次，<strong>Batch size</strong>是一次生成几张。例如Batch size&#x3D;2，Batch count&#x3D;3就是每次同时生成两张图片，生成三轮。注意Batch size其实就是利用显卡并行计算，受到显存制约，开太大会爆显存。</li><li><strong>CFG Scale</strong>参数制约度，越高越接近参数（但可能会是强扭的瓜），越低越让AI自由发挥。在img2img中还有一个Denoising strength参数，描述的是图像模仿自由度，越高越自由发挥，越低和参考图像越接近。</li><li><strong>Seed</strong>就是随机种子，可以指定，-1就是随机种子。</li></ul><h1 id="报错方案"><a href="#报错方案" class="headerlink" title="报错方案"></a>报错方案</h1><blockquote><p><a href="https://www.bilibili.com/read/cv19006750/">RuntimeError: CUDA out of memory. Tried to allocate 20.00 MiB (GPU 0; 6.00 GiB total capacity; 5.23 GiB already allocated; 0 bytes free; 5.29 GiB reserved in total by PyTorch) If reserved memory is &gt;&gt; allocated memory try setting max_split_size_mb to avoid fragmentation. See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF</a></p></blockquote><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在webui-user.bat里面，set COMMANDLINE_ARGS=后面加上如下参数</span></span><br><span class="line"><span class="comment">#4G显存：</span></span><br><span class="line">--precision full --<span class="keyword">no</span>-half --lowvram --always-batch-cond-uncond</span><br><span class="line"><span class="comment">#6G显存：</span></span><br><span class="line">--precision full --<span class="keyword">no</span>-half --medvram</span><br><span class="line"><span class="comment">#低于5G显存：</span></span><br><span class="line">--medvram</span><br><span class="line"><span class="comment">#低于3G显存：</span></span><br><span class="line">--lowvram --always-batch-cond-uncond</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ai绘画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NovelAi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于知识图谱的推荐系统</title>
      <link href="/posts/3152099615/"/>
      <url>/posts/3152099615/</url>
      
        <content type="html"><![CDATA[<p>PPT结构：</p><ol><li>介绍推荐系统的发展背景</li></ol><p>如旧推荐系统存在的问题之类的</p><ol start="2"><li>介绍知识图谱</li></ol><p><a href="https://zhuanlan.zhihu.com/p/396516565">https://zhuanlan.zhihu.com/p/396516565</a></p><ol start="3"><li>知识图谱的优势</li></ol><p><img src="https://lptexas-cub.github.io/img/post/image-20221212160050931.png" alt="image-20221212160050931"></p><ol start="4"><li>知识图谱在推荐系统的应用方法，或者说知识图谱与推荐系统的结合⽅法（分为Embedding、path、unified三种)</li></ol><p>可用参考 <a href="https://ex666.cn/_WUu">https://ex666.cn/_WUu</a></p><blockquote><p>还有伟哥ppt</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20221212160421923.png" alt="image-20221212160421923"></p><ol start="5"><li>介绍Embedding</li></ol><p>基于 Embedding 的方法通常直接使用来自知识图谱的信息来丰富 item 或 user 的表示。为了充分利用 KG 的信息，需要应用KGE&#x2F;KRL算法将 KG 中的实体和关系映射到低维向量空间。KGE 算法可分为两类：基于翻译的模型，如 TransE、TransH、TransR、TransD等；语义匹配模型，如 DistMult等。</p><p>根据 KG 是否包含 user，又将这类方法分为两部分，即 <strong>item graph</strong> 和 <strong>user-item graph</strong>。</p><p>换句话说，就是从知识图谱中抽取⼀些<strong>⽤户</strong>和<strong>物品的属性</strong>作为特征。只引⼊了实体特征，没有引⼊关系特征。</p><p><strong>参考一下</strong></p><p>深度学习推荐系统 介绍Embedding <a href="https://zhuanlan.zhihu.com/p/138310401">https://zhuanlan.zhihu.com/p/138310401</a></p><p>矩阵分解原理 <a href="https://zhuanlan.zhihu.com/p/145120275">https://zhuanlan.zhihu.com/p/145120275</a></p><ol start="6"><li>知识图谱特征学习（Knowledge Graph Embedding）</li></ol><p>介绍两类模型：基于距离的模型和基于语义的匹配模型。</p><p>我们只介绍<strong>基于距离的模型</strong></p><blockquote><p>伟哥ppt里的有</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20221212160556993.png" alt="image-20221212160556993"></p><ol start="7"><li>总结</li></ol><p>讲讲基于知识图谱的推荐系统是如何解决传统推荐系统存在的问题（如冷启动）</p>]]></content>
      
      
      <categories>
          
          <category> 推荐系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐系统 </tag>
            
            <tag> 知识图谱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用RDC连接Linux</title>
      <link href="/posts/1700668930/"/>
      <url>/posts/1700668930/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考文献</p><ul><li><a href="https://www.dazhuanlan.com/zuiqiufeng/topics/1412747">zuiqiufeng</a>.<a href="https://www.dazhuanlan.com/topics/node5">DevOps</a> 配置xorg的xrdp</li><li><a href="https://blog.csdn.net/qq_16093937/article/details/83269106">Linux图形化界面知识</a></li><li><a href="https://blog.csdn.net/seaship/article/details/86234453">kali桌面的安装与切换</a></li></ul></blockquote><h1 id="可视化界面汇总"><a href="#可视化界面汇总" class="headerlink" title="可视化界面汇总"></a>可视化界面汇总</h1><h2 id="XFCE桌面"><a href="#XFCE桌面" class="headerlink" title="XFCE桌面"></a>XFCE桌面</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装</span></span><br><span class="line">apt-get install kali-defaults kali-root-login desktop-base xfce4 xfce4-places-plugin xfce4-goodies</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">卸载</span></span><br><span class="line">apt-get remove xfce4 xfce4-places-plugin xfce4-goodies</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kali </tag>
            
            <tag> Romote Desktop Control </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重装Termux</title>
      <link href="/posts/2815769597/"/>
      <url>/posts/2815769597/</url>
      
        <content type="html"><![CDATA[<h1 id="工具箱处理"><a href="#工具箱处理" class="headerlink" title="工具箱处理"></a>工具箱处理</h1><ol><li>换源</li><li>授权读写存储权限</li><li>清空顶部欢迎语</li><li>更新可用软件包以及已安装软件包</li></ol><h1 id="文件准备"><a href="#文件准备" class="headerlink" title="文件准备"></a>文件准备</h1><blockquote><p>在Home目录下，根据需要准备下列文件。</p></blockquote><h2 id="frp客户端配置文件"><a href="#frp客户端配置文件" class="headerlink" title="frp客户端配置文件"></a>frp客户端配置文件</h2><blockquote><p><code>frpc.ini</code>文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi $HOME/frpc.ini</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">frpc.ini</span></span><br><span class="line">[common]</span><br><span class="line">token = </span><br><span class="line">admin_addr = 127.0.0.1</span><br><span class="line">admin_port = 7400</span><br><span class="line">admin_user =</span><br><span class="line">admin_pwd = </span><br><span class="line">server_addr = </span><br><span class="line">server_port = </span><br><span class="line">authentication_method = token</span><br><span class="line">authenticate_new_work_conns = true</span><br><span class="line">tls_enable = true</span><br><span class="line">[ssh]</span><br><span class="line">type=tcp</span><br><span class="line">local_ip=127.0.0.1</span><br><span class="line">local_port=8022</span><br><span class="line">remote_port=6000</span><br></pre></td></tr></table></figure><h2 id="frp客户端运行脚本"><a href="#frp客户端运行脚本" class="headerlink" title="frp客户端运行脚本"></a>frp客户端运行脚本</h2><blockquote><p><code>start_frpc.sh</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi start_frpc.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">nohup /data/data/com.termux/files/usr/bin/frpc \</span><br><span class="line">-c /data/data/com.termux/files/home/.frpc/frpc.ini \</span><br><span class="line">&amp;&gt;$HOME/.frpc/frpc.log &amp;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x start_frpc.sh</span><br></pre></td></tr></table></figure><h2 id="nginx配置文件夹"><a href="#nginx配置文件夹" class="headerlink" title="nginx配置文件夹"></a>nginx配置文件夹</h2><blockquote><p>位于</p><p><code>/data/data/com.termux/files/usr/etc/</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">~ $ ls -l /data/data/com.termux/files/usr/etc/nginx/</span><br><span class="line">total 40</span><br><span class="line">-rw------- 1 u0_a187 u0_a187 1077 Nov 13 21:32 fastcgi.conf</span><br><span class="line">-rw------- 1 u0_a187 u0_a187 1007 Nov 13 21:32 fastcgi_params</span><br><span class="line">-rw------- 1 u0_a187 u0_a187 2837 Nov 13 21:32 koi-utf</span><br><span class="line">-rw------- 1 u0_a187 u0_a187 2223 Nov 13 21:32 koi-win</span><br><span class="line">-rw------- 1 u0_a187 u0_a187 5349 Nov 13 21:32 mime.types</span><br><span class="line">-rw------- 1 u0_a187 u0_a187 2746 Nov 13 21:32 nginx.conf</span><br><span class="line">-rw------- 1 u0_a187 u0_a187  636 Nov 13 21:32 scgi_params</span><br><span class="line">-rw------- 1 u0_a187 u0_a187  664 Nov 13 21:32 uwsgi_params</span><br><span class="line">-rw------- 1 u0_a187 u0_a187 3610 Nov 13 21:32 win-utf</span><br></pre></td></tr></table></figure><h2 id="php-fpm配置文件"><a href="#php-fpm配置文件" class="headerlink" title="php-fpm配置文件"></a>php-fpm配置文件</h2><blockquote><p>用于启动php网页项目。</p><p><code>www.conf</code></p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">vim</span> www.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[www]</span><br><span class="line">pm = static</span><br><span class="line">user = root</span><br><span class="line">group = root</span><br><span class="line">listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock</span><br><span class="line">listen.owner = root</span><br><span class="line">listen.group = root</span><br><span class="line">pm.max_children = 50</span><br><span class="line">pm.start_servers = 20</span><br><span class="line">pm.min_spare_servers = 10</span><br><span class="line">pm.max_spare_servers = 35</span><br></pre></td></tr></table></figure><h2 id="vnc命令文件"><a href="#vnc命令文件" class="headerlink" title="vnc命令文件"></a>vnc命令文件</h2><blockquote><p>vnc命令为一个脚本，由kali内置。我们需要对其做些修改。</p><ul><li>添加<code>--localhost=no</code>参数</li><li>添加<code>--geometry=1920x1080</code>参数</li></ul><p>该命令位于<code>kali-arm64/usr/bin/</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi vnc</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">vnc_start() &#123;</span><br><span class="line">    if [ ! -f ~/.vnc/passwd ]; then</span><br><span class="line">        vnc_passwd</span><br><span class="line">    fi</span><br><span class="line">    USR=$(whoami)</span><br><span class="line">    if [ $USR = &quot;root&quot; ]; then</span><br><span class="line">        SCR=:1</span><br><span class="line">    else</span><br><span class="line">        SCR=:2</span><br><span class="line">    fi</span><br><span class="line">    export USER=$USR; LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgcc_s.so.1 nohup vncserver $SCR --geometry 1280x720  --localhost no  &gt;/dev/null 2&gt;&amp;1 &lt;/dev/null</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vnc_stop() &#123;</span><br><span class="line">    vncserver -kill :1</span><br><span class="line">    vncserver -kill :2</span><br><span class="line">    return $?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vnc_passwd() &#123;</span><br><span class="line">    vncpasswd</span><br><span class="line">    return $?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vnc_status() &#123;</span><br><span class="line">    session_list=$(vncserver -list)</span><br><span class="line">    if [[ $session_list == *&quot;590&quot;* ]]; then</span><br><span class="line">        echo &quot;$session_list&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;there is nothing to list :)&quot;</span><br><span class="line">        echo &quot;you can start a new session by &lt;&lt; vnc start &gt;&gt;&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vnc_kill() &#123;</span><br><span class="line">    pkill Xtigervnc</span><br><span class="line">    return $?</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">    start)</span><br><span class="line">        vnc_start</span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        vnc_stop</span><br><span class="line">        ;;</span><br><span class="line">    status)</span><br><span class="line">        vnc_status</span><br><span class="line">        ;;</span><br><span class="line">    kill)</span><br><span class="line">        vnc_kill</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        echo &quot;[!] invalid input&quot;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x vnc</span><br></pre></td></tr></table></figure><h2 id="kali源文件"><a href="#kali源文件" class="headerlink" title="kali源文件"></a><a href="https://blog.csdn.net/fingue/article/details/127096363">kali源文件</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi sources.list</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">kali官方源</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">deb http://http.kali.org/kali kali-rolling main non-free contrib</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">阿里源</span></span><br><span class="line">deb http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br><span class="line">deb-src http://mirrors.aliyun.com/kali kali-rolling main non-free contrib</span><br></pre></td></tr></table></figure><h2 id="chromium配置文件"><a href="#chromium配置文件" class="headerlink" title="chromium配置文件"></a>chromium配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi default-flags</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">新增</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">A <span class="built_in">set</span> of <span class="built_in">command</span> line flags that we want to <span class="built_in">set</span> by default.</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Do not hide any extensions <span class="keyword">in</span> the about:extensions dialog</span></span><br><span class="line">export CHROMIUM_FLAGS=&quot;$CHROMIUM_FLAGS --show-component-extension-options&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Don<span class="string">&#x27;t use the GPU blacklist (bug #802933)</span></span></span><br><span class="line">export CHROMIUM_FLAGS=&quot;$CHROMIUM_FLAGS --ignore-gpu-blacklist&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Run as root Kali</span></span></span><br><span class="line">export CHROMIUM_FLAGS=&quot;$CHROMIUM_FLAGS --password-store=detect --no-sandbox --user-data-dir&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Disable Chromium security features for web app testing</span></span></span><br><span class="line">export CHROMIUM_FLAGS=&quot;$CHROMIUM_FLAGS --disable-web-security&quot;</span><br></pre></td></tr></table></figure><h1 id="命令行操作"><a href="#命令行操作" class="headerlink" title="命令行操作"></a>命令行操作</h1><h2 id="软件包相关"><a href="#软件包相关" class="headerlink" title="软件包相关"></a>软件包相关</h2><blockquote><p>Termux中执行</p></blockquote><ol><li>订阅其他存储库</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">订阅其他存储库:</span><br><span class="line"></span><br><span class="line"> * Root:     pkg install root-repo</span><br><span class="line"> * Unstable: pkg install unstable-repo</span><br><span class="line"> * X11:      pkg install x11-repo</span><br></pre></td></tr></table></figure><ol start="2"><li>安装vi&#x2F;vim文本编辑器工具</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install vim-gtk -y</span><br></pre></td></tr></table></figure><blockquote><p>kali中执行</p></blockquote><ol><li>换源</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv kali-arm64/etc/apt/sources.list kali-arm64/etc/apt/sources.list.old</span><br><span class="line">mv sources.list kali-arm64/etc/apt/</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><h2 id="服务类操作"><a href="#服务类操作" class="headerlink" title="服务类操作"></a>服务类操作</h2><h3 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h3><ol start="3"><li>新建<code>.frps</code>文件夹</li></ol><blockquote><p>用于放置frp服务相关文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir .frpc</span><br></pre></td></tr></table></figure><ol start="4"><li>安装frp服务</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install frp -y</span><br></pre></td></tr></table></figure><ol start="5"><li>放入配置文件</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv frpc.ini .frpc</span><br></pre></td></tr></table></figure><h2 id="网页相关"><a href="#网页相关" class="headerlink" title="网页相关"></a>网页相关</h2><h3 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install nginx -y</span><br></pre></td></tr></table></figure><blockquote><p>放入配置文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf  /data/data/com.termux/files/usr/etc/nginx</span><br><span class="line">mv nginx  /data/data/com.termux/files/usr/etc/</span><br></pre></td></tr></table></figure><blockquote><p>启动服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx</span><br></pre></td></tr></table></figure><h3 id="php-fpm"><a href="#php-fpm" class="headerlink" title="php-fpm"></a>php-fpm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pkg install php-fpm -y</span><br><span class="line">rm -rf  /data/data/com.termux/files/usr/etc/php-fpm.d/www.conf</span><br><span class="line">mv www.conf /data/data/com.termux/files/usr/etc/php-fpm.d/</span><br></pre></td></tr></table></figure><blockquote><p>启动服务</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo php-fpm -R</span><br></pre></td></tr></table></figure><h1 id="系统类操作"><a href="#系统类操作" class="headerlink" title="系统类操作"></a>系统类操作</h1><h2 id="安装kali"><a href="#安装kali" class="headerlink" title="安装kali"></a><a href="https://lptexas-cub.github.io/posts/2650170792/#%E5%AE%89%E8%A3%85kali">安装kali</a></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -LO https://raw.githubusercontent.com/Hax4us/Nethunter-In-Termux/master/kalinethunter</span><br><span class="line">chmod +x kalinethunter</span><br><span class="line">./kalinethunter</span><br></pre></td></tr></table></figure><h2 id="kali换源"><a href="#kali换源" class="headerlink" title="kali换源"></a>kali换源</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv kali-arm64/etc/apt/source.list kali-arm64/etc/apt/source.list.old</span><br><span class="line">mv ~/source.list kali-arm64/etc/apt/</span><br></pre></td></tr></table></figure><h3 id="配置VNC"><a href="#配置VNC" class="headerlink" title="配置VNC"></a><a href="https://lptexas.top/posts/2650170792/#%E5%AE%89%E8%A3%85Tiger-VNC%E6%9C%8D%E5%8A%A1%E7%AB%AF">配置VNC</a></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv kali-arm64/usr/bin/vnc kali-arm64/usr/bin/vnc.old #不删除文件，以作备份</span><br><span class="line">mv vnc kali-arm64/usr/bin/</span><br></pre></td></tr></table></figure><blockquote><p>tips:如果出现<code>$&#39;\r&#39;</code>错误，请尝试使用vi命令编辑文件，按ESC进入命令模式，输入<code>: set ff=unix</code>。</p></blockquote><h3 id="配置浏览器"><a href="#配置浏览器" class="headerlink" title="配置浏览器"></a><a href="https://lptexas.top/posts/3837171917/">配置浏览器</a></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install chromium -y</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv kali-arm64/etc/chromium.d/default-flags kali-arm64/etc/chromium.d/default-flags.old</span><br><span class="line">mv default-flags kali-arm64/etc/chromium.d/</span><br></pre></td></tr></table></figure><h3 id="安装输入法"><a href="#安装输入法" class="headerlink" title="安装输入法"></a>安装输入法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">kali中执行</span></span><br><span class="line">apt-get install fcitx</span><br><span class="line">apt-get install fcitx-googlepinyin</span><br></pre></td></tr></table></figure><blockquote><p>重启Termux &#x3D; “reboot”</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">termux中执行</span></span><br><span class="line">kill termux</span><br></pre></td></tr></table></figure><blockquote><p>重新进入kali</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">打开fcitx应用，任务栏会出现个键盘</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">右键键盘，选择配置，添加<span class="string">&quot;Google Pinyin&quot;</span>。</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/googlepinyin.png" alt="image-20221210134346648"></p><blockquote><p>使用方法</p></blockquote><p><code>Ctrl+SPACE</code>切换键盘</p><p><code>Shift</code>切换中英文</p><h2 id="远程连接"><a href="#远程连接" class="headerlink" title="远程连接"></a>远程连接</h2><blockquote><p>3389</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">kali</span>  </span><br><span class="line">service xrdp restart </span><br></pre></td></tr></table></figure><h2 id="切换桌面"><a href="#切换桌面" class="headerlink" title="切换桌面"></a>切换桌面</h2><blockquote><p><a href="https://blog.csdn.net/qq_38963246/article/details/117773304">参考资料</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update-alternatives --config x-session-manager</span><br></pre></td></tr></table></figure><h1 id="环境类"><a href="#环境类" class="headerlink" title="环境类"></a>环境类</h1><h2 id="lsb-base"><a href="#lsb-base" class="headerlink" title="lsb-base"></a>lsb-base</h2><blockquote><p>transitional package for Linux Standard Base init script functionality.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lsb-base -y</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
            <tag> kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kali arm64架构安装Chromium</title>
      <link href="/posts/3837171917/"/>
      <url>/posts/3837171917/</url>
      
        <content type="html"><![CDATA[<h1 id="删除内置的Firefox浏览器"><a href="#删除内置的Firefox浏览器" class="headerlink" title="删除内置的Firefox浏览器"></a>删除内置的Firefox浏览器</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">可以选择不删</span></span><br><span class="line">rm -rf /usr/bin/firefox</span><br><span class="line">rm -rf /usr/lib/firefox</span><br></pre></td></tr></table></figure><h1 id="安装Chromium"><a href="#安装Chromium" class="headerlink" title="安装Chromium"></a>安装Chromium</h1><blockquote><p><a href="https://www.kali.org/tools/chromium/">kali官网</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install chromium -y</span><br></pre></td></tr></table></figure><p>安装完毕后，当我们直接运行时（请在图形化界面中运行），可能会报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chromium</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[29663:29663:1206/041001.198622:FATAL:setuid_sandbox_host.cc(157)] The SUID sandbox helper binary was found, but is not configured correctly. Rather than run without sandboxing I&#x27;m aborting now. You need to make sure that /usr/lib/chromium/chrome-sandbox is owned by root and has mode 4755.</span><br><span class="line">[1206/041001.211798:ERROR:file_io_posix.cc(144)] open /sys/devices/system/cpu/online: No such file or directory (2)</span><br><span class="line">[1206/041001.213221:ERROR:elf_image_reader.cc(677)] no dynamic segment</span><br><span class="line">[1206/041001.218794:ERROR:file_io_posix.cc(144)] open /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq: No such file or directory (2)</span><br><span class="line">[1206/041001.219020:ERROR:file_io_posix.cc(144)] open /sys/devices/system/cpu/cpu0/cpufreq/scaling_max_freq: No such file or directory (2)</span><br><span class="line">Trace/breakpoint trap</span><br></pre></td></tr></table></figure><p>解决方案</p><blockquote><p><a href="https://highon.coffee/blog/kali-chromium-install/#:~:text=Chromium%20exists%20within%20the%20Kali%20repositories%20and%20can,%2Fetc%2Fchromium.d%2Fdefault-flags%20in%20vim%20and%20adding%20the%20following%20lines%3A">参考文献</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/chromium.d/default-flags</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">新增</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Run as root Kali</span></span><br><span class="line">export CHROMIUM_FLAGS=&quot;$CHROMIUM_FLAGS --password-store=detect --no-sandbox --user-data-dir&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#x27;export CHROMIUM_FLAGS=&quot;$CHROMIUM_FLAGS --password-store=detect --no-sandbox --user-data-dir&quot;&#x27; &gt;&gt; /etc/chromium.d/default-flags</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kali </tag>
            
            <tag> Chromium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio Part 7</title>
      <link href="/posts/3808960406/"/>
      <url>/posts/3808960406/</url>
      
        <content type="html"><![CDATA[<h1 id="绘制图形"><a href="#绘制图形" class="headerlink" title="绘制图形"></a>绘制图形</h1><blockquote><p>不同于直接使用布局文件，图形是我们“手动绘制的”。所以在<code>setContentView();</code>方法中我们设置的对象是是创建的图形实例。</p></blockquote><h2 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h2><ol><li>创建一个View的子类，并重写View类的onDraw()方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">class</span> <span class="title class_">ChildView</span> <span class="keyword">extends</span> <span class="title class_">View</span>&#123;</span><br><span class="line">    ...</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在View的子类视图中使用画布对象Canvas绘制各种图形</li><li>使用invalidate()方法刷新画面</li></ol><h1 id="动画组件"><a href="#动画组件" class="headerlink" title="动画组件"></a>动画组件</h1><h2 id="补间动画"><a href="#补间动画" class="headerlink" title="补间动画"></a>补间动画</h2><h2 id="属性动画"><a href="#属性动画" class="headerlink" title="属性动画"></a>属性动画</h2><h2 id="逐帧动画"><a href="#逐帧动画" class="headerlink" title="逐帧动画"></a>逐帧动画</h2><h1 id="图像浏览"><a href="#图像浏览" class="headerlink" title="图像浏览"></a>图像浏览</h1><blockquote><p>类似相册的东西。</p></blockquote><h1 id="触屏事件处理"><a href="#触屏事件处理" class="headerlink" title="触屏事件处理"></a>触屏事件处理</h1><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>实现onTouch方法</li></ol>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TigerVncServer on Termux-Nethunter-Kali</title>
      <link href="/posts/1153507573/"/>
      <url>/posts/1153507573/</url>
      
        <content type="html"><![CDATA[<h1 id="安装kali"><a href="#安装kali" class="headerlink" title="安装kali"></a>安装kali</h1><blockquote><p><a href="https://link.zhihu.com/?target=https://github.com/Hax4us/Nethunter-In-Termux.git">参见</a></p></blockquote><p>安装完毕后建议更新仓库和软件包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo apt autoremove</span><br></pre></td></tr></table></figure><h1 id="安装Tiger-VNC服务端"><a href="#安装Tiger-VNC服务端" class="headerlink" title="安装Tiger VNC服务端"></a>安装Tiger VNC服务端</h1><blockquote><p>注：Termux-Nethunter-kali内置了vnc，不需要安装，可以跳过此步。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install xfce4 xfce4-goodies</span><br><span class="line">apt install tigervnc-standalone-server tigervnc-common</span><br></pre></td></tr></table></figure><h1 id="配置默认实例"><a href="#配置默认实例" class="headerlink" title="配置默认实例"></a>配置默认实例</h1><blockquote><p>参考资料</p><p><a href="https://blog.csdn.net/phaste/article/details/123616645">[1]</a><a href="https://www.cnblogs.com/firestar277/p/14672432.html">[2]</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.vnc/config</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">geometry=1920x1080 #配置默认实例的界面分辨率</span><br><span class="line">localhost=no #为了能够远端登陆不仅仅是本机登陆，设置-localhost no 是必要的。这里很关键！</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.vnc/xstartup.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">############################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#          All            ##</span></span></span><br><span class="line">unset SESSION_MANAGER</span><br><span class="line">unset DBUS_SESSION_BUS_ADDRESS</span><br><span class="line">export SHELL=/bin/bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">############################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#          Gnome          ##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[ -x /etc/vnc/xstartup ] &amp;&amp; <span class="built_in">exec</span> /etc/vnc/xstartup</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">[ -r /root/.Xresources ] &amp;&amp; xrdb /root/.Xresources</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">vncconfig -iconic &amp;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">dbus-launch --exit-with-session gnome-session &amp;</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###########################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#           LXQT         ##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###exec openbox-session</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">exec</span> startlxqt</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###########################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#          KDE           ##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">exec</span> /usr/bin/startkde</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###########################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#          XFCE          ##</span></span></span><br><span class="line">startxfce4</span><br></pre></td></tr></table></figure><h1 id="启动VNC"><a href="#启动VNC" class="headerlink" title="启动VNC"></a>启动VNC</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnc start</span><br></pre></td></tr></table></figure><h1 id="关闭VNC"><a href="#关闭VNC" class="headerlink" title="关闭VNC"></a>关闭VNC</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vnc stop</span><br><span class="line">kill &lt;pid&gt;</span><br></pre></td></tr></table></figure><h1 id="查询VNC"><a href="#查询VNC" class="headerlink" title="查询VNC"></a>查询VNC</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnc status</span><br></pre></td></tr></table></figure><blockquote><p>Failed to execute child process “dbus-launch“</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install dbus-x11</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tiger VNC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kerberos协议下免密SSH会话</title>
      <link href="/posts/234306295/"/>
      <url>/posts/234306295/</url>
      
        <content type="html"><![CDATA[<h1 id="Kerberos协议"><a href="#Kerberos协议" class="headerlink" title="Kerberos协议"></a>Kerberos协议</h1><h2 id="案例说明"><a href="#案例说明" class="headerlink" title="案例说明"></a>案例说明</h2><p>​    在Centos7虚拟机中搭建Kerberos v5服务，模拟在某一局域网A， 所有主机的网关为192.168.41.2&#x2F;24， Realm为LPTEXAS.TOP；Kerberos数据库、AS和TGS服务器都在192.168.41.89&#x2F;24主机上。局域网A中，另一台主机192.168.41.90&#x2F;24上的SSH服务器对应的Principle为host&#x2F;<a href="mailto:&#49;&#57;&#50;&#x2e;&#x31;&#x36;&#56;&#x2e;&#x34;&#49;&#x2e;&#57;&#48;&#64;&#x4c;&#x50;&#84;&#69;&#x58;&#x41;&#83;&#46;&#x54;&#79;&#80;">&#49;&#57;&#50;&#x2e;&#x31;&#x36;&#56;&#x2e;&#x34;&#49;&#x2e;&#57;&#48;&#64;&#x4c;&#x50;&#84;&#69;&#x58;&#x41;&#83;&#46;&#x54;&#79;&#80;</a>。最终实现，用户lptexas使用SSH无须输入密码远程登录局域网A中的主机192.168.41.90&#x2F;24 。</p><h2 id="Kerberos-v5"><a href="#Kerberos-v5" class="headerlink" title="Kerberos v5"></a>Kerberos v5</h2><h3 id="服务搭建"><a href="#服务搭建" class="headerlink" title="服务搭建"></a>服务搭建</h3><h4 id="Kerberos——192-168-41-89"><a href="#Kerberos——192-168-41-89" class="headerlink" title="Kerberos——192.168.41.89"></a>Kerberos——192.168.41.89</h4><p>首先，安装服务器相关程序</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y krb5-server krb5-workstation pam_krb5 </span><br></pre></td></tr></table></figure><p>安装完毕后，修改kerberos服务器的配置文件。首先是&#x2F;var&#x2F;kerberos&#x2F;krb5kdc&#x2F;kdc.conf，该文件中需要注意配置EXAMPLE.COM 这是设定的kerberos域，表示KDC所管辖的范围。本例中使用LPTEXAS.TOP作为kerberos域。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133416212.png" alt="image-20221123133416212"></p><p>&#x2F;var&#x2F;kerberos&#x2F;krb5kdc&#x2F;kadm5.acl， 指定*&#x2F;<a href="mailto:&#97;&#x64;&#x6d;&#105;&#x6e;&#x40;&#76;&#80;&#x54;&#x45;&#88;&#65;&#x53;&#x2e;&#x54;&#x4f;&#80;">&#97;&#x64;&#x6d;&#105;&#x6e;&#x40;&#76;&#80;&#x54;&#x45;&#88;&#65;&#x53;&#x2e;&#x54;&#x4f;&#80;</a>用户为管理员用户，拥有全部权限。上述参数只有两列，第一列为用户名，第二列为权限分配。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133446152.png" alt="image-20221123133446152"></p><p>最后是&#x2F;etc&#x2F;krb5.conf文件，其中包含KDC的位置。所有使用的Kerberos的机器上的配置文件都要同步该文件。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133454541.png" alt="image-20221123133454541"></p><p>初始化数据库，使用命令建立keberbos鉴权数据库，并创建库管理员。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kdb5_util create -r LPTEXAS.TOP -s</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133503673.png" alt="image-20221123133503673"></p><p>添加KDC服务器上的超级管理员账号，</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kadmin.local -q &quot;addprinc root/admin@LPTEXAS.TOP&quot;</span><br></pre></td></tr></table></figure><p>最后，启动Kerberos v5服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start kadmin</span><br><span class="line">systemctl start krb5kdc</span><br><span class="line">systemctl enable krb5kdc</span><br><span class="line">systemctl enable kadmin</span><br></pre></td></tr></table></figure><h4 id="客户端——192-168-41-90"><a href="#客户端——192-168-41-90" class="headerlink" title="客户端——192.168.41.90"></a>客户端——192.168.41.90</h4><p>安装客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y krb5-lib krb5-workstation</span><br></pre></td></tr></table></figure><p>将服务器中的&#x2F;etc&#x2F;krb5.conf拷贝到客户端的&#x2F;etc&#x2F;，可以使用命令。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp /etc/krb5.conf root@192.168.41.90:/etc/</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133614162.png" alt="image-20221123133614162"></p><p>​    在客户端上使用超级管理员账号登录，并查看票据。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Kinit root/admin #输入两次密码</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133647131.png" alt="image-20221123133647131"></p><h3 id="案例演示"><a href="#案例演示" class="headerlink" title="案例演示"></a>案例演示</h3><p>首先创建用户lptexas，在kadmin中使用命令addprinc lptexas。可以使用listprincs查看已经创建好的用户。</p><p> <img src="https://lptexas-cub.github.io/img/post/image-20221123133654772.png" alt="image-20221123133654772"></p><p>然后创建服务主机，本例中的服务为SSH服务。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">addprinc -randkey host/192.168.41.90</span><br></pre></td></tr></table></figure><p>切换至主机192.168.41.90，并在服务主机保存密钥，在kadmin中使用命令对应上一步创建的服务主机。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kadmin</span><br><span class="line">ktadd -k /etc/krb5.keytab host/192.168.41.90</span><br></pre></td></tr></table></figure><p>验证密钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">klist -t -e -k /etc/krb5.keytab</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133814213.png" alt="image-20221123133814213"></p><p>以上一切就绪后，配置SSH，使其支持Kerberos认证。逐一修改下列文件中对应的项，开启相关功能。配置完毕后使用重新加载配置文件。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><ul><li>&#x2F;etc&#x2F;ssh&#x2F;ssh_config</li></ul><ol><li><p>GSSAPIAuthentication yes</p></li><li><p>GSSAPIDelegateCredentials yes</p></li></ol><ul><li>&#x2F;etc&#x2F;ssh&#x2F;sshd_config</li></ul><ol><li><p>KerberosAuthentication yes</p></li><li><p>GSSAPIAuthentication yes</p></li><li><p>GSSAPICleanupCredentials yes</p></li><li><p>GSSAPIStrictAcceptorCheck no</p></li><li><p>GSSAPIKeyExchange yes</p></li></ol><p>登录测试。在192.168.41.89主机，首先使用ssh连接测试，连接成功但需要输入密码，退出登录。使用kinit命令获取lptexas用户的登录凭证，再次使用ssh连接，连接成功，且不需要输入密码。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221123133911042.png" alt="image-20221123133911042"></p><p>注：测试前，需要准备好服务主机的账号lptexas，以及注意关闭服务主机的防火墙。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSH </tag>
            
            <tag> Kerberos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用Hash算法</title>
      <link href="/posts/139880178/"/>
      <url>/posts/139880178/</url>
      
        <content type="html"><![CDATA[<h1 id="Hash函数"><a href="#Hash函数" class="headerlink" title="Hash函数"></a>Hash函数</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>​    散列（Hash）函数，又称哈希函数或扎凑函数，是对不定长的输入产生定长输出的一种特殊函数，可以表达为h&#x3D;H(M)，M为消息，其长度不定，h被称为散列值、hash值、散列值或哈希值，长度一定，一般为128位或160位，如图1所示。</p><p><img src="http://lptexas.top/img/post/clip_image001.png" alt="img"></p><p>图1哈希函数</p><h2 id="常见Hash算法"><a href="#常见Hash算法" class="headerlink" title="常见Hash算法"></a>常见Hash算法</h2><p>​    目前常用的Hash算法一般采用迭代型结构，这种结构的Hash函数已被证明是合理的。迭代型Hash函数的一般结构如图2所示：</p><p><img src="http://lptexas.top/img/post/clip_image003.png" alt="img"></p><p>图2Hash算法迭代型结构</p><p>​    其中M&#x3D;Y0+Y1+…+YL-1，b为分组长度，n为输出的hash值长度，CVi是各级输出，CVL为Hash值。</p><p>​    下面介绍几种Hash算法都采用这种迭代型结构。</p><h2 id="MD5算法"><a href="#MD5算法" class="headerlink" title="MD5算法"></a>MD5算法</h2><p>​    MD5算法在产生摘要时，输入的信息可任意长，对输入按512位的分组为单位进行处理，处理后输出为128位的Hash值。</p><h3 id="算法实例"><a href="#算法实例" class="headerlink" title="算法实例"></a>算法实例</h3><p>​    以明文“TheCaseOfmd5”为例，其16进制ASCII码为：5468652043617365204f66206d6435，转化为二进制为：10101000110100001100101001000000100001101100001011100110110010100100000010011110110011000100000011011010110010000110101，长度为119。</p><h3 id="算法过程"><a href="#算法过程" class="headerlink" title="算法过程"></a>算法过程</h3><h4 id="第一步-消息填充"><a href="#第一步-消息填充" class="headerlink" title="第一步 消息填充"></a>第一步 消息填充</h4><p>使消息的长度比512的整数倍少64位。由于消息的长度为119，若要比512的整数倍少64位，则消息长度应为448，故需要填充1个“1”和328个“0”。又因为119&lt;264，故最后附上的64位为：0000000000000000000000000000000000000000000000000000000001110111。最终的消息长度&#x3D;119位原消息+329位0和1填充内容+64位原消息长度信息&#x3D;512位</p><h4 id="第二步-初始化缓冲区"><a href="#第二步-初始化缓冲区" class="headerlink" title="第二步 初始化缓冲区"></a>第二步 初始化缓冲区</h4><p>缓冲区用32位的寄存器，初始存数以十六进制表示为：A&#x3D;0x12345678，B&#x3D;0x89ABCDEF，C&#x3D;0xFEDCBA98，D&#x3D;0x76543210。</p><h4 id="第三步-HMD5­­运算"><a href="#第三步-HMD5­­运算" class="headerlink" title="第三步 HMD5­­运算"></a>第三步 HMD5­­运算</h4><p>以分组为单位对消息进行处理。本例中只有一个分组Y0，在Y0­组中需要经过压缩函数HMD5­­，其中包括4轮的处理过程。HMD5­­每轮的处理过程结构一样，但所用的逻辑函数不同，分别为F、G、H、I。每轮的输入为当前处理的消息分组Y0和缓冲区的当前值A、B、C、D，输出仍放在缓冲区中以产生新的A、B、C、D。每轮又要进行16步迭代运算，4轮共需64步完成。第四轮的输出与第一轮的输入相加得到最后的输出。如下图3、图4所示：</p><p><img src="http://lptexas.top/img/post/clip_image005.png" alt="img"></p><p>图3一个分组的Hmd5处理</p><p><img src="http://lptexas.top/img/post/clip_image007.png" alt="img"></p><p>图4一步迭代</p><p>表1逻辑函数</p><table><thead><tr><th>轮</th><th>基本函数g</th><th>g(b,c,d)</th></tr></thead><tbody><tr><td>1</td><td>F(b,c,d)</td><td>(bÙc)Ú(b­-Ùd)</td></tr><tr><td>2</td><td>G(b,c,d)</td><td>(bÙd)Ú(cÙd-)</td></tr><tr><td>3</td><td>H(b,c,d)</td><td>bÅcÅd</td></tr><tr><td>4</td><td>I(b,c,d)</td><td>cÅ(bÚd-)</td></tr></tbody></table><p>表 2 512位分组中x[k]的使用顺序</p><table><thead><tr><th>轮</th><th>使用顺序</th></tr></thead><tbody><tr><td>1</td><td>x[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]</td></tr><tr><td>2</td><td>x[1,6,11,0,5,10,15,4,9,14,3,8,13,2,7,12]</td></tr><tr><td>3</td><td>x[5,8,11,14,1,4,7,10,13,0,3,6,9,12,15,2]</td></tr><tr><td>4</td><td>x[0,7,14,5,12,3,10,1,8,15,6,13,4,11,2,9]</td></tr></tbody></table><p>表 3 从正弦函数构造的表T</p><table><thead><tr><th>0xD76AA478</th><th>0xE8C7B756</th><th>0x242070DB</th><th>0xC1BDCEEE</th><th>0xF57C0FAF</th><th>0x4787C62A</th><th>0xA8304613</th><th>0xFD469501</th></tr></thead><tbody><tr><td>0x698098D8</td><td>0x8B44F7AF</td><td>0xFFFF5BB1</td><td>0x895CD7BE</td><td>0x6B901122</td><td>0xFD987193</td><td>0xA679438E</td><td>0x49B40821</td></tr><tr><td>0xF61E2562</td><td>0xC040B340</td><td>0x265E5A51</td><td>0xE9B6C7AA</td><td>0xD62F105D</td><td>0x02441453</td><td>0xD8A1E681</td><td>0xE7D3FBC8</td></tr><tr><td>0x21E1CDE6</td><td>0xC33707D6</td><td>0xF4D50D87</td><td>0x455A14ED</td><td>0xA9E3E905</td><td>0xFCEFA3F8</td><td>0x676F02D9</td><td>0x8D2A4C8A</td></tr><tr><td>0xFFFA3942</td><td>0x8771F681</td><td>0x6D9D6122</td><td>0xFDE5380C</td><td>0xA4BEEA44</td><td>0x4BDECFA9</td><td>0xF6BB4B60</td><td>0xBEBFBC70</td></tr><tr><td>0x289B7EC6</td><td>0xEAA127FA</td><td>0xD4EF3085</td><td>0x04881D05</td><td>0xD9D4D039</td><td>0xE6DB99E5</td><td>0x1FA27CF8</td><td>0xC4AC5665</td></tr><tr><td>0xF4292244</td><td>0x432AFF97</td><td>0xAB9423A7</td><td>0xFC93A039</td><td>0x655B59C3</td><td>0x8F0CCC92</td><td>0xFFEFF47D</td><td>0x85845DD1</td></tr><tr><td>0x6FA87E4F</td><td>0xFE2CE6E0</td><td>0xA3014314</td><td>0x4E0811A1</td><td>0xF7537E82</td><td>0xBD3AF235</td><td>0x2AD7D2BB</td><td>0xEB86D391</td></tr></tbody></table><p>​    （注：从第一行起从左往右读，分别表示T[1，2，…，64]，前两行参与第一轮运算，三四行参与第二轮，以此类推。每两行共16个数据依次对应每轮中16步。）</p><p>​    CLSs规则</p><table><thead><tr><th>轮</th><th>1-4步</th><th>5-8步</th><th>9-12步</th><th>13-16步</th></tr></thead><tbody><tr><td>1</td><td>7、12、17、22</td><td>7、12、17、22</td><td>7、12、17、22</td><td>7、12、17、22</td></tr><tr><td>2</td><td>5、9、14、20</td><td>5、9、14、20</td><td>5、9、14、20</td><td>5、9、14、20</td></tr><tr><td>3</td><td>4、11、16、23</td><td>4、11、16、23</td><td>4、11、16、23</td><td>4、11、16、23</td></tr><tr><td>4</td><td>6、10、15、21</td><td>6、10、15、21</td><td>6、10、15、21</td><td>6、10、15、21</td></tr></tbody></table><p>根据上述的三个表以及左移规则，就可以开始md5的计算了。首先，将填充结果分成16段每段32位。</p><p>X[0]：10101000110100001100101001000000 转为16进制为 0xA8D0CA40</p><p>X[1]： 10000110110000101110011011001010</p><p>X[2]： 01000000100111101100110001000000<br> X[3]： 11011010110010000110101100000000<br> …    (注：X[4]-X[13]每段32位上都为0)<br> X[14]：00000000000000000000000000000000<br> X[15]：00000000000000000000000001110111</p><p>第一轮第一步迭代，如图 5所示：</p><p><img src="http://lptexas.top/img/post/clip_image008.png" alt="img"></p><p>图5 第一轮第一步迭代带数据</p><p>（注：上述演示数据均为16进制）</p><p>​     第一轮之后的15步以及剩余各轮中的16步都类似图5的操作，不再做演示。</p><h4 id="第四步-输出"><a href="#第四步-输出" class="headerlink" title="第四步 输出"></a>第四步 输出</h4><p>​    最终，经过64步运算后，所得的结果与最初输入的分组进行模232加法（如果两数相加后大于等于232，则结果除以232取余数），见图3。由于本例中只有一个分组，故所得结果即为最终输出，128位的消息摘要（输出位A、B、C、D的值：低字节位A,最高字节位D）。举例如下图5所示：</p><p><img src="http://lptexas.top/img/post/clip_image010.png" alt="img"></p><p>图 6 最终输出结果举例</p><h2 id="SHA算法"><a href="#SHA算法" class="headerlink" title="SHA算法"></a>SHA算法</h2><h3 id="算法实例-1"><a href="#算法实例-1" class="headerlink" title="算法实例"></a>算法实例</h3><p>​    以明文“TheCaseOfsha-1”为例。其二进制值为101010001101000011001010100001101100001011100110110010101001111011001100111001101101000011000010010110100110001，长度为111。</p><h3 id="算法过程-1"><a href="#算法过程-1" class="headerlink" title="算法过程"></a>算法过程</h3><p>SHA处理消息的过程与MD5算法类似。</p><h4 id="第一步-消息填充-1"><a href="#第一步-消息填充-1" class="headerlink" title="第一步 消息填充"></a>第一步 消息填充</h4><p>填充消息使其长度与448模512同余。填充的方法是在消息后附加一个1和若干个0。然后附上填充前的报文长度的64位数据（最高有效位在前）。</p><p>本例需要填充1个“1”和337个“0”，最后附上111的长度信息11011110 00000000  00000000  00000000  00000000  00000000  00000000  00000000。</p><h4 id="第二步-初始化缓冲区-1"><a href="#第二步-初始化缓冲区-1" class="headerlink" title="第二步 初始化缓冲区"></a>第二步 初始化缓冲区</h4><p>哈希函数的中间结果和最终结果保存于160位的缓冲区中，缓冲区用5个32位的寄存器（A、B、C、D、E）表示，并将寄存器初始化为下列32位的整数：</p><p>A&#x3D;67452301，B&#x3D;EFCDAB89，C&#x3D;98BADCFB，D&#x3D;10325476，E&#x3D;C3D2E1F0</p><h4 id="第三步-HSHA-1算法"><a href="#第三步-HSHA-1算法" class="headerlink" title="第三步 HSHA-1算法"></a>第三步 HSHA-1算法</h4><p><img src="http://lptexas.top/img/post/clip_image012.png" alt="img"></p><p>图 7 SHA-1算法产生消息摘要</p><p>类似MD5算法，SHA-1算法也具有4轮运算模块，但每轮进行20步迭代。每轮输入为消息分组Yq 和缓冲区的160位当前值A、B、C、D、E。输出为新的缓冲区值A、B、C、D、E。每轮的结构相同，但每轮使用一个不同的加法常量Kt 其中t表示步数，0≤t≤79，如表所示，且每轮使用不同的逻辑函数。</p><p><img src="http://lptexas.top/img/post/clip_image013.png" alt="img"></p><p>图 8 一个分组的HSHA-1 处理</p><p>表 4  算法中使用的加法常量</p><table><thead><tr><th>步骤</th><th>十六进制</th></tr></thead><tbody><tr><td>0≤t≤19</td><td>Kt &#x3D;5A827999</td></tr><tr><td>20≤t≤39</td><td>Kt &#x3D;6ED9EBA1</td></tr><tr><td>40≤t≤59</td><td>Kt &#x3D;8F1BBCDC</td></tr><tr><td>60≤t≤76</td><td>Kt &#x3D;CA62C1D6</td></tr></tbody></table><p>表 5 各轮中使用的逻辑函数</p><table><thead><tr><th>步骤</th><th>Kt的十六进制</th><th>取整数部分</th></tr></thead><tbody><tr><td>0&lt;&#x3D; t &lt;&#x3D;19</td><td>f1 &#x3D; f(t,B,C,D)</td><td>(B&amp;C)|((~B)&amp;D)</td></tr><tr><td>20&lt;&#x3D; t &lt;&#x3D;39</td><td>f2 &#x3D; f(t,B,C,D)</td><td>B<img src="http://lptexas.top/img/post/clip_image014.gif" alt="\displaystyle \oplus">C<img src="http://lptexas.top/img/post/clip_image014.gif" alt="\displaystyle \oplus">D</td></tr><tr><td>40&lt;&#x3D;t&lt;&#x3D;59</td><td>f3 &#x3D; f(t,B,C,D)</td><td>(B&amp;C)|(B&amp;D)|(C&amp;D)</td></tr><tr><td>60&lt;&#x3D;t&lt;&#x3D;79</td><td>f4 &#x3D; f(t,B,C,D)</td><td>B<img src="http://lptexas.top/img/post/clip_image014.gif" alt="\displaystyle \oplus">C<img src="http://lptexas.top/img/post/clip_image014.gif" alt="\displaystyle \oplus">D</td></tr></tbody></table><p><img src="http://lptexas.top/img/post/clip_image016.png" alt="img"></p><p>图 9 Wt的导出过程</p><p>开始运算，首先将Y0分为16个分组：</p><p>W0&#x3D;10101000110100001100101010000110<br> W1&#x3D;11000010111001101100101010011110<br> W2&#x3D;11001100111001101101000011000010<br> W3&#x3D;01011010011000110000000000000000</p><p>W4-13&#x3D;0000000000000000…000000000000</p><p>W14&#x3D;11011110000000000000000000000000<br> W15&#x3D;00000000000000000000000000000000<br> 再利用分好的16个组计算剩余的分组，以W16为例：</p><p>​    W0<img src="http://lptexas.top/img/post/clip_image014.gif" alt="\displaystyle \oplus"> W2 <img src="http://lptexas.top/img/post/clip_image017.png" alt="img"> W8 <img src="http://lptexas.top/img/post/clip_image017.png" alt="img"> W13&#x3D;1100100001101100001101001000100</p><p>​    W16&#x3D;CLS1(1100100001101100001101001000100)&#x3D;1001000011011000011010010001001</p><p>进入轮操作，以第一轮第一步为例：</p><p><img src="http://lptexas.top/img/post/clip_image018.png" alt="img"></p><p>图 10 第一轮第一步SHA操作</p><h4 id="第四步-输出-1"><a href="#第四步-输出-1" class="headerlink" title="第四步 输出"></a>第四步 输出</h4><p>分组处理完毕后，输出的就是160位的消息摘要。</p>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MD5 </tag>
            
            <tag> SHA-1 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用教程</title>
      <link href="/posts/3800886977/"/>
      <url>/posts/3800886977/</url>
      
        <content type="html"><![CDATA[<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><blockquote><p>请参阅官方文档</p></blockquote><h1 id="初次使用git"><a href="#初次使用git" class="headerlink" title="初次使用git"></a>初次使用git</h1><blockquote><p>全局配置</p></blockquote><ol><li>关闭SSL证书认证</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br></pre></td></tr></table></figure><ol start="2"><li>启用保存账号密码，只需要输入一次密码。</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><ol start="3"><li>设置默认分支为main</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global init.defaultBranch main</span><br></pre></td></tr></table></figure><h2 id="克隆远程项目"><a href="#克隆远程项目" class="headerlink" title="克隆远程项目"></a>克隆远程项目</h2><ol><li>克隆仓库（提交本地仓库，跳过此步）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> <span class="string">&quot;https://... or git@...&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>克隆时提示登录</p></blockquote><p>Username for ‘<a href="https://github.com/">https://github.com</a>‘:<br>Password for ‘<a href="https://asucanyh-cn@github.com/">https://asucanyh-cn@github.com</a>‘:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">U2FsdGVkX1+J8h4yqaXNbak9+HeY/8BE4tI6pdBpuZgOW7u2kstotAR4q9kq8PVv4vPcSLr5xl/1qqMj9GyipA</span><br></pre></td></tr></table></figure><h2 id="本地初始化仓库"><a href="#本地初始化仓库" class="headerlink" title="本地初始化仓库"></a>本地初始化仓库</h2><blockquote><p>在本地的项目中，创建一个README文档，然后对将项目初始化（创建本地仓库），再创建一个提交并提供描述信息，选择要提交到的分支（如果没有需要新建），选择需要提交到的远程仓库地址，</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# 这是README文档的标题&quot;</span> &gt;&gt; README.md</span><br><span class="line">git init  <span class="comment">#初始化本地仓库，会创建一个.git文件</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#执行过修改默认分支，可不用再使用该语句</span></span><br><span class="line">git branch -m master main   </span><br><span class="line"><span class="comment">#在git中把默认的master分支改为main，用于发布到GitHub，也可以直接在GitHub创建一个master分支，将项目提交到master分支中。</span></span><br></pre></td></tr></table></figure><h1 id="将本地仓库上传至Github"><a href="#将本地仓库上传至Github" class="headerlink" title="将本地仓库上传至Github"></a>将本地仓库上传至Github</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add . <span class="comment">#将项目代码添加到待提交区</span></span><br><span class="line">git commit -m <span class="string">&quot;这是针对本次提交的描述信息&quot;</span></span><br><span class="line">git remote add origin <span class="string">&quot;repo-url&quot;</span> <span class="comment">#设置上传的远程仓库地址</span></span><br><span class="line">git branch -M main</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main <span class="comment">#提交上传，可以直接用git push上传到默认的分支</span></span><br></pre></td></tr></table></figure><h1 id="使用情景"><a href="#使用情景" class="headerlink" title="使用情景"></a>使用情景</h1><h2 id="查看暂存文件"><a href="#查看暂存文件" class="headerlink" title="查看暂存文件"></a>查看暂存文件</h2><blockquote><p>查看add了哪些文件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ls-files</span><br></pre></td></tr></table></figure><h2 id="删除暂存区中的文件"><a href="#删除暂存区中的文件" class="headerlink" title="删除暂存区中的文件"></a>删除暂存区中的文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm</span><br></pre></td></tr></table></figure><h2 id="修改描述信息"><a href="#修改描述信息" class="headerlink" title="修改描述信息"></a>修改描述信息</h2><blockquote><p>如果不小心写错了描述信息，如何修改？如果已经推送到了远程仓库该怎么办？</p></blockquote><h3 id="情景一"><a href="#情景一" class="headerlink" title="情景一"></a>情景一</h3><blockquote><p>本地已经提交描述信息。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git commit --amend</span><br><span class="line"><span class="comment">#输入完毕后，就可以对描述信息进行修改了</span></span><br></pre></td></tr></table></figure><h3 id="情景二"><a href="#情景二" class="headerlink" title="情景二"></a>情景二</h3><blockquote><p>本地已经推送给远程仓库</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git rebase -i HEAD~1 </span><br><span class="line"><span class="comment">#~1表示倒数第一条推送记录</span></span><br><span class="line"><span class="comment">#输入完毕后，会让你修改提交记录</span></span><br><span class="line"><span class="comment">#将需要修改的对应行的pick改成edit，保存退出</span></span><br><span class="line">git commit --amend</span><br><span class="line">git rebase --<span class="built_in">continue</span></span><br><span class="line">git push --force</span><br></pre></td></tr></table></figure><h2 id="强制覆盖本地仓库"><a href="#强制覆盖本地仓库" class="headerlink" title="强制覆盖本地仓库"></a>强制覆盖本地仓库</h2><div class="admonition warning"><p class="admonition-title">注意</p><p>强制覆盖的操作很危险，请确保自己的修改是否不被需要！</p></div><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">设置上传到远程仓库的分支</span></span><br><span class="line">git branch --set-upstream-to=origin/main</span><br><span class="line">git fetch --all &amp;&amp; git reset --hard origin/main &amp;&amp; git pull</span><br></pre></td></tr></table></figure><h1 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h1><p>在本地仓库硬回退<code>git reset --hard HEAD HASH</code>后，通过<code>git push origin HEAD --force</code>可以同步远程仓库回退，但不能让<code>其它的本地仓库</code>和远程仓库同步，使用<code>git pull</code>命令会一直提示最新而文件内容未发生改变。</p><h1 id="报错方案"><a href="#报错方案" class="headerlink" title="报错方案"></a>报错方案</h1><blockquote><p><a href="https://blog.csdn.net/gongdamrgao/article/details/115032436">为什么GitHub默认分支为main呢？</a></p></blockquote><ul><li><p>error: src refspec main does not match any.<br>error: failed to push some refs to ‘<a href="mailto:&#103;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;">&#103;&#x69;&#x74;&#x40;&#103;&#105;&#x74;&#104;&#117;&#x62;&#x2e;&#99;&#x6f;&#x6d;</a>:Asucanyh-cn&#x2F;blog-source.git’</p></li><li><p>! [rejected]        main -&gt; main (fetch first)</p></li></ul><p>  error: failed to push some refs to ‘<a href="mailto:&#103;&#x69;&#116;&#64;&#103;&#105;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;">&#103;&#x69;&#116;&#64;&#103;&#105;&#x74;&#x68;&#117;&#98;&#46;&#x63;&#x6f;&#x6d;</a>:Asucanyh-cn&#x2F;blog-source.git’</p><blockquote><p><a href="https://blog.csdn.net/weixin_44014995/article/details/109900149">SSL证书报错</a> </p></blockquote><ul><li>git SSL certificate problem: unable to get local issuer certificate</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.sslVerify <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/good_good_xiu/article/details/118567249">git提交或克隆报错</a></p><p>fatal: unable to access ‘<a href="https://github.com/Asucanyh-cn/blog-source.git/">https://github.com/Asucanyh-cn/blog-source.git/</a>‘: Failed connect to github.com:443; Connection timed out</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">用加速器</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改hosts文件</span></span><br><span class="line">140.82.114.3 github.com</span><br><span class="line">199.232.69.194 github.global.ssl.fastly.net</span><br><span class="line">185.199.108.153 assets-cdn.github.com</span><br><span class="line">185.199.109.153 assets-cdn.github.com</span><br><span class="line">185.199.110.153 assets-cdn.github.com</span><br><span class="line">185.199.111.153 assets-cdn.github.com</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">尝试取消全局代理，有时候还是无效</span></span><br><span class="line">git config --global --unset http.proxy</span><br><span class="line">git config --global --unset https.proxy</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/u010393510/article/details/127121169">解决冲突 : AutoMatic merge failed；fix conflicts and then commit the result</a> </p></blockquote><blockquote><p>有些目录存在但是看不见内容：<a href="https://blog.csdn.net/u012206617/article/details/109994468">fatal: Path ‘XXX‘ is in submodule ‘XXX‘错误（path is in submodule）</a></p></blockquote><p>原因是该目录为其他git项目，可以使用<code>git rm rf --cached‘/path’</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//解决方案</span><br><span class="line">git <span class="built_in">rm</span> rf --cached‘/path’</span><br><span class="line">git add /path/*</span><br><span class="line">git commit -m <span class="string">&#x27;&#x27;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/DDD4V/article/details/118896307">Git冲突：Please commit your changes or stash them before you merge</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git stash</span><br><span class="line">git pull</span><br><span class="line">git stash pop</span><br><span class="line">git stash list</span><br><span class="line">git stash clear</span><br></pre></td></tr></table></figure><blockquote><p>Pull is not possible because you have unmerged files.Please, fix them up in the work tree, and then use ‘git add&#x2F;rm <file>‘<br>as appropriate to mark resolution, or use ‘git commit -a’.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#放弃对本地的修改，然后再拉取</span></span><br><span class="line">git reset --hard FETCH_HEAD</span><br><span class="line">git pull</span><br><span class="line"><span class="comment">#先提交本地的修改，再拉取</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot; &quot;</span></span><br><span class="line">git pull </span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot; &quot;</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.51cto.com/u_15740728/5805813">detected dubious ownership in repository at ‘&#x2F;…&#x2F;‘</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --add safe.directory &quot;*&quot;;</span><br></pre></td></tr></table></figure><blockquote><p>warning: push.default is unset; its implicit value is changing in<br>Git 2.0 from ‘matching’ to ‘simple’.</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global push.default matching</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/yy339452689/article/details/108641201">error: The last gc run reported the following. Please correct the root cause<br>and remove gc.log.Automatic cleanup will not be performed until the file is removed.warning: There are too many unreachable loose objects; run ‘git prune’ to remove them.</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git fsck --lost-found #查看悬空对象</span><br><span class="line">git gc --prune=now #清空</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/weixin_38694789/article/details/103325155">your branch is ahead of by x commits.</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push origin main #直接提交 </span><br><span class="line">git reset --hard HEAD~x #放弃commit</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/junruitian/article/details/88361895">fatal: refusing to merge unrelated histories</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --allow-unrelated-histories</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/m0_46412825/article/details/115962583">fatal: unable to access ‘’: Error in the HTTP2 framing layer</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --unset http.proxy </span><br><span class="line">git config --global --unset https.proxy</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://blog.csdn.net/qq_36393978/article/details/127531104">git pull –tags origin main<br>fatal: unable to access ‘’: GnuTLS recv error (-110): The TLS connection was non-properly terminated.</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install gnutls-bin</span><br><span class="line">git config --global http.sslVerify false</span><br><span class="line">git config --global http.postBuffer 1048576000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发Day6</title>
      <link href="/posts/1411606487/"/>
      <url>/posts/1411606487/</url>
      
        <content type="html"><![CDATA[<h1 id="使用npm包"><a href="#使用npm包" class="headerlink" title="使用npm包"></a>使用npm包</h1><blockquote><p>小程序以及支持使用npm安装第三方包，在小程序中使用npm包有三个限制</p></blockquote><ol><li>不支持依赖于Node.js内置库的包</li><li>不支持依赖于浏览器内置对象的包</li><li>不支持依赖于C++插件的包</li></ol><h2 id="Vant-Weapp"><a href="#Vant-Weapp" class="headerlink" title="Vant Weapp"></a><a href="https://vant-ui.github.io/vant-weapp/#/home">Vant Weapp</a></h2><blockquote><p>有赞前段团队开源的一套小程序UI组件库，使用MIT开源许可协议。</p></blockquote><h3 id="安装Vant组件库"><a href="#安装Vant组件库" class="headerlink" title="安装Vant组件库"></a><a href="https://vant-contrib.gitee.io/vant-weapp/0.x/#/quickstart">安装Vant组件库</a></h3><p>安装步骤</p><ol><li>通过npm安装（建议指定版本为@1.3.3）</li></ol><ul><li>在自己的工作目录打开外部终端</li><li>若工作目录中还未创建包管理文件package.json，则执行：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><ul><li>安装Vant包</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @vant/weapp@1.3.3 -S --production</span><br></pre></td></tr></table></figure><ol start="2"><li>构建npm包</li></ol><ul><li>在工具栏中构建</li></ul><ol start="3"><li>修改app.json</li></ol><ul><li>在<code>app.js</code>文件中删除<code>&quot;style&quot;:&quot;v2&quot;</code>，以避免样式冲突</li></ul><h3 id="使用Vant3组件"><a href="#使用Vant3组件" class="headerlink" title="使用Vant3组件"></a>使用Vant3组件</h3><p>参考文档</p><h3 id="定制全局主题样式"><a href="#定制全局主题样式" class="headerlink" title="定制全局主题样式"></a><a href="https://vant-ui.github.io/vant-weapp/#/theme">定制全局主题样式</a></h3><blockquote><p>补充：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Using_CSS_custom_properties">CSS自定义属性</a>，即CSS变量</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Defination &amp; Effect Area*/</span></span><br><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line"><span class="attr">--var-name</span>:value</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*Usage*/</span></span><br><span class="line">property:<span class="built_in">var</span>(--var-name)</span><br></pre></td></tr></table></figure><h2 id="Api-Promise化"><a href="#Api-Promise化" class="headerlink" title="Api Promise化"></a><a href="https://blog.csdn.net/qq_45890970/article/details/124869238#:~:text=API%20Promise%20%E5%8C%96%EF%BC%8C%E6%8C%87%E7%9A%84%E6%98%AF%E9%80%9A%E8%BF%87%E9%A2%9D%E5%A4%96%E7%9A%84%E9%85%8D%E7%BD%AE%EF%BC%8C%20%E5%B0%86%E5%AE%98%E6%96%B9%E6%8F%90%E4%BE%9B%E7%9A%84%E3%80%81%E5%9F%BA%E4%BA%8E%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%E7%9A%84%E5%BC%82%E6%AD%A5,API%EF%BC%8C%E5%8D%87%E7%BA%A7%E6%94%B9%E9%80%A0%E4%B8%BA%E5%9F%BA%E4%BA%8EPromise%20%E7%9A%84%E5%BC%82%E6%AD%A5%20API%20%EF%BC%8C%E4%BB%8E%E8%80%8C%E6%8F%90%E9%AB%98%E4%BB%A3%E7%A0%81%E7%9A%84%E5%8F%AF%E8%AF%BB%E6%80%A7%E3%80%81%E7%BB%B4%E6%8A%A4%E6%80%A7%EF%BC%8C%E9%81%BF%E5%85%8D%E5%9B%9E%E8%B0%83%E5%9C%B0%E7%8B%B1%E7%9A%84%E9%97%AE%E9%A2%98%E3%80%82">Api Promise化</a></h2><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise">Promise学习</a></p><p>基于回调函数的异步API的缺点</p></blockquote><p>在默认情况下，小程序官方提供的异步API都是基于回调函数实现的，如：网络请求api</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;&#125;,</span><br><span class="line">    <span class="attr">success</span>:()-&gt;&#123;&#125;,<span class="comment">//请求成功的回调函数</span></span><br><span class="line">    <span class="attr">fail</span>:()-&gt;&#123;&#125;,<span class="comment">//请求失败的回调函数</span></span><br><span class="line">    <span class="attr">complete</span>:()-&gt;&#123;&#125;<span class="comment">//请求完成的回调函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>如果在小程序开发中大量使用这类api，会容易造成回调地狱问题，代码的可读性、维护性差。</p><p>为了解决这类问题，就需要将Api promise化</p><h3 id="安装Api-Promise包"><a href="#安装Api-Promise包" class="headerlink" title="安装Api Promise包"></a>安装Api Promise包</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i <span class="literal">--save</span> miniprogram<span class="literal">-api-promise</span>@<span class="number">1.0</span>.<span class="number">4</span></span><br></pre></td></tr></table></figure><blockquote><p>由于小程序的特殊性，在安装完毕后不能直接使用，而需要在工具中重新构建。</p></blockquote><p>在默认情况下，安装的包会在<code>node_modules</code>目录中，而小程序无法直接读取里面的包，所以需要先构建，将<code>node_modules</code>中的包迁移到<code>miniprogram_npm</code>中。为了避免出现不必要的错误，建议每次重新构建前，删除<code>miniprogram_npm</code>目录。</p><h3 id="实现Api-Promise化"><a href="#实现Api-Promise化" class="headerlink" title="实现Api Promise化"></a>实现Api Promise化</h3><blockquote><p>在app.js入口文件中，调用<code>promisifyAll()</code>方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; promisifyAll &#125; <span class="keyword">from</span> <span class="string">&#x27;miniprogram-api-promise&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>const型，引用类型的变量。定义一个空白对象赋值给wxp，同时还赋值给微信的一个自定义属性<code>wx.p</code>，让wxp和wx.p都指向空对象。之后可以在每个页面中通过<code>wx.p</code>调用promise化后的api。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> wxp = wx.<span class="property">p</span> = &#123;&#125;</span><br></pre></td></tr></table></figure><blockquote><p>promise化所有wx顶级对象的api</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">promisifyAll</span>(wx,wxp)</span><br></pre></td></tr></table></figure><h3 id="Promise化后api的使用"><a href="#Promise化后api的使用" class="headerlink" title="Promise化后api的使用"></a>Promise化后api的使用</h3><blockquote><p>发起网络请求 <code>wx.request()</code></p><p><a href="https://www.cnblogs.com/youma/p/10475214.html">async&#x2F;await学习</a></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">func</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">const</span> &#123;<span class="attr">data</span>:res&#125; = <span class="keyword">await</span> wx.<span class="property">p</span>.<span class="title function_">request</span>(&#123; <span class="comment">// &#123;data : res&#125; 从对象身上解构出一个data对象并重命名为res，之后再打印res时，打印的是data属性。&#123;data:res&#125;改之前是res。</span></span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;GET&#x27;</span></span><br><span class="line">        ...</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="全局数据共享"><a href="#全局数据共享" class="headerlink" title="全局数据共享"></a>全局数据共享</h1><blockquote><p>又称状态管理，是为了解决组件之间数据共享的问题。</p><p>开发中常用的全局数据共享方案：Vuex、Redux、Mobx等。</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221119092027521.png" alt="image-20221119092027521"></p><h2 id="小程序中的全局数据共享方案"><a href="#小程序中的全局数据共享方案" class="headerlink" title="小程序中的全局数据共享方案"></a>小程序中的全局数据共享方案</h2><blockquote><p><code>mobx-miniprogram</code>配合<code>mobx-miniprogram-bindings</code>。</p></blockquote><ul><li>mobx-miniprogram<ul><li>用于创建<code>STORE</code>实例</li></ul></li><li>mobx-miniprogram-bindings<ul><li>用于STORE和组件或界面<code>建立联系</code></li></ul></li></ul><h2 id="安装Mobx相关包"><a href="#安装Mobx相关包" class="headerlink" title="安装Mobx相关包"></a>安装Mobx相关包</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install <span class="literal">--save</span> mobx<span class="literal">-miniprogram</span>@<span class="number">4.13</span>.<span class="number">2</span> mobx<span class="literal">-miniprogram-bindings</span>@<span class="number">1.2</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><p>删除miniprogram_nom文件夹，重新构建npm</p><h2 id="创建STORE实例"><a href="#创建STORE实例" class="headerlink" title="创建STORE实例"></a>创建STORE实例</h2><blockquote><p>在根目录创建store文件夹，新建store.js文件</p></blockquote><p>我们通过在js文件内部导出对象实现共享。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按需导入方法</span></span><br><span class="line"><span class="keyword">import</span> &#123; observable &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-miniprogram&#x27;</span></span><br><span class="line"><span class="comment">//导出store对象</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = <span class="title function_">obervable</span>(&#123; </span><br><span class="line"><span class="attr">numA</span>:<span class="number">1</span>, </span><br><span class="line">    <span class="attr">numB</span>:<span class="number">2</span></span><br><span class="line">&#125;) </span><br></pre></td></tr></table></figure><h3 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h3><blockquote><p>定义计算属性的方法时，需要在之前加上get表示只读</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">get</span> <span class="title function_">sum</span>()&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">numA</span> + <span class="variable language_">this</span>.<span class="property">numB</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h3 id="action方法"><a href="#action方法" class="headerlink" title="action方法"></a>action方法</h3><blockquote><p>如果让外部可以直接修改STORE的数据，这是很危险的。我们通过action方法，调用函数来实现对STORE数据的习惯。</p></blockquote><p>首先，需要导入action包</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; observable,action &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-miniprogram&#x27;</span></span><br></pre></td></tr></table></figure><p>使用action实现数据变化</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">updateNumA</span>:<span class="title function_">action</span>(<span class="keyword">function</span>(<span class="params">step</span>)&#123; </span><br><span class="line"><span class="variable language_">this</span>.<span class="property">numA</span>+=step</span><br><span class="line">&#125;),</span><br></pre></td></tr></table></figure><h2 id="将STORE中的成员绑定到页面"><a href="#将STORE中的成员绑定到页面" class="headerlink" title="将STORE中的成员绑定到页面"></a>将STORE中的成员绑定到页面</h2><blockquote><p>在页面js文件中，导入对应的包</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createStorageBindings &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-miniprogram-bindings&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&#x27;../../store/store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Page</span>(&#123;</span><br><span class="line"><span class="attr">onLoad</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storeBindings</span> = <span class="title function_">createStorageBindings</span>(<span class="variable language_">this</span>,&#123;</span><br><span class="line">        store, <span class="comment">//绑定的对象</span></span><br><span class="line">            <span class="attr">fields</span>:[<span class="string">&#x27;numA&#x27;</span>,<span class="string">&#x27;numB&#x27;</span>,<span class="string">&#x27;sum&#x27;</span>], <span class="comment">//绑定的字段(数据和计算属性)</span></span><br><span class="line">            <span class="attr">actions</span>:[<span class="string">&#x27;updateNumA&#x27;</span>] <span class="comment">//绑定的方法</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attr">onUnload</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">storeBindings</span>.<span class="title function_">destoryStoreBindings</span>() <span class="comment">//生命周期结束后销毁绑定的对象</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="将STORE中的成员绑定到组件"><a href="#将STORE中的成员绑定到组件" class="headerlink" title="将STORE中的成员绑定到组件"></a>将STORE中的成员绑定到组件</h2><blockquote><p>在组件js中，导入对应的包，并在Component中的behaviors数组中新增导入的方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; storeBindingsBehavior &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-miniprogram-bindings&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&#x27;../../store/store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line"><span class="attr">behaviors</span>:[storeBindingsBehavior],<span class="comment">//通过storeBindingsBehavior来实现自动绑定</span></span><br><span class="line">    <span class="attr">storeBindings</span>:&#123;</span><br><span class="line">    store, <span class="comment">//指定要绑定的STORE</span></span><br><span class="line">        <span class="attr">fields</span>:&#123; <span class="comment">//绑定字段的3种方式</span></span><br><span class="line">        <span class="attr">numA</span>:<span class="function">() =&gt;</span>store.<span class="property">numA</span>,</span><br><span class="line">            <span class="attr">numB</span>:<span class="function">(<span class="params">store</span>) =&gt;</span>store.<span class="property">numB</span>,</span><br><span class="line">            <span class="attr">sum</span>:<span class="string">&#x27;sum&#x27;</span> <span class="comment">//最简单的方法</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">action</span>:&#123; <span class="comment">//指定要绑定的方法</span></span><br><span class="line">        <span class="attr">updateNumA</span>:<span class="string">&#x27;updateNumA&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="分包"><a href="#分包" class="headerlink" title="分包"></a>分包</h1><blockquote><p>分包指将一个完整的小程序项目，按需求划分成不同的子包，在构建时打包成不同的分包，用户在使用时按需进行加载。</p></blockquote><h2 id="分包的好处"><a href="#分包的好处" class="headerlink" title="分包的好处"></a>分包的好处</h2><ul><li>可以优化小程序首次启动时的下载时间</li><li>在多团队共同开发时可以更好的解耦写作</li></ul><h2 id="分包前项目的构成"><a href="#分包前项目的构成" class="headerlink" title="分包前项目的构成"></a>分包前项目的构成</h2><p><img src="http://lptexas.top/img/post/image-20221119101427769.png" alt="image-20221119101427769"></p><p>在分包前，所有的页面和公共资源都会被打包到一起，导致整体体积过大，影响下载时间。</p><h2 id="分包后项目的构成"><a href="#分包后项目的构成" class="headerlink" title="分包后项目的构成"></a>分包后项目的构成</h2><blockquote><p>分包后，小程序项目由1个主包+多个分包组成</p></blockquote><ul><li>主包：一般由包含项目的启动页面或TabBar页面、以及所有分包都需要用到的一些公共资源</li><li>分包：只包含和当前分包有关的页面和私有资源</li></ul><p><img src="http://lptexas.top/img/post/image-20221119101834625.png" alt="image-20221119101834625"></p><h2 id="分包的加载规则"><a href="#分包的加载规则" class="headerlink" title="分包的加载规则"></a>分包的加载规则</h2><blockquote><p>小程序启动时，会默认下载主包并启动主包中的页面</p></blockquote><ul><li>tabBar页面需要放到主包中</li></ul><blockquote><p>当用户进入分包内的某个页面时，客户端会把对应的分包下载下来，下载完毕后再进行展示</p></blockquote><ul><li>非tabBar页面可以按照功能的不同，划分为不同的分包之后，进行按需下载</li></ul><h2 id="分包的体积限制"><a href="#分包的体积限制" class="headerlink" title="分包的体积限制"></a>分包的体积限制</h2><p>目前，小程序分包的大小有以下两个限制：</p><ol><li>整个小程序所有分包大小不超过16M(主包+分包)</li><li>单个分包&#x2F;主包大小不能超过2M</li></ol><h2 id="使用分包"><a href="#使用分包" class="headerlink" title="使用分包"></a><a href="https://developers.weixin.qq.com/ebook?action=get_post_info&docid=000c8a2f9ac0b0ab0086aafeb5d80a">使用分包</a></h2><blockquote><p>配置方法</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221119102522353.png" alt="image-20221119102522353"></p><p><img src="http://lptexas.top/img/post/image-20221119102336445.png" alt="image-20221119102336445"></p><p><img src="http://lptexas.top/img/post/image-20221119102432410.png" alt="image-20221119102432410"></p><h2 id="添加别名"><a href="#添加别名" class="headerlink" title="添加别名"></a>添加别名</h2><blockquote><p>在分包中与root平级添加name属性，可以为分包添加别名</p></blockquote><h2 id="打包原则"><a href="#打包原则" class="headerlink" title="打包原则"></a>打包原则</h2><ol><li>小程序会按subpackages的配置进行分包</li><li>主包也可以有自己的pages（即最外层的pages字段）</li><li>tabBar页面必须在主包内</li><li>分包之间不能相互嵌套</li></ol><h2 id="引用原则"><a href="#引用原则" class="headerlink" title="引用原则"></a>引用原则</h2><ol><li>主包无法引用分包内的私有资源</li><li>分包之间不能互相引用私有资源</li><li><strong>分包可以引用主包内的公共资源</strong></li></ol><h2 id="独立分包"><a href="#独立分包" class="headerlink" title="独立分包"></a>独立分包</h2><blockquote><p>本质也是分包，但可以独立于主包和其它分包单独运行</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221119103626497.png" alt="image-20221119103626497"></p><blockquote><p>独立分包和普通分包的区别</p></blockquote><ul><li>普通分包必须依赖于主包才能运行</li><li>独立分包可以在不下载主包的情况下，独立运行</li></ul><blockquote><p>独立分包和普通分包以及主包之间，是相互隔绝的，不能相互引用资源（包括主包中的公共资源）</p></blockquote><h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><blockquote><p>按需将某些具有一定功能独立性的页面配置到独立分包中</p></blockquote><ul><li>当小程序从普通的分包页面启动时，需要首先下载主包</li><li>独立分包不依赖主包即可运行，可以很大程度上提升分包页面的启动速度</li></ul><blockquote><p>一个小程序可以有多个独立分包</p></blockquote><p>配置方法</p><blockquote><p>在分包中与root平级添加<code>independent属性</code>，设置值为<code>true</code>。</p></blockquote><h2 id="分包预下载"><a href="#分包预下载" class="headerlink" title="分包预下载"></a>分包预下载</h2><blockquote><p>在用户进入小程序的某个页面时，由框架自动预下载可能需要的分包，从而提升进入后续分包页面时的启动速度。</p></blockquote><h3 id="配置预下载"><a href="#配置预下载" class="headerlink" title="配置预下载"></a>配置预下载</h3><blockquote><p>在app.json中，使用preloadRule节点对规则进行配置</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;preloadRule&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pages/index/index&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span> <span class="comment">//触发预下载的页面</span></span><br><span class="line">        <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span><span class="string">&quot;all&quot;</span><span class="punctuation">,</span> <span class="comment">//network表示在指定网络模式下进行预下载(默认值为wifi、可选值是all等)</span></span><br><span class="line">            <span class="attr">&quot;packages&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="string">&quot;pkgA&quot;</span><span class="punctuation">]</span> <span class="comment">//packages数组中表示要预下载的分包，可以通过root或者name来指定</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span>   </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="预下载的限制"><a href="#预下载的限制" class="headerlink" title="预下载的限制"></a>预下载的限制</h3><blockquote><p>同一个分包中的页面享有共同的预下载大小限额2M</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221119105217679.png" alt="image-20221119105217679"></p><p><img src="http://lptexas.top/img/post/image-20221119105254889.png" alt="image-20221119105254889"></p><h1 id="自定义tabBar"><a href="#自定义tabBar" class="headerlink" title="自定义tabBar"></a>自定义tabBar</h1>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发Day5</title>
      <link href="/posts/3442095725/"/>
      <url>/posts/3442095725/</url>
      
        <content type="html"><![CDATA[<h1 id="处理手机号"><a href="#处理手机号" class="headerlink" title="处理手机号"></a>处理手机号</h1><blockquote><p>利用wxs脚本实现11位手机号添加“-”，如：123-4567-8901</p></blockquote><h2 id="在utils文件夹中新建wxs文件"><a href="#在utils文件夹中新建wxs文件" class="headerlink" title="在utils文件夹中新建wxs文件"></a>在utils文件夹中新建wxs文件</h2><blockquote><p>tools.wxs</p></blockquote><h2 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function handlePhoneNumber(str)&#123;</span><br><span class="line">//判断手机号是否为11位，不为11位就不处理</span><br><span class="line">if(str.length!==11) return str</span><br><span class="line">//开始处理，首先分割每个字符并存放在数组中</span><br><span class="line">var arr=str.split(&#x27;&#x27;)</span><br><span class="line">//在第三位，删除0个元素，插入&quot;-&quot;</span><br><span class="line">    arr.splice(3,0,&#x27;-&#x27;)</span><br><span class="line">    //在第八位，删除0个元素，插入&quot;-&quot;</span><br><span class="line">    arr.splice(8,0,&#x27;-&#x27;)</span><br><span class="line">    //合并数组</span><br><span class="line">    return arr.join(&#x27;&#x27;)</span><br><span class="line">&#125;</span><br><span class="line">//将函数共享</span><br><span class="line">module.exports=&#123;</span><br><span class="line">handlePhoneNumber:handlePhoneNumber</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="调用脚本"><a href="#调用脚本" class="headerlink" title="调用脚本"></a>调用脚本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;wxs src=&quot;../../utils/tools.wxs&quot; module=&quot;tools&quot;&gt;&lt;/wxs&gt;</span><br><span class="line">... </span><br><span class="line">&lt;view&gt;&#123;&#123;tools.handlePhoneNumber(item.phone)&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure><h1 id="自定义小程序组件"><a href="#自定义小程序组件" class="headerlink" title="自定义小程序组件"></a>自定义小程序组件</h1><h2 id="创建组件"><a href="#创建组件" class="headerlink" title="创建组件"></a>创建组件</h2><ol><li>在项目根目录中右键，<code>新建components文件夹</code></li><li>右键<code>components文件夹</code>，新建一个<code>组件文件夹</code></li><li>新建的<code>组件文件夹</code>上右键，点击<code>新建components</code>，输入文件名后生成4个文件</li></ol><p><img src="http://lptexas.top/img/post/image-20221115192246230.png" alt="image-20221115192246230"></p><h2 id="引用组件"><a href="#引用组件" class="headerlink" title="引用组件"></a>引用组件</h2><h3 id="局部引用"><a href="#局部引用" class="headerlink" title="局部引用"></a>局部引用</h3><blockquote><p>只能在当前被引用的页面内使用，在页面的json文件中进行配置</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;my-test&quot;</span><span class="punctuation">:</span><span class="string">&quot;/components/test/test&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;my-test&gt;&lt;/my-test&gt;</span><br></pre></td></tr></table></figure><h3 id="全局引用"><a href="#全局引用" class="headerlink" title="全局引用"></a>全局引用</h3><blockquote><p>组件可以在每个小程序页面中使用，在app.json中做类似上面的操作</p></blockquote><h2 id="组件和页面的区别"><a href="#组件和页面的区别" class="headerlink" title="组件和页面的区别"></a>组件和页面的区别</h2><ol><li>组件.json文件中需要声明<code>&quot;component&quot;:true</code></li><li>组件.js文件中调用的是Component()函数，页面为Page()函数</li><li>组件的事件处理函数需要定义到methods节点中，页面只需要定义在与data节点平级的位置</li></ol><h2 id="自定义组件的样式"><a href="#自定义组件的样式" class="headerlink" title="自定义组件的样式"></a>自定义组件的样式</h2><blockquote><p>组件样式隔离，三者相互独立，互不影响</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221115193752060.png" alt="image-20221115193752060"></p><ul><li>全局的app.wxss对组件的样式无影响</li><li>只有class选择器会有样式隔离，属性选择器、id选择器、标签选择器不受隔离</li></ul><blockquote><p>修改组件的样式隔离选项</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在组件的js文件中</span></span><br><span class="line"><span class="attr">option</span>:&#123;</span><br><span class="line"><span class="attr">styleIsolation</span>:isolated</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在组件json文件中新增</span></span><br><span class="line">&#123;</span><br><span class="line">“styleIsolation”:<span class="string">&quot;isolated&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>styleIsolation可选值</p><ul><li>isolated：启用样式隔离</li><li>apply-shared：页面样式可以影响组件样式，但组件样式不会影响页面样式</li><li>shared：双向影响</li></ul><h2 id="methods节点"><a href="#methods节点" class="headerlink" title="methods节点"></a>methods节点</h2><blockquote><p>建议在methods中的<code>自定义方法</code>在开头用下划线”_“与事件处理函数进行区分</p></blockquote><h2 id="properties节点"><a href="#properties节点" class="headerlink" title="properties节点"></a>properties节点</h2><blockquote><p>用于接收外界传递到组件中的数据</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">properties</span>: &#123;</span><br><span class="line">    <span class="comment">//完整版定义</span></span><br><span class="line">    <span class="attr">max</span>:&#123;</span><br><span class="line">      <span class="attr">type</span>:<span class="title class_">Number</span>, <span class="comment">//设置数据类型</span></span><br><span class="line">      <span class="attr">value</span>:<span class="number">10</span>  <span class="comment">//默认值</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//简化版定义</span></span><br><span class="line">    <span class="attr">max</span>: <span class="title class_">Number</span></span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> //wxml</span><br><span class="line">&lt;my-test max=&quot;1&quot;&gt;&lt;/my-test&gt;</span><br></pre></td></tr></table></figure><h3 id="data和properties的区别"><a href="#data和properties的区别" class="headerlink" title="data和properties的区别"></a>data和properties的区别</h3><blockquote><p>在小程序中都是可读可写，本质上没有任何区别，使用方法类似<code>this.data/properties.item</code></p></blockquote><ul><li>data倾向于存储私有数据</li><li>properties倾向于存储外界传入的数据</li></ul><h2 id="数据监听器"><a href="#数据监听器" class="headerlink" title="数据监听器"></a>数据监听器</h2><blockquote><p>用于监听和响应任何属性和数据字段的变化，从而执行特定的操作。作用类似于vue中的watch侦听器。</p></blockquote><p>基本语法格式</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Components</span>(&#123;</span><br><span class="line"><span class="attr">observers</span>:&#123;</span><br><span class="line">    <span class="string">&#x27;字段A&#x27;</span>,<span class="string">&#x27;字段B&#x27;</span>:<span class="keyword">function</span>(<span class="params">字段A新值,字段B新值</span>)&#123;</span><br><span class="line">        <span class="comment">//do something</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">//使用通配符</span></span><br><span class="line">        <span class="string">&#x27;字段.**&#x27;</span>:<span class="keyword">function</span>(<span class="params">object</span>)&#123;</span><br><span class="line"><span class="comment">//object是个对象</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="纯数据字段"><a href="#纯数据字段" class="headerlink" title="纯数据字段"></a>纯数据字段</h2><blockquote><p>纯数据字段指那些不用于界面渲染的data字段。</p></blockquote><p>应用场景</p><ul><li>data字段既不会展示在界面上，也不会传递给其他组件，仅仅在当前组件内部使用。</li></ul><p>好处</p><ul><li>纯数据字段有助于提高页面更新的性能。</li></ul><h3 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h3><blockquote><p>在Component构造器的options节点中，指定pureDataPattern为一个正则表达式，字段名符合正则表达式规则的字段将成为纯数据字段</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">options</span>:&#123;</span><br><span class="line"><span class="attr">pureDataPattern</span>:<span class="regexp">/pattern/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="组件生命周期"><a href="#组件生命周期" class="headerlink" title="组件生命周期"></a>组件生命周期</h2><blockquote><p>在lifetime节点中定义，旧方法是直接定义</p></blockquote><ul><li><code>created</code> 在组件实例刚刚被创建时执行<ul><li>还不能调用setData</li><li>只能用于给组件的this添加一些自定义的属性字段</li></ul></li><li><code>attached</code> 在组件实例刚刚进入页面节点树时执行<ul><li>this.data已被初始化完毕</li><li>绝大多数初始化工作都在这个时机进行（如发起获取数据的网络请求）</li></ul></li><li>ready 在组件在视图层布局完成后执行</li><li>moved 在实例被移动到节点树另一个位置时执行</li><li><code>detached</code> 在组件实例从当前页面节点树移除时执行<ul><li>退出一个页面时触发</li><li>适合做清理性质的工作</li></ul></li><li>error(Oberject Error) 每当组件方法抛出错误时执行</li></ul><h2 id="组件所在页面生命周期"><a href="#组件所在页面生命周期" class="headerlink" title="组件所在页面生命周期"></a>组件所在页面生命周期</h2><blockquote><p>在pageLifetimes节点中定义</p></blockquote><ul><li>show 组件所在页面被展示时执行</li><li>hide 组件所在页面被隐藏时执行</li><li>resize 组件所在页面尺寸变化时执行</li></ul><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><blockquote><p>在自定义组件的wxml结构中，可以提供一个&lt;slot&gt;节点（插槽），用于承载组件使用者提供的wxml结构</p></blockquote><p>默认情况下只支持使用单个插槽，如果需要多个插槽，需要在options配置节点中使用multipleSlots设置为true</p><ul><li>多个插槽在定义时需要使用name属性进行区分</li><li>在用户使用时需要用slot属性来指定对应的插槽</li></ul><h2 id="父子组件之间的通信"><a href="#父子组件之间的通信" class="headerlink" title="父子组件之间的通信"></a>父子组件之间的通信</h2><p>三种方式</p><ol><li>属性绑定</li></ol><ul><li>用zi于父组件向子组件的指定属性设置数据，仅能设置JSON兼容的数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件wxml</span></span><br><span class="line">&lt;test count=<span class="string">&quot;count&quot;</span>&gt;&lt;/test&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">view</span>&gt;</span>父 &#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="comment">//父组件js</span></span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line"><span class="attr">count</span>:<span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//子组件js</span></span><br><span class="line"><span class="attr">properties</span>:&#123;</span><br><span class="line"><span class="attr">count</span>:<span class="title class_">Number</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//子组件wxml</span></span><br><span class="line">&lt;view&gt;子 &#123;&#123;count&#125;&#125;&lt;/view&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>事件绑定</li></ol><ul><li>用于子组件向父组件传递数据，可以传递任意数据</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//首先在父组件中定义要传递的方法</span></span><br><span class="line"><span class="title function_">syncCount</span>(<span class="params">e</span>)&#123;</span><br><span class="line"><span class="comment">//方法示例</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//在父组件的wxml中为子组件绑定自定义事件事件（sync）以及对应的方法</span><br><span class="line">&lt;test count=&quot;&#123;&#123;count&#125;&#125;&quot; bind:sync=&quot;syncCount&quot;&gt;&lt;/test&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//然后在子组件js内部，调用this.triggerEvent(&#x27;自定义事件名称&#x27;,&#123;参数对象&#125;)</span></span><br><span class="line"><span class="comment">//参数对象是指事件的参数</span></span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&#x27;sync&#x27;</span>,&#123;<span class="attr">value</span>:tthis.<span class="property">properties</span>.<span class="property">count</span>&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//最后在父组件js中接收子组件传递过来的值</span></span><br><span class="line"><span class="title function_">syncCount</span>(<span class="params">e</span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">count</span>:e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>获取组件实例</li></ol><ul><li>在父组件中可通过this.selectComponent()获取子组件实例对象</li><li>如此可以直接访问子组件的任意数据和方法</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//父组件wxml</span><br><span class="line">&lt;test count=&quot;&#123;&#123;count&#125;&#125;&quot; bind:sync=&quot;syncCount&quot; class=&quot;child&quot; id=&quot;c&quot;&gt;&lt;/test&gt;</span><br><span class="line">&lt;button bind:tap=&quot;getChild&quot;&gt;获取子组件&lt;/button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父组件js</span></span><br><span class="line"><span class="title function_">getChild</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">//获取子组件对象，只能通过id选择器或者类选择器获取</span></span><br><span class="line"><span class="keyword">const</span> child = <span class="variable language_">this</span>.<span class="title function_">selectComponent</span>(<span class="string">&#x27;.child&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(child) <span class="comment">//可以在控制台中看到可以使用很多方法</span></span><br><span class="line">    child.<span class="title function_">setData</span>(&#123;  </span><br><span class="line">    <span class="attr">count</span>:child.<span class="property">properties</span>.<span class="property">count</span>+<span class="number">1</span> <span class="comment">//实现在父组件中点击按钮，让子组件发生变化</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="behaviors"><a href="#behaviors" class="headerlink" title="behaviors"></a>behaviors</h2><blockquote><p>behaviors是小程序中，用于实现组件代码共享的特征，类似vue.js中的”mixins”。</p></blockquote><p>每个组件可以引用多个behavior，behavior之间也可以引用其它behavior。</p><p><img src="http://lptexas.top/img/post/image-20221116152758924.png" alt="image-20221116152758924"></p><h3 id="创建behavior"><a href="#创建behavior" class="headerlink" title="创建behavior"></a>创建behavior</h3><ol><li>在根节点创建behaviors文件夹</li><li>在behaviors文件夹中创建js文件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//behaviors共享的js文件</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = <span class="title class_">Behavior</span> (&#123;</span><br><span class="line"><span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="comment">//数据</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">properties</span>:&#123;</span><br><span class="line">    <span class="comment">//属性</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="comment">//方法</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="导入并引用behavior"><a href="#导入并引用behavior" class="headerlink" title="导入并引用behavior"></a>导入并引用behavior</h3><blockquote><p>在组件中，使用<code>require()</code>方法导入需要的behavior，将导入的behavior实例对象挂载到behaviors数组节点中，即可生效。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> myBehavior = <span class="built_in">require</span>(<span class="string">&quot;../../behaviors/my-behavior&quot;</span>) <span class="comment">//创建的js文件</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line"><span class="attr">behaviors</span>:[mybehavior],</span><br><span class="line">    <span class="comment">//其它节点</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="同名冲突处理规则"><a href="#同名冲突处理规则" class="headerlink" title="同名冲突处理规则"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/custom-component/behaviors.html">同名冲突处理规则</a></h3><blockquote><p>数据字段（data）重名</p></blockquote><ul><li>若同名的数据字段都是对象类型，会进行对象合并；</li><li>其余情况会进行数据覆盖，覆盖规则为： <code>引用者 behavior</code> &gt; <code>被引用的 behavior</code> 、 <code>靠后的 behavior</code> &gt; <code>靠前的 behavior</code>。（优先级高的覆盖优先级低的，最大的为优先级最高）</li></ul><blockquote><p>属性（properties）或方法（methods）重名</p></blockquote><ol><li>若组件本身有这个属性或方法，则组件的属性或方法会覆盖 <code>behavior</code> 中的同名属性或方法；</li><li>若组件本身无这个属性或方法，则在组件的 <code>behaviors</code> 字段中定义靠后的 <code>behavior</code> 的属性或方法会覆盖靠前的同名属性或方法；</li><li>在 2 的基础上，若存在嵌套引用 <code>behavior</code> 的情况，则规则为：<code>引用者 behavior</code> 覆盖 <code>被引用的 behavior</code> 中的同名属性或方法。</li></ol><blockquote><p>生命周期函数重名</p></blockquote><ul><li>对于不同的生命周期函数之间，遵循组件生命周期函数的执行顺序；</li><li>对于同种生命周期函数和同字段 observers ，遵循如下规则：<ul><li><code>behavior</code> 优先于组件执行；</li><li><code>被引用的 behavior</code> 优先于 <code>引用者 behavior</code> 执行；</li><li><code>靠前的 behavior</code> 优先于 <code>靠后的 behavior</code> 执行；</li></ul></li><li>如果同一个 <code>behavior</code> 被一个组件多次引用，它定义的生命周期函数和 observers 不会重复执行。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发Day4</title>
      <link href="/posts/3123513083/"/>
      <url>/posts/3123513083/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序生命周期"><a href="#小程序生命周期" class="headerlink" title="小程序生命周期"></a>小程序生命周期</h1><h2 id="页面生命周期函数"><a href="#页面生命周期函数" class="headerlink" title="页面生命周期函数"></a>页面生命周期函数</h2><h1 id="wxs脚本"><a href="#wxs脚本" class="headerlink" title="wxs脚本"></a>wxs脚本</h1><blockquote><p>应用场景“过滤器”</p></blockquote><h2 id="wxs和Javascript的关系"><a href="#wxs和Javascript的关系" class="headerlink" title="wxs和Javascript的关系"></a>wxs和Javascript的关系</h2><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\image-20221111101359049.png" alt="image-20221111101359049"></p><h2 id="内嵌wxs脚本"><a href="#内嵌wxs脚本" class="headerlink" title="内嵌wxs脚本"></a>内嵌wxs脚本</h2><blockquote><p>类似在html中使用javascript代码块。在wxml页面使用wxs标签，且必须提供module属性。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;wxs module=&quot;m1&quot;&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/wxs&gt;</span><br></pre></td></tr></table></figure><h2 id="外联wxs脚本"><a href="#外联wxs脚本" class="headerlink" title="外联wxs脚本"></a>外联wxs脚本</h2><blockquote><p>在外部文件夹中，定义以.wxs结尾的文件，在文件中定义方法和导出方法</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//定义函数方法</span><br><span class="line">function func(x)&#123;</span><br><span class="line">return ...</span><br><span class="line">&#125;</span><br><span class="line">//向外暴露对应的方法</span><br><span class="line">module.exports =&#123;</span><br><span class="line">funcExported:func</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><blockquote><p>在wxs中添加src属性，并提供一个module属性</p></blockquote><h2 id="wxs的特点"><a href="#wxs的特点" class="headerlink" title="wxs的特点"></a>wxs的特点</h2><ol><li>性能好，在iOS中体验明显，Android中基本无差别</li><li>wxs和Javascript是完全不同的语言</li><li>wxs独立性好，不能调用微信api</li><li>wxs不能作为回调事件</li></ol><h1 id="本地生活实例之数据列表"><a href="#本地生活实例之数据列表" class="headerlink" title="本地生活实例之数据列表"></a>本地生活实例之数据列表</h1><h2 id="列表页面的API接口"><a href="#列表页面的API接口" class="headerlink" title="列表页面的API接口"></a>列表页面的API接口</h2><blockquote><p>以分页的形式，加载指定分类下的数据</p></blockquote><h2 id="cate-id"><a href="#cate-id" class="headerlink" title=":cate_id"></a>:cate_id</h2><blockquote><p>api url中的动态参数，表示分类的id</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url</span>:<span class="string">&#x27;https://www.example.com/$&#123;this.data.quary.id&#125;/list&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="请求参数"><a href="#请求参数" class="headerlink" title="请求参数"></a>请求参数</h2><ul><li>_page：表示请求第几页的数据</li><li>_limit：表示每页请求几条数据</li></ul><h2 id="判断是否还有数据"><a href="#判断是否还有数据" class="headerlink" title="判断是否还有数据"></a>判断是否还有数据</h2><blockquote><p>页码值*每页显示的数据量&gt;&#x3D;总数据条数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page*pageSize&gt;=total <span class="comment">//条件成立时，没有下一页数据了，不再发起请求</span></span><br></pre></td></tr></table></figure><h2 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h2><blockquote><p>重置关键信息</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">  <span class="attr">page</span>:<span class="number">1</span>,</span><br><span class="line">  <span class="attr">missionlist</span>:[],</span><br><span class="line">  <span class="attr">total</span>:<span class="number">0</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>重新获取数据</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="title function_">getMissionList</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  wx.<span class="title function_">stopPullDownRefresh</span>() <span class="comment">//传入一个回调函数，来执行停止下拉刷新函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发Day3</title>
      <link href="/posts/608801624/"/>
      <url>/posts/608801624/</url>
      
        <content type="html"><![CDATA[<h1 id="声明式导航"><a href="#声明式导航" class="headerlink" title="声明式导航"></a>声明式导航</h1><h2 id="跳转tabBar"><a href="#跳转tabBar" class="headerlink" title="跳转tabBar"></a>跳转tabBar</h2><blockquote><p>navigator标签，必须指定<code>open-type</code>值<code>switchTab</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;navigator url=&#x27;&#x27; open-type=&quot;switchTab&quot;&gt;导航&lt;/navigator&gt;</span><br></pre></td></tr></table></figure><h2 id="跳转非tabBar"><a href="#跳转非tabBar" class="headerlink" title="跳转非tabBar"></a>跳转非tabBar</h2><blockquote><p>navigator标签，<code>可以</code>指定<code>open-type</code>值<code>navigate</code></p></blockquote><h2 id="实现后退效果"><a href="#实现后退效果" class="headerlink" title="实现后退效果"></a>实现后退效果</h2><blockquote><p><code>open-type</code>值<code>navigateBack</code>，默认<code>delta</code>值为<code>1</code>，如果只是后退一页可以不用设置delta。</p></blockquote><h1 id="编程时导航"><a href="#编程时导航" class="headerlink" title="编程时导航"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/app-service/route.html">编程时导航</a></h1><blockquote><p>通过调用API实现跳转</p></blockquote><table><thead><tr><th align="left">路由方式</th><th align="left">触发时机</th><th align="left">路由前页面</th><th align="left">路由后页面</th></tr></thead><tbody><tr><td align="left">初始化</td><td align="left">小程序打开的第一个页面</td><td align="left"></td><td align="left">onLoad, onShow</td></tr><tr><td align="left">打开新页面</td><td align="left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateTo.html">wx.navigateTo</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"><code>&lt;navigator open-type=&quot;navigateTo&quot;/&gt;</code></a></td><td align="left">onHide</td><td align="left">onLoad, onShow</td></tr><tr><td align="left">页面重定向</td><td align="left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.redirectTo.html">wx.redirectTo</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"><code>&lt;navigator open-type=&quot;redirectTo&quot;/&gt;</code></a></td><td align="left">onUnload</td><td align="left">onLoad, onShow</td></tr><tr><td align="left">页面返回</td><td align="left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.navigateBack.html">wx.navigateBack</a> 使用组件<a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"><code>&lt;navigator open-type=&quot;navigateBack&quot;/&gt;</code></a> 用户按左上角返回按钮</td><td align="left">onUnload</td><td align="left">onShow</td></tr><tr><td align="left">Tab 切换</td><td align="left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.switchTab.html">wx.switchTab</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"><code>&lt;navigator open-type=&quot;switchTab&quot;/&gt;</code></a> 用户切换 Tab</td><td align="left"></td><td align="left">各种情况请参考下表</td></tr><tr><td align="left">重启动</td><td align="left">调用 API <a href="https://developers.weixin.qq.com/miniprogram/dev/api/route/wx.reLaunch.html">wx.reLaunch</a> 使用组件 <a href="https://developers.weixin.qq.com/miniprogram/dev/component/navigator.html"><code>&lt;navigator open-type=&quot;reLaunch&quot;/&gt;</code></a></td><td align="left">onUnload</td><td align="left">onLoad, onShow</td></tr></tbody></table><h1 id="导航传参"><a href="#导航传参" class="headerlink" title="导航传参"></a>导航传参</h1><ol><li>声明式导航：使用<code>url</code>+<code>?</code>的形式传参，多个参数使用<code>&amp;</code>连接</li><li>编程时导航：同上</li></ol><h1 id="接受参数"><a href="#接受参数" class="headerlink" title="接受参数"></a>接受参数</h1><blockquote><p>在.js的<code>onLoad事件</code>中接收，<code>options</code>形参的值为传递的值</p></blockquote><h1 id="页面事件"><a href="#页面事件" class="headerlink" title="页面事件"></a>页面事件</h1><h2 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h2><blockquote><p>启用效果，全局和局部开启“enablePullDownRefresh”</p></blockquote><h3 id="配置下拉刷新样式"><a href="#配置下拉刷新样式" class="headerlink" title="配置下拉刷新样式"></a>配置下拉刷新样式</h3><ul><li>backgroundColor：16进制颜色，配置背景色</li><li>backgroundTextStyle：有效值只有<code>dark</code>和<code>light</code>，配置下拉加载样式</li></ul><h3 id="停止下拉刷新"><a href="#停止下拉刷新" class="headerlink" title="停止下拉刷新"></a>停止下拉刷新</h3><blockquote><p>在onPullDownRefresh()函数中调用停止方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="title function_">onPullDownRefresh</span>(<span class="params"></span>) &#123;</span><br><span class="line">wx.<span class="title function_">stopPullDownRefresh</span>()</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h2 id="上拉触底"><a href="#上拉触底" class="headerlink" title="上拉触底"></a>上拉触底</h2><blockquote><p>用于分页，可以通过配置<code>onReachBottomDistance</code>属性来设置滚动条距离底部多少距离触发上拉触底事件，默认为50px（px被省略）</p></blockquote><h3 id="上拉触底加载新数据"><a href="#上拉触底加载新数据" class="headerlink" title="上拉触底加载新数据"></a>上拉触底加载新数据</h3><blockquote><p>如何设置下拉刷新加载新的一页数据？</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getMissionList</span>(<span class="params"></span>)&#123;</span><br><span class="line">  wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;https://mock.apifox.cn/m1/1897625-0-default/missionlist&#x27;</span>,</span><br><span class="line">      <span class="attr">method</span>:<span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">      <span class="attr">success</span>:<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>.<span class="property">missionlist</span>),</span><br><span class="line">        <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;<span class="attr">missionlist</span>:[...<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">missionlist</span>,...res.<span class="property">data</span>.<span class="property">missionlist</span>]&#125;)</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>注：在setData方法中使用<code>...</code>表示将数组展开。这里是将旧数组和新数组进行展开后拼接。</p><p>在发请求前添加Loading效果，加载完毕后隐藏</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">showLoading</span>(&#123;</span><br><span class="line"><span class="attr">title</span>: <span class="string">&#x27;数据加载中...&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//隐藏,在complete箭头函数里写</span></span><br><span class="line"><span class="attr">complete</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">wx.<span class="title function_">hideLoading</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>节流操作</p><blockquote><p>阻止多次下拉导致产生多组数据</p></blockquote><ol><li>在data中定义isloading节流阀</li></ol><ul><li>isloading为布尔值，<ul><li>true为正在进行请求</li><li>false为没有正在进行的请求</li></ul></li></ul><ol start="2"><li>在请求数据的方法中修改isloading节流阀的值</li></ol><ul><li>如调用getMissionList()请求数据时修改节流阀值为true</li><li>在数据请求结束后，在complete回调函数中，重置节流阀为false</li></ul><ol start="3"><li>在onReachBottom中判断节流阀的值，从而对数据请求进行节流控制</li></ol><ul><li>判断节流阀值<ul><li>若true，则阻止当前请求</li><li>若false，则发起数据请求</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发Day2</title>
      <link href="/posts/1397662670/"/>
      <url>/posts/1397662670/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序API"><a href="#小程序API" class="headerlink" title="小程序API"></a>小程序API</h1><p>3大类</p><ol><li>事件监听类</li></ol><ul><li>on开头，监听事件触发</li><li>如：wx.onWindowResize(function callback)监听窗口尺寸变化的事件</li></ul><ol start="2"><li>同步API</li></ol><ul><li>以Sync结尾</li><li>执行结果可通过函数直接获取，执行出错会抛出异常</li><li>如：wx.setStorageSync(‘key’,’value’)向本地存储中写入内容</li></ul><ol start="3"><li>异步API</li></ol><ul><li>类似jQuery中的$.ajax(option)函数，需要通过success、fail、complete接受调用的结果</li><li>如：wx.request()发起网络数据请求，通过success回调函数接收数据</li></ul><h1 id="协同工作"><a href="#协同工作" class="headerlink" title="协同工作"></a>协同工作</h1><h2 id="组织结构"><a href="#组织结构" class="headerlink" title="组织结构"></a>组织结构</h2><p><img src="http://lptexas.top/img/post/image-20221108075843949.png" alt="image-20221108075843949"></p><h2 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h2><p><img src="http://lptexas.top/img/post/image-20221108075917730.png" alt="image-20221108075917730"></p><h2 id="成员管理"><a href="#成员管理" class="headerlink" title="成员管理"></a>成员管理</h2><p><img src="http://lptexas.top/img/post/image-20221108080150790.png" alt="image-20221108080150790"></p><h2 id="权限划分"><a href="#权限划分" class="headerlink" title="权限划分"></a>权限划分</h2><p>发布权限，开发者权限、测试权限等</p><h2 id="添加项目成员和体验成员"><a href="#添加项目成员和体验成员" class="headerlink" title="添加项目成员和体验成员"></a>添加项目成员和体验成员</h2><p>在小程序网页管理栏中点击“成员管理”</p><p><img src="http://lptexas.top/img/post/image-20221108080652058.png" alt="image-20221108080652058"></p><h1 id="小程序版本"><a href="#小程序版本" class="headerlink" title="小程序版本"></a>小程序版本</h1><p><img src="http://lptexas.top/img/post/image-20221108080810324.png" alt="image-20221108080810324"></p><h1 id="小程序发布"><a href="#小程序发布" class="headerlink" title="小程序发布"></a>小程序发布</h1><p>版本管理-&gt;提交开发版本审核-&gt;审核通过-&gt;发布审核通过版本</p><h1 id="小程序宣传"><a href="#小程序宣传" class="headerlink" title="小程序宣传"></a>小程序宣传</h1><blockquote><p>二维码和小程序码的生成</p></blockquote><h1 id="小程序数据统计"><a href="#小程序数据统计" class="headerlink" title="小程序数据统计"></a>小程序数据统计</h1><blockquote><p>后台或小程序数据助手</p></blockquote><hr><h1 id="常见交互式反馈"><a href="#常见交互式反馈" class="headerlink" title="常见交互式反馈"></a>常见交互式反馈</h1><h2 id="hover-class"><a href="#hover-class" class="headerlink" title="hover-class"></a>hover-class</h2><h2 id="loading图标"><a href="#loading图标" class="headerlink" title="loading图标"></a>loading图标</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- wxml --&gt;</span><br><span class="line">&lt;text&gt;loading属性&lt;/text&gt;</span><br><span class="line">&lt;button loading=&quot;&#123;&#123;loading&#125;&#125;&quot; type=&quot;primary&quot; bindtap=&quot;loadingStart&quot;&gt;确认&lt;/button&gt;</span><br><span class="line">&lt;!-- .js --&gt;</span><br><span class="line">pages(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    loading: false</span><br><span class="line">  &#125;,</span><br><span class="line">  loadingStart()&#123;</span><br><span class="line">  this.setData(&#123;</span><br><span class="line">  loading:true</span><br><span class="line">  &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  )&#125;</span><br></pre></td></tr></table></figure><h2 id="Toast和模态对话框"><a href="#Toast和模态对话框" class="headerlink" title="Toast和模态对话框"></a>Toast和模态对话框</h2><h3 id="Toast"><a href="#Toast" class="headerlink" title="Toast"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/api/ui/interaction/wx.showToast.html">Toast</a></h3><blockquote><p>显示&#x2F;隐藏Toast</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">showToast</span>(&#123; <span class="comment">//显示Toast</span></span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;这是Toast的标题&#x27;</span>,</span><br><span class="line">      <span class="attr">icon</span>: <span class="string">&#x27;success&#x27;</span>, <span class="comment">//详细参数见社区</span></span><br><span class="line">      <span class="attr">duration</span>: <span class="number">1500</span> <span class="comment">//时长单位毫秒</span></span><br><span class="line">    &#125;)</span><br><span class="line">wx.<span class="title function_">hideToast</span>() <span class="comment">//隐藏Toast</span></span><br></pre></td></tr></table></figure><h1 id="WXML模板语法"><a href="#WXML模板语法" class="headerlink" title="WXML模板语法"></a>WXML模板语法</h1><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><h3 id="动态绑定内容"><a href="#动态绑定内容" class="headerlink" title="动态绑定内容"></a>动态绑定内容</h3><p>在页面的.js的data中定义数据，在wxml文件中使用Mustache语法或叫插值表达式（双大括号+变量名）引用数据</p><h3 id="动态绑定属性"><a href="#动态绑定属性" class="headerlink" title="动态绑定属性"></a>动态绑定属性</h3><p>同上，但数据为属性值。</p><h2 id="三元运算"><a href="#三元运算" class="headerlink" title="三元运算"></a>三元运算</h2><blockquote><p>在控制台AppData处可以查看数据值</p></blockquote><p>运算可以在data定义时，也可以是在Mustache语法中。</p><h2 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a><a href="https://developers.weixin.qq.com/ebook?action=get_post_info&docid=000846df9a03909b0086a50025180a">事件绑定</a></h2><p>事件绑定的写法和组件属性一致，以key&#x3D;”value”的形式，其中：</p><ol><li>key以bind或者catch开头，然后跟上事件的类型，如bindtap、catchtouchstart。自基础库版本1.5.0起，bind和catch后可以紧跟一个冒号，其含义不变，如bind:tap、catch:touchstart。同时bind和catch前还可以加上capture-来表示捕获阶段。</li><li>value是一个字符串，需要在对应的页面Page构造器中定义同名的函数，否则触发事件时在控制台会有报错信息。<br>bind<em>和capture-bind</em>的含义分别代表事件的冒泡阶段和捕获阶段。</li></ol><blockquote><p>事件是渲染层到逻辑层的通讯方式，将渲染层产生的行为，反馈到逻辑层进行业务处理。</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221108082709284.png" alt="image-20221108082709284"></p><h4 id="常用事件"><a href="#常用事件" class="headerlink" title="常用事件"></a>常用事件</h4><p><img src="http://lptexas.top/img/post/image-20221108082801196.png" alt="image-20221108082801196"></p><h3 id="事件属性"><a href="#事件属性" class="headerlink" title="事件属性"></a>事件属性</h3><blockquote><p>当事件回调触发时，会收到一个事件event，它的属性如下：</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221108082943182.png" alt="image-20221108082943182"></p><h4 id="target和currentTarget的区别"><a href="#target和currentTarget的区别" class="headerlink" title="target和currentTarget的区别"></a>target和currentTarget的区别</h4><p><img src="http://lptexas.top/img/post/image-20221108083318316.png" alt="image-20221108083318316"></p><h2 id="bindtap使用"><a href="#bindtap使用" class="headerlink" title="bindtap使用"></a>bindtap使用</h2><blockquote><p>在button标签添加bindtap属性，属性值为函数名。</p><p>函数在.js文件中定义与data平级。</p></blockquote><h3 id="为data中的数据重新赋值"><a href="#为data中的数据重新赋值" class="headerlink" title="为data中的数据重新赋值"></a>为data中的数据重新赋值</h3><blockquote><p>调用this.setData(dataObject)方法</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line"><span class="attr">count</span>:<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">count</span>+<span class="number">1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注：this.data.count获取的为旧值</p><h3 id="传递参数"><a href="#传递参数" class="headerlink" title="传递参数"></a>传递参数</h3><blockquote><p>小程序中不能直接在bindtap属性值中使用<code>函数名(参数)</code>的形式传参，只能通过<code>data-*</code>的方式</p></blockquote><ul><li><code>*</code>表示参数名。如data-info，其中info是参数名</li><li>建议使用Mustache语法传递数字，如果直接传递则会是字符型的数据。如：data-info&#x3D;”2”</li></ul><blockquote><p>获取参数的方法是使用<code>event.target.dataset.*</code></p></blockquote><h2 id="bindinput使用"><a href="#bindinput使用" class="headerlink" title="bindinput使用"></a>bindinput使用</h2><blockquote><p>监听输入事件，可以获取在input框中输入的值</p></blockquote><p>使用<code>console.log(event.detail.value)</code>输出获得的值到控制台日志</p><p>我们可以结合bindinput、event.detail.value和this.setData()实现data数据的同步。</p><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><blockquote><p>符合条件的代码块将被渲染</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;view wx:if=”&#123;&#123;condition&#125;&#125;”&gt;&lt;/view&gt;</span><br><span class="line">&lt;view wx:elif=”&#123;&#123;condition&#125;&#125;”&gt;&lt;/view&gt;</span><br><span class="line">&lt;view wx:else&gt;&lt;/view&gt; </span><br></pre></td></tr></table></figure><h3 id="结合block标签和wx-if实现多个组件的显示与隐藏"><a href="#结合block标签和wx-if实现多个组件的显示与隐藏" class="headerlink" title="结合block标签和wx:if实现多个组件的显示与隐藏"></a>结合block标签和wx:if实现多个组件的显示与隐藏</h3><blockquote><p>block标签只起到包裹的作用，在block中使用wx:if可以实现多个组件的控制</p></blockquote><h3 id="使用hidden显示与隐藏标签"><a href="#使用hidden显示与隐藏标签" class="headerlink" title="使用hidden显示与隐藏标签"></a>使用hidden显示与隐藏标签</h3><blockquote><p>值为布尔型</p></blockquote><h3 id="wx-if和hidden的区别"><a href="#wx-if和hidden的区别" class="headerlink" title="wx:if和hidden的区别"></a>wx:if和hidden的区别</h3><ul><li>wx:if是动态创建标签来控制组件的显示与隐藏</li><li>hidden是通过添加样式来控制显示与隐藏<ul><li>display样式，属性值none&#x2F;block</li></ul></li></ul><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><blockquote><p>wx:for</p></blockquote><p>用于循环遍历数组，循环渲染重复的组件结构，当前循环项的索引用<code>index</code>表示，当前循环项用<code>item</code>表示。（Mustache语法）</p><h3 id="数组的创建"><a href="#数组的创建" class="headerlink" title="数组的创建"></a>数组的创建</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">array</span>:[<span class="string">&quot;item1&quot;</span>,<span class="string">&quot;item2&quot;</span>,...]</span><br></pre></td></tr></table></figure><h3 id="手动指定index和item名"><a href="#手动指定index和item名" class="headerlink" title="手动指定index和item名"></a>手动指定index和item名</h3><blockquote><p>用的不多</p></blockquote><h3 id="wx-key的使用"><a href="#wx-key的使用" class="headerlink" title="wx:key的使用"></a>wx:key的使用</h3><blockquote><p>类似Vue列表渲染中的:key，用以提高渲染的效率</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//js.data</span></span><br><span class="line"><span class="attr">usrlist</span>:[</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">1</span>,<span class="attr">name</span>:<span class="string">&#x27;xh&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">2</span>,<span class="attr">name</span>:<span class="string">&#x27;xm&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="attr">id</span>:<span class="number">3</span>,<span class="attr">name</span>:<span class="string">&#x27;xb&#x27;</span>&#125;</span><br><span class="line">]</span><br><span class="line"><span class="comment">//wxml</span></span><br><span class="line">&lt;view <span class="attr">wx</span>:<span class="keyword">for</span>=<span class="string">&quot;&#123;&#123;usrlist&#125;&#125;&quot;</span> <span class="attr">wx</span>:key=<span class="string">&quot;id&quot;</span>&gt;&lt;/view&gt;</span><br></pre></td></tr></table></figure><p>注：数组中没有使用id，可以使用index代替key值</p><h1 id="WXSS模板样式"><a href="#WXSS模板样式" class="headerlink" title="WXSS模板样式"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/view/wxss.html">WXSS模板样式</a></h1><p>为了适应广大的前端开发者，WXSS 具有 CSS 大部分特性。同时为了更适合开发微信小程序，WXSS 对 CSS 进行了扩充以及修改。</p><p>与 CSS 相比，WXSS 扩展的特性有：</p><ul><li>尺寸单位rpx</li><li>样式导入@import</li></ul><h2 id="rpx"><a href="#rpx" class="headerlink" title="rpx"></a>rpx</h2><blockquote><p>见官网</p></blockquote><h2 id="import"><a href="#import" class="headerlink" title="@import"></a>@import</h2><blockquote><p>导入外来样式表</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;相对路径&quot;</span><br></pre></td></tr></table></figure><h2 id="全局样式与局部样式"><a href="#全局样式与局部样式" class="headerlink" title="全局样式与局部样式"></a>全局样式与局部样式</h2><p>定义在 app.wxss 中的样式为全局样式，作用于每一个页面。在 page 的 wxss 文件中定义的样式为局部样式，只作用在对应的页面，并会覆盖 app.wxss 中相同的选择器。</p><h1 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a><a href="https://developers.weixin.qq.com/miniprogram/dev/reference/configuration/app.html">全局配置</a></h1><blockquote><p>window、tabBar为重点</p></blockquote><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\config.344358b1.jpg"></p><h2 id="window"><a href="#window" class="headerlink" title="window"></a>window</h2><blockquote><p> 设置导航栏标题</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;navigationBarTitleText&quot;</span><span class="punctuation">:</span><span class="string">&quot;我是标题&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>设置导航栏背景色</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;navigationBarBackgroundColor&quot;</span><span class="punctuation">:</span><span class="string">&quot;只支持#的16进制颜色&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>设置导航栏标题颜色</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;navigationBarTextStyle&quot;</span><span class="punctuation">:</span><span class="string">&quot;black&quot;</span> <span class="comment">//仅支持黑色、白色</span></span><br></pre></td></tr></table></figure><blockquote><p>全局开启下拉刷新</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;enablePullDownRefresh&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></table></figure><blockquote><p>设置背景颜色</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;backgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#efefef&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>设置下拉时Loading效果（小圆点）</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span><span class="string">&quot;light&quot;</span> <span class="comment">//仅支持dark、light</span></span><br></pre></td></tr></table></figure><blockquote><p>设置上拉触底的距离，触底后会加载新的数据</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;onReachBottomDistance&quot;</span><span class="punctuation">:</span> <span class="number">50</span> <span class="comment">//默认50像素，省去了px单位</span></span><br></pre></td></tr></table></figure><h2 id="tarBar"><a href="#tarBar" class="headerlink" title="tarBar"></a>tarBar</h2><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">必填</th><th align="left">默认值</th><th align="left">描述</th><th align="left">最低版本</th></tr></thead><tbody><tr><td align="left">color</td><td align="left">HexColor</td><td align="left">是</td><td align="left"></td><td align="left">tab 上的文字默认颜色，仅支持十六进制颜色</td><td align="left"></td></tr><tr><td align="left">selectedColor</td><td align="left">HexColor</td><td align="left">是</td><td align="left"></td><td align="left">tab 上的文字选中时的颜色，仅支持十六进制颜色</td><td align="left"></td></tr><tr><td align="left">backgroundColor</td><td align="left">HexColor</td><td align="left">是</td><td align="left"></td><td align="left">tab 的背景色，仅支持十六进制颜色</td><td align="left"></td></tr><tr><td align="left">borderStyle</td><td align="left">string</td><td align="left">否</td><td align="left">black</td><td align="left">tabbar 上边框的颜色， 仅支持 <code>black</code> &#x2F; <code>white</code></td><td align="left"></td></tr><tr><td align="left">list</td><td align="left">Array</td><td align="left">是</td><td align="left"></td><td align="left">tab 的列表，详见 <code>list</code> 属性说明，最少 2 个、最多 5 个 tab</td><td align="left"></td></tr><tr><td align="left">position</td><td align="left">string</td><td align="left">否</td><td align="left">bottom</td><td align="left">tabBar 的位置，仅支持 <code>bottom</code> &#x2F; <code>top</code></td><td align="left"></td></tr><tr><td align="left">custom</td><td align="left">boolean</td><td align="left">否</td><td align="left">false</td><td align="left">自定义 tabBar，见<a href="https://developers.weixin.qq.com/miniprogram/dev/framework/ability/custom-tabbar.html">详情</a></td><td align="left"><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/compatibility.html">2.5.0</a></td></tr></tbody></table><blockquote><p>list属性说明</p><ul><li>只能配置最少 2 个、最多 5 个 tab</li></ul></blockquote><table><thead><tr><th align="left">属性</th><th align="left">类型</th><th align="left">必填</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">pagePath</td><td align="left">string</td><td align="left">是</td><td align="left">页面路径，必须在 pages 中先定义</td></tr><tr><td align="left">text</td><td align="left">string</td><td align="left">是</td><td align="left">tab 上按钮文字</td></tr><tr><td align="left">iconPath</td><td align="left">string</td><td align="left">否</td><td align="left">图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 <strong>当 <code>position</code> 为 <code>top</code> 时，不显示 icon。</strong></td></tr><tr><td align="left">selectedIconPath</td><td align="left">string</td><td align="left">否</td><td align="left">选中时的图片路径，icon 大小限制为 40kb，建议尺寸为 81px * 81px，不支持网络图片。 <strong>当 <code>position</code> 为 <code>top</code> 时，不显示 icon。</strong></td></tr></tbody></table><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\image-20221108205427128.png" alt="image-20221108205427128"></p><h1 id="页面配置"><a href="#页面配置" class="headerlink" title="页面配置"></a>页面配置</h1><blockquote><p>微信小程序遵从就近原则，若页面配置与全局配置发生冲突，则使用页面配置。</p></blockquote><h1 id="网络数据请求"><a href="#网络数据请求" class="headerlink" title="网络数据请求"></a>网络数据请求</h1><blockquote><p>出于安全的考虑，小程序官方对数据接口的请求做出了如下俩个限制：</p></blockquote><ol><li>只能请求HTTPS类型的接口</li><li>必须将接口的域名添加到信任列表中</li></ol><h2 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h2><h2 id="发起GET请求"><a href="#发起GET请求" class="headerlink" title="发起GET请求"></a>发起GET请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">wx.<span class="title function_">request</span>(&#123;</span><br><span class="line"><span class="attr">url</span>: <span class="string">&#x27;https://...&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>:<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="发起POST请求"><a href="#发起POST请求" class="headerlink" title="发起POST请求"></a>发起POST请求</h2><h2 id="在页面刚加载时请求数据"><a href="#在页面刚加载时请求数据" class="headerlink" title="在页面刚加载时请求数据"></a>在页面刚加载时请求数据</h2><blockquote><p>在页面.js中的onLoad方法中调用请求方法</p></blockquote><h2 id="关于跨域和Ajax的说明"><a href="#关于跨域和Ajax的说明" class="headerlink" title="关于跨域和Ajax的说明"></a>关于跨域和Ajax的说明</h2><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\image-20221108222358110.png" alt="image-20221108222358110"></p><h1 id="案例-本地生活（首页）"><a href="#案例-本地生活（首页）" class="headerlink" title="案例-本地生活（首页）"></a>案例-本地生活（首页）</h1><p>梳理项目结构</p><ul><li>多少个页面？</li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发Day1</title>
      <link href="/posts/3393712756/"/>
      <url>/posts/3393712756/</url>
      
        <content type="html"><![CDATA[<h1 id="小程序和浏览器的区别"><a href="#小程序和浏览器的区别" class="headerlink" title="小程序和浏览器的区别"></a>小程序和浏览器的区别</h1><ol><li><p>运行环境不同</p></li><li><p>API不同</p><p>小程序无法调用DOM和BOM的API，但可以调用微信环境提供的各种API</p></li><li><p>开发模式不同</p></li></ol><h1 id="体验小程序"><a href="#体验小程序" class="headerlink" title="体验小程序"></a>体验小程序</h1><blockquote><p>微信官方的组件展示小程序  </p></blockquote><p><img src="http://lptexas.top/img/post/image-20221107192210739.png" alt="image-20221107192210739"></p><h1 id="小程序ID在哪？"><a href="#小程序ID在哪？" class="headerlink" title="小程序ID在哪？"></a>小程序ID在哪？</h1><p>登录<a href="https://mp.weixin.qq.com/wxamp/home/guide?token=1421392743">网页</a>-&gt;点击“开发栏”中的“<a href="https://mp.weixin.qq.com/wxamp/devprofile/get_profile?token=1421392743&lang=zh_CN">开发管理</a>”-&gt;开发者ID（AppID）</p><h1 id="查看小程序效果"><a href="#查看小程序效果" class="headerlink" title="查看小程序效果"></a>查看小程序效果</h1><blockquote><p>点击编译按钮，在电脑端模拟器中查看</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221107193348705.png" alt="image-20221107193348705"></p><blockquote><p>点击预览按钮，扫描二维码，在自己手机上查看</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221107193444453.png" alt="image-20221107193444453"></p><h1 id="主界面组成"><a href="#主界面组成" class="headerlink" title="主界面组成"></a>主界面组成</h1><p><img src="http://lptexas.top/img/post/image-20221107193831534.png" alt="image-20221107193831534"></p><h1 id="小程序项目结构"><a href="#小程序项目结构" class="headerlink" title="小程序项目结构"></a>小程序项目结构</h1><p><img src="http://lptexas.top/img/post/image-20221107194335460.png" alt="image-20221107194335460"></p><h1 id="小程序页面组成部分"><a href="#小程序页面组成部分" class="headerlink" title="小程序页面组成部分"></a>小程序页面组成部分</h1><blockquote><p>每个页面有一个文件夹组成，一个文件夹中有四个文件</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221107194528936.png" alt="image-20221107194528936"></p><p><img src="http://lptexas.top/img/post/image-20221107194544899.png" alt="image-20221107194544899"></p><p>最后编译时，会将四个文件编译成一个完整的页面。</p><h2 id="文件作用介绍"><a href="#文件作用介绍" class="headerlink" title="文件作用介绍"></a>文件作用介绍</h2><blockquote><p><strong>.json文件</strong></p></blockquote><p>JSON是一种数据格式，常作为配置文件出现。</p><p>小程序中有四种JSON文件</p><ol><li>根目录中的app.json</li><li>根目录中的project.config.json</li><li>根目录中的sitemap.json</li><li>pages中每个页面中的json文件</li></ol><h3 id="app-json"><a href="#app-json" class="headerlink" title="app.json"></a>app.json</h3><p>整个项目的全局配置文件，包括所有页面路径、窗口外观、界面表现、底部Tab等</p><p> <img src="http://lptexas.top/img/post/image-20221107202757785.png" alt="image-20221107202757785"></p><ol><li>pages：用来记录当前小程序所有页面的路径</li><li>window：全局定义小程序所有页面的背景色、文本颜色等</li><li>style：全局定义小程序组件所使用的样式版本</li><li>sitemapLocation：用来指明sitemap.json的位置</li></ol><h3 id="project-config-json"><a href="#project-config-json" class="headerlink" title="project.config.json"></a>project.config.json</h3><blockquote><p>对小程序开发工具所做的个性化配置</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221107203215033.png" alt="image-20221107203215033"></p><ol><li>setting中保存了编译相关的配置</li><li>projectname中保存的是项目名称</li><li>appid中保存的是小程序的账号id</li></ol><h3 id="sitemap-json"><a href="#sitemap-json" class="headerlink" title="sitemap.json"></a>sitemap.json</h3><blockquote><p>开放小程序内搜索，类似SEO</p></blockquote><h3 id="页面-json文件"><a href="#页面-json文件" class="headerlink" title="页面.json文件"></a>页面.json文件</h3><blockquote><p>在页面配置文件与全局配置中相同的项，会用页面配置文件中的项覆盖。</p></blockquote><h1 id="新建小程序页面"><a href="#新建小程序页面" class="headerlink" title="新建小程序页面"></a>新建小程序页面</h1><blockquote><p>在app.js中，pages项中添加代码</p></blockquote><h1 id="修改首页"><a href="#修改首页" class="headerlink" title="修改首页"></a>修改首页</h1><blockquote><p>app.js中的pages中第一个项即首页界面</p></blockquote><h1 id="WXML和HTML的区别"><a href="#WXML和HTML的区别" class="headerlink" title="WXML和HTML的区别"></a>WXML和HTML的区别</h1><ol><li>标签名称不同</li><li>属性节点不同</li><li>提供了类似Vue中的模板语法</li></ol><h1 id="WXSS和CSS的区别"><a href="#WXSS和CSS的区别" class="headerlink" title="WXSS和CSS的区别"></a>WXSS和CSS的区别</h1><ol><li>wxss新增rpx尺寸单位</li><li>提供了全局的样式（app.wxss作用全局）</li><li>wxss仅支持部分CSS选择器（类、id、元素、并集、后代、伪类选择器等）</li></ol><h1 id="小程序中的js文件分类"><a href="#小程序中的js文件分类" class="headerlink" title="小程序中的js文件分类"></a>小程序中的js文件分类</h1><h2 id="app-js"><a href="#app-js" class="headerlink" title="app.js"></a>app.js</h2><blockquote><p>整个程序的入口文件，通过App()函数启动整个小程序</p></blockquote><h2 id="页面-js文件"><a href="#页面-js文件" class="headerlink" title="页面.js文件"></a>页面.js文件</h2><blockquote><p>页面入口文件，通过调用Page()函数来创建并运行页面</p></blockquote><h2 id="普通-js文件"><a href="#普通-js文件" class="headerlink" title="普通.js文件"></a>普通.js文件</h2><blockquote><p>普通的功能模块文件，用来封装公共的函数或属性供页面使用</p></blockquote><h1 id="小程序的宿主环境"><a href="#小程序的宿主环境" class="headerlink" title="小程序的宿主环境"></a>小程序的宿主环境</h1><p>什么是宿主环境？</p><p><img src="http://lptexas.top/img/post/image-20221107205043601.png" alt="image-20221107205043601"></p><p>小程序的宿主环境？</p><p><img src="http://lptexas.top/img/post/image-20221107205130868.png" alt="image-20221107205130868"></p><h2 id="通信模块"><a href="#通信模块" class="headerlink" title="通信模块"></a>通信模块</h2><blockquote><p>通信主体为渲染层和逻辑层</p></blockquote><h3 id="通信模型"><a href="#通信模型" class="headerlink" title="通信模型"></a>通信模型</h3><p><img src="http://lptexas.top/img/post/image-20221107205435164.png" alt="image-20221107205435164"></p><h1 id="小程序的运行机制"><a href="#小程序的运行机制" class="headerlink" title="小程序的运行机制"></a>小程序的运行机制</h1><h2 id="小程序启动过程"><a href="#小程序启动过程" class="headerlink" title="小程序启动过程"></a>小程序启动过程</h2><ol><li>下载代码包</li><li>解析app.json全局配置文件</li><li>执行app.js小程序入口文件，调用App()创建小程序实例</li><li>渲染小程序首页</li><li>小程序启动完成</li></ol><h2 id="小程序页面渲染过程"><a href="#小程序页面渲染过程" class="headerlink" title="小程序页面渲染过程"></a>小程序页面渲染过程</h2><ol><li>加载页面.json配置文件</li><li>加载页面.wxml模板和.wxss样式</li><li>执行页面.js文件，调用Page()创建页面实例</li><li>页面渲染完成</li></ol><h1 id="小程序的组件"><a href="#小程序的组件" class="headerlink" title="小程序的组件"></a>小程序的组件</h1><h2 id="常用视图容器类组件"><a href="#常用视图容器类组件" class="headerlink" title="常用视图容器类组件"></a>常用视图容器类组件</h2><ol><li>view</li></ol><ul><li>类似HTML中的div，是一个块级元素</li><li>实现布局效果</li></ul><ol start="2"><li>scroll-view</li></ol><ul><li>可滚动的视图区域</li><li>实现滚动列表效果</li></ul><ol start="3"><li>swiper和swiper-item</li></ol><ul><li>轮播容器组件和轮播图item组件</li></ul><h3 id="view组件使用"><a href="#view组件使用" class="headerlink" title="view组件使用"></a>view组件使用</h3><p><a href="https://developers.weixin.qq.com/ebook?action=get_post_info&docid=00080e799303986b0086e605f5680a">实现flex横向布局</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">.container1 view&#123;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    margin-bottom: 10px;</span><br><span class="line">&#125;</span><br><span class="line">.container1 view:nth-child(1)&#123;</span><br><span class="line">  background-color:lightcoral;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container1 view:nth-child(2)&#123;</span><br><span class="line">  background-color:lightgreen;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.container1 view:nth-child(3)&#123;</span><br><span class="line">  background-color:lightskyblue;</span><br><span class="line">&#125;</span><br><span class="line">.container1&#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="scroll-view组件使用"><a href="#scroll-view组件使用" class="headerlink" title="scroll-view组件使用"></a>scroll-view组件使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;scroll-view scroll-y class=&quot;container2&quot;&gt;</span><br><span class="line">  &lt;view&gt;A&lt;/view&gt;</span><br><span class="line">  &lt;view&gt;B&lt;/view&gt;</span><br><span class="line">  &lt;view&gt;B&lt;/view&gt;</span><br><span class="line">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure><h3 id="swiper组件使用"><a href="#swiper组件使用" class="headerlink" title="swiper组件使用"></a>swiper组件使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;swiper class=&quot;container3&quot; indicator-dots indicator-color=&quot;white&quot; indicator-active-color=&quot;black&quot; autoplay=&quot;true&quot; circular&gt;</span><br><span class="line">  &lt;swiper-item&gt;</span><br><span class="line">    &lt;view class=&quot;item&quot;&gt;a&lt;/view&gt;</span><br><span class="line">  &lt;/swiper-item&gt;</span><br><span class="line">  &lt;swiper-item&gt;</span><br><span class="line">    &lt;view class=&quot;item&quot;&gt;b&lt;/view&gt;</span><br><span class="line">  &lt;/swiper-item&gt;</span><br><span class="line">  &lt;swiper-item&gt;</span><br><span class="line">    &lt;view class=&quot;item&quot;&gt;c&lt;/view&gt;</span><br><span class="line">  &lt;/swiper-item&gt;</span><br><span class="line">&lt;/swiper&gt;</span><br></pre></td></tr></table></figure><blockquote><p>相关属性</p></blockquote><p><img src="http://lptexas.top/img/post/image-20221107220122995.png" alt="image-20221107220122995"></p><h2 id="常见基础内容组件"><a href="#常见基础内容组件" class="headerlink" title="常见基础内容组件"></a>常见基础内容组件</h2><ol><li>text</li></ol><ul><li>文本组件，类似于span标签</li></ul><ol start="2"><li>rich-text</li></ol><ul><li>富文本组件</li><li>支持将HTML字符渲染为WXML架构</li></ul><h3 id="text组件使用"><a href="#text组件使用" class="headerlink" title="text组件使用"></a>text组件使用</h3><blockquote><p>在text组件中，利用selectable属性实现长按选中文本内容的效果</p></blockquote><h3 id="rich-text组件使用"><a href="#rich-text组件使用" class="headerlink" title="rich-text组件使用"></a>rich-text组件使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;rich-text nodes=&quot;&lt;h1 style=&quot;color:red&quot;&gt;标题&lt;/h1&gt;&quot;&gt;&lt;/rich-text&gt;</span><br></pre></td></tr></table></figure><h2 id="button组件使用"><a href="#button组件使用" class="headerlink" title="button组件使用"></a>button组件使用</h2><blockquote><p>通过open-type属性可以调用微信提供的各种功能。</p></blockquote><h2 id="image组件使用"><a href="#image组件使用" class="headerlink" title="image组件使用"></a>image组件使用</h2><blockquote><p>默认宽高为：300px*240px</p></blockquote><ul><li>mode属性可以对指定图片进行裁剪和缩放</li></ul><p>常见属性值</p><p><img src="http://lptexas.top/img/post/image-20221108074221139.png" alt="image-20221108074221139"></p><h2 id="navigator组件使用"><a href="#navigator组件使用" class="headerlink" title="navigator组件使用"></a>navigator组件使用</h2><blockquote><p>小程序页面导航组件</p></blockquote><ul><li>类似HTML中的a标签</li></ul>]]></content>
      
      
      <categories>
          
          <category> 小程序开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio Part 6</title>
      <link href="/posts/2484023040/"/>
      <url>/posts/2484023040/</url>
      
        <content type="html"><![CDATA[<h1 id="消息广播"><a href="#消息广播" class="headerlink" title="消息广播"></a>消息广播</h1><blockquote><p>四大组件之一，<strong>用于响应来自其它应用程序或者系统的广播消息。这些消息被称为事件或意图。</strong>广播可以被一个以上的应用程序接收，也可以不被任何程序接收。</p></blockquote><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ol><li>同一app内同一组件内的消息通信（单个或多个线程）；</li><li>同一app内部的不同组件之间的消息通信（单个进程）；</li><li>同一app具有多个进程的不同组件之间的消息通信；</li><li>不同app之间的组件之间消息通信；</li><li>Android系统在特定情况下与App之间的消息通信。</li></ol><h2 id="三要素"><a href="#三要素" class="headerlink" title="三要素"></a>三要素</h2><h3 id="广播"><a href="#广播" class="headerlink" title="广播"></a>广播</h3><blockquote><p>用于发送广播，是一种运用在应用程序之间的传递消息的机制。</p></blockquote><h3 id="广播接收器（过滤）"><a href="#广播接收器（过滤）" class="headerlink" title="广播接收器（过滤）"></a>广播接收器（过滤）</h3><blockquote><p>用于接收广播，是对发出来的广播进行过滤、接收、响应的组件。</p></blockquote><h3 id="意图内容"><a href="#意图内容" class="headerlink" title="意图内容"></a>意图内容</h3><blockquote><p>用于保存广播相关信息。</p></blockquote><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><ol><li><a href="https://lptexas.top/posts/3831880591/#Intent%E4%BB%8B%E7%BB%8D">设置意图（Intent）</a></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">intent.setAction(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line"><span class="comment">//设置数据，将需要广播出去的内容保存到intent中</span></span><br><span class="line">intent.putExtra(<span class="string">&quot;key&quot;</span>,<span class="string">&quot;values&quot;</span>);<span class="comment">//或者使用putExtras结合Bundle</span></span><br></pre></td></tr></table></figure><blockquote><p>系统产生的事件被定义为类Intent中的静态常量值。下面的表格列举了重要的系统事件</p></blockquote><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\image-20221112100856331.png" alt="image-20221112100856331"></p><p><a href="https://blog.csdn.net/baidu_41666295/article/details/104903311">新版本Android，发送静态广播，必须是定向广播，否则收不到。</a></p><blockquote><p>需要设置<code>Package</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">intent.setPackage(<span class="string">&quot;com.example.app&quot;</span>);   <span class="comment">//这是在代码中的设置，加在sendBroadcast之前</span></span><br></pre></td></tr></table></figure><ol start="2"><li>发送广播</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sendBroadcast(intent); <span class="comment">//使用sendBroadcast方法发送广播内容</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建广播接收器</li></ol><blockquote><p>New—Other—Broadcast Receiver</p><p><code>注意不是创建Activity而是Broadcast Receiver</code></p><p>编写一个继承BroadcastReceiver的广播接收器，并重写onReceive方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BCReceiver</span> <span class="keyword">extends</span> <span class="title class_">BroadcastReceiver</span>&#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onReceive</span><span class="params">(Context context, Intent intent)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*接收到广播后做出响应的代码*/</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>注册广播接收器</li></ol><blockquote><p>在AndroidManifest.xml中注册广播接受类（系统会自动完成这个过程，<strong>默认静态注册</strong>）。</p></blockquote><p>（1）静态注册</p><p>直接在AndroidManifest.xml文件中进行注册。规则如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:enabled</span>=<span class="string">[</span>&quot;<span class="attr">true</span>&quot; | &quot;<span class="attr">false</span>&quot;]</span></span><br><span class="line"><span class="tag"><span class="attr">android:exported</span>=<span class="string">[</span>&quot;<span class="attr">true</span>&quot; | &quot;<span class="attr">false</span>&quot;] </span></span><br><span class="line"><span class="tag"><span class="attr">android:icon</span>=<span class="string">&quot;drawable resource&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:label</span>=<span class="string">&quot;string resource&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:name</span>=<span class="string">&quot;string&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:permission</span>=<span class="string">&quot;string&quot;</span> </span></span><br><span class="line"><span class="tag"><span class="attr">android:process</span>=<span class="string">&quot;string&quot;</span> &gt;</span> </span><br><span class="line">. . . </span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性介绍</p><ul><li>android:name：此broadcastReceiver的类名</li><li>android:enabled：是否可以被系统实例化，默认为 true。为true时服务才会被激活，否则不会激活</li><li>android:exported：此broadcastReceiver能否接收其他App的发出的广播，其默认值是由receiver中有无</li><li>intent-filter决定的，如果有intent-filter，默认值为true，否则为false</li><li>android:permission：如果设置，具有相应权限的广播发送方发送的广播才能被此broadcastReceiver所接收；</li><li>intent-filter：指定此广播接收器将用于接收特定的广播类型</li></ul><p>（2）动态注册</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">……</span><br><span class="line"><span class="comment">//实例化IntentFilter对象</span></span><br><span class="line"><span class="type">IntentFilter</span> <span class="variable">filter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IntentFilter</span>();</span><br><span class="line">filter.addAction(“abc<span class="string">&quot;);</span></span><br><span class="line"><span class="string">dynamicReceiver = new DynamicReceiver();</span></span><br><span class="line"><span class="string">//注册广播接收</span></span><br><span class="line"><span class="string">registerReceiver(dynamicReceiver,filter);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">class DynamicReceiver extends BroadcastReceiver&#123; </span></span><br><span class="line"><span class="string">@Override </span></span><br><span class="line"><span class="string">public void onReceive(Context context, Intent intent) &#123;</span></span><br><span class="line"><span class="string">//TODO</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>销毁广播接收器</li></ol><blockquote><p>在一定时间后销毁</p></blockquote><p><strong>动态注册</strong></p><ol start="4"><li>注销</li></ol><h1 id="系统服务"><a href="#系统服务" class="headerlink" title="系统服务"></a>系统服务</h1><blockquote><p>Android有许多标准系统服务（SystemService），如窗口管理服务WindowManager，通知管理服务NotificationManager、振动管理服务Vibrator、电池管理服务BatteryManager等。</p><p>系统服务实际上可以看作一个对象，通过Activity 的getSystemService() 方法可以获得指定对象（系统服务）。</p><p>接下来介绍两个常见的系统服务</p></blockquote><h2 id="通知管理服务"><a href="#通知管理服务" class="headerlink" title="通知管理服务"></a><a href="https://developer.android.google.cn/guide/topics/ui/notifiers/notifications?hl=zh-cn">通知管理服务</a></h2><blockquote><p>常说的通知栏</p></blockquote><p>Notification是一种具有全局效果的通知，在手机的通知栏显示。当应用程序向系统发出通知时，它先以图标的形式显示在通知栏中，用户下拉通知栏可以查看通知的详细信息。</p><p>状态栏通知用到两个类：<code>NotificationManager</code>和<code>Notification</code>。</p><h3 id="Notification"><a href="#Notification" class="headerlink" title="Notification"></a>Notification</h3><blockquote><p>是具体的状态栏通知对象，可以设置icon、文字、提示声音、振动等等参数。</p><p>Notification主要涉及 <code>Notification.Builder()</code>方法</p></blockquote><p><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images\notification-callouts_2x.png"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">小图标：必须提供，通过 setSmallIcon() 进行设置。</span><br><span class="line">应用名称：由系统提供。</span><br><span class="line">时间戳：由系统提供，但您可以使用 setWhen() 替换它或者使用 setShowWhen(<span class="literal">false</span>) 隐藏它。</span><br><span class="line">大图标：可选内容（通常仅用于联系人照片，请勿将其用于应用图标），通过 setLargeIcon() 进行设置。</span><br><span class="line">标题：可选内容，通过 setContentTitle() 进行设置。</span><br><span class="line">文本：可选内容，通过 setContentText() 进行设置。</span><br></pre></td></tr></table></figure><h3 id="NotificationManager"><a href="#NotificationManager" class="headerlink" title="NotificationManager"></a>NotificationManager</h3><blockquote><p>状态栏通知的管理类，负责发通知、清除通知等。</p></blockquote><p>NotificationManager是一个系统Service，必须通过getSystemService()方法来获取。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NotificationManager nm=(NotificationManager)getSystemService(NOTIFICATION_SERVICE);</span><br></pre></td></tr></table></figure><p>调用NotificationManager对象的<code>notify()</code> 方法把通知发送到状态栏。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nm.notify();</span><br></pre></td></tr></table></figure><h3 id="创建通知"><a href="#创建通知" class="headerlink" title="创建通知"></a><a href="https://developer.android.google.cn/training/notify-user/build-notification?hl=zh-cn">创建通知</a></h3><blockquote><p>首先，您需要使用 <code>NotificationCompat.Builder</code> 对象设置通知内容和渠道。以下示例显示了如何创建包含下列内容的通知：</p></blockquote><ul><li>小图标，通过 <code>setSmallIcon()</code> 设置。这是所必需的唯一用户可见内容。</li><li>标题，通过 <code>setContentTitle()</code> 设置。</li><li>正文文本，通过 <code>setContentText()</code> 设置。</li><li>通知优先级，通过 <code>setPriority()</code> 设置。优先级确定通知在 Android 7.1 和更低版本上的干扰程度。（对于 Android 8.0 和更高版本，必须设置渠道重要性，如下一节中所示。）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">NotificationCompat.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationCompat</span>.Builder(<span class="built_in">this</span>, CHANNEL_ID)</span><br><span class="line">        .setSmallIcon(R.drawable.notification_icon)</span><br><span class="line">        .setContentTitle(textTitle)</span><br><span class="line">        .setContentText(textContent)</span><br><span class="line">        .setPriority(NotificationCompat.PRIORITY_DEFAULT);</span><br></pre></td></tr></table></figure><p>请注意，<code>NotificationCompat.Builder</code> 构造函数要求您提供渠道 ID。这是兼容 Android 8.0（API 级别 26）及更高版本所必需的，但会被较旧版本忽略。</p><p>默认情况下，通知的文本内容会被截断以放在一行。如果您想要更长的通知，可以使用 <code>setStyle()</code> 添加样式模板来启用可展开的通知。例如，以下代码会<strong>创建更大的文本区域</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">NotificationCompat.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationCompat</span>.Builder(<span class="built_in">this</span>, CHANNEL_ID)</span><br><span class="line">        .setSmallIcon(R.drawable.notification_icon)</span><br><span class="line">        .setContentTitle(<span class="string">&quot;My notification&quot;</span>)</span><br><span class="line">        .setContentText(<span class="string">&quot;Much longer text that cannot fit one line...&quot;</span>)</span><br><span class="line">        .setStyle(<span class="keyword">new</span> <span class="title class_">NotificationCompat</span>.BigTextStyle()</span><br><span class="line">                .bigText(<span class="string">&quot;Much longer text that cannot fit one line...&quot;</span>))</span><br><span class="line">        .setPriority(NotificationCompat.PRIORITY_DEFAULT);</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>创建渠道并设置重要性</p></blockquote><p>必须先通过向 <code>createNotificationChannel()</code> 传递 <code>NotificationChannel</code> 的实例在系统中注册应用的<a href="https://developer.android.google.cn/training/notify-user/channels?hl=zh-cn">通知渠道</a>，然后才能在 Android 8.0 及更高版本上提供通知。因此以下代码会被 <code>SDK_INT</code> 版本上的条件阻止：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">createNotificationChannel</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// Create the NotificationChannel, but only on API 26+ because </span></span><br><span class="line">    <span class="comment">// the NotificationChannel class is new and not in the support library</span></span><br><span class="line">    <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) &#123;</span><br><span class="line">        <span class="type">CharSequence</span> <span class="variable">name</span> <span class="operator">=</span> getString(R.string.channel_name);  <span class="comment">//渠道的名字，使用了软链接</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">description</span> <span class="operator">=</span> getString(R.string.channel_description); <span class="comment">//渠道描述信息</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">importance</span> <span class="operator">=</span> NotificationManager.IMPORTANCE_DEFAULT; <span class="comment">//渠道的重要性</span></span><br><span class="line">        <span class="type">NotificationChannel</span> <span class="variable">channel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationChannel</span>(CHANNEL_ID, name, importance);</span><br><span class="line">        channel.setDescription(description); <span class="comment">//设置渠道描述</span></span><br><span class="line">        <span class="comment">// Register the channel with the system; you can&#x27;t change the importance</span></span><br><span class="line">        <span class="comment">// or other notification behaviors after this</span></span><br><span class="line">        <span class="type">NotificationManager</span> <span class="variable">notificationManager</span> <span class="operator">=</span> getSystemService(NotificationManager.class);</span><br><span class="line">        notificationManager.createNotificationChannel(channel);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于您必须<strong>先创建通知渠道</strong>，然后才能在 Android 8.0 及更高版本上发布任何通知，因此应在<strong>应用启动时立即执行这段代码</strong>。反复调用这段代码是安全的，因为创建现有通知渠道不会执行任何操作。</p><p>请注意，<code>NotificationChannel</code> 构造函数需要一个 <code>importance</code>，它会使用 <code>NotificationManager</code> 类中的一个常量。此参数确定出现任何属于此渠道的通知时如何打断用户，但您还必须使用 <code>setPriority()</code> 设置优先级，才能支持 Android 7.1 和更低版本（如上所示）。</p><p>虽然必须按本文所示设置通知重要性&#x2F;优先级，但系统不能保证您会获得提醒行为。在某些情况下，系统可能会根据其他因素更改重要性级别，并且用户始终可以重新定义指定渠道适用的重要性级别。</p><p>如需详细了解不同级别的含义，请参阅<a href="https://developer.android.google.cn/training/notify-user/channels?hl=zh-cn#importance">通知重要性级别</a>。</p><blockquote><p>设置通知的点按操作</p></blockquote><p>每个通知都应该对点按操作做出响应，通常是在应用中打开对应于该通知的 Activity。为此，您必须指定通过 <code>PendingIntent</code> 对象定义的内容 Intent，并将其传递给 <code>setContentIntent()</code>。</p><p>以下代码段展示了如何创建基本 Intent，以在用户点按通知时打开 Activity：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Create an explicit intent for an Activity in your app</span></span><br><span class="line"><span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>, AlertDetails.class);</span><br><span class="line">intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);</span><br><span class="line"><span class="type">PendingIntent</span> <span class="variable">pendingIntent</span> <span class="operator">=</span> PendingIntent.getActivity(<span class="built_in">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">NotificationCompat.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationCompat</span>.Builder(<span class="built_in">this</span>, CHANNEL_ID)</span><br><span class="line">        .setSmallIcon(R.drawable.notification_icon)</span><br><span class="line">        .setContentTitle(<span class="string">&quot;My notification&quot;</span>)</span><br><span class="line">        .setContentText(<span class="string">&quot;Hello World!&quot;</span>)</span><br><span class="line">        .setPriority(NotificationCompat.PRIORITY_DEFAULT)</span><br><span class="line">        <span class="comment">// Set the intent that will fire when the user taps the notification</span></span><br><span class="line">        .setContentIntent(pendingIntent)</span><br><span class="line">        .setAutoCancel(<span class="literal">true</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>请注意，此代码会调用 <code>setAutoCancel()</code>，它会在用户点按通知后自动<a href="https://developer.android.google.cn/training/notify-user/build-notification?hl=zh-cn#Removing">移除通知</a>。</p><p>以上所示的 <code>setFlags()</code> 方法可帮助保留用户在通过通知打开应用后的预期导航体验。但您是否要使用这一方法取决于您要启动的 Activity 类型，类型可能包括：</p><ul><li>专用于响应通知的 Activity。用户在正常使用应用时不会无缘无故想导航到这个 Activity，因此该 Activity 会启动一个新任务，而不是添加到应用的现有<a href="https://developer.android.google.cn/guide/components/activities/tasks-and-back-stack?hl=zh-cn">任务和返回堆栈</a>。这就是以上示例中创建的 Intent 类型。</li><li>应用的常规应用流程中存在的 Activity。在这种情况下，启动 Activity 时应创建返回堆栈，以便保留用户对<a href="https://developer.android.google.cn/design/patterns/navigation?hl=zh-cn">返回和向上按钮</a>的预期。</li></ul><p>如需详细了解配置通知 Intent 的不同方法，请参阅<a href="https://developer.android.google.cn/training/notify-user/navigation?hl=zh-cn">从通知启动 Activity</a>。</p><h3 id="显示通知"><a href="#显示通知" class="headerlink" title="显示通知"></a>显示通知</h3><p>如需显示通知，请调用 <code>NotificationManagerCompat.notify()</code>，并将通知的唯一 ID 和 <code>NotificationCompat.Builder.build()</code> 的结果传递给它。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">NotificationManagerCompat</span> <span class="variable">notificationManager</span> <span class="operator">=</span> NotificationManagerCompat.from(<span class="built_in">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// notificationId is a unique int for each notification that you must define</span></span><br><span class="line">notificationManager.notify(notificationId, builder.build());</span><br></pre></td></tr></table></figure><p>请记得保存您传递到 <code>NotificationManagerCompat.notify()</code> 的通知 ID，因为如果之后您想要<a href="https://developer.android.google.cn/training/notify-user/build-notification?hl=zh-cn#Updating">更新</a>或<a href="https://developer.android.google.cn/training/notify-user/build-notification?hl=zh-cn#Removing">移除通知</a>，将需要使用这个 ID。</p><p><strong>注意</strong>：从 Android 8.1（API 级别 27）开始，应用每秒最多只能发出一次通知提示音。如果应用在一秒内发出了多条通知，这些通知都会按预期显示，但是每秒中只有第一条通知发出提示音。</p><h3 id="区分渠道优先级和通知优先度"><a href="#区分渠道优先级和通知优先度" class="headerlink" title="区分渠道优先级和通知优先度"></a><a href="https://juejin.cn/post/6980823450625507335">区分渠道优先级和通知优先度</a></h3><h3 id="区分渠道id和通知id"><a href="#区分渠道id和通知id" class="headerlink" title="区分渠道id和通知id"></a>区分<a href="https://developer.android.google.cn/reference/androidx/core/app/NotificationCompat.Builder?hl=zh-cn#setChannelId(java.lang.String)">渠道id</a>和<a href="https://developer.android.google.cn/reference/androidx/core/app/NotificationManagerCompat?hl=zh-cn#notify(int,%20android.app.Notification)">通知id</a></h3><table><thead><tr><th><code>@NonNull String channelId</code></th><th>The constructed Notification will be posted on this NotificationChannel.</th></tr></thead><tbody><tr><td><code>int id</code></td><td>the ID of the notification. The pair (tag, id) must be unique within your app.</td></tr></tbody></table><h2 id="系统定时服务"><a href="#系统定时服务" class="headerlink" title="系统定时服务"></a>系统定时服务</h2><blockquote><p>注：Android对时间的控制模式会影响定时效果</p></blockquote><h1 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h1><blockquote><p>Service是一种类似Activity的组件，但Service没有用户操作界面，也不能自己启动。需要通过特殊指令才能终止。</p></blockquote><h2 id="创建Service子类"><a href="#创建Service子类" class="headerlink" title="创建Service子类"></a>创建Service子类</h2><ul><li>重写onClick方法</li><li>重写onStartCommand方法</li><li>重写onDestory方法</li></ul><h2 id="创建Activity"><a href="#创建Activity" class="headerlink" title="创建Activity"></a>创建Activity</h2><ol><li>新建Intent对象，建立Activity 与Service的关联。</li><li>调用Activity的 startSevice(Intent) 方法启动 Service 后合服务;</li><li>调用Activity 的 stopService(lntent) 方法关闭 Service 后台服务。</li></ol><h2 id="修改配置文件AndroidManifest-xml"><a href="#修改配置文件AndroidManifest-xml" class="headerlink" title="修改配置文件AndroidManifest.xml"></a>修改配置文件AndroidManifest.xml</h2><blockquote><p>在&lt;application&gt;标签中添加以下代码</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span> <span class="attr">android:enabled</span>=<span class="string">&quot;true&quot;</span> <span class="attr">android:name</span>=<span class="string">&quot;.后台服务程序&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><h1 id="数据存储"><a href="#数据存储" class="headerlink" title="数据存储"></a>数据存储</h1><h2 id="文件存储"><a href="#文件存储" class="headerlink" title="文件存储"></a>文件存储</h2><h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><blockquote><p>Java的输入输出流</p></blockquote><h2 id="Json数据格式"><a href="#Json数据格式" class="headerlink" title="Json数据格式"></a>Json数据格式</h2><blockquote><p>JSON是一种轻量级的数据交换格式，与xml一样，也是基于纯文本的<br>数据格式。</p></blockquote><h3 id="对象结构JSONObject"><a href="#对象结构JSONObject" class="headerlink" title="对象结构JSONObject"></a>对象结构JSONObject</h3><blockquote><p>JSON对象可以包括多个键值对，要求在大括号“{ }”中书写。</p></blockquote><h3 id="数组结构JSONArray"><a href="#数组结构JSONArray" class="headerlink" title="数组结构JSONArray"></a>数组结构JSONArray</h3><blockquote><p>JSON数组可以包含多个JSON对象做元素，每个元素之间用逗号“, ”分隔，最外面用方括号“ [ ] ”。JSON数组是SON对象的有序集合。</p></blockquote><h3 id="JSON的使用"><a href="#JSON的使用" class="headerlink" title="JSON的使用"></a>JSON的使用</h3><blockquote><p>创建json</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JSONObject jsonObject=<span class="keyword">new</span> <span class="title class_">JSONObject</span>();</span><br><span class="line">JSONArray jsonArray=<span class="keyword">new</span> <span class="title class_">JSONArray</span>();</span><br></pre></td></tr></table></figure><blockquote><p>放入键值对</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">json.put(<span class="string">&quot;key&quot;</span>,<span class="string">&quot;value&quot;</span>);</span><br><span class="line"><span class="comment">//数组对象</span></span><br><span class="line">json.put(object);</span><br></pre></td></tr></table></figure><h3 id="assets目录"><a href="#assets目录" class="headerlink" title="assets目录"></a>assets目录</h3><blockquote><p>assets目录是Android的一种特殊目录，用于放置APP所需的固定文件，<br>且该文件被打包到APK中时，不会被编码到二进制文件。</p></blockquote><h3 id="assets和raw的区别"><a href="#assets和raw的区别" class="headerlink" title="assets和raw的区别"></a>assets和raw的区别</h3><ol><li>assets不会映射到R，而res&#x2F;raw会映射到R，即可以使用R.raw或getResource()方法获取资源，；assets必须通过AssetManager进行操作。</li><li>assets可以存在多级目录，raw不可以</li><li>在AssertManager中不能处理单个超过1MB的文件，不然会报异常，raw没这个限制。</li></ol><h2 id="轻量级存储SharedPerferences"><a href="#轻量级存储SharedPerferences" class="headerlink" title="轻量级存储SharedPerferences"></a>轻量级存储SharedPerferences</h2><blockquote><p>SharedPreferences 是 Android 平台为应用开发者提供的一个轻量级的存储辅助类，用来保存应用的一些常用配置。</p><p>采用键值对的形式组织和管理数据，其数据存储在<code>XML格式</code>的文件中。在应用中通常做一些简单数据的持久化存储。</p><p>类似电脑上的<code>Cookie</code>，用于在一段时间内保存数据。</p></blockquote><h3 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h3><ol><li>获取SharedPerference对象</li></ol><blockquote><p>首先声明一个sp对象，然后获取sp对象。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明SharePerference对象</span></span><br><span class="line"><span class="keyword">private</span> SharedPreferences sp; </span><br><span class="line"><span class="comment">//获取SharedPreferenced对象，getSharedPerference(String,int)</span></span><br><span class="line">sp = getSharedPreferences(<span class="string">&quot;filename&quot;</span>, Context.MODE_PRIVATE);</span><br><span class="line"><span class="comment">//第一个参数用于指定存储文件的名称</span></span><br><span class="line"><span class="comment">//第二个参数指定文件的操作模式。一般用MODE_PRIVATE私有方式存储，其它 应用无法访问。</span></span><br></pre></td></tr></table></figure><ol start="2"><li>设置参数</li></ol><blockquote><p>必须通过一个SharedPreference.Editor对象。存储键值对。只能存<br>放Boolean，Float，Int，Long，String 等类型（对应代码中的Xxx）。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SharedPreference.<span class="type">Editor</span> <span class="variable">editor</span> <span class="operator">=</span> sp.edit();</span><br><span class="line">editor.putXxx(<span class="string">&quot;key&quot;</span>,<span class="string">&quot;value&quot;</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>提交数据与清除数据</li></ol><blockquote><p>通过editor.commit()提交数据。也可以通过clean()，remove()清除。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">editor.commit();</span><br><span class="line">editor.clean();</span><br><span class="line">editor.remove()</span><br></pre></td></tr></table></figure><h3 id="获得对象"><a href="#获得对象" class="headerlink" title="获得对象"></a><a href="https://blog.csdn.net/qq_38367681/article/details/105699888">获得对象</a></h3><blockquote><p>三种获得sp对象的方法</p></blockquote><ol><li>Context类中的getSharedPreferences()方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此方法接受两个参数，第一个是指定SharedPreferences的文件名称，第二个参数是操作模式，目前只有MODE_PRIVATE这一种模式可选，表示只有当前文件可以对这个文件进行读写。</span></span><br></pre></td></tr></table></figure><ol start="2"><li>Activity类中的getPreferences()方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只接受操作模式这一个参数（目前只有MODE_PRIVATE这一种模式可选），使用这个方法的活动类名会作为SharedPreferences的文件名</span></span><br></pre></td></tr></table></figure><ol start="3"><li>PreferenceManager类中的getDefaultSharedPreferences()方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只接受一个context参数，使用这个方法的包名会作为SharedPreferences的文件名。</span></span><br></pre></td></tr></table></figure><h3 id="访问数据"><a href="#访问数据" class="headerlink" title="访问数据"></a>访问数据</h3><blockquote><p>可以使用getXxx()方法获取对应的键值对，第一个参数为key名，第二个参数为不存在key名时的默认值。（Xxx指Boolean，Float，Int，Long，String 等类型）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sp.getString();</span><br></pre></td></tr></table></figure><h1 id="回调方法"><a href="#回调方法" class="headerlink" title="回调方法"></a>回调方法</h1><blockquote><p>在布局文件中绑定回调函数</p></blockquote><p>xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:onClick=&quot;function&quot;</span><br></pre></td></tr></table></figure><p>java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">function</span><span class="params">(View view)</span>&#123;</span><br><span class="line"><span class="comment">//To do</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SQLite轻量数据库"><a href="#SQLite轻量数据库" class="headerlink" title="SQLite轻量数据库"></a>SQLite轻量数据库</h2>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言4</title>
      <link href="/posts/4228133455/"/>
      <url>/posts/4228133455/</url>
      
        <content type="html"><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><p>在对文件进行操作前，可以进行工作目录的设置</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setwd<span class="punctuation">(</span><span class="string">&#x27;path&#x27;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ul><li>path：目录路径</li></ul><h2 id="键盘输入"><a href="#键盘输入" class="headerlink" title="键盘输入"></a>键盘输入</h2><p>方法一</p><blockquote><p>使用fix()、edit()函数修改数据框（表格）</p></blockquote><p>方法二</p><blockquote><p>使用scan()函数，读入数据</p></blockquote><p>方法三</p><blockquote><p>使用cat()函数输入数据，或导出文本数据</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat<span class="punctuation">(</span>x<span class="punctuation">,</span>file<span class="operator">=</span><span class="string">&#x27;&#x27;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li>x：为需要输入的数据</li><li>file：值为指定输入文件的绝对路径</li></ul><h2 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h2><blockquote><p>txt</p><p>csv</p></blockquote><h3 id="txt"><a href="#txt" class="headerlink" title="txt"></a>txt</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read.table<span class="punctuation">(</span>x<span class="punctuation">,</span>header<span class="punctuation">,</span>sep<span class="punctuation">,</span>nrow<span class="punctuation">,</span>skip<span class="punctuation">,</span>fill<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数</p><ul><li>x：数据源<ul><li>file：从文本文件中读取数据</li><li>“clipboard”：从剪切板中读取数据</li></ul></li><li>header &#x3D; TRUE，是否有标题行。</li><li>sep &#x3D;‘ ’，使用哪个字符作为字段之间的分隔符。</li><li>nrow 可以指定读取数据的行数。</li><li>skip 决定跳过文件开始的多少行。</li><li>fill &#x3D; TRUE会使用NA 值来代替那些缺失的值。</li><li>更多高级选项包括：覆盖默认的行名、列名和类，指定输入文件的字符编码，以及输入的字符串格式的列如何声明。<ul><li>row.names, 是可以传入一个字符串的向量，用来定义每一行的名称，但是这个参数我们用的不多。</li><li>我们用的更多地是col.names, 就是用来定义你数据的列名。</li><li>还有一个比较重要的参数叫na.strings ，这个参数可以定义NA的数值，可以键入一个向量，比如na.strings &#x3D;c(‘’,000,999’_’)等。</li><li>还有一个重要参数叫做stringsAsFactors , 它就是说要不要把字符串转换为因子，如果不需要将其转为因子，那么就默认其为stringsAsFactors &#x3D; False，如果需要将其转换为字符串，那么就需要将其设置为stringsAsFactors &#x3D; True。</li></ul></li></ul><h3 id="csv"><a href="#csv" class="headerlink" title="csv"></a>csv</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">read.csv<span class="punctuation">(</span>file<span class="punctuation">,</span> header<span class="punctuation">,</span> sep<span class="punctuation">,</span> dec<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数</p><ul><li>file：包含要导入到 R 中的数据的文件的路径。</li><li>header：逻辑值。如果为 TRUE，则 read.csv() 假定您的文件具有标题行，因此第 1 行是每列的名称。如果不是这种情况，您可以添加参数 header &#x3D; FALSE。</li><li>sep：字段分隔符</li><li>dec：文件中用于小数点的字符。</li></ul><hr><p>关于更多的参数可以使用<code>help</code>进行查询</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">help<span class="punctuation">(</span><span class="string">&quot;read.csv&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="数据导入"><a href="#数据导入" class="headerlink" title="数据导入"></a>数据导入</h2><h3 id="非结构化文本文件"><a href="#非结构化文本文件" class="headerlink" title="非结构化文本文件"></a>非结构化文本文件</h3><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li>读入文件中的所有文本行（<code>readLines</code>方法）</li><li>对内容进行分析或操作</li></ol><h5 id="readLines"><a href="#readLines" class="headerlink" title="readLines"></a>readLines</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">readLines<span class="punctuation">(</span>con <span class="operator">=</span> stdin<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> n <span class="operator">=</span> <span class="operator">-</span><span class="number">1L</span><span class="punctuation">,</span> ok <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> warn <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">          encoding <span class="operator">=</span> <span class="string">&quot;unknown&quot;</span><span class="punctuation">,</span> skipNul <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数</p><ul><li>con：连接对象或字符串</li><li>n: 整数，一次读取的行数；设为复数表示读取整个数据；不设置时，默认读取整个文件</li><li>ok: 逻辑值，设置ok&#x3D;F, 在n&gt;0之前，读到连接末尾，返回error</li><li>warn：逻辑值，当文件不存在或者存在嵌入式错误时，提示</li><li>encoding：设置编码格式</li><li>skipNul：逻辑值，是否跳过错误</li></ul><h5 id="writeLines"><a href="#writeLines" class="headerlink" title="writeLines"></a><a href="https://blog.csdn.net/weixin_30378623/article/details/98502018">writeLines</a></h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">writeLines<span class="punctuation">(</span>text<span class="punctuation">,</span> con <span class="operator">=</span> stdout<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot;\n&quot;</span><span class="punctuation">,</span> useBytes <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数</p><ul><li>text<br>A character vector</li><li>con<br>A connection object or a character string.</li><li>sep<br>character string. A string to be written to the connection after each line of text.</li><li>useBytes<br>logical. See ‘Details’.</li></ul><h3 id="结构文本文件"><a href="#结构文本文件" class="headerlink" title="结构文本文件"></a>结构文本文件</h3><h4 id="读取本地excel文件"><a href="#读取本地excel文件" class="headerlink" title="读取本地excel文件"></a>读取本地excel文件</h4><h5 id="read-excel"><a href="#read-excel" class="headerlink" title="read_excel()"></a>read_excel()</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入readxl包</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;readxl&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>readxl<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">read_excel<span class="punctuation">(</span></span><br><span class="line">  path<span class="punctuation">,</span></span><br><span class="line">  sheet <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  <span class="built_in">range</span> <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  col_names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  col_types <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  na <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  trim_ws <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  skip <span class="operator">=</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  n_max <span class="operator">=</span> <span class="literal">Inf</span><span class="punctuation">,</span></span><br><span class="line">  guess_max <span class="operator">=</span> <span class="built_in">min</span><span class="punctuation">(</span><span class="number">1000</span><span class="punctuation">,</span> n_max<span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  progress <span class="operator">=</span> readxl_progress<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">  .name_repair <span class="operator">=</span> <span class="string">&quot;unique&quot;</span></span><br><span class="line"><span class="punctuation">)</span></span><br><span class="line">read_xls<span class="punctuation">(</span>...<span class="punctuation">)</span> <span class="comment">#类似</span></span><br><span class="line">read_xlsx<span class="punctuation">(</span>...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>常用参数</p><ul><li>path,数据的完整路径</li><li>sheet : 读取那个文件簿中的数据</li><li>startRow：从这一行开始查找数据</li><li>colNames：如果为真，第一行的数据就是列的名字</li><li>rowNames：如果为真，第一类数据会被作为行的名字</li><li>注意：read_excel函数既可以读.xls也可以读.xlsx类型文件</li></ul><h5 id="readWorksheetFromFile"><a href="#readWorksheetFromFile" class="headerlink" title="readWorksheetFromFile()"></a>readWorksheetFromFile()</h5><blockquote><p>从excel文件中读取sheet</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readWorksheetFromFile<span class="punctuation">(</span>file<span class="punctuation">,</span> ...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>常用参数</p><ul><li>file：指定文件</li><li>sheet：整数或名字，指定sheet</li><li>head：逻辑值，默认TRUE</li><li>startRow：起始行</li><li>endRow：结束行</li><li>startCol：起始列</li><li>endCol：结束列</li></ul><h5 id="read-xlsx"><a href="#read-xlsx" class="headerlink" title="read.xlsx()"></a>read.xlsx()</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入xlsx包</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;xlsx&quot;</span><span class="punctuation">)</span> </span><br><span class="line">library<span class="punctuation">(</span>xlsx<span class="punctuation">)</span> </span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">read.xlsx<span class="punctuation">(</span></span><br><span class="line">  file<span class="punctuation">,</span></span><br><span class="line">  sheetIndex<span class="punctuation">,</span></span><br><span class="line">  sheetName <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  rowIndex <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  startRow <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  endRow <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  colIndex <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  as.data.frame <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  header <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">  colClasses <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">,</span></span><br><span class="line">  keepFormulas <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">  encoding <span class="operator">=</span> <span class="string">&quot;unknown&quot;</span><span class="punctuation">,</span></span><br><span class="line">  password <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span></span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h5 id="odbcConnectExcel"><a href="#odbcConnectExcel" class="headerlink" title="odbcConnectExcel()"></a>odbcConnectExcel()</h5><blockquote><p>建立RODBC连接对象至Excel文件，并将连接赋予一个对象（excel文件）,在进行sql操作</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入RODBC包</span></span><br><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;RODBC&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>RODBC<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">channel<span class="operator">&lt;-</span>odbcConnectionExcel<span class="punctuation">(</span>path<span class="punctuation">,</span>...<span class="punctuation">)</span><span class="comment">#建立RODBC连接对象至Excel文件，并将连接赋予一个对象</span></span><br><span class="line">sqlTables<span class="punctuation">(</span>channel<span class="punctuation">)</span><span class="comment">#列出电子表格, show all Sheet</span></span><br><span class="line">sqlFetch<span class="punctuation">(</span>channel<span class="punctuation">,</span><span class="string">&quot;Sheet1&quot;</span><span class="punctuation">)</span><span class="comment">#读取工作簿中的工作表至一个数据框，Sheet1为要读取的工作表名</span></span><br><span class="line">odbcClose<span class="punctuation">(</span>channel<span class="punctuation">)</span>   <span class="comment">#关闭RODBC连接</span></span><br></pre></td></tr></table></figure><p>常用属性</p><ul><li>path：文件路径</li></ul><p>使用报错</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">odbcConnectExcel is only usable with <span class="number">32</span><span class="operator">-</span>bit Windows</span><br></pre></td></tr></table></figure><p>解决方法</p><ul><li>使用<code>odbcConnectionExcel2007()</code>替代</li></ul><h4 id="读取网络中的表格"><a href="#读取网络中的表格" class="headerlink" title="读取网络中的表格"></a>读取网络中的表格</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#导入XML包</span></span><br><span class="line">library<span class="punctuation">(</span>XML<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h5 id="readHTMLtable-函数"><a href="#readHTMLtable-函数" class="headerlink" title="readHTMLtable()函数"></a>readHTMLtable()函数</h5><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">readHTMLTable<span class="punctuation">(</span></span><br><span class="line">    doc<span class="punctuation">,</span> </span><br><span class="line">    header <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">,</span></span><br><span class="line">    colClasses <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> </span><br><span class="line">    skip.rows <span class="operator">=</span> integer<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> </span><br><span class="line">    trim <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span>        </span><br><span class="line">    elFun <span class="operator">=</span> xmlValue<span class="punctuation">,</span> </span><br><span class="line">    as.data.frame <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> </span><br><span class="line">    which <span class="operator">=</span> integer<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>常用参数</p><ul><li>doc：HTML文件名或者URL</li><li>header</li><li>stringsAsFactors：设置为F，数据框将不会默认把字符型转化为因子</li></ul><h5 id="解决乱码问题"><a href="#解决乱码问题" class="headerlink" title="解决乱码问题"></a>解决乱码问题</h5><h6 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h6><p>将数据导出到本地txt文件，再重新导入</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">table_sub <span class="operator">&lt;-</span> tables<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">write.table<span class="punctuation">(</span>table_sub<span class="punctuation">,</span><span class="string">&quot;table_sub.txt&quot;</span><span class="punctuation">,</span>row.names<span class="operator">=</span><span class="built_in">F</span><span class="punctuation">)</span></span><br><span class="line">table_sub_new <span class="operator">&lt;-</span> read.table<span class="punctuation">(</span><span class="string">&quot;table_sub.txt&quot;</span><span class="punctuation">,</span>encoding <span class="operator">=</span> <span class="string">&#x27;UTF-8&#x27;</span><span class="punctuation">,</span>header <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h6 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h6><p>使用rvest包的encoding功能，自动匹配合适的字符类型</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">names</span><span class="punctuation">(</span>tables<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span> <span class="operator">&lt;-</span> rvest<span class="operator">::</span>repair_encoding<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>tables<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">View<span class="punctuation">(</span>tables<span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h2><h3 id="txt-amp-csv文件导出"><a href="#txt-amp-csv文件导出" class="headerlink" title="txt&amp;csv文件导出"></a>txt&amp;csv文件导出</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">write.table<span class="punctuation">(</span>x<span class="punctuation">,</span> file <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> append <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> <span class="built_in">quote</span> <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot; &quot;</span><span class="punctuation">,</span>eol <span class="operator">=</span> <span class="string">&quot;\n&quot;</span><span class="punctuation">,</span> na <span class="operator">=</span> <span class="string">&quot;NA&quot;</span><span class="punctuation">,</span> dec <span class="operator">=</span> <span class="string">&quot;.&quot;</span><span class="punctuation">,</span> row.names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span>col.names <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> qmethod <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;escape&quot;</span><span class="punctuation">,</span> <span class="string">&quot;double&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span>fileEncoding <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">write.csv<span class="punctuation">(</span>x<span class="punctuation">,</span>...<span class="punctuation">)</span> <span class="comment">#类似</span></span><br></pre></td></tr></table></figure><p>参数</p><ul><li>x: 要写入的对象，最好是矩阵或数据框。如果不是，它是试图强迫x到一个数据框。</li><li>file:  一个字符串命名文件或编写而打开的一个连接。 “ “表示输出到控制台。</li><li>append: 逻辑。只有当file是一个字符串才相关。<br> 如果TRUE，输出追加到文件<br> 如果FALSE，任何现有文件的名称被摧毁</li><li>quote:  一个逻辑值（TRUE或FALSE）或数字向量。如果TRUE，任何字符或因素列将用双引号包围。如果一个数值向量，其元素为引用的列的索引。在这两种情况下，行和列名报价，如果他们被写入。如果FALSE，并没有被引用。</li><li>sep: 字段分隔符字符串。每一行x中的值都被这个字符串分隔开。</li><li>row.names: 表示x的行名是否与x一起写的逻辑值，或者是写行名的字符向量</li><li>col.names: 类似上面。</li><li>其它参数请参考help()</li></ul><h1 id="访问数据库"><a href="#访问数据库" class="headerlink" title="访问数据库"></a>访问数据库</h1><blockquote><p>前面也有使用过RODBC包进行了数据库操作，这里不再重复导入。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>RODBC<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#查看内存使用及清理R工作空间中的内存变量</span></span><br><span class="line">gc<span class="punctuation">(</span><span class="punctuation">)</span>;rm<span class="punctuation">(</span><span class="built_in">list</span><span class="operator">=</span>ls<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h2><p>注：<a href="https://www.aliyundrive.com/s/JbF35sFLZQ5">请先添加或者确认odbc账户</a></p><h3 id="连接数据库-1"><a href="#连接数据库-1" class="headerlink" title="连接数据库"></a>连接数据库</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mycon<span class="operator">&lt;-</span>odbcConnect<span class="punctuation">(</span>dsn<span class="punctuation">,</span> uid <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> pwd <span class="operator">=</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span> ...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>属性</p><ul><li>dsn：数据源名称（mydsn）</li><li>uid：用户名</li><li>pwd：密码</li></ul><h3 id="查看连接情况"><a href="#查看连接情况" class="headerlink" title="查看连接情况"></a>查看连接情况</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">odbcGetInfo<span class="punctuation">(</span>mycon<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sqlSave<span class="punctuation">(</span>channel<span class="punctuation">,</span> dat<span class="punctuation">,</span> tablename <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> append <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">        rownames <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> colnames <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> verbose <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line">        safer <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> addPK <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> typeInfo<span class="punctuation">,</span> varTypes<span class="punctuation">,</span></span><br><span class="line">        fast <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> test <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> nastring <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>常用参数</p><ul><li>channel：odbc连接</li><li>dat：数据框数据</li><li>tablename：表名</li><li>append：逻辑值，是否在已存在的表后追加内容</li><li>rownames：逻辑值&#x2F;列名，设置是否显示行名</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio Part 5</title>
      <link href="/posts/218529466/"/>
      <url>/posts/218529466/</url>
      
        <content type="html"><![CDATA[<h1 id="多媒体播放与录制"><a href="#多媒体播放与录制" class="headerlink" title="多媒体播放与录制"></a>多媒体播放与录制</h1><h2 id="音频播放"><a href="#音频播放" class="headerlink" title="音频播放"></a>音频播放</h2><blockquote><p>通过MediaPlayer提供的方法，可以播放不同来源的音乐文件（res资源中、存储器中、或者网络）</p></blockquote><h3 id="基本流程"><a href="#基本流程" class="headerlink" title="基本流程"></a>基本流程</h3><ol><li>构建MediaPlayer对象</li></ol><p>对于不同来源的音频文件，采用不同的方法</p><p>（1）res资源</p><p>存储在应用程序apk中res目录下，使用<code>create()</code>方法创建MediaPlayer对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MediaPlayer mplayer=MediaPlayer.create(<span class="built_in">this</span>,R.raw.&lt;文件名&gt;)</span><br></pre></td></tr></table></figure><p>注：<code>create()</code>方法中已经封装了初始化及同步的方法，故不需要再进行<code>setDataSource()</code>初始化以及<code>prepare()</code>同步操作。</p><p>（2）存储</p><ul><li><code>new()</code>创建MediaPlayer对象</li><li>调用<code>setDataSource()</code>设置多媒体来源</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MediaPlayer mplayer=<span class="keyword">new</span> <span class="title class_">MediaPlayer</span>();</span><br><span class="line">mplayer.setDataSource(<span class="string">&#x27;PATH&#x27;</span>);</span><br><span class="line">mplayer.prepare();</span><br></pre></td></tr></table></figure><p>注：</p><ul><li>PATH&#x3D;Environment.getExternalStoragePublicDirectory(Environment.&lt;目录名&gt;)+”&#x2F;&lt;文件名&gt;.mp3”</li><li><a href="https://lptexas.top/posts/2046905900/#%E8%B0%83%E7%94%A8%E6%96%B9%E6%B3%95">更多方法见上一节</a></li></ul><h2 id="视频播放"><a href="#视频播放" class="headerlink" title="视频播放"></a>视频播放</h2><p>Android实现视频播放的应用程序有两种： </p><ul><li>MediaPlayer + SurfaceView<ul><li>此方法是基础，可以编程控制播 放器的大小和位置。（Widgets&#x2F;SurfaceView）</li></ul></li><li>MediaController + VideoView<ul><li>此方法使用起来更方便，但由于是Android封装好的类，播放器的大小、位置等都不接受编程控制。（widgets&#x2F;VideoView)</li></ul></li></ul><h3 id="MediaPlayer-SurfaceView"><a href="#MediaPlayer-SurfaceView" class="headerlink" title="MediaPlayer + SurfaceView"></a>MediaPlayer + SurfaceView</h3><h4 id="访问内部存储"><a href="#访问内部存储" class="headerlink" title="访问内部存储"></a>访问内部存储</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mSurfaceView = (SurfaceView) findViewById(R.id.surfaceView);</span><br><span class="line">mediaPlayer = <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>();</span><br><span class="line">mediaPlayer = MediaPlayer.create(<span class="built_in">this</span>,R.raw.video);</span><br><span class="line">mediaPlayer.setDisplay(sh);</span><br><span class="line">mediaPlayer.start();</span><br></pre></td></tr></table></figure><h4 id="访问外部存储"><a href="#访问外部存储" class="headerlink" title="访问外部存储"></a>访问外部存储</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mSurfaceView = (SurfaceView) findViewById(R.id.surfaceView);</span><br><span class="line">mediaPlayer = <span class="keyword">new</span> <span class="title class_">MediaPlayer</span>();</span><br><span class="line"><span class="comment">//设置数据源</span></span><br><span class="line">path=getExternalFilesDir(<span class="literal">null</span>)+<span class="string">&quot;/video.mp4&quot;</span></span><br><span class="line">mediaPlayer.setDataSource(path);</span><br><span class="line"><span class="comment">//设置sh</span></span><br><span class="line"><span class="type">SurfaceHolder</span> <span class="variable">sh</span> <span class="operator">=</span> mSurfaceView.getHolder();</span><br><span class="line">mediaPlayer.setDisplay(sh);</span><br><span class="line">mediaPlayer.prepare()</span><br><span class="line">mediaPlayer.start();</span><br></pre></td></tr></table></figure><h3 id="MediaController-VideoView"><a href="#MediaController-VideoView" class="headerlink" title="MediaController + VideoView"></a>MediaController + VideoView</h3><blockquote><p>VideoView是系统自带的视频播放控件，自带进度条、暂停、播 放等功能，使用起来比较简单。（Widgets&#x2F;VideoView）</p></blockquote><p>只需要为控件设置好播放路径，判断监听是否准备就绪，直接播 放即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新建对象</span></span><br><span class="line">mVideoView = (VideoView) findViewById(R.id.video);</span><br><span class="line">mMediaController = <span class="keyword">new</span> <span class="title class_">MediaController</span>(<span class="built_in">this</span>); <span class="comment">//调用构造器完成初始化</span></span><br><span class="line"><span class="comment">//设置</span></span><br><span class="line"><span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> getExternalFilesDir(<span class="literal">null</span>) + <span class="string">&quot;/sample.3gp&quot;</span>;</span><br><span class="line">mVideoView.setVideoPath(path);</span><br><span class="line">mMediaController.setMediaPlayer(mVideoView); <span class="comment">//关联控制器与视频</span></span><br><span class="line">mVideoView.setMediaController(mMediaController); <span class="comment">//关联视频与控制器</span></span><br><span class="line">mVideoView.start();</span><br></pre></td></tr></table></figure><h2 id="录音与拍照"><a href="#录音与拍照" class="headerlink" title="录音与拍照"></a>录音与拍照</h2><blockquote><p>Android系统提供了两种API用于实现录音功能：<code>AudioRecord</code>和 <code>MediaRecorder</code>。</p></blockquote><h3 id="MediaRecorder"><a href="#MediaRecorder" class="headerlink" title="MediaRecorder"></a>MediaRecorder</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mRecorder = <span class="keyword">new</span> <span class="title class_">MeidaRecorder</span>();</span><br></pre></td></tr></table></figure><h1 id="补充：设置监听的方法"><a href="#补充：设置监听的方法" class="headerlink" title="补充：设置监听的方法"></a>补充：设置监听的方法</h1><h2 id="利用已有类"><a href="#利用已有类" class="headerlink" title="利用已有类"></a>利用已有类</h2><p>直接利用现有的类，设置监听接口，绑定监听对象，重写监听方法。</p><h2 id="新建一个类"><a href="#新建一个类" class="headerlink" title="新建一个类"></a>新建一个类</h2><h1 id="退出方法"><a href="#退出方法" class="headerlink" title="退出方法"></a>退出方法</h1><p>实现保留数据，退出Activity的方法总结</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">startActivityForResult()</span><br><span class="line"></span><br><span class="line">finish()</span><br></pre></td></tr></table></figure><p>实现退出功能的方法</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.<span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="startActivityForResult"><a href="#startActivityForResult" class="headerlink" title="startActivityForResult"></a><a href="https://www.jianshu.com/p/75eccd29c229">startActivityForResult</a></h2><blockquote><p>第一个Activity打开第二个Activity，第二个Activity关闭后需要返回数据给第一个Activity。</p></blockquote><h3 id="重写onActivityResult-方法"><a href="#重写onActivityResult-方法" class="headerlink" title="重写onActivityResult()方法"></a>重写onActivityResult()方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span>&#123;</span><br><span class="line"><span class="built_in">super</span>.onActivityResult(requestCode,resultCode,data);</span><br><span class="line">    ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>当第二个Activity关闭时，返回第一个Activity，在第一个Activity中重写onActivityResult方法，数据可以从data中取出（以String类型和图片类型的数据为例）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> data.getExtras().getString(<span class="string">&quot;result&quot;</span>);<span class="comment">//得到新Activity 关闭后返回的数据</span></span><br><span class="line"><span class="type">Bitmap</span> <span class="variable">bitmap</span> <span class="operator">=</span> (Bitmap) data.getExtras().get(<span class="string">&quot;data&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="AndroidManifest详解"><a href="#AndroidManifest详解" class="headerlink" title="AndroidManifest详解"></a><a href="https://www.jianshu.com/p/3b5b89d4e154">AndroidManifest详解</a></h1><blockquote><p>从上到下</p></blockquote><h2 id="lt-manifest-gt-元素"><a href="#lt-manifest-gt-元素" class="headerlink" title="&lt;manifest&gt;元素"></a>&lt;manifest&gt;元素</h2><p>首先，所有的xml都必须包含&lt;manifest&gt;元素。这是文件的根节点。它必须要包含&lt;application&gt;元素，并且指明xmlns:android和package属性。</p><h3 id="xmlns-android"><a href="#xmlns-android" class="headerlink" title="xmlns:android"></a>xmlns:android</h3><p>这个属性定义了Android命名空间。必须设置成”<a href="https://link.jianshu.com/?t=http://schemas.android.com/apk/res/android">http://schemas.android.com/apk/res/android</a>“。不要手动修改。</p><h3 id="xmlns-tools"><a href="#xmlns-tools" class="headerlink" title="xmlns:tools"></a><a href="https://www.cnblogs.com/yejiurui/p/4962286.html">xmlns:tools</a></h3><p>定义了tools命名空间，tools可以告诉Android Studio，哪些属性在运行的时候是被忽略的，只在设计布局的时候有效。</p><h3 id="package"><a href="#package" class="headerlink" title="package"></a>package</h3><p>这是一个完整的Java语言风格包名。包名由英文字母（大小写均可）、数字和下划线组成。每个独立的名字必须以字母开头。</p><p>构建APK的时候，构建系统使用这个属性来做两件事：</p><ul><li>1、生成R.java类时用这个名字作为命名空间（用于访问APP的资源）<br> 比如：package被设置成com.sample.teapot，那么生成的R类就是：com.sample.teapot.R</li><li>2、用来生成在manifest文件中定义的类的完整类名。比如package被设置成com.sample.teapot，并且activity元素被声明成<activity android:name=".MainActivity">，完整的类名就是com.sample.teapot.MainActivity。</li></ul><p>包名也代表着唯一的application ID，用来发布应用。但是，要<em>注意</em>的一点是：在APK构建过程的最后一步，package名会被build.gradle文件中的applicationId属性取代。如果这两个属性值一样，那么万事大吉，如果不一样，那就要小心了。</p><h3 id="android-versionCode"><a href="#android-versionCode" class="headerlink" title="android:versionCode"></a>android:versionCode</h3><p>内部的版本号。用来表明哪个版本更新。这个数字不会显示给用户。显示给用户的是versionName。这个数字必须是整数。不能用16进制，也就是说不接受”0x1”这种参数</p><h3 id="android-versionName"><a href="#android-versionName" class="headerlink" title="android:versionName"></a>android:versionName</h3><p>显示给用户看的版本号。</p><h2 id="lt-application-gt-元素"><a href="#lt-application-gt-元素" class="headerlink" title="&lt;application&gt;元素"></a>&lt;application&gt;元素</h2><p>此元素描述了应用的配置。这是一个必备的元素，它包含了很多子元素来描述应用的组件，它的属性影响到所有的子组件。许多属性（例如icon、label、permission、process、taskAffinity和allowTaskReparenting）都可以设置成默认值。</p><h3 id="android-allowBackup"><a href="#android-allowBackup" class="headerlink" title="android:allowBackup"></a>android:allowBackup</h3><p>表示是否允许APP加入到备份还原的结构中。如果设置成false，那么应用就不会备份还原。默认值为true。</p><h3 id="android-dataExtractionRules"><a href="#android-dataExtractionRules" class="headerlink" title="android:dataExtractionRules"></a>android:dataExtractionRules</h3><p>应用可以将此属性设置为 XML 资源，在其中指定规则，以确定在备份或转移操作过程中您可以从设备复制哪些文件和目录。</p><p>如需了解 XML 文件的格式，请参阅<a href="https://developer.android.google.cn/about/versions/12/behavior-changes-12?hl=zh-cn#backup-restore">备份和恢复方面的变更</a>文档。</p><h3 id="android-fullBackupContent"><a href="#android-fullBackupContent" class="headerlink" title="android:fullBackupContent"></a>android:fullBackupContent</h3><p>这个属性指向了一个xml文件，该文件中包含了在进行自动备份时的完全备份规则。这些规则定义了哪些文件需要备份。此属性是一个可选属性。默认情况下，自动备份包含了大部分app文件。</p><h3 id="android-icon"><a href="#android-icon" class="headerlink" title="android:icon"></a>android:icon</h3><p>APP的图标，以及每个组件的默认图标。可以在组价中自定义图标。这个属性必须设置成一个引用，指向一个可绘制的资源，这个资源必须包含图片。系统不设置默认图标。</p><h3 id="android-roundIcon"><a href="#android-roundIcon" class="headerlink" title="android:roundIcon"></a>android:roundIcon</h3><p>圆形图标</p><h3 id="android-label"><a href="#android-label" class="headerlink" title="android:label"></a>android:label</h3><p>一个用户可读的标签，以及所有组件的默认标签。子组件可以用他们的label属性定义自己的标签，如果没有定义，那么就用这个标签。标签必须设置成一个字符串资源的引用。</p><h3 id="android-supportsRtl"><a href="#android-supportsRtl" class="headerlink" title="android:supportsRtl"></a>android:supportsRtl</h3><p>声明您的应用是否愿意支持从右到左 (RTL) 布局。</p><p>如果设为 <code>true</code> 并且 <a href="https://developer.android.google.cn/guide/topics/manifest/uses-sdk-element?hl=zh-cn#target"><code>targetSdkVersion</code></a> 设为 17 或更高版本，则系统会激活和使用各种 RTL API，以便您的应用可以显示 RTL 布局。如果设为 <code>false</code> 或者如果 <a href="https://developer.android.google.cn/guide/topics/manifest/uses-sdk-element?hl=zh-cn#target"><code>targetSdkVersion</code></a> 设为 16 或更低版本，则 RTL API 将被忽略或不起作用，无论与用户所选语言区域关联的布局方向为何（布局始终是从左到右），应用的行为都相同。</p><p>此属性的默认值为 <code>false</code>。</p><p>此属性是在 API 级别 17 中添加的。</p><h3 id="android-theme"><a href="#android-theme" class="headerlink" title="android:theme"></a>android:theme</h3><p>该属性定义了应用使用的主题的，它是一个指向style资源的引用。各个activity也可以用自己的theme属性设置自己的主题。</p><h3 id="tools-targetApi"><a href="#tools-targetApi" class="headerlink" title="tools:targetApi"></a><a href="https://www.jianshu.com/p/429f7541f897">tools:targetApi</a></h3><p>起到忽略警告的作用。</p><h2 id="lt-activity-gt-元素"><a href="#lt-activity-gt-元素" class="headerlink" title="&lt;activity&gt;元素"></a>&lt;activity&gt;元素</h2><p>该元素声明一个实现应用可视化界面的Activity（Activity类子类）。这是<application>元素中必要的子元素。所有Activity都必须由清单文件中的<activity>元素表示。任何未在该处声明的Activity对系统都不可见，并且永远不会被执行。</p><h3 id="android-name"><a href="#android-name" class="headerlink" title="android:name"></a>android:name</h3><p>Activity类的名称，是Activity类的子类。该属性值为完全限定类名称。</p><p><strong>没有默认值，必须指定该名称。</strong></p><h3 id="android-exported"><a href="#android-exported" class="headerlink" title="android:exported"></a>android:exported</h3><p>是Android中的四大组件Activity，Service，Provider，Receiver四大组件中都会有的一个属性。主要作用是：是否支持其它应用调用当前组件。默认值：如果包含有intent-filter默认值为true;没有intent-filter默认值为false。</p><h2 id="lt-intent-filter元素"><a href="#lt-intent-filter元素" class="headerlink" title="&lt;intent-filter元素"></a>&lt;intent-filter元素</h2><p>指明这个activity可以以什么样的意图(intent)启动。该元素有几个子元素可以包含。</p><h3 id="lt-action-gt-元素"><a href="#lt-action-gt-元素" class="headerlink" title="&lt;action&gt;元素"></a>&lt;action&gt;元素</h3><p>表示activity作为一个什么动作启动，android.intent.action.MAIN表示作为主activity启动。</p><h3 id="lt-category-gt-元素"><a href="#lt-category-gt-元素" class="headerlink" title="&lt;category&gt;元素"></a>&lt;category&gt;元素</h3><p>这是action元素的额外类别信息，android.intent.category.LAUNCHER表示这个activity为当前应用程序优先级最高的Activity。</p><blockquote><p><strong>转自</strong></p><p>作者：闪电的蓝熊猫<br>链接：<a href="https://www.jianshu.com/p/3b5b89d4e154">https://www.jianshu.com/p/3b5b89d4e154</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS要点梳理3（复习用）</title>
      <link href="/posts/674339786/"/>
      <url>/posts/674339786/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E8%A7%86%E5%8F%A3%E5%85%83%E6%A0%87%E7%AD%BE">这一章以概念为主，主要为摘录</a></p></blockquote><h1 id="多列布局"><a href="#多列布局" class="headerlink" title="多列布局"></a>多列布局</h1><h2 id="三列布局"><a href="#三列布局" class="headerlink" title="三列布局"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout#%E4%B8%89%E5%88%97%E5%B8%83%E5%B1%80">三列布局</a></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">column-count</span>: <span class="number">3</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建的这些列具有弹性的宽度 — 由浏览器计算出每一列分配多少空间。</p><h3 id="设置列宽"><a href="#设置列宽" class="headerlink" title="设置列宽"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout#%E8%AE%BE%E7%BD%AE%E5%88%97%E5%AE%BD">设置列宽</a></h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">column-width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>浏览器将按照你指定的宽度尽可能多的创建列；任何剩余的空间之后会被现有的列平分。这意味着你可能无法期望得到你指定宽度，除非容器的宽度刚好可以被你指定的宽度除尽。</p><h2 id="给多列增加样式"><a href="#给多列增加样式" class="headerlink" title="给多列增加样式"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout#%E7%BB%99%E5%A4%9A%E5%88%97%E5%A2%9E%E5%8A%A0%E6%A0%B7%E5%BC%8F">给多列增加样式</a></h2><ul><li>使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/column-gap"><code>column-gap</code></a> 改变列间间隙。</li><li>用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/column-rule"><code>column-rule</code></a> 在列间加入一条分割线。<ul><li>分割线本身并不占用宽度。它置于用 <code>column-gap</code> 创建的间隙内。</li></ul></li></ul><h2 id="列与内容折断"><a href="#列与内容折断" class="headerlink" title="列与内容折断"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout#%E5%88%97%E4%B8%8E%E5%86%85%E5%AE%B9%E6%8A%98%E6%96%AD">列与内容折断</a></h2><p>多列布局的内容被拆成碎块。和多页媒体上的内容表现大致一样 — 比如打印网页的时候。当你把内容放入多列布局容器内，内容被拆成碎块放进列中，内容折断（译者注：比如断词断句）使得这一效果可以实现。</p><p><img src="https://lptexas.top/img/post/image-20221024114328994.png" alt="image-20221024114328994"></p><h3 id="设置-break-inside"><a href="#设置-break-inside" class="headerlink" title="设置 break-inside"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout#%E8%AE%BE%E7%BD%AE_break-inside">设置 break-inside</a></h3><p>控制 multicol 和多页媒体中的内容拆分、折断。</p><p>如：规定box不会被拆分、折断。</p><p><img src="https://lptexas.top/img/post/image-20221024114517707.png" alt="image-20221024114517707"></p><h1 id="响应式设计"><a href="#响应式设计" class="headerlink" title="响应式设计"></a>响应式设计</h1><blockquote><p>用于适配不同尺寸的屏幕</p></blockquote><h2 id="历史上的网站布局"><a href="#历史上的网站布局" class="headerlink" title="历史上的网站布局"></a>历史上的网站布局</h2><ul><li>你可以创建一个“液态”站点，它会拉伸以充满整个浏览器视窗；<ul><li>缺点：液态站点导致了小屏幕上的设计会挤成一团（如下所示），以及大屏幕上难以阅读的很长的行长度。</li><li><img src="https://lptexas.top/img/post/mdn-rwd-liquid.png"></li></ul></li><li>或者是一个“固定宽度”站点，它有一个以像素计的固定尺寸。<ul><li>缺点：在比站点更窄的屏幕上会出现一个水平滚动条（如下所示），在大屏幕上的设计边缘还会有许多空白。</li><li><img src="C:\Users\Lappland\AppData\Roaming\Typora\typora-user-images/mdn-rwd-fixed.png"></li></ul></li></ul><h2 id="响应式设计之前的灵活布局"><a href="#响应式设计之前的灵活布局" class="headerlink" title="响应式设计之前的灵活布局"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1%E4%B9%8B%E5%89%8D%E7%9A%84%E7%81%B5%E6%B4%BB%E5%B8%83%E5%B1%80">响应式设计之前的灵活布局</a></h2><h2 id="响应式设计-1"><a href="#响应式设计-1" class="headerlink" title="响应式设计"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1">响应式设计</a></h2><p><strong>响应式 Web 设计不是单独的技术</strong>，它是描述 Web 设计的一种方式、或者是一组最佳实践的一个词，它是用来建立可以<strong>响应</strong>查看内容的设备的样式的一个词。</p><h2 id="媒介查询"><a href="#媒介查询" class="headerlink" title="媒介查询"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E5%AA%92%E4%BB%8B%E6%9F%A5%E8%AF%A2">媒介查询</a></h2><p>响应式设计仅仅是因为媒介查询才新兴起来的。</p><p>媒介查询允许我们运行一系列测试，例如用户的屏幕是否大于某个宽度或者某个分辨率，并将 CSS 选择性地适应用户的需要应用在样式化页面上。</p><h2 id="灵活网格"><a href="#灵活网格" class="headerlink" title="灵活网格"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E7%81%B5%E6%B4%BB%E7%BD%91%E6%A0%BC">灵活网格</a></h2><p>响应式站点不只是在断点之间改变它们的布局，它们是建立在灵活网格上的。一个灵活网格意味着你不需要适配每个可能使用的设备尺寸，然后为其建立一个精确到像素级的适配布局</p><h2 id="现代布局技术"><a href="#现代布局技术" class="headerlink" title="现代布局技术"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E7%8E%B0%E4%BB%A3%E5%B8%83%E5%B1%80%E6%8A%80%E6%9C%AF">现代布局技术</a></h2><p>现代布局方式，例如<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Multiple-column_Layout">多栏布局</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox">伸缩盒</a>和<a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids">网格</a>默认是响应式的。</p><p>它们都假设你在尽力创建一个可伸缩网格，而且给了你更容易这样做的方式。</p><h3 id="伸缩盒"><a href="#伸缩盒" class="headerlink" title="伸缩盒"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E4%BC%B8%E7%BC%A9%E7%9B%92">伸缩盒</a></h3><p>在伸缩盒中，初始的行为是，弹性的物件将参照容器里面的空间的大小，缩小和分布物件之间的空间。通过更改<code>flex-grow</code>和 <code>flex-shrink</code>的值，你可以指示在物件遇到周围有更多或者更少的空间的情况下，你所期望的物件表现。</p><h3 id="CSS-网格"><a href="#CSS-网格" class="headerlink" title="CSS 网格"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#css_%E7%BD%91%E6%A0%BC">CSS 网格</a></h3><p>在 CSS 网格布局中，<code>fr</code>单位许可了跨网格轨道可用空间的分布。</p><p><strong>备注：</strong> 网格布局版本的代码要更简单，因为我们可以在.wrapper 上定义列</p><h2 id="响应式图像"><a href="#响应式图像" class="headerlink" title="响应式图像"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E5%93%8D%E5%BA%94%E5%BC%8F%E5%9B%BE%E5%83%8F">响应式图像</a></h2><p>最简单的处理响应式图像的方式是在 Marcotte 的早年的关于响应式设计的文章上所描述的那样。基本来说，你可以用一张有着所需最大尺寸的图像。然后缩放它。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>:</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>弊端</p><ul><li>图像有可能会显示得比它的原始尺寸小很多，以至于<strong>浪费带宽</strong>——一个移动端用户会下载几倍于他们在浏览器窗口中实际看到的大小的图像</li><li>你可能<strong>不想</strong>在<strong>移动端</strong>和<strong>桌面端</strong>有<strong>相同的图像宽高比例</strong></li><li>认识到<strong>移动端</strong>更小尺寸的图像的你也许会希望同时<strong>展示一张不同的图像</strong>，一张在小一点的屏幕上更容易理解的图像，这些东西不能简单通过缩放图像解决。</li></ul><p>解决</p><ul><li>响应式图像，使用了<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/picture"><code>&lt;picture&gt;</code></a>元素和<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img"><code>&lt;img&gt;</code></a> <code>srcset</code>和<code>sizes</code> 特性，解决了这两个问题。你可以提供附带着“提示”（描述图像最适合的屏幕尺寸和分辨率的元数据）的多种尺寸，浏览器将会选择对设备最合适的图像，以确保用户下载尺寸适合他们使用的设备的图像。</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images">响应式图片指南</a></li></ul><h2 id="响应式排版"><a href="#响应式排版" class="headerlink" title="响应式排版"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E5%93%8D%E5%BA%94%E5%BC%8F%E6%8E%92%E7%89%88">响应式排版</a></h2><h3 id="使用视口单位实现响应式排版"><a href="#使用视口单位实现响应式排版" class="headerlink" title="使用视口单位实现响应式排版"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E4%BD%BF%E7%94%A8%E8%A7%86%E5%8F%A3%E5%8D%95%E4%BD%8D%E5%AE%9E%E7%8E%B0%E5%93%8D%E5%BA%94%E5%BC%8F%E6%8E%92%E7%89%88">使用视口单位实现响应式排版</a></h3><p>一个有趣的方式是使用视口单位<code>vw</code>来实现响应式排版。<code>1vw</code>等同于视口宽度的百分之一，即如果你用<code>vw</code>来设定字体大小的话，字体的大小将总是随视口的大小进行改变。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">6vw</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>问题在于，当做上面的事情的时候，因为文本总是随着视口的大小改变大小，用户失去了放缩任何使用<code>vw</code>单位的文本的能力。<strong>所以你永远都不要只用 viewport 单位设定文本。</strong></p><p>这里有一个解决方法，它使用了<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/calc"><code>calc()</code></a>，如果你将<code>vw</code>单位加到了使用固定大小（例如<code>em</code>或者<code>rem</code>）的值组，那么文本仍然是可放缩的。基本来说，是<code>vw</code>加在了放缩后的值上。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="built_in">calc</span>(<span class="number">1.5rem</span> + <span class="number">3vw</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就是说，我们只需要指定标题的字体大小一次，而不是为移动端设定它，然后再在媒介查询中重新定义它。字体会在你增加视口大小的时候逐渐增大。</p><h2 id="视口元标签"><a href="#视口元标签" class="headerlink" title="视口元标签"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E8%A7%86%E5%8F%A3%E5%85%83%E6%A0%87%E7%AD%BE">视口元标签</a></h2><p>如果你看看一张响应式页面的 HTML 源代码，你通常将会在文档的<code>&lt;head&gt;</code>看到下面的<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta"><code>&lt;meta&gt;</code></a>标签。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attribute">content</span>=<span class="string">&quot;width=device-width,initial-scale=1&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>这个元标签告诉移动端浏览器，它们应该将视口宽度设定为设备的宽度，将文档放大到其预期大小的 100%，在移动端以你所希望的为移动优化的大小展示文档。</p><p>为何需要这个？因为移动端浏览器倾向于在它们的视口宽度上说谎。</p><p><strong>原因</strong></p><p>这个元标签的存在，是由于原来 iPhone 发布以后，人们开始在小的手机屏幕上阅览网页，而大多数站点未对移动端做优化的缘故。移动端浏览器因此会把视口宽度设为 960 像素，并以这个宽度渲染页面，结果展示的是桌面布局的缩放版本。其他的移动端浏览器（例如谷歌安卓上的）也是这么做的。用户可以在站点中放大、移动，查看他们感兴趣的那部分，但是这看起来很不舒服。如果你不幸遇到了一个没有响应式设计的网站，今天你还会看到这种情况。</p><p><strong>所以你应该在你的文档头部*总是*包含上面那行 HTML。</strong></p><p>和视口元标签一起，你可以使用另外几个设定，但大体说来，上面那行就是你想要使用的。</p><ul><li><code>initial-scale</code>：设定了页面的初始缩放，我们设定为 1。</li><li><code>height</code>：特别为视口设定一个高度。</li><li><code>minimum-scale</code>：设定最小缩放级别。</li><li><code>maximum-scale</code>：设定最大缩放级别。</li><li><code>user-scalable</code>：如果设为<code>no</code>的话阻止缩放。</li></ul><p><strong>备注：</strong> 有一个 CSS @规则是被设计用来替换掉视口元标签的——<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@viewport">@viewport</a>——但是浏览器对它的支持太差了。它是在 IE 和 Edge 中引入的，但自从 Chromium 内核的 Edge 发布以后，它就不再受到 Edge 浏览器支持了。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Responsive_Design#%E5%B0%8F%E7%BB%93">小结</a></h2><p>响应式设计指的是一个响应浏览环境的网页或者应用设计。它涵盖了很多 CSS 和 HTML 的功能和技术，现在基本上就是我们默认建设网站的方式。想一下你在手机上访问的网站，遇到一个缩放的桌面版网站，或者你需要向侧边滚动来寻找东西的网站可能是相当不寻常的。这是因为 Web 已经迁移到了这种响应式设计的方式上。</p><p>在这些课里学到的布局方式的帮助下，实现响应式设计也变得愈加简单。如果你今天新近了解 Web 开发，那么你与响应式设计早期相比，手边有多得多的工具。因而，你有必要检查下你所引用的任何材料的年纪。尽管历史上的文章仍然有用，现代的 CSS 和 HTML 的使用让创建一个优雅且实用的设计变得远远更加容易，且无论你的访客使用什么设备浏览网站。</p><h1 id="媒体查询入门指南"><a href="#媒体查询入门指南" class="headerlink" title="媒体查询入门指南"></a>媒体查询入门指南</h1><blockquote><p><strong>CSS 媒体查询</strong>为你提供了一种应用 CSS 的方法，仅在浏览器和设备的环境与你指定的规则相匹配的时候 CSS 才会真的被应用</p></blockquote><h2 id="媒体查询语法"><a href="#媒体查询语法" class="headerlink" title="媒体查询语法"></a>媒体查询语法</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> media-type <span class="keyword">and</span> (media-feature-rule) &#123;</span><br><span class="line">  <span class="comment">/* CSS rules go here */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>部分组成：</p><ul><li>media-type：一个媒体类型，告诉浏览器这段代码是用在什么类型的媒体上的（例如印刷品或者屏幕）；</li><li>media-feature-rule：一个媒体表达式，是一个被包含的 CSS 生效所需的规则或者测试；</li><li>一组 CSS 规则，会在测试通过且媒体类型正确的时候应用。</li></ul><h3 id="media-type"><a href="#media-type" class="headerlink" title="media-type"></a>media-type</h3><p>你可以指定的媒体类型为：</p><ul><li><code>all</code></li><li><code>print</code> <ul><li>打印</li></ul></li><li><code>screen</code></li><li><code>speech</code></li></ul><p><strong>备注：</strong></p><ul><li>这里的媒体类型是和所谓的<a href="https://developer.mozilla.org/zh-CN/docs/Glossary/MIME_type">MIME type</a>不同的东西。</li><li>在第三级媒体查询规范中，定义了其他一些媒体类型，它们已经不被建议使用，而且应该被避免使用。</li><li>媒体类型是可选的，如果你没有在媒体查询中指示一个媒体类型的话，那么媒体查询默认会设为用于全部媒体类型<code>all</code>。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言3</title>
      <link href="/posts/1650501612/"/>
      <url>/posts/1650501612/</url>
      
        <content type="html"><![CDATA[<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><h2 id="求矩阵特征值和特征向量的函数"><a href="#求矩阵特征值和特征向量的函数" class="headerlink" title="求矩阵特征值和特征向量的函数"></a><a href="http://www.tjxzj.net/1616.html">求矩阵特征值和特征向量的函数</a></h2><p><a href="https://zhuanlan.zhihu.com/p/104980382">矩阵特征值和特征向量介绍</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eigen<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数</p><ul><li>x：矩阵</li></ul><h2 id="将列表转换为向量"><a href="#将列表转换为向量" class="headerlink" title="将列表转换为向量"></a><a href="https://vimsky.com/examples/usage/converting-a-list-to-vector-in-r-language-unlist-function.html">将列表转换为向量</a></h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unlist<span class="punctuation">(</span>x<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数</p><ul><li>x：列表</li></ul><h2 id="修改变量名"><a href="#修改变量名" class="headerlink" title="修改变量名"></a><a href="https://blog.csdn.net/qq_23031939/article/details/79432864">修改变量名</a></h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rename<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">names</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">colnames<span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line">rownames<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h1 id="R语言常用函数"><a href="#R语言常用函数" class="headerlink" title="R语言常用函数"></a>R语言常用函数</h1><h2 id="字符串处理函数"><a href="#字符串处理函数" class="headerlink" title="字符串处理函数"></a>字符串处理函数</h2><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>nchar(x）</td><td>计算x中的字符数量</td></tr><tr><td>substr(x, start, stop)</td><td>提取或替换一个字符向量中的子串</td></tr><tr><td>grep(pattern, x, ignore.case &#x3D; FALSE, perl &#x3D; FALSE, value &#x3D; FALSE, fixed &#x3D;  FALSE, useBytes &#x3D; FALSE, invert &#x3D; FALSE)</td><td>字符串查询，返回结果为匹配项的下标。</td></tr><tr><td>sub(pattern, replacement, x,  ignore.case &#x3D; FALSE, fixed&#x3D;FALSE)</td><td>对第一个满足条件的匹配做替换，原字符串并没有改变，要改变原变量只能通过再赋值的方式。</td></tr><tr><td>gsub(pattern, replacement, x, ignore.case &#x3D; FALSE, perl &#x3D; FALSE, fixed &#x3D; FALSE, useBytes &#x3D; FALSE)</td><td>把所有满足条件的匹配都做替换，原字符串并没有改变，要改变原变量只能通过再赋值的方式。</td></tr><tr><td>strsplit(x, split, fixed &#x3D; FALSE, perl &#x3D; FALSE, useBytes &#x3D; FALSE)</td><td>在split处分割字符向量x中的元素。</td></tr><tr><td>paste (…, sep &#x3D;  “ “, collapse &#x3D; NULL)</td><td>连接字符串，分隔符为sep</td></tr></tbody></table><h3 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep<span class="punctuation">(</span>pattern<span class="punctuation">,</span> x<span class="punctuation">,</span> ignore.case <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> perl <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> value <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> fixed <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> useBytes <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> invert <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数解释</p><p>（1）pattern: 字符串类型，正则表达式，指定搜索模式，当将fixed参数设置为TRUE时，也可以是一个待搜索的字符串。</p><p>（2）x : 字符串向量，用于被搜索的字符串。</p><p>（3）ignore.case: 是否忽略大小写。为FALSE时，大小写敏感，为TRUE时，忽略大小写。</p><p>（4）perl: 用于指定是否Perl兼容的正则表达式</p><p>（5）value：逻辑值，为FALSE时，grep返回搜索结果的位置信息，为TRUE时，返回结果位置的值。</p><p>（6）fixed:逻辑值，为TRUE时，按pattern指定的字符串进行原样搜索，且会忽略产生冲突的参数设置。</p><p>（7） useBytes：逻辑值，如果为真，则按字节进行匹配，而不是按字符进行匹配。</p><p>（8）invert：逻辑值，如果为TRUE，则返回未匹配项的索引或值。</p><h3 id="替换"><a href="#替换" class="headerlink" title="替换"></a><a href="https://andyfree96.github.io/2021/04/24/b915a73e/">替换</a></h3><blockquote><p><code>sub()</code>与<code>gsub()</code>函数</p></blockquote><p>区别</p><p>两者在使用上没有区别，但在结果上<code>sub()</code>只替换第一个匹配到的内容，而<code>gsub()</code>为全局替换。</p><h4 id="sub"><a href="#sub" class="headerlink" title="sub()"></a>sub()</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sub<span class="punctuation">(</span>pattern<span class="punctuation">,</span> replacement<span class="punctuation">,</span> x<span class="punctuation">,</span> ignore.case <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> perl <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> fixed <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> useBytes <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数详解</p><ul><li><code>pattern</code>：匹配模式，可以是文本段（<code>fixed = FALSE</code>）或正则表达式</li><li><code>replacement</code>：用于替换的字符串或字符向量</li><li><code>x</code>：被替换的字符串或字符向量</li><li><code>ignore.case</code>：是否区分大小写</li><li><code>perl</code>：是否使用 perl 正则表达式</li><li><code>fixed</code>：若为 <code>TRUE</code>，<code>pattern</code> 当作字符串而不是正则表达式</li><li><code>useBytes</code>：若为 <code>TRUE</code> 进行字节与字节匹配，而不是默认的字符与字符匹配</li></ul><h4 id="gsub"><a href="#gsub" class="headerlink" title="gsub()"></a>gsub()</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gsub<span class="punctuation">(</span>pattern<span class="punctuation">,</span> replacement<span class="punctuation">,</span> x<span class="punctuation">,</span> ignore.case <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> perl <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> fixed <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> useBytes <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="分割"><a href="#分割" class="headerlink" title="分割"></a>分割</h3><h4 id="strsplit"><a href="#strsplit" class="headerlink" title="strsplit()"></a>strsplit()</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strsplit<span class="punctuation">(</span>x<span class="punctuation">,</span> split<span class="punctuation">,</span> fixed <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">,</span> perl <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">,</span> useBytes <span class="operator">=</span> <span class="built_in">F</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数详解</p><ul><li>x：字符串格式向量，函数依次对向量的每个元素进行拆分，分割结果为一个列表。</li><li>split：为拆分位置的字串向量，即在哪个字串处开始拆分；该参数默认是正则表达式匹配。</li><li>fixed &#x3D; T：表示是用普通文本匹配或者正则表达式的精确匹配。</li><li>perl：其设置和perl的版本有关，表示可以使用perl语言里面的正则表达式。如果正则表达式过长，则可以考虑使用perl的正则来提高运算速度。</li><li>useBytes：是否逐字节进行匹配，默认为FALSE，表示是按字符匹配而不是按字节进行匹配。</li></ul><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><h4 id="paste"><a href="#paste" class="headerlink" title="paste()"></a>paste()</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paste <span class="punctuation">(</span>...<span class="punctuation">,</span> sep <span class="operator">=</span> <span class="string">&quot; &quot;</span><span class="punctuation">,</span> collapse <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数详解</p><ul><li>… ： 表示要组合的任何数量的参数，如：<code>paste(c(1:5),&quot;a&quot;,&quot;b&quot;)</code>。   </li><li>sep ： 表示参数之间的分隔符。它是任选的。  </li><li>collapse ： 用于消除两个字符串之间的空间。但不是在一个字符串的两个词的空间。</li></ul><h2 id="数学函数"><a href="#数学函数" class="headerlink" title="数学函数"></a><a href="https://blog.csdn.net/qq_35242986/article/details/72956755">数学函数</a></h2><h3 id="统计函数"><a href="#统计函数" class="headerlink" title="统计函数"></a>统计函数</h3><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>mean(x)</td><td>平均数</td></tr><tr><td>median(x)</td><td>中位数</td></tr><tr><td>sd(x)</td><td>标准差</td></tr><tr><td>var(x)</td><td>方差</td></tr><tr><td>quantile(x,probs)</td><td>求分位数。其中x为待求分位数的数值型向量，probs为一个由[0,1]之间的概率值组成的数值向量</td></tr><tr><td>range(x)</td><td>求值域</td></tr><tr><td>sum(x)</td><td>求和</td></tr><tr><td>min(x)</td><td>求最小值</td></tr><tr><td>max(x)</td><td>求最大值</td></tr></tbody></table><h3 id="概率函数"><a href="#概率函数" class="headerlink" title="概率函数"></a>概率函数</h3><table><thead><tr><th>分布名称</th><th>缩写</th><th>分布的参数名称及默认值</th></tr></thead><tbody><tr><td>Beta分布</td><td>beta</td><td>shape1,shape2</td></tr><tr><td>Logistic分布</td><td>logis</td><td>location&#x3D;0,scale&#x3D;1</td></tr><tr><td>二项分布</td><td>binom</td><td>size,prob</td></tr><tr><td>多项分布</td><td>multinom</td><td>size,prob</td></tr><tr><td>柯西分布</td><td>cauchy</td><td>location&#x3D;0,scale&#x3D;1</td></tr><tr><td>负二项分布</td><td>nbinom</td><td>size,prob</td></tr><tr><td>（非中心）卡方分布</td><td>chisq</td><td>df</td></tr><tr><td>正态分布</td><td>norm</td><td>mean&#x3D;0,sd&#x3D;1</td></tr><tr><td>指数分布</td><td>exp</td><td>rate&#x3D;1</td></tr><tr><td>泊松分布</td><td>pois</td><td>lambda</td></tr><tr><td>F分布</td><td>f</td><td>df1,df2</td></tr></tbody></table><h2 id="apply家族"><a href="#apply家族" class="headerlink" title="apply家族"></a><a href="https://blog.csdn.net/fancy_koi/article/details/113852348">apply家族</a></h2><h3 id="apply-函数"><a href="#apply-函数" class="headerlink" title="apply()函数"></a>apply()函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply<span class="punctuation">(</span>X<span class="punctuation">,</span> MARGIN<span class="punctuation">,</span> FUN<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li>x：一个数组或者矩阵</li><li>MARGIN：两种数值（1或2），决定对那个维度进行函数计算<ul><li>1：基于行</li><li>2：基于列</li><li>c(1,2)：同时对行和列</li></ul></li><li>FUN：函数操作，内置函数有mean、medium、sum等</li></ul><h3 id="lapply-函数"><a href="#lapply-函数" class="headerlink" title="lapply()函数"></a>lapply()函数</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lapply<span class="punctuation">(</span>X<span class="punctuation">,</span>FUN<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li>X：一个向量或者一个对象</li><li>FUN：函数操作</li></ul><h3 id="sapply-函数"><a href="#sapply-函数" class="headerlink" title="sapply()函数"></a>sapply()函数</h3><blockquote><p>sapply一次性对一堆数据执行某个函数</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sapply<span class="punctuation">(</span>X<span class="punctuation">,</span> FUN<span class="punctuation">,</span> …<span class="punctuation">,</span> simplify <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> USE.NAMES <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li>X：填向量或者向量的表达式</li><li>FUN：填某个函数，这个函数会应用于每个X</li><li>… ：接收多个函数</li><li>simplify：默认TRUE, TRUE时返回值为向量或矩阵，simpilfy &#x3D; “array”时返回array或rank。</li></ul><h3 id="mapply-函数"><a href="#mapply-函数" class="headerlink" title="mapply()函数"></a>mapply()函数</h3><blockquote><p>支持传入两个以上的列表。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mapply<span class="punctuation">(</span>FUN<span class="punctuation">,</span> …<span class="punctuation">,</span> MoreArgs <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> SIMPLIFY <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> USE.NAMES <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li>FUN：函数操作</li><li>… ：可以接收多个数据</li><li>MoreArgs: 参数列表</li><li>SIMPLIFY: 是否数组化，当值array时，输出结果按数组进行分组</li><li>USE.NAMES: 如果X为字符串，TRUE设置字符串为数据名，FALSE不设置。比如，比较3个向量大小，按索引顺序取较大的值。</li></ul><h1 id="R语言编程基础"><a href="#R语言编程基础" class="headerlink" title="R语言编程基础"></a>R语言编程基础</h1><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><blockquote><p>if语句类似c语言，不做介绍</p></blockquote><h3 id="R语言简化判断语句"><a href="#R语言简化判断语句" class="headerlink" title="R语言简化判断语句"></a>R语言简化判断语句</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifelse<span class="punctuation">(</span>condition<span class="punctuation">,</span>statement1<span class="punctuation">,</span>statement2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数说明</p><ul><li>condition：判断条件</li><li>statement1：条件成立时执行</li><li>statement2：条件不成立时执行</li></ul><h3 id="switch分支"><a href="#switch分支" class="headerlink" title="switch分支"></a>switch分支</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">switch</span><span class="punctuation">(</span><span class="built_in">expression</span><span class="punctuation">,</span> case1<span class="punctuation">,</span> case2<span class="punctuation">,</span> case3....<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数详解</p><ul><li>如果 <code>expression</code> 的值不是字符串，那么它被强制为整数。</li><li>在交换机中可以有任意数量的 <code>case </code>语句。 每个案例后面都跟要比较的值和冒号。可以为list列表，可以用有名定义。如果表达式返回值在1到length(list)之间，则返回列表相应位置的值，否则返回“NULL”值。当list是有名定义，表达式等于变量名时，返回变量名对应的值，否则返回“NULL”值。<ul><li>如：</li><li>y &lt;- “fruit”<br>switch(y, fruit &#x3D; “apple”, vegetable &#x3D; “broccoli”, meat &#x3D; “beef”)  </li><li>输出fruit对应的值“apple”</li></ul></li><li>如果整数的值在 <code>1 </code>和 <code>nargs() - 1</code>（参数的最大数目）之间，则对 <code>case </code>条件的相应元素求值并返回结果。</li><li>如果表达式求值为字符串，那么该字符串与元素的名称匹配。</li><li>如果有多个匹配，则返回第一个匹配元素。</li><li>无默认参数可用。</li><li>在没有匹配的情况下，如果有一个未命名的元素…它的值被返回。 （如果有多个这样的参数，则返回错误。）</li></ul><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a><a href="https://www.sohu.com/a/251825216_100261403">循环语句</a></h2><h3 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="punctuation">(</span>name <span class="keyword">in</span> expr1<span class="punctuation">)</span> <span class="punctuation">&#123;</span>expr2<span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li>name是循环变量，在每次循环时从expr1中顺序取值，</li><li>expr1是一个向量表达式（通常是个序列，如1:20），</li><li>expr2通常是一组表达式，当name的值包含在expr1中时，执行expr2的语句，否则循环将终止。</li></ul><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span><span class="punctuation">(</span>cond<span class="punctuation">)</span><span class="punctuation">&#123;</span>expr<span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>参数解释</p><ul><li>cond为条件表达式，while会一直循环至条件不成立</li><li>expr为条件成立时执行的语句</li></ul><h3 id="repeat-break循环"><a href="#repeat-break循环" class="headerlink" title="repeat-break循环"></a>repeat-break循环</h3><blockquote><p>repeat是无限循环语句，并且会在达到循环条件后，使用break语句直接跳出循环。</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">repeat</span><span class="punctuation">&#123;</span></span><br><span class="line">expr1</span><br><span class="line">    <span class="keyword">if</span><span class="punctuation">(</span>cond<span class="punctuation">)</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">    expr2</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="自定义函数"><a href="#自定义函数" class="headerlink" title="自定义函数"></a>自定义函数</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myfunction <span class="operator">&lt;-</span> <span class="keyword">function</span><span class="punctuation">(</span>arglist<span class="punctuation">)</span> <span class="punctuation">&#123;</span></span><br><span class="line">statements</span><br><span class="line"><span class="built_in">return</span><span class="punctuation">(</span>object<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>参数说明</p><ul><li>myfunction：为函数名称</li><li>arglist：为函数中的参数列表</li><li>大括号{}内的语句为函数体<ul><li>异常处理：输入的数据不能满足函数计算的要求，或者类型不符，这时应设计相应的机制提示哪个地方出现错误。</li><li>运算过程：包括具体的运算步骤。运算过程和该函数要完成的功能有关。</li><li>返回值：用return函数给出，返回对象的数据类型是任意的，从标量到列表皆可。函数在内部处理过程中，一旦遇到return，就会终止运行，将return内的数据作为函数处理的结果给出。</li></ul></li><li>函数参数是在函数体内部将要处理的值，函数中的对象只在函数内部使用</li></ul><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><blockquote><p>在函数定义中设置默认值</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span><span class="punctuation">(</span>x<span class="operator">=</span><span class="string">&quot;0&quot;</span><span class="punctuation">,</span>y<span class="punctuation">,</span>...<span class="punctuation">)</span><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>设置x的默认值为0，y为必填，…表示缺省</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio Part 4</title>
      <link href="/posts/2046905900/"/>
      <url>/posts/2046905900/</url>
      
        <content type="html"><![CDATA[<h1 id="页面跳转"><a href="#页面跳转" class="headerlink" title="页面跳转"></a>页面跳转</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//切换页面</span></span><br><span class="line"><span class="comment">//0</span></span><br><span class="line">startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>,SecondActivity.class););</span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="type">Intent</span> <span class="variable">intent1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>,SecondActivity.class);</span><br><span class="line">startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>,SecondActivity.class));</span><br><span class="line"><span class="comment">//2</span></span><br><span class="line"><span class="type">Intent</span> <span class="variable">intent2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">intent2.setClass(<span class="built_in">this</span>,SecondActivity.class);</span><br><span class="line">startActivity(intent2);</span><br></pre></td></tr></table></figure><h1 id="实现多监听器"><a href="#实现多监听器" class="headerlink" title="实现多监听器"></a>实现多监听器</h1><blockquote><p>点击不同按钮，触发不同的点击事件，在重写方法时，使用逻辑判断。</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123; </span><br><span class="line"><span class="comment">//跳转回第一个页面</span></span><br><span class="line">        <span class="keyword">if</span>(view == buttonto1st)&#123;</span><br><span class="line">        <span class="type">Intent</span> <span class="variable">intent2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">        intent2.setClass(<span class="built_in">this</span>,MainActivityToSec.class);</span><br><span class="line">        startActivity(intent2);&#125;</span><br><span class="line">        <span class="comment">//跳转百度</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(view == buttonbd)&#123;</span><br><span class="line">        startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>,MainActivityToSec.class));</span><br><span class="line">        Uri uri=Uri.parse(<span class="string">&quot;https://www.baidu.com&quot;</span>);</span><br><span class="line">        startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(Intent.ACTION_VIEW,uri));&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="补充：Bundle类"><a href="#补充：Bundle类" class="headerlink" title="补充：Bundle类"></a>补充：Bundle类</h1><blockquote><p>Bundle类是用于为字符串与某组件对象建立映射关系的组件。</p></blockquote><h2 id="Bundle与Intent"><a href="#Bundle与Intent" class="headerlink" title="Bundle与Intent"></a>Bundle与Intent</h2><blockquote><p>Bundle组件与Intent配合使用，可在不同的Activity之间传递数据。</p></blockquote><h2 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h2><p>将字符串用<code>键值对</code>的形式存放在Bundle对象中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">putString(String key,String value)</span><br></pre></td></tr></table></figure><p>移除指定的键值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">remove(String key)</span><br></pre></td></tr></table></figure><p>获取指定键值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getString(String key)</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221020185341060.png" alt="image-20221020185341060"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221020185403045.png" alt="image-20221020185403045"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221020185446243.png" alt="image-20221020185446243"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221020185551352.png" alt="image-20221020185551352"></p><h1 id="补充：Toast组件"><a href="#补充：Toast组件" class="headerlink" title="补充：Toast组件"></a>补充：Toast组件</h1><p>在Android 11中Toast行为发生变更</p><ul><li>禁止后台自定义Toast</li><li>text toast不允许自定义</li><li>setView()被启用</li><li>新增Toast.Callback回调</li></ul><p>官方推荐使用<code>Snackbar</code>来代表</p><h1 id="Snackbar组件"><a href="#Snackbar组件" class="headerlink" title="Snackbar组件"></a><a href="https://blog.csdn.net/qq_19431333/article/details/52862348">Snackbar组件</a></h1><p><img src="https://lptexas-cub.github.io/img/post/image-20221020194453485.png" alt="image-20221020194453485"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221020194513221.png" alt="image-20221020194513221"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221020194902706.png" alt="image-20221020194902706"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221020194940000.png" alt="image-20221020194940000"></p><h1 id="dialog组件"><a href="#dialog组件" class="headerlink" title="dialog组件"></a><a href="https://juejin.cn/post/7012069081943638023">dialog组件</a></h1><blockquote><p>对话框</p></blockquote><p>带有边框、标题、独立存在的容器，用户能够进行交互。</p><h2 id="创建AlertDialog步骤"><a href="#创建AlertDialog步骤" class="headerlink" title="创建AlertDialog步骤"></a>创建AlertDialog步骤</h2><ol><li>创建<code>AlertDialog.Builder</code>对象</li><li>调用<code>Builder</code>对象的<code>setTitle方法</code>设置标题，<code>seticon方法</code>设置图标</li><li>调用<code>Builder</code>对象中的其它相关方法<ol><li>setMessage</li><li>setItems</li><li>setSingleChoiceItems</li><li>setMultiChoiceItems</li><li>setAdapter</li><li>setView</li><li>…</li></ol></li><li>调用setPositionButton、setNegativeButton、setNeutralButton方法设置按钮</li><li>调用<code>create()</code>方法创建<code>AlertDialog</code>对象</li><li>调用<code>AlertDialog</code>对象的show()方法将对话框显示出来</li></ol><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>DialogActivity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DialogActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener&#123;</span><br><span class="line">    Button dialogbtn1;</span><br><span class="line">    Button dialogbtn2;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_dialog);</span><br><span class="line">        dialogbtn1=(Button) findViewById(R.id.dialogbutton1);</span><br><span class="line">        dialogbtn2=(Button) findViewById(R.id.dialogbutton2);</span><br><span class="line">        dialogbtn1.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">        dialogbtn2.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">            AlertDialog.<span class="type">Builder</span> <span class="variable">dialog</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder( DialogActivity.<span class="built_in">this</span>);</span><br><span class="line">        <span class="keyword">if</span>(view == dialogbtn1)&#123;</span><br><span class="line">            dialog.setTitle(<span class="string">&quot;对话框&quot;</span>);</span><br><span class="line">            dialog.setIcon(R.drawable.gawr_gura);</span><br><span class="line">            dialog.setMessage(<span class="string">&quot;消息对话框示例&quot;</span>);</span><br><span class="line">            dialog.setPositiveButton(<span class="string">&quot;确定&quot;</span>,<span class="keyword">new</span> <span class="title class_">okClick</span>());</span><br><span class="line">            dialog.create();</span><br><span class="line">            dialog.show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">class</span> <span class="title class_">okClick</span> <span class="keyword">implements</span> <span class="title class_">DialogInterface</span>.OnClickListener&#123;</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialog,<span class="type">int</span> which)</span>&#123;</span><br><span class="line">                dialog.cancel();</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>shift+alt+enter 补全包</p></blockquote><h1 id="Menu组件"><a href="#Menu组件" class="headerlink" title="Menu组件"></a>Menu组件</h1><blockquote><p>三类菜单</p></blockquote><ul><li>选项菜单(OptionsMenu)</li><li>上下文菜单(ContextMenu)</li><li>弹出菜单（PopupMenu）</li></ul><h2 id="菜单设计"><a href="#菜单设计" class="headerlink" title="菜单设计"></a>菜单设计</h2><blockquote><p>涉及<code>Menu</code>菜单和<code>MenuItem</code>菜单项对象</p></blockquote><p>使用<code>add(int groupid,int itemid,int order,CharSequence title)</code>添加菜单项</p><ul><li>groupid：组别，如果不分组则为Menu.NONE</li><li>Itemid：系统根据该itemid来确定不同的菜单项</li><li>order：决定菜单项顺序</li><li>title：菜单项显示的文本</li></ul><hr><p>菜单可以在代码中动态生成，也可以使用布局文件通过<code>inflate()函数</code>映射到程序代码中。</p><p><a href="https://www.zhangshengrong.com/p/wradyzvNBE/">如何实现呢？(本章最后一节)</a></p><h2 id="选项菜单"><a href="#选项菜单" class="headerlink" title="选项菜单"></a>选项菜单</h2><h3 id="相关方法"><a href="#相关方法" class="headerlink" title="相关方法"></a>相关方法</h3><blockquote><p>重写两个方法</p></blockquote><ul><li>onCreateOptionsMenu(Menu menu)<ul><li>用于初始化菜单，menu为Menu对象实例</li></ul></li><li>onOptionsItemSelectd(Menu menu)<ul><li>用于相应菜单事件，即菜单项的监听方法</li></ul></li></ul><h3 id="制作流程"><a href="#制作流程" class="headerlink" title="制作流程"></a>制作流程</h3><ol><li><p>重写onCreateOptionsMenu()方法</p><ul><li><p>@Override</p><p>public boolean onCreateOptionsMenu(Menu menu){</p><p>super.onCreateOptionsMenu(menu);</p><p>…</p><p>}</p></li></ul></li><li><p>调用add()方法添加MenuItem菜单项</p><ul><li>调用MenuItem的setIcon()方法设置菜单图标</li></ul></li><li><p>当菜单项被选中时，通过重写onOptionsItemSelected()方法响应事件</p><ul><li><p>@Override<br>public boolean onOptionsItemSelected(MenuItem menuItem){</p><p>…</p><p>return true;</p></li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Menu1Activity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    TextView textView;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_menu1);</span><br><span class="line">        textView = (TextView) findViewById(R.id.menu1tw);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span>&#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreateOptionsMenu(menu);</span><br><span class="line"></span><br><span class="line">        menu.add(<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;选项1&quot;</span>);</span><br><span class="line">        menu.add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="string">&quot;选项2&quot;</span>);</span><br><span class="line">        menu.add(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="string">&quot;选项2&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(MenuItem menuItem)</span>&#123;</span><br><span class="line">        textView.setText(<span class="string">&quot;您选择了&quot;</span>+menuItem.getTitle().toString());</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="上下文菜单"><a href="#上下文菜单" class="headerlink" title="上下文菜单"></a>上下文菜单</h2><blockquote><p>类似于<code>右键菜单</code>，在手机中表现为<code>长按</code>。</p></blockquote><h3 id="相关方法-1"><a href="#相关方法-1" class="headerlink" title="相关方法"></a>相关方法</h3><ul><li>建立菜单，添加菜单项</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateContextMenu</span><span class="params">(ContextMenu menu, View view, ContextMenu.ContextMenuInfo info)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>用于响应菜单事件</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onContextItemSelected</span><span class="params">(MenuItem menu)</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>为视图注册上下文菜单</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">registerforContextMenu()</span><br></pre></td></tr></table></figure><h3 id="具体案例"><a href="#具体案例" class="headerlink" title="具体案例"></a>具体案例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lptexas.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.ContextMenu;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContextMenuActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    ImageView imageView;</span><br><span class="line">    TextView textView;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">item1</span> <span class="operator">=</span> Menu.FIRST;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">item2</span> <span class="operator">=</span> Menu.FIRST+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">item3</span> <span class="operator">=</span> Menu.FIRST+<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_context_menu);</span><br><span class="line">        imageView = (ImageView) findViewById(R.id.imgmenu);</span><br><span class="line">        textView = (TextView)findViewById(R.id.ContextMenuTV);</span><br><span class="line"></span><br><span class="line">        registerForContextMenu(imageView);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreateContextMenu</span><span class="params">(ContextMenu menu, View view, ContextMenu.ContextMenuInfo info)</span>&#123;</span><br><span class="line">        menu.add(<span class="number">0</span>,item1,<span class="number">0</span>,<span class="string">&quot;你干嘛？&quot;</span>);</span><br><span class="line">        menu.add(<span class="number">0</span>,item2,<span class="number">0</span>,<span class="string">&quot;？？&quot;</span>);</span><br><span class="line">        menu.add(<span class="number">0</span>,item3,<span class="number">0</span>,<span class="string">&quot;虾米？&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onContextItemSelected</span><span class="params">(MenuItem menu)</span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (menu.getItemId())&#123;</span><br><span class="line">            <span class="keyword">case</span> item1:</span><br><span class="line">                textView.setText(menu.getTitle().toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> item2:</span><br><span class="line">                textView.setText(<span class="string">&quot;蛤？&quot;</span>+menu.getTitle().toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> item3:</span><br><span class="line">                textView.setText(<span class="string">&quot;&quot;</span>+menu.getTitle().toString());</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="弹出菜单"><a href="#弹出菜单" class="headerlink" title="弹出菜单"></a><a href="https://blog.csdn.net/xch_yang/article/details/80585041">弹出菜单</a></h2><blockquote><p>弹出菜单，一个模态形式展示的弹出风格的菜单，绑在在某个View上，一般出现在被绑定的View的下方（如果下方有空间）。</p></blockquote><h3 id="核心步骤"><a href="#核心步骤" class="headerlink" title="核心步骤"></a><a href="https://blog.csdn.net/xch_yang/article/details/80585041">核心步骤</a></h3><p>（1）通过PopupMenu的构造函数实例化一个PopupMenu对象，需要传递一个当前上下文对象以及绑定的View。</p><p>（2）调用PopupMenu.setOnMenuItemClickListener()设置一个PopupMenu选项的选中事件。</p><p>（3）使用MenuInflater.inflate()方法加载一个XML文件到PopupMenu.getMenu()中。</p><p>（4）在需要的时候调用PopupMenu.show()方法显示。</p><h3 id="具体案例-1"><a href="#具体案例-1" class="headerlink" title="具体案例"></a>具体案例</h3><p>PopupMenuActivity.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lptexas.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.PopupMenu;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PopupMenuActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener, MenuItem.OnMenuItemClickListener &#123;</span><br><span class="line">    <span class="keyword">private</span> Button button;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_popup_menu);</span><br><span class="line"></span><br><span class="line">        button=(Button) findViewById(R.id.button11);</span><br><span class="line">        button.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//点击按钮后，加载弹出式菜单</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="comment">//创建弹出式菜单对象（最低版本11）</span></span><br><span class="line">        <span class="type">PopupMenu</span> <span class="variable">popupMenu</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PopupMenu</span>(<span class="built_in">this</span>,view);</span><br><span class="line">        <span class="comment">//获取菜单填充器</span></span><br><span class="line">        MenuInflater menuInflater=popupMenu.getMenuInflater();</span><br><span class="line">        <span class="comment">//填充菜单</span></span><br><span class="line">        menuInflater.inflate(R.menu.popupmenu,popupMenu.getMenu());</span><br><span class="line">        <span class="comment">//绑定菜单项的点击事件</span></span><br><span class="line">        popupMenu.setOnMenuItemClickListener(<span class="built_in">this</span>::onMenuItemClick);</span><br><span class="line">        <span class="comment">//显示</span></span><br><span class="line">        popupMenu.show();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onMenuItemClick</span><span class="params">(MenuItem item)</span> &#123;</span><br><span class="line">        <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">        <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.exit1:</span><br><span class="line">                Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;退出&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.set1:</span><br><span class="line">                Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;设置&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.account1:</span><br><span class="line">                Toast.makeText(<span class="built_in">this</span>, <span class="string">&quot;账号&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>activity_popup_menu.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.PopupMenuActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/button11&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;弹出菜单&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout_editor_absoluteX</span>=<span class="string">&quot;128dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:layout_editor_absoluteY</span>=<span class="string">&quot;46dp&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">androidx.constraintlayout.widget.ConstraintLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>新建资源文件夹<code>menu</code></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221021090047715.png" alt="image-20221021090047715"></p><p>popupmenu.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/exit1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;退出&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/set1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;设置&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:id</span>=<span class="string">&quot;@+id/account1&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:title</span>=<span class="string">&quot;账号&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="inflate-函数"><a href="#inflate-函数" class="headerlink" title="inflate()函数"></a><a href="https://www.zhangshengrong.com/p/wradyzvNBE/">inflate()函数</a></h2><blockquote><p>在popupmenu的例子中我们应用到了这个函数</p></blockquote><p>详情参阅：<a href="https://www.zhangshengrong.com/p/wradyzvNBE/">用Android MenuInflater创建菜单项的方法步骤</a></p><hr><blockquote><p><a href="https://lptexas.top/posts/3831880591/#Bundle%E7%B1%BB%E5%8F%8A%E5%BA%94%E7%94%A8Intent%E4%BC%A0%E9%80%92%E6%95%B0%E6%8D%AE">之前提到过了的</a></p></blockquote><h1 id="安卓内部存储与外部存储"><a href="#安卓内部存储与外部存储" class="headerlink" title="安卓内部存储与外部存储"></a>安卓内部存储与外部存储</h1><h2 id="安卓文件系统"><a href="#安卓文件系统" class="headerlink" title="安卓文件系统"></a>安卓文件系统</h2><blockquote><p>内部存储（internal storage）</p><p>外部存储（external storage）</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20221030095049175.png" alt="image-20221030095049175"></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/ - system</span><br><span class="line">    <span class="class"><span class="keyword">data</span> - <span class="keyword">data</span> - package_name</span></span><br><span class="line">    com.snakuai.meituan</span><br><span class="line">  storage - sdcard1</span><br><span class="line">            emulated - <span class="number">0</span> - <span class="type">Android</span> - <span class="class"><span class="keyword">data</span> - package_name</span></span><br><span class="line">               com.snakuai.meituan</span><br><span class="line">             <span class="type">Download</span></span><br><span class="line">             ...</span><br></pre></td></tr></table></figure><blockquote><p>安卓对内外部存储的划分是逻辑上的划分。</p></blockquote><h2 id="内部存储空间"><a href="#内部存储空间" class="headerlink" title="内部存储空间"></a>内部存储空间</h2><blockquote><p>data文件夹中需要关注两个文件夹</p></blockquote><ol><li>app文件夹<ul><li>存放所有安装程序的apk文件</li><li>调试时控制台输出的uploading就是上传至此文件夹中</li></ul></li><li>data文件夹<ul><li>包名，每个app系统都会在data&#x2F;data目录下以应用包名为名字自动创建与之对应的文件夹</li><li>这些文件夹是应用（APP）私有的。<ul><li>应用可以不需要任何系统权限即可读写和写入这些目录中的文件，其它应用无法访问。</li></ul></li><li>这些文件夹用于App中的WebView缓存页面信息，SharePreferences和SQLiteDatabase持久化应用相关数据等<ul><li>持久性文件根目录File：context.filesDir()，&#x2F;data&#x2F;data&#x2F;包名&#x2F;files&#x2F;</li><li>缓存性文件根目录File：context.cacheDir()，&#x2F;data&#x2F;data&#x2F;包名&#x2F;cache&#x2F;</li></ul></li></ul></li></ol><h3 id="android提供了一些简便的api创建删除文件"><a href="#android提供了一些简便的api创建删除文件" class="headerlink" title="android提供了一些简便的api创建删除文件"></a>android提供了一些简便的api创建删除文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">context.openFileOutput(filename,Context.MODE_PRIVATE);</span><br><span class="line">context.openFileInput(filename);</span><br><span class="line">context.fileList();</span><br><span class="line">context.getDir(dirName,Context.MODE_PRIVATE);</span><br><span class="line">context.deleteFile(fileName);</span><br></pre></td></tr></table></figure><p>注：卸载app后，系统自动删除data&#x2F;data目录下对应包名的文件夹及其内容。</p><blockquote><p>注：data&#x2F;data目录很像C盘的programfile文件夹</p></blockquote><h2 id="外部存储空间"><a href="#外部存储空间" class="headerlink" title="外部存储空间"></a>外部存储空间</h2><blockquote><p>storage目录（也有的是mnt），平时操作多是外部存储。</p></blockquote><h3 id="私有目录"><a href="#私有目录" class="headerlink" title="私有目录"></a>私有目录</h3><blockquote><p>对应&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;Android&#x2F;data&#x2F;包名</p></blockquote><p>应用私有目录卸载之后，其文件也会被删除（类似于内部存储）。和内部存储不同的是这个目录可以被其它应用访问。</p><h3 id="公共目录"><a href="#公共目录" class="headerlink" title="公共目录"></a>公共目录</h3><blockquote><p>对应&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;中除Android文件夹以外的文件夹</p></blockquote><p>目录可被自由访问，且其中数据对其他应用或者用户来说都是有意义的，当应用被卸载后，其卸载前创建的文件任然保留。</p><h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20221030094609080.png" alt="image-20221030094609080"></p><h2 id="调用方法"><a href="#调用方法" class="headerlink" title="调用方法"></a><a href="https://blog.csdn.net/c6E5UlI1N/article/details/120540157">调用方法</a></h2><p><img src="https://lptexas-cub.github.io/img/post/image-20221030141626758.png" alt="image-20221030141626758"></p><blockquote><p>注：安卓10开启<a href="https://source.android.google.cn/docs/core/storage/scoped?hl=zh-cn">分区存储</a>后，将无法直接通过File操作公共目录，只能通过<a href="https://blog.csdn.net/LoneySmoke/article/details/108944485">MediaStore</a>去操作。</p></blockquote><h2 id="MediaStore"><a href="#MediaStore" class="headerlink" title="MediaStore"></a>MediaStore</h2><blockquote><p>参见：<a href="https://blog.csdn.net/LoneySmoke/article/details/108944485">https://blog.csdn.net/LoneySmoke/article/details/108944485</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS要点梳理2（复习用）</title>
      <link href="/posts/2253982299/"/>
      <url>/posts/2253982299/</url>
      
        <content type="html"><![CDATA[<h1 id="定位"><a href="#定位" class="headerlink" title="定位"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning">定位</a></h1><p>定位允许你从正常的文档流布局中取出元素，并使它们具有不同的行为，例如放在另一个元素的上面，或者始终保持在浏览器视窗内的同一位置。</p><blockquote><p>定位是你的工具。或者，如果你想要创建一个浮动在页面其他部分顶部的 UI 元素，并且&#x2F;或者始终停留在浏览器窗口内的相同位置，无论页面滚动多少？定位使这种布局工作成为可能。</p></blockquote><h2 id="文档流"><a href="#文档流" class="headerlink" title="文档流"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E6%96%87%E6%A1%A3%E6%B5%81">文档流</a></h2><p>默认情况下，块级元素的内容宽度是其父元素的宽度的100％，并且与其内容一样高。</p><p>内联元素高宽与他们的内容高宽一样。你不能对内联元素设置宽度或高度——它们只是位于块级元素的内容中。如果要以这种方式控制内联元素的大小，则需要将其设置为类似块级元素 <code>display: block;</code>。</p><h2 id="静态定位"><a href="#静态定位" class="headerlink" title="静态定位"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E9%9D%99%E6%80%81%E5%AE%9A%E4%BD%8D">静态定位</a></h2><p>静态定位是每个元素获取的<strong>默认值</strong>——它只是意味着“将元素放入它在文档布局流中的正常位置 ——这里没有什么特别的。</p><h2 id="相对定位"><a href="#相对定位" class="headerlink" title="相对定位"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E7%9B%B8%E5%AF%B9%E5%AE%9A%E4%BD%8D">相对定位</a></h2><p>与静态定位相似，占据在正常的文档流中。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">position</span>: relative;</span><br></pre></td></tr></table></figure><h3 id="介绍-top、bottom、left-和-right"><a href="#介绍-top、bottom、left-和-right" class="headerlink" title="介绍 top、bottom、left 和 right"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E4%BB%8B%E7%BB%8D_top%E3%80%81bottom%E3%80%81left_%E5%92%8C_right">介绍 top、bottom、left 和 right</a></h3><p>这四个属性分别用来精确定位元素要移动的位置。</p><p>相对移动（理解成一个力在推动）：</p><ol><li>top -&gt;力从上往下</li><li>bottom-&gt;从下往上</li><li>left-&gt;从左往右</li><li>right-&gt;从右往左</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.positioned</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">30px</span>;</span><br><span class="line">  <span class="attribute">background</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221012135733019.png" alt="image-20221012135733019"></p><h2 id="绝对定位"><a href="#绝对定位" class="headerlink" title="绝对定位"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E7%BB%9D%E5%AF%B9%E5%AE%9A%E4%BD%8D">绝对定位</a></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">position</span>: absolute;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221012135943088.png" alt="image-20221012135943088"></p><p>我们观察到，定位的元素在文档流的间隙不再存在，第一个元素和第三个元素已经靠在一起，仿佛第二个元素不存在了。</p><blockquote><p>绝对元素不再存在于正常的文档流中。</p></blockquote><p>可以使用top等设置元素位置。</p><h2 id="定位上下文"><a href="#定位上下文" class="headerlink" title="定位上下文"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E5%AE%9A%E4%BD%8D%E4%B8%8A%E4%B8%8B%E6%96%87">定位上下文</a></h2><p>如果所有的父元素都没有显式地定义 position 属性，那么所有的父元素默认情况下 position 属性都是 static。</p><p>绝对定位元素会被包含在<strong>初始块容器</strong>中。这个初始块容器有着和浏览器视口一样的尺寸，并且&lt;html&gt;元素也被包含在这个容器里面。简单来说，绝对定位元素会被放在&lt;html&gt;元素的外面，并且根据浏览器视口来定位。</p><p>绝对定位元素在 HTML 源代码中，是被放在&lt;body&gt;中的，但是在最终的布局里面，它的显示位置是相对于浏览器页面的。</p><p>我们可以改变<strong>定位上下文</strong> —— 绝对定位的元素的相对位置元素。通过设置其中一个父元素的定位属性 —— 也就是包含绝对定位元素的那个元素（如果要设置绝对定位元素的相对元素，那么这个元素一定要包含绝对定位元素）。</p><p><strong>例如</strong>：我们在body元素中设置<code>position:relative</code>，则body中使用绝对定位的元素将以body作为参照。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221012141817529.png" alt="image-20221012141817529"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221012141758771.png" alt="image-20221012141758771"></p><h2 id="介绍-z-index"><a href="#介绍-z-index" class="headerlink" title="介绍 z-index"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E4%BB%8B%E7%BB%8D_z-index">介绍 z-index</a></h2><blockquote><p>决定哪些元素出现在其他元素的顶部</p></blockquote><p>在源代码中的后定位的元素将赢得先定位的元素，也就是说后定位的元素将覆盖显示在先定义的元素之上。</p><p>使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index"><code>z-index</code></a>属性。 </p><p>“z-index”是对 z 轴的参考。</p><p>你可以从源代码中的上一点回想一下，我们使用水平（x 轴）和垂直（y 轴）坐标来讨论网页，以确定像背景图像和阴影偏移之类的东西的位置。 </p><p>（0,0）位于页面（或元素）的左上角，x 和 y 轴跨页面向右和向下（适合从左到右的语言，无论如何）。</p><p>网页也有一个 z 轴：一条从屏幕表面到你的脸（或者在屏幕前面你喜欢的任何其他东西）的虚线。<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index"><code>z-index</code></a> 值影响定位元素位于该轴上的位置；<strong>正值将它们移动到堆栈上方，负值将它们向下移动到堆栈中。默认情况下，定位的元素都具有 z-index 为 auto，实际上为 0。</strong></p><blockquote><p>z-index 只接受无单位索引值</p></blockquote><h2 id="固定定位"><a href="#固定定位" class="headerlink" title="固定定位"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#%E5%9B%BA%E5%AE%9A%E5%AE%9A%E4%BD%8D">固定定位</a></h2><p>这与绝对定位的工作方式完全相同，只有一个主要区别：绝对定位将元素固定在相对于其位置最近的祖先。（如果没有，则为初始包含它的块）而固定定位固定元素则是相对于浏览器视口本身。这意味着你可以创建固定的有用的 UI 项目，如<strong>持久导航菜单</strong>。</p><h2 id="position-sticky"><a href="#position-sticky" class="headerlink" title="position: sticky"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Positioning#position_sticky">position: sticky</a></h2><p>比起其他位置值要新一些。它基本上是相对位置和固定位置的混合体，它允许被定位的元素表现得像相对定位一样，直到它滚动到某个<code>阈值点</code>（例如，从视口顶部起 10 像素）为止，此后它就变得固定了。</p><h1 id="定位实例练习"><a href="#定位实例练习" class="headerlink" title="定位实例练习"></a>定位实例练习</h1><h2 id="列表消息盒子"><a href="#列表消息盒子" class="headerlink" title="列表消息盒子"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#%E5%88%97%E8%A1%A8%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90">列表消息盒子</a></h2><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="https://lptexas-cub.github.io/img/post/image-20221012145451882.png" alt="image-20221012145451882"></p><h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">section</span>(info-box)-<span class="selector-tag">ul</span>-<span class="selector-tag">li</span>-<span class="selector-tag">a</span>(active)</span><br><span class="line"><span class="selector-tag">li</span>-<span class="selector-tag">a</span></span><br><span class="line"><span class="selector-tag">li</span>-<span class="selector-tag">a</span></span><br><span class="line"><span class="selector-tag">div</span>(panels)-acticle(active-panel)</span><br><span class="line">acticle</span><br><span class="line">acticle</span><br></pre></td></tr></table></figure><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ol><li>将样式化选项卡看起来是一个标准的水平导航菜单，使用绝对定位样式化面板互相坐落其顶上。</li><li>当选项卡被按下时，显示对应的面板，并且样式化选项卡本身。</li></ol><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="一般设置"><a href="#一般设置" class="headerlink" title="一般设置"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#%E4%B8%80%E8%88%AC%E8%AE%BE%E7%BD%AE">一般设置</a></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: sans-serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>设置了无衬线的字体</li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-sizing">使用 box-sizing 模型</a></li><li>去掉&lt;body&gt;默认外边距。</li></ul><h4 id="样式设置"><a href="#样式设置" class="headerlink" title="样式设置"></a>样式设置</h4><p>设置信息盒子宽高、位置</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">450px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置选项卡样式</p><blockquote><p>从外到内，设置边框，选项卡高度，内外边距，设置外溢部分自动隐藏</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#b60000</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置选项卡选项，左浮动，取消无序列表图形，设置每个选项的宽度</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">   <span class="attribute">float</span>: left;</span><br><span class="line">   <span class="attribute">list-style-type</span>: none;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置选项卡选项超链接文本样式</p></blockquote><p><a href="https://www.w3school.com.cn/css/css_inline-block.asp">inline-block</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background</span>: white;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#b60000</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置鼠标悬停时和点击后的选项卡样式</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:focus</span>, <span class="selector-class">.info-box</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">   <span class="attribute">background-color</span>: <span class="number">#b60000</span>;</span><br><span class="line">   <span class="attribute">color</span>: white;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置默认时选中的选项卡样式</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#b60000</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置信息面板盒子样式</p><blockquote><p>从外到内，清除面板盒子两侧浮动、设置面板盒子子元素的参照为父元素、设置面板盒子高度</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> <span class="selector-class">.panels</span>&#123;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">352px</span>;</span><br><span class="line">  <span class="comment">/* border: 1px solid; */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置acticle盒子样式、设置背景颜色、设置为绝对定位、设置内边距、设置高度、设置偏移量</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.info-box</span> <span class="selector-tag">article</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#b60000</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">352px</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置默认显示的面板</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.info-box .active-panel &#123;</span><br><span class="line">  z-index: 1;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><h4 id="脚本设置"><a href="#脚本设置" class="headerlink" title="脚本设置"></a>脚本设置</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> tabs = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.info-box li a&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> panels = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;.info-box article&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; tabs.<span class="property">length</span>; i++) &#123;</span><br><span class="line">  <span class="keyword">var</span> tab = tabs[i];</span><br><span class="line">  <span class="title function_">setTabHandler</span>(tab, i);  <span class="comment">//遍历执行函数，设置onclick事件、记录所有选项卡位置信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">setTabHandler</span>(<span class="params">tab, tabPos</span>) &#123;</span><br><span class="line">  tab.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; tabs.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      tabs[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tab.<span class="property">className</span> = <span class="string">&#x27;active&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; panels.<span class="property">length</span>; i++) &#123;</span><br><span class="line">      panels[i].<span class="property">className</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    panels[tabPos].<span class="property">className</span> = <span class="string">&#x27;active-panel&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>首先我们保存所有的选项卡和所有的面板引用到两个变量中，名为 <code>tabs</code> 和 <code>panels</code>，这样此后我们可以容易地为它们做事。</li><li>然后我们使用 <code>for</code> 循环遍历所有的选项卡，并且在每一个上运行叫做<code>setTabHandler()</code> 的函数，此函数建立当每个选项卡被点击时应该发生的功能。运行时，函数会被传递选项卡，和一个索引数<code>i</code> 指明选项卡在<code>tabs</code> 数组中的位置。</li><li>在<code>setTabHandler()</code>函数中，这个标签创建了一个<code>onclick</code>事件来处理点击，所以当标签被点击的时候，接下来会发生：<ul><li>用一个 <code>for</code> 循环清除所有标签当前存在的类。</li><li>当点击的时候在标签上创建了一个 <code>active</code> 类——从相关联的元素中继承了 CSS 的一些属性，具有和 panels 的样式相同的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/color"><code>color</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background-color"><code>background-color</code></a>。</li><li>用一个 <code>for</code> 循环清除所有面板当前存在的类。</li><li>当标签被点击的时候在和标签相对应的面板上创建了一个 <code>active-panel</code> 类——从相关联的元素中继承了 CSS 的一些属性，使其 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/z-index"><code>z-index</code></a> 属性被设置为 1，让它能位于所有的面板的上面。</li></ul></li></ul><h2 id="一个固定位置的列表消息盒子"><a href="#一个固定位置的列表消息盒子" class="headerlink" title="一个固定位置的列表消息盒子"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#%E4%B8%80%E4%B8%AA%E5%9B%BA%E5%AE%9A%E4%BD%8D%E7%BD%AE%E7%9A%84%E5%88%97%E8%A1%A8%E6%B6%88%E6%81%AF%E7%9B%92%E5%AD%90">一个固定位置的列表消息盒子</a></h2><blockquote><p>使用<code>position:fixed</code>固定</p></blockquote><h2 id="一个滑动隐藏的面板"><a href="#一个滑动隐藏的面板" class="headerlink" title="一个滑动隐藏的面板"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Practical_positioning_examples#%E4%B8%80%E4%B8%AA%E6%BB%91%E5%8A%A8%E9%9A%90%E8%97%8F%E7%9A%84%E9%9D%A2%E6%9D%BF">一个滑动隐藏的面板</a></h2><h3 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h3><p>点击某处，然后消息盒子从边界滑出主界面。</p><h3 id="结构-1"><a href="#结构-1" class="headerlink" title="结构"></a>结构</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span>-lable(for=&quot;toggle&quot;)</span><br><span class="line"> <span class="selector-tag">input</span>(type=&quot;checkbox&quot; id=&quot;toggle&quot;)</span><br><span class="line"> <span class="selector-tag">aside</span></span><br></pre></td></tr></table></figure><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><blockquote><p>利用有名的 <a href="https://css-tricks.com/the-checkbox-hack/">checkbox hack</a> 技术，可以提供<strong>无 JavaScript 的方法</strong>来通过按钮来控制一个元素。本例中利用<code>label</code>和<code>input</code>标签控制<code>aside</code>的隐藏和显示。</p></blockquote><p>通过<a href="https://www.w3school.com.cn/tags/att_label_for.asp">for属性</a>绑定<code>id</code>到了<code>&lt;input&gt;</code>标签的 checkbox 元素。(实现的效果是点击lable，相当于是点击了label和input标签，因为他们绑定在了一起。)</p><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><h4 id="样式设置-1"><a href="#样式设置-1" class="headerlink" title="样式设置"></a>样式设置</h4><blockquote><p>设置label样式，字体大小、固定位置、设置z-index避免信息面板覆盖图标、<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/cursor">改变悬浮时鼠标指针为手型</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">label</span><span class="selector-attr">[for=<span class="string">&quot;toggle&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">3rem</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">z-index</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置checkbox样式，只需要隐藏掉就行，我们不需要用户看到它</p></blockquote><p>使用checkbox是为了记录当前的状态。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;checkbox&quot;</span>]</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">top</span>: -<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="面板设置"><a href="#面板设置" class="headerlink" title="面板设置"></a>面板设置</h4><blockquote><p>设置背景、字体颜色、</p><p>设置宽高和内边距、</p><p>设置位置，默认时隐藏（将绝对定位的偏移值设置为负值）、</p><p>设置<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition">过渡效果、滑出时间</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">aside</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#a60000</span>;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">width</span>: <span class="number">340px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">98%</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">1%</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: -<span class="number">370px</span>;</span><br><span class="line"></span><br><span class="line">  <span class="attribute">transition</span>: <span class="number">0.6s</span> all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>设置checkbox被选中后，aside滑出</p></blockquote><p>我们选择与 <code>&lt;input&gt;</code> 元素邻接的 <code>&lt;aside&gt;</code> 元素，但是仅仅在它被选择时（请注意使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:checked"><code>:checked</code></a> 伪类来实现此目的），在这种情况下，我们将 <code>&lt;aside&gt;</code> 的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/right"><code>right</code></a> 属性设置为 0px，会造成面板再次出现在屏幕上（由于过渡属性会平滑的出现）。再一次点击这个标签会取消选中 checkbox，面板将会跟着再一次消失。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=checkbox]</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">aside</span> &#123;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="这中hack方法的不足"><a href="#这中hack方法的不足" class="headerlink" title="这中hack方法的不足"></a>这中<code>hack</code>方法的不足</h4><p>这种效果确实有一些问题 ——这是有点滥用表单元素（它们不是为了这个目的），并且在无障碍方面效果不是很好——标签在默认情况下不可聚焦，并且表单元素的非语义使用可能会导致屏幕朗读器出现问题。JavaScript 和链接或按钮可能更合适，但这样的实验仍然很有趣。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
            <tag> Javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS要点梳理1（复习用）</title>
      <link href="/posts/2945564329/"/>
      <url>/posts/2945564329/</url>
      
        <content type="html"><![CDATA[<h1 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/Selectors">选择器</a></h1><table><thead><tr><th align="left">选择器</th><th align="left">示例</th><th align="left">学习 CSS 的教程</th></tr></thead><tbody><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Type_selectors">类型选择器</a></td><td align="left"><code>h1 &#123; &#125;</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/user:chrisdavidmills/CSS_Learn/CSS_Selectors/Type_Class_and_ID_Selectors#Type_selectors">类型选择器</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Universal_selectors">通配选择器</a></td><td align="left"><code>* &#123; &#125;</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/user:chrisdavidmills/CSS_Learn/CSS_Selectors/Type_Class_and_ID_Selectors#The_universal_selector">通配选择器</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Class_selectors">类选择器</a></td><td align="left"><code>.box &#123; &#125;</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/user:chrisdavidmills/CSS_Learn/CSS_Selectors/Type_Class_and_ID_Selectors#Class_selectors">类选择器</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/ID_selectors">ID 选择器</a></td><td align="left"><code>#unique &#123; &#125;</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/user:chrisdavidmills/CSS_Learn/CSS_Selectors/Type_Class_and_ID_Selectors#ID_Selectors">ID 选择器</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Attribute_selectors">标签属性选择器</a></td><td align="left"><code>a[title] &#123; &#125;</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/User:chrisdavidmills/CSS_Learn/CSS_Selectors/Attribute_selectors">标签属性选择器</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes">伪类选择器</a></td><td align="left"><code>p:first-child &#123; &#125;</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/User:chrisdavidmills/CSS_Learn/CSS_Selectors/Pseuso-classes_and_Pseudo-elements#What_is_a_pseudo-class">伪类</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements">伪元素选择器</a></td><td align="left"><code>p::first-line &#123; &#125;</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/User:chrisdavidmills/CSS_Learn/CSS_Selectors/Pseuso-classes_and_Pseudo-elements#What_is_a_pseudo-element">伪元素</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator">后代选择器</a></td><td align="left"><code>article p</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/User:chrisdavidmills/CSS_Learn/CSS_Selectors/Combinators#Descendant_Selector">后代运算符</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator">子代选择器</a></td><td align="left"><code>article &gt; p</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/User:chrisdavidmills/CSS_Learn/CSS_Selectors/Combinators#Child_combinator">子代选择器</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Adjacent_sibling_combinator">相邻兄弟选择器</a></td><td align="left"><code>h1 + p</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/User:chrisdavidmills/CSS_Learn/CSS_Selectors/Combinators#Adjacent_sibling">相邻兄弟</a></td></tr><tr><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/General_sibling_combinator">通用兄弟选择器</a></td><td align="left"><code>h1 ~ p</code></td><td align="left"><a href="https://developer.mozilla.org/zh-CN/docs/User:chrisdavidmills/CSS_Learn/CSS_Selectors/Combinators#General_sibling">通用兄弟</a></td></tr></tbody></table><h1 id="规则"><a href="#规则" class="headerlink" title="@规则"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/At-rule">@规则</a></h1><p>@media(min-width: 1em){}</p><h1 id="flex-模型说明"><a href="#flex-模型说明" class="headerlink" title="flex 模型说明"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox#flex_%E6%A8%A1%E5%9E%8B%E8%AF%B4%E6%98%8E">flex 模型说明</a></h1><blockquote><p>当元素表现为 flex 框时，它们沿着两个轴来布局：</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/flex_terms.png"></p><ul><li><strong>主轴</strong>（main axis）是沿着 flex 元素放置的方向延伸的轴（比如页面上的横向的行、纵向的列）。该轴的开始和结束被称为 <strong>main start</strong> 和 <strong>main end</strong>。</li><li><strong>交叉轴</strong>（cross axis）是垂直于 flex 元素放置方向的轴。该轴的开始和结束被称为 <strong>cross start</strong> 和 <strong>cross end</strong>。</li><li>设置了 <code>display: flex</code> 的父元素（在本例中是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section">&#96;&#96;</a>）被称之为 <strong>flex 容器（flex container）。</strong></li><li>在 flex 容器中表现为柔性的盒子的元素被称之为 <strong>flex 项</strong>（<strong>flex item</strong>）（本例中是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article">&#96;&#96;</a> 元素。</li></ul><h2 id="设置默认排布（默认为从左到右，按行）"><a href="#设置默认排布（默认为从左到右，按行）" class="headerlink" title="设置默认排布（默认为从左到右，按行）"></a>设置默认排布（默认为从左到右，按行）</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-direction</span>: column;</span><br></pre></td></tr></table></figure><blockquote><p><strong>备注：</strong> 你还可以使用 <code>row-reverse</code> 和 <code>column-reverse</code> 值反向排列 flex 项目。用这些值试试看吧！</p></blockquote><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>当在布局中使用定宽或者定高时，可能出现弹性盒子子元素溢出，破坏了布局，这时可以通过以下方式换行：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flex-<span class="keyword">wrap</span>: <span class="keyword">wrap</span></span><br></pre></td></tr></table></figure><h2 id="flex-flow-缩写"><a href="#flex-flow-缩写" class="headerlink" title="flex-flow 缩写"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox#flex-flow_%E7%BC%A9%E5%86%99">flex-flow 缩写</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-direction"><code>flex-direction</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-wrap"><code>flex-wrap</code></a> — 的缩写 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-flow"><code>flex-flow</code></a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-direction</span>: row;</span><br><span class="line"><span class="attribute">flex-wrap</span>: wrap;</span><br></pre></td></tr></table></figure><p>Copy to Clipboard</p><p>替换为</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flex-flow</span>: row wrap;</span><br></pre></td></tr></table></figure><h2 id="flex-项的动态尺寸"><a href="#flex-项的动态尺寸" class="headerlink" title="flex 项的动态尺寸"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox#flex_%E9%A1%B9%E7%9A%84%E5%8A%A8%E6%80%81%E5%B0%BA%E5%AF%B8">flex 项的动态尺寸</a></h2><p>相当于<code>权重</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置了每个article盒子占用宽度相同，设置为<code>1</code>和<code>999</code>效果相同。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">article</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样设置就让<code>第三个盒子</code>是其他盒子的<code>两倍</code>宽。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">article</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">2</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样设置可以同时指定最小宽度。</p><h2 id="flex-缩写与全写"><a href="#flex-缩写与全写" class="headerlink" title="flex: 缩写与全写"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox#flex_%E7%BC%A9%E5%86%99%E4%B8%8E%E5%85%A8%E5%86%99">flex: 缩写与全写</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex"><code>flex</code></a> 是一个可以指定最多三个不同值的缩写属性：</p><ul><li>第一个就是上面所讨论过的无单位比例。可以单独指定全写 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-grow"><code>flex-grow</code></a> 属性的值。</li><li>第二个无单位比例 — <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-shrink"><code>flex-shrink</code></a> — 一般用于溢出容器的 flex 项。这指定了从每个 flex 项中取出多少溢出量，以阻止它们溢出它们的容器。这是一个相当高级的弹性盒子功能，我们不会在本文中进一步说明。</li><li>第三个是上面讨论的最小值。可以单独指定全写 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/flex-basis"><code>flex-basis</code></a> 属性的值。</li></ul><h2 id="水平和垂直对齐"><a href="#水平和垂直对齐" class="headerlink" title="水平和垂直对齐"></a>水平和垂直对齐</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20221011083044772.png" alt="image-20221011083044772"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">      <span class="attribute">display</span>: flex;</span><br><span class="line">      <span class="attribute">align-items</span>: stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="align-items-控制-flex-项在交叉轴上的位置。"><a href="#align-items-控制-flex-项在交叉轴上的位置。" class="headerlink" title="align-items 控制 flex 项在交叉轴上的位置。"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-items"><code>align-items</code></a> 控制 flex 项在交叉轴上的位置。</h3><ul><li>默认的值是 <code>stretch</code>，其会使所有 flex 项沿着交叉轴的方向拉伸以填充父容器。如果父容器在交叉轴方向上没有固定宽度（即高度），则所有 flex 项将变得与最长的 flex 项一样长（即高度保持一致）。我们的第一个例子在默认情况下得到相等的高度的列的原因。</li><li>在上面规则中我们使用的 <code>center</code> 值会使这些项保持其原有的高度，但是会在交叉轴居中。这就是那些按钮垂直居中的原因。</li><li>你也可以设置诸如 <code>flex-start</code> 或 <code>flex-end</code> 这样使 flex 项在交叉轴的开始或结束处对齐所有的值。查看 [align-items&#96;](<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-items">https://developer.mozilla.org/zh-CN/docs/Web/CSS/align-items</a>) 了解更多。</li></ul><p><img src="https://lptexas-cub.github.io/img/post/image-20221011083118717.png" alt="image-20221011083118717"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221011083218076.png" alt="image-20221011083218076"></p><h3 id="justify-content-控制-flex-项在主轴-x-上的位置。"><a href="#justify-content-控制-flex-项在主轴-x-上的位置。" class="headerlink" title="justify-content 控制 flex 项在主轴(x)上的位置。"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/justify-content"><code>justify-content</code></a> 控制 flex 项在主轴(x)上的位置。</h3><ul><li>默认值是 <code>flex-start</code>，这会使所有 flex 项都位于主轴的开始处。</li><li>你也可以用 <code>flex-end</code> 来让 flex 项到结尾处。</li><li><code>center</code> 在 <code>justify-content</code> 里也是可用的，可以让 flex 项在主轴居中。</li><li>而我们上面用到的值 <code>space-around</code> 是很有用的——它会使所有 flex 项沿着主轴均匀地分布，在任意一端都会留有一点空间。</li><li>还有一个值是 <code>space-between</code>，它和 <code>space-around</code> 非常相似，只是它不会在两端留下任何空间。</li></ul><p><img src="https://lptexas-cub.github.io/img/post/image-20221011083845393.png" alt="image-20221011083845393"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221011083604818.png" alt="image-20221011083604818"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221011083821715.png" alt="image-20221011083821715"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221011083921630.png" alt="image-20221011083921630"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221011084257938.png" alt="image-20221011084257938"></p><h2 id="flex-项排序"><a href="#flex-项排序" class="headerlink" title="flex 项排序"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox#flex_%E9%A1%B9%E6%8E%92%E5%BA%8F">flex 项排序</a></h2><p>弹性盒子也有可以改变 flex 项的布局位置的功能，而不会影响到源顺序（即 dom 树里元素的顺序）。这也是传统布局方式很难做到的一点。</p><ul><li>所有 flex 项默认的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/order"><code>order</code></a> 值是 0。</li><li>order 值大的 flex 项比 order 值小的在显示顺序中更靠后（可以设置负值）。</li><li>相同 order 值的 flex 项按源顺序显示。所以假如你有四个元素，其 order 值分别是 2，1，1 和 0，那么它们的显示顺序就分别是第四，第二，第三，和第一。</li><li>第三个元素显示在第二个后面是因为它们的 order 值一样，且第三个元素在源顺序中排在第二个后面。</li></ul><p><img src="https://lptexas-cub.github.io/img/post/image-20221011084652672.png" alt="image-20221011084652672"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20221011084619608.png" alt="image-20221011084619608"></p><h2 id="flex-嵌套"><a href="#flex-嵌套" class="headerlink" title="flex 嵌套"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Flexbox#flex_%E5%B5%8C%E5%A5%97">flex 嵌套</a></h2><p>案例结构</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">section</span> - <span class="selector-tag">article</span></span><br><span class="line">          <span class="selector-tag">article</span></span><br><span class="line">          <span class="selector-tag">article</span> - <span class="selector-tag">div</span> - <span class="selector-tag">button</span></span><br><span class="line">                    <span class="selector-tag">div</span>   <span class="selector-tag">button</span></span><br><span class="line">                    <span class="selector-tag">div</span>   <span class="selector-tag">button</span></span><br><span class="line">                          <span class="selector-tag">button</span></span><br><span class="line">                          <span class="selector-tag">button</span></span><br></pre></td></tr></table></figure><p>设置section为弹性容器</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置article flex项的占比及最小宽度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置section第三个article flex项：</p><p>规定其占比以及最小宽度、设置其为弹性容器、规定其子节点为列布局</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">3</span> <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-flow</span>: column;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置第三个article的第一个div flex项：</p><p>设置其占比及最小宽度、设置其为弹性容器、规定为包装行（即行布局，出现溢出就换行）、子节点垂直居中、子节点水平均匀分布。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span><span class="selector-pseudo">:nth-of-type</span>(<span class="number">3</span>) <span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span> <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-flow</span>: row wrap;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单独设置第一个div的button flex项的占比、间距、字体大小、行高。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">5px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">18px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="网格布局"><a href="#网格布局" class="headerlink" title="网格布局"></a>网格布局</h1><p><img src="https://lptexas-cub.github.io/img/post/grid.png"></p><h2 id="定义网格"><a href="#定义网格" class="headerlink" title="定义网格"></a>定义网格</h2><p>首先，将容器的<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/display"><code>display</code></a>属性设置为<code>grid</code>来定义一个网络。与弹性盒子一样，将父容器改为网格布局后，他的直接子项会变为网格项。把下面的 css 规则加到你的文件中。</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.<span class="built_in">container</span> &#123;</span><br><span class="line">    <span class="keyword">display</span>: grid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时页面不会发生变化，因为当前只创建了一个只有一列的网格，所以你的子项还是会像正常布局流那样从上而下一个接一个的排布。</p><p>可以使用<code>grid-template-columns</code>属性为网格添加列。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">200px</span> <span class="number">200px</span> <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有多少值就有多少列，值可以为百分比。</p><h2 id="使用-fr-单位的灵活网格"><a href="#使用-fr-单位的灵活网格" class="headerlink" title="使用 fr 单位的灵活网格"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E4%BD%BF%E7%94%A8_fr_%E5%8D%95%E4%BD%8D%E7%9A%84%E7%81%B5%E6%B4%BB%E7%BD%91%E6%A0%BC">使用 fr 单位的灵活网格</a></h2><blockquote><p>类似权重，表示了可用空间的占比</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>备注：</strong> <code>fr</code>单位分配的是<em>可用</em>空间而非<em>所有</em>空间，所以如果某一格包含的内容变多了，那么整个可用空间就会减少，可用空间是不包括那些已经确定被占用的空间的。</p><h2 id="网格间隙"><a href="#网格间隙" class="headerlink" title="网格间隙"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E7%BD%91%E6%A0%BC%E9%97%B4%E9%9A%99">网格间隙</a></h2><p>使用 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap"><code>grid-column-gap</code> (en-US)</a> 属性来定义列间隙；使用 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap"><code>grid-row-gap</code> (en-US)</a> 来定义行间隙；使用 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/gap"><code>grid-gap</code> (en-US)</a> 可以同时设定两者。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">2</span>fr <span class="number">1</span>fr <span class="number">1</span>fr;</span><br><span class="line">    <span class="attribute">grid-gap</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20221012083846019.png" alt="image-20221012083846019"></p><blockquote><p>间隙距离可以用任何长度单位包括百分比来表示，但不能使用<code>fr</code>单位。</p></blockquote><p><strong>备注：</strong> <code>*gap</code>属性曾经有一个<code>grid-</code>前缀，不过后来的标准进行了修改，目的是让他们能够在不同的布局方法中都能起作用。尽管现在这个前缀不会影响语义，但为了代码的健壮性，你可以把两个属性都写上。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221012084014844.png" alt="image-20221012084014844"></p><h2 id="重复构建行-x2F-列"><a href="#重复构建行-x2F-列" class="headerlink" title="重复构建行&#x2F;列"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E9%87%8D%E5%A4%8D%E6%9E%84%E5%BB%BA%E8%A1%8C%E5%88%97">重复构建行&#x2F;列</a></h2><blockquote><p>使用<code>repeat()</code>函数</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(<span class="number">3</span>, <span class="number">1</span>fr);</span><br><span class="line">    <span class="attribute">grid-gap</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>repeat(3,1fr) &#x3D;&#x3D;1fr 1fr 1fr</li><li>repeat(2,50px 10px) &#x3D;&#x3D; 50px 10px 50px 10px</li></ul><h2 id="显式网格与隐式网格"><a href="#显式网格与隐式网格" class="headerlink" title="显式网格与隐式网格"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E6%98%BE%E5%BC%8F%E7%BD%91%E6%A0%BC%E4%B8%8E%E9%9A%90%E5%BC%8F%E7%BD%91%E6%A0%BC">显式网格与隐式网格</a></h2><p>显式网格是我们用<code>grid-template-columns</code> 或 <code>grid-template-rows</code> 属性创建的。</p><p>而<strong>隐式网格则是当有内容被放到网格外时才会生成的。</strong></p><p>显式网格与隐式网格的关系与弹性盒子的 main 和 cross 轴的关系有些类似。</p><p>隐式网格中生成的行&#x2F;列大小是参数默认是<code>auto</code>，大小会根据放入的内容自动调整。当然，你也可以使用<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid-auto-rows"><code>grid-auto-rows</code></a>和<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/grid-auto-columns"><code>grid-auto-columns</code></a>属性手动设定隐式网格的大小。</p><p>注：<strong>简单来说，隐式网格就是为了放显式网格放不下的元素，浏览器根据已经定义的显式网格自动生成的网格部分。</strong></p><h2 id="方便的-minmax-函数"><a href="#方便的-minmax-函数" class="headerlink" title="方便的 minmax() 函数"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E6%96%B9%E4%BE%BF%E7%9A%84_minmax_%E5%87%BD%E6%95%B0">方便的 minmax() 函数</a></h2><blockquote><p>可以设置行&#x2F;列宽高，并可以跟随内容自动拓展。</p></blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/minmax">举例：</a></p><p>希望高度至少为100px，最大值不限制。</p><ul><li>minmax(100px,auto)</li></ul><h2 id="自动使用多列填充"><a href="#自动使用多列填充" class="headerlink" title="自动使用多列填充"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E8%87%AA%E5%8A%A8%E4%BD%BF%E7%94%A8%E5%A4%9A%E5%88%97%E5%A1%AB%E5%85%85">自动使用多列填充</a></h2><p>在<code>grid-template-columns</code>中组合使用<code>repeat()</code>和<code>minmax()</code>函数</p><ul><li>repeat()函数第一个参数使用<code>auto-full</code>，自动决定列数</li><li>第二个参数使用<code>minmax()</code>，其中minmax()的第二个参数，使用<code>1fr</code></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="built_in">repeat</span>(auto-fill, <span class="built_in">minmax</span>(<span class="number">200px</span>, <span class="number">1</span>fr));</span><br><span class="line">  <span class="attribute">grid-auto-rows</span>: <span class="built_in">minmax</span>(<span class="number">100px</span>, auto);</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于线的元素放置"><a href="#基于线的元素放置" class="headerlink" title="基于线的元素放置"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E5%9F%BA%E4%BA%8E%E7%BA%BF%E7%9A%84%E5%85%83%E7%B4%A0%E6%94%BE%E7%BD%AE">基于线的元素放置</a></h2><p>我们的网格有许多分隔线，第一条线的起始点与文档书写模式相关。</p><p>在英文中，第一条列分隔线（即网格边缘线）在网格的最左边而第一条行分隔线在网格的最上面。</p><p>而对于阿拉伯语，第一条列分隔线在网格的最右边，因为阿拉伯文是从右往左书写的。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-column-start</span> (en-US)</span><br><span class="line"><span class="attribute">grid-column-end</span> (en-US)</span><br><span class="line"><span class="attribute">grid-row-start</span> (en-US)</span><br><span class="line"><span class="attribute">grid-row-end</span> (en-US)</span><br></pre></td></tr></table></figure><p><strong>简化</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-column</span></span><br><span class="line"><span class="attribute">grid-row</span></span><br></pre></td></tr></table></figure><p>效果类似于<code>colspan/rowspan</code>可用于控制跨行跨列和指定容器位置。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">grid-column</span>: <span class="number">1</span> / span <span class="number">2</span></span><br><span class="line">grid-row: <span class="number">2</span> / span <span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li><code>/</code>前的值为起始位，之后的值为结束位或跨越行列数</li></ul><p><strong>注意</strong></p><p>当有12列时，起始位为1，结束位为13，行同理。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20221012094606212.png" alt="image-20221012094606212"></p><h2 id="使用-grid-template-areas-属性放置元素"><a href="#使用-grid-template-areas-属性放置元素" class="headerlink" title="使用 grid-template-areas 属性放置元素"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Grids#%E4%BD%BF%E7%94%A8_grid-template-areas_%E5%B1%9E%E6%80%A7%E6%94%BE%E7%BD%AE%E5%85%83%E7%B4%A0">使用 grid-template-areas 属性放置元素</a></h2><p><code>grid-template-areas</code>属性的使用规则如下：</p><ul><li>你需要填满网格的每个格子</li><li>对于某个横跨多个格子的元素，重复写上那个元素<code>grid-area</code>属性定义的区域名字</li><li>所有名字只能出现在一个连续的区域，不能在不同的位置出现</li><li>一个连续的区域必须是一个矩形</li><li>使用<code>.</code>符号，让一个格子留空</li></ul><blockquote><p><strong>这种方法相当直观</strong></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: grid;</span><br><span class="line">  <span class="attribute">grid-template-areas</span>:</span><br><span class="line">      <span class="string">&quot;header header&quot;</span></span><br><span class="line">      <span class="string">&quot;sidebar content&quot;</span></span><br><span class="line">      <span class="string">&quot;footer footer&quot;</span>;</span><br><span class="line">  <span class="attribute">grid-template-columns</span>: <span class="number">1</span>fr <span class="number">3</span>fr;</span><br><span class="line">  <span class="attribute">grid-gap</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: header;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">article</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">aside</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: sidebar;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">  <span class="attribute">grid-area</span>: footer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h1><p>浮动元素会脱离正常的文档布局流，并吸附到其父容器的左边。在正常布局中位于该浮动元素之下的内容，此时会围绕着浮动元素，填满其右侧的空间。</p><h2 id="让浮动效果可视化"><a href="#让浮动效果可视化" class="headerlink" title="让浮动效果可视化"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats#%E8%AE%A9%E6%B5%AE%E5%8A%A8%E6%95%88%E6%9E%9C%E5%8F%AF%E8%A7%86%E5%8C%96">让浮动效果可视化</a></h2><blockquote><p>给紧随浮动盒子的元素上添加 <code>special</code> 类</p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.special &#123;</span><br><span class="line">  background-color: rgb(<span class="number">79</span>,<span class="number">185</span>,<span class="number">227</span>);</span><br><span class="line">  padding: <span class="number">10</span>px;</span><br><span class="line">  color: <span class="meta">#fff;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats#%E6%B8%85%E9%99%A4%E6%B5%AE%E5%8A%A8">清除浮动</a></h2><p><code>clear</code> 属性接受下列值：</p><ul><li><code>left</code>：停止任何活动的左浮动</li><li><code>right</code>：停止任何活动的右浮动</li><li><code>both</code>：停止任何活动的左右浮动</li></ul><h3 id="clearfix-小技巧"><a href="#clearfix-小技巧" class="headerlink" title="clearfix 小技巧"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats#clearfix_%E5%B0%8F%E6%8A%80%E5%B7%A7">clearfix 小技巧</a></h3><p>传统上，这个问题通常由所谓的 “clearfix 小技巧” 解决，其过程为：先向包含浮动内容及其本身的盒子后方插入一些生成的内容，并将生成的内容清除浮动。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.<span class="keyword">wrapper</span>::<span class="keyword">after</span> &#123;</span><br><span class="line">  content: &quot;&quot;;</span><br><span class="line">  clear: <span class="keyword">both</span>;</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>现在重载页面，盒子的浮动就应该清除了。这与在浮动盒子后手动添加诸如 <code>div</code> 的 HTML 元素，并设置其样式为 <code>clear:both</code> 是等效的。</p></blockquote><h3 id="使用-overflow"><a href="#使用-overflow" class="headerlink" title="使用 overflow"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats#%E4%BD%BF%E7%94%A8_overflow">使用 overflow</a></h3><p>一个替代的方案是将包裹元素的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/overflow"><code>overflow</code></a> 属性设置为除 <code>visible</code> 外的其他值。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>,<span class="number">185</span>,<span class="number">227</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个例子之所以能够生效，是因为创建了所谓的 <strong>块格式化上下文（BFC）</strong>。可以把它看作页面内部包含所需元素的一小块布局区域。如此设置可以让浮动元素包含在 BFC 及其背景之内。大部分情况下这种小技巧都可以奏效，但是可能会出现莫名其妙的滚动条或裁剪阴影，这是使用 overflow 带来的一些副作用。</p><h3 id="display-flow-root"><a href="#display-flow-root" class="headerlink" title="display: flow-root"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/CSS_layout/Floats#display_flow-root">display: flow-root</a></h3><p>一个较为现代的方案是使用 <code>display</code> 属性的 <code>flow-root</code> 值。它可以无需小技巧来创建块格式化上下文（BFC），在使用上没有副作用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">rgb</span>(<span class="number">79</span>,<span class="number">185</span>,<span class="number">227</span>);</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">display</span>: flow-root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言2</title>
      <link href="/posts/359110522/"/>
      <url>/posts/359110522/</url>
      
        <content type="html"><![CDATA[<h1 id="fix-与edit-的区别"><a href="#fix-与edit-的区别" class="headerlink" title="fix()与edit()的区别"></a>fix()与edit()的区别</h1><ul><li>用<code>edit</code>修改完关闭编辑器后，并<code>不会保存</code>你的修改</li><li>用<code>fix</code>修改完关闭编辑器后就会<code>直接保存</code>你的修改</li></ul><h1 id="R语言中的逻辑运算符"><a href="#R语言中的逻辑运算符" class="headerlink" title="R语言中的逻辑运算符"></a>R语言中的逻辑运算符</h1><table><thead><tr><th>Operator</th><th>Description</th></tr></thead><tbody><tr><td>&lt;</td><td>小于、less than</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于、less than or equal to</td></tr><tr><td>&gt;</td><td>大于、greater than</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于、greater than or equal to</td></tr><tr><td>&#x3D;&#x3D;</td><td>相等、exactly equal to</td></tr><tr><td>!&#x3D;</td><td>不相等、not equal to</td></tr><tr><td>!x</td><td>非、Not x</td></tr><tr><td>x | y</td><td>或、x OR y</td></tr><tr><td>x &amp; y</td><td>与、x AND y</td></tr><tr><td>isTRUE(x)</td><td>测试是否为真（True）、test if X is TRUE</td></tr></tbody></table><h1 id="数据排序"><a href="#数据排序" class="headerlink" title="数据排序"></a><a href="https://zhuanlan.zhihu.com/p/133842176#:~:text=%E5%9C%A8R%E4%B8%AD%E5%AF%B9%E6%95%B0%E6%8D%AE%E6%A1%86%E4%B8%AD%E7%9A%84%E6%95%B0%E6%8D%AE%E6%8E%92%E5%BA%8F%EF%BC%8C%E6%88%91%E4%BB%AC%E9%80%9A%E5%B8%B8%E4%BD%BF%E7%94%A8order,%28%29%E5%87%BD%E6%95%B0%2C%E8%AF%A5%E5%87%BD%E6%95%B0%E9%BB%98%E8%AE%A4%E6%98%AF%E5%8D%87%E5%BA%8F%EF%BC%8C%E4%BD%86%E6%98%AF%E5%9C%A8%E8%A6%81%E6%8E%92%E5%BA%8F%E7%9A%84%E5%8F%98%E9%87%8F%E5%89%8D%E5%8A%A0%E4%B8%8A%E5%87%8F%E5%8F%B7%EF%BC%88-%EF%BC%89%E5%B0%B1%E7%9B%B8%E5%BD%93%E4%BA%8E%E9%99%8D%E5%BA%8F%E6%8E%92%E5%88%97%E4%BA%86%E3%80%82">数据排序</a></h1><p>order()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以mtcars数据为例对数据进行排序</span></span><br><span class="line">attach<span class="punctuation">(</span>mtcars<span class="punctuation">)</span> <span class="comment"># 固定数据集</span></span><br><span class="line"><span class="comment"># 按变量mpg排序</span></span><br><span class="line">newdata <span class="operator">&lt;-</span> mtcars<span class="punctuation">[</span>order<span class="punctuation">(</span>mpg<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span> </span><br><span class="line"><span class="comment"># 按变量mpg和cyl排序</span></span><br><span class="line">newdata <span class="operator">&lt;-</span> mtcars<span class="punctuation">[</span>order<span class="punctuation">(</span>mpg<span class="punctuation">,</span> cyl<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="comment">#按变量mpg（升序）和cyl（降序）排序</span></span><br><span class="line">newdata <span class="operator">&lt;-</span> mtcars<span class="punctuation">[</span>order<span class="punctuation">(</span>mpg<span class="punctuation">,</span> <span class="operator">-</span>cyl<span class="punctuation">)</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line">detach<span class="punctuation">(</span>mtcars<span class="punctuation">)</span> <span class="comment"># 解固定数据集</span></span><br></pre></td></tr></table></figure><h1 id="数据合并"><a href="#数据合并" class="headerlink" title="数据合并"></a><a href="https://www.w3cschool.cn/r/r_data_reshaping.html">数据合并</a></h1><p>向数据框添加列，通常用于向数据框中添加变量</p><ul><li><a href="https://zhuanlan.zhihu.com/p/104757467">merge() 函数</a><ul><li>数据帧必须具有相同的列名称，在其上进行合并</li></ul></li><li>cbind() 函数<ul><li>两数据框的行数相同，并且位置已经匹配完成</li></ul></li></ul><p>向数据框中添加行，纵向联结通常用于向数据框中添加观测</p><ul><li>rbind() 函数<ul><li>两个数据框必须拥有相同的变量，并且位置已经匹配完成</li></ul></li></ul><h2 id="merge"><a href="#merge" class="headerlink" title="merge()"></a><a href="https://zhuanlan.zhihu.com/p/104757467">merge()</a></h2><blockquote><p><strong>base 包（merge）</strong></p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">merge<span class="punctuation">(</span>x<span class="punctuation">,</span> y<span class="punctuation">,</span> by <span class="operator">=</span> intersect<span class="punctuation">(</span><span class="built_in">names</span><span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">names</span><span class="punctuation">(</span>y<span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      by.x <span class="operator">=</span> 列名<span class="number">1</span><span class="punctuation">,</span> by.y <span class="operator">=</span> 列名<span class="number">2</span><span class="punctuation">,</span> <span class="built_in">all</span> <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span> all.x <span class="operator">=</span> <span class="built_in">all</span><span class="punctuation">,</span> all.y <span class="operator">=</span> <span class="built_in">all</span><span class="punctuation">,</span></span><br><span class="line">      sort <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span> suffixes <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;.x&quot;</span><span class="punctuation">,</span><span class="string">&quot;.y&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> no.dups <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line">      incomparables <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">,</span> ...<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><ul><li>x,y：要合并的两个数据集</li><li>by：用于连接两个数据集的列，intersect(a,b)值向量a,b的交集，names(x)指提取数据集x的列名</li><li>by：intersect(names(x), names(y)) 是获取数据集x，y的列名后，提取其公共列名，作为两个数据集的连接列， 当有多个公共列时，需用下标指出公共列，如names(x)[1]，指定x数据集的第1列作为公共列。也可以直接写为 by &#x3D; “公共列名” ，前提是两个数据集中都有该列名，并且大小写完全一致，R语言区分大小写</li><li>by.x，by.y：指定依据哪些列关联数据框，<strong>默认值为相同列名的列</strong></li><li>all，all.x，all.y：指定x和y的行是否应该全在输出文件</li><li>sort：by指定的列（即公共列）是否要排序</li><li>suffixes：指定除by外相同列名的后缀；如设置 suffixes &#x3D; c(“.xx”, “.yy”)，两个数据框都有列名 grade，关联后就会被区分为 grade.xx 和 grade.yy</li><li>incomparables：指定by中哪些单元不进行关联</li></ul><p><strong>常用的参数</strong></p><ul><li>by<ul><li>根据相同列名的列进行关联</li></ul></li></ul><ul><li><p>by.x&#x2F;by.y</p><ul><li>可以分别指定两个数据框的列进行关联</li></ul></li><li><p>all&#x2F;all.x&#x2F;all.y</p><ul><li>逻辑变量，控制返回 x 和 y 所有&#x2F;仅 x 数据框&#x2F;仅 y 数据框的行</li></ul></li><li><p>sort</p><ul><li>逻辑变量，根据关联的列进行排序</li></ul></li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">grade1 <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>number <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span> <span class="number">3</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">)</span><span class="punctuation">,</span> Names <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;小明&quot;</span><span class="punctuation">,</span> <span class="string">&quot;小红&quot;</span><span class="punctuation">,</span> <span class="string">&quot;小李&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> math <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">90</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">,</span> <span class="number">100</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">grade2 <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>number <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">3</span><span class="punctuation">,</span> <span class="number">1</span><span class="punctuation">,</span> <span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span> NAMES <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;小红&quot;</span><span class="punctuation">,</span> <span class="string">&quot;小李&quot;</span><span class="punctuation">,</span> <span class="string">&quot;小张&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> english <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">100</span><span class="punctuation">,</span> <span class="number">90</span><span class="punctuation">,</span> <span class="number">80</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">grade3 <span class="operator">&lt;-</span> data</span><br><span class="line"><span class="comment"># 两个数据框定义了学号、姓名和成绩</span></span><br><span class="line">grade1</span><br><span class="line"><span class="comment">#   number Names math</span></span><br><span class="line"><span class="comment"># 1      2  小明   90</span></span><br><span class="line"><span class="comment"># 2      3  小红   80</span></span><br><span class="line"><span class="comment"># 3      1  小李  100</span></span><br><span class="line">grade2</span><br><span class="line"><span class="comment">#   number NAMES english</span></span><br><span class="line"><span class="comment"># 1      3  小红     100</span></span><br><span class="line"><span class="comment"># 2      1  小李      90</span></span><br><span class="line"><span class="comment"># 3      4  小张      80</span></span><br><span class="line"></span><br><span class="line">merge<span class="punctuation">(</span>grade1<span class="punctuation">,</span> grade2<span class="punctuation">)</span></span><br><span class="line"><span class="comment">#   number Names math NAMES english</span></span><br><span class="line"><span class="comment"># 1      1  小李  100  小李      90</span></span><br><span class="line"><span class="comment"># 2      3  小红   80  小红     100</span></span><br></pre></td></tr></table></figure><p>默认时根据同名列进行关联，在上例中Names和NAMES由于大小写不一致，因此未关联，解决这个问题我们可以使用by.x、by.y关联。</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">merge<span class="punctuation">(</span>grade1<span class="punctuation">,</span> grade2<span class="punctuation">,</span> by.x <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Names&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> by.y <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NAMES&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#   number Names math english</span></span><br><span class="line"><span class="comment"># 1      1  小李  100      90</span></span><br><span class="line"><span class="comment"># 2      3  小红   80     100</span></span><br></pre></td></tr></table></figure><p>通过 all&#x2F;all.x&#x2F;all.y 指定保留我们想要的行</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">merge<span class="punctuation">(</span>grade1<span class="punctuation">,</span> grade2<span class="punctuation">,</span> by.x <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Names&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> by.y <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NAMES&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      <span class="built_in">all</span> <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span> <span class="comment"># 返回并集（保留所有行）</span></span><br><span class="line"><span class="comment">#   number Names math english</span></span><br><span class="line"><span class="comment"># 1      1  小李  100      90</span></span><br><span class="line"><span class="comment"># 2      2  小明   90      NA</span></span><br><span class="line"><span class="comment"># 3      3  小红   80     100</span></span><br><span class="line"><span class="comment"># 4      4  小张   NA      80</span></span><br><span class="line"><span class="comment"># 使用 NA 填补了缺失值</span></span><br><span class="line"></span><br><span class="line">merge<span class="punctuation">(</span>grade1<span class="punctuation">,</span> grade2<span class="punctuation">,</span> by.x <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Names&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> by.y <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NAMES&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      all.x <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span> <span class="comment"># 仅保留 x 数据框的所有行</span></span><br><span class="line"><span class="comment">#   number Names math english</span></span><br><span class="line"><span class="comment"># 1      1  小李  100      90</span></span><br><span class="line"><span class="comment"># 2      2  小明   90      NA</span></span><br><span class="line"><span class="comment"># 3      3  小红   80     100</span></span><br><span class="line"><span class="comment"># 保留了 x 的所有行，因此小明的成绩被留下了</span></span><br><span class="line"></span><br><span class="line">merge<span class="punctuation">(</span>grade1<span class="punctuation">,</span> grade2<span class="punctuation">,</span> by.x <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;Names&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> by.y <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;number&quot;</span><span class="punctuation">,</span> <span class="string">&quot;NAMES&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      all.y <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span> <span class="comment"># 仅保留 y 数据框的所有行</span></span><br><span class="line"><span class="comment">#  number Names math english</span></span><br><span class="line"><span class="comment">#1      1  小李  100      90</span></span><br><span class="line"><span class="comment">#2      3  小红   80     100</span></span><br><span class="line"><span class="comment">#3      4  小张   NA      80</span></span><br></pre></td></tr></table></figure><p>最后我们通过 sort 对关联的变量进行排序。</p><p>默认 sort &#x3D; T，将 by 中的第一个变量作为第一依据，第二个变量作为第二依据，以此类推进行排序。</p><p>注意观察下述代码与之前的差异：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">merge<span class="punctuation">(</span>grade1<span class="punctuation">,</span> grade2<span class="punctuation">,</span> by.x <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Names&quot;</span><span class="punctuation">,</span> <span class="string">&quot;number&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span> by.y <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;NAMES&quot;</span><span class="punctuation">,</span> <span class="string">&quot;number&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">      <span class="built_in">all</span> <span class="operator">=</span> <span class="built_in">T</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#   Names number math english</span></span><br><span class="line"><span class="comment"># 1  小红      3   80     100</span></span><br><span class="line"><span class="comment"># 2  小李      1  100      90</span></span><br><span class="line"><span class="comment"># 3  小明      2   90      NA</span></span><br><span class="line"><span class="comment"># 4  小张      4   NA      80</span></span><br></pre></td></tr></table></figure><h2 id="cbind"><a href="#cbind" class="headerlink" title="cbind()"></a>cbind()</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create vector objects.</span></span><br><span class="line">city <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Tampa&quot;</span><span class="punctuation">,</span><span class="string">&quot;Seattle&quot;</span><span class="punctuation">,</span><span class="string">&quot;Hartford&quot;</span><span class="punctuation">,</span><span class="string">&quot;Denver&quot;</span><span class="punctuation">)</span></span><br><span class="line">state <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;FL&quot;</span><span class="punctuation">,</span><span class="string">&quot;WA&quot;</span><span class="punctuation">,</span><span class="string">&quot;CT&quot;</span><span class="punctuation">,</span><span class="string">&quot;CO&quot;</span><span class="punctuation">)</span></span><br><span class="line">zipcode <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">33602</span><span class="punctuation">,</span><span class="number">98104</span><span class="punctuation">,</span><span class="number">06161</span><span class="punctuation">,</span><span class="number">80294</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Combine above three vectors into one data frame.</span></span><br><span class="line">addresses <span class="operator">&lt;-</span> cbind<span class="punctuation">(</span>city<span class="punctuation">,</span>state<span class="punctuation">,</span>zipcode<span class="punctuation">)</span></span><br><span class="line">addresses</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">     city       state zipcode</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;Tampa&quot;</span>    <span class="string">&quot;FL&quot;</span>  <span class="string">&quot;33602&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;Seattle&quot;</span>  <span class="string">&quot;WA&quot;</span>  <span class="string">&quot;98104&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;Hartford&quot;</span> <span class="string">&quot;CT&quot;</span>  <span class="string">&quot;6161&quot;</span> </span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span> <span class="string">&quot;Denver&quot;</span>   <span class="string">&quot;CO&quot;</span>  <span class="string">&quot;80294&quot;</span></span><br></pre></td></tr></table></figure><h2 id="rbind"><a href="#rbind" class="headerlink" title="rbind()"></a>rbind()</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create another data frame with similar columns</span></span><br><span class="line">new.address <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span></span><br><span class="line">   city <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Lowry&quot;</span><span class="punctuation">,</span><span class="string">&quot;Charlotte&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">   state <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;CO&quot;</span><span class="punctuation">,</span><span class="string">&quot;FL&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">   zipcode <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;80230&quot;</span><span class="punctuation">,</span><span class="string">&quot;33949&quot;</span><span class="punctuation">)</span><span class="punctuation">,</span></span><br><span class="line">   stringsAsFactors <span class="operator">=</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">new.address</span><br><span class="line">       city state zipcode</span><br><span class="line"><span class="number">1</span>     Lowry    CO   <span class="number">80230</span></span><br><span class="line"><span class="number">2</span> Charlotte    FL   <span class="number">33949</span></span><br><span class="line"><span class="comment"># Combine rows form both the data frames.</span></span><br><span class="line">all.addresses <span class="operator">&lt;-</span> rbind<span class="punctuation">(</span>addresses<span class="punctuation">,</span>new.address<span class="punctuation">)</span></span><br><span class="line">all.addresses</span><br><span class="line">       city state zipcode</span><br><span class="line"><span class="number">1</span>     Tampa    FL   <span class="number">33602</span></span><br><span class="line"><span class="number">2</span>   Seattle    WA   <span class="number">98104</span></span><br><span class="line"><span class="number">3</span>  Hartford    CT    <span class="number">6161</span></span><br><span class="line"><span class="number">4</span>    Denver    CO   <span class="number">80294</span></span><br><span class="line"><span class="comment">#5、6为合并进来的行</span></span><br><span class="line"><span class="number">5</span>     Lowry    CO   <span class="number">80230</span></span><br><span class="line"><span class="number">6</span> Charlotte    FL   <span class="number">33949</span></span><br></pre></td></tr></table></figure><h1 id="数据集取子集"><a href="#数据集取子集" class="headerlink" title="数据集取子集"></a><a href="https://cloud.tencent.com/developer/article/1675395">数据集取子集</a></h1><h2 id="构建数据框"><a href="#构建数据框" class="headerlink" title="构建数据框"></a>构建数据框</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">PatientID<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span></span><br><span class="line">Data<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;03/20/20&quot;</span><span class="punctuation">,</span><span class="string">&quot;03/21/20&quot;</span><span class="punctuation">,</span><span class="string">&quot;03/22/20&quot;</span><span class="punctuation">,</span><span class="string">&quot;03/23/20&quot;</span><span class="punctuation">,</span><span class="string">&quot;03/24/20&quot;</span><span class="punctuation">,</span><span class="string">&quot;03/25/20&quot;</span><span class="punctuation">)</span></span><br><span class="line">Age<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">18</span><span class="punctuation">,</span><span class="number">25</span><span class="punctuation">,</span><span class="number">26</span><span class="punctuation">,</span><span class="number">35</span><span class="punctuation">,</span><span class="number">48</span><span class="punctuation">,</span><span class="number">50</span><span class="punctuation">)</span></span><br><span class="line">Gender<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;M&quot;</span><span class="punctuation">,</span><span class="string">&quot;F&quot;</span><span class="punctuation">,</span><span class="string">&quot;F&quot;</span><span class="punctuation">,</span><span class="string">&quot;M&quot;</span><span class="punctuation">,</span><span class="string">&quot;F&quot;</span><span class="punctuation">,</span><span class="string">&quot;M&quot;</span><span class="punctuation">)</span></span><br><span class="line">City<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;福州&quot;</span><span class="punctuation">,</span><span class="string">&quot;厦门&quot;</span><span class="punctuation">,</span><span class="string">&quot;泉州&quot;</span><span class="punctuation">,</span><span class="string">&quot;龙岩&quot;</span><span class="punctuation">,</span><span class="string">&quot;漳州&quot;</span><span class="punctuation">,</span><span class="string">&quot;三明&quot;</span><span class="punctuation">)</span></span><br><span class="line">Pr1<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;69&quot;</span><span class="punctuation">,</span><span class="string">&quot;57&quot;</span><span class="punctuation">,</span><span class="string">&quot;67&quot;</span><span class="punctuation">,</span><span class="string">&quot;65&quot;</span><span class="punctuation">,</span><span class="string">&quot;72&quot;</span><span class="punctuation">,</span><span class="string">&quot;55&quot;</span><span class="punctuation">)</span></span><br><span class="line">Pr2<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;180&quot;</span><span class="punctuation">,</span><span class="string">&quot;155&quot;</span><span class="punctuation">,</span><span class="string">&quot;159&quot;</span><span class="punctuation">,</span><span class="string">&quot;184&quot;</span><span class="punctuation">,</span><span class="string">&quot;167&quot;</span><span class="punctuation">,</span><span class="string">&quot;175&quot;</span><span class="punctuation">)</span></span><br><span class="line">Pr3<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;11&quot;</span><span class="punctuation">,</span><span class="string">&quot;14&quot;</span><span class="punctuation">,</span><span class="string">&quot;34&quot;</span><span class="punctuation">,</span><span class="string">&quot;23&quot;</span><span class="punctuation">,</span><span class="string">&quot;35&quot;</span><span class="punctuation">,</span><span class="string">&quot;12&quot;</span><span class="punctuation">)</span></span><br><span class="line">Pr4<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;6&quot;</span><span class="punctuation">,</span><span class="string">&quot;7&quot;</span><span class="punctuation">,</span><span class="string">&quot;5&quot;</span><span class="punctuation">,</span><span class="string">&quot;8&quot;</span><span class="punctuation">,</span><span class="string">&quot;6&quot;</span><span class="punctuation">,</span><span class="string">&quot;9&quot;</span><span class="punctuation">)</span></span><br><span class="line">Pr5<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;20&quot;</span><span class="punctuation">,</span><span class="string">&quot;34&quot;</span><span class="punctuation">,</span><span class="string">&quot;35&quot;</span><span class="punctuation">,</span><span class="string">&quot;56&quot;</span><span class="punctuation">,</span><span class="string">&quot;47&quot;</span><span class="punctuation">,</span><span class="string">&quot;19&quot;</span><span class="punctuation">)</span></span><br><span class="line">S1<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">88</span><span class="punctuation">,</span><span class="number">78</span><span class="punctuation">,</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">56</span><span class="punctuation">,</span><span class="number">45</span><span class="punctuation">,</span><span class="number">60</span><span class="punctuation">)</span></span><br><span class="line">S2<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">67</span><span class="punctuation">,</span><span class="number">87</span><span class="punctuation">,</span><span class="number">45</span><span class="punctuation">,</span><span class="number">25</span><span class="punctuation">,</span><span class="literal">NA</span><span class="punctuation">,</span><span class="number">96</span><span class="punctuation">)</span></span><br><span class="line">mydata<span class="operator">&lt;-</span>data.frame<span class="punctuation">(</span>PatientID<span class="punctuation">,</span>Data<span class="punctuation">,</span>Age<span class="punctuation">,</span>Gender<span class="punctuation">,</span>City<span class="punctuation">,</span>Pr1<span class="punctuation">,</span>Pr2<span class="punctuation">,</span>Pr3<span class="punctuation">,</span>Pr4<span class="punctuation">,</span>Pr5<span class="punctuation">,</span>S1<span class="punctuation">,</span>S2<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  PatientID     Data Age Gender City Pr1 Pr2 Pr3 Pr4 Pr5 S1 S2</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span> <span class="number">03</span><span class="operator">/</span><span class="number">20</span><span class="operator">/</span><span class="number">20</span>  <span class="number">18</span>      M 福州  <span class="number">69</span> <span class="number">180</span>  <span class="number">11</span>   <span class="number">6</span>  <span class="number">20</span> <span class="number">88</span> <span class="number">67</span></span><br><span class="line"><span class="number">2</span>         <span class="number">2</span> <span class="number">03</span><span class="operator">/</span><span class="number">21</span><span class="operator">/</span><span class="number">20</span>  <span class="number">25</span>      <span class="built_in">F</span> 厦门  <span class="number">57</span> <span class="number">155</span>  <span class="number">14</span>   <span class="number">7</span>  <span class="number">34</span> <span class="number">78</span> <span class="number">87</span></span><br><span class="line"><span class="number">3</span>         <span class="number">3</span> <span class="number">03</span><span class="operator">/</span><span class="number">22</span><span class="operator">/</span><span class="number">20</span>  <span class="number">26</span>      <span class="built_in">F</span> 泉州  <span class="number">67</span> <span class="number">159</span>  <span class="number">34</span>   <span class="number">5</span>  <span class="number">35</span> <span class="literal">NA</span> <span class="number">45</span></span><br><span class="line"><span class="number">4</span>         <span class="number">4</span> <span class="number">03</span><span class="operator">/</span><span class="number">23</span><span class="operator">/</span><span class="number">20</span>  <span class="number">35</span>      M 龙岩  <span class="number">65</span> <span class="number">184</span>  <span class="number">23</span>   <span class="number">8</span>  <span class="number">56</span> <span class="number">56</span> <span class="number">25</span></span><br><span class="line"><span class="number">5</span>         <span class="number">5</span> <span class="number">03</span><span class="operator">/</span><span class="number">24</span><span class="operator">/</span><span class="number">20</span>  <span class="number">48</span>      <span class="built_in">F</span> 漳州  <span class="number">72</span> <span class="number">167</span>  <span class="number">35</span>   <span class="number">6</span>  <span class="number">47</span> <span class="number">45</span> <span class="literal">NA</span></span><br><span class="line"><span class="number">6</span>         <span class="number">6</span> <span class="number">03</span><span class="operator">/</span><span class="number">25</span><span class="operator">/</span><span class="number">20</span>  <span class="number">50</span>      M 三明  <span class="number">55</span> <span class="number">175</span>  <span class="number">12</span>   <span class="number">9</span>  <span class="number">19</span> <span class="number">60</span> <span class="number">96</span></span><br></pre></td></tr></table></figure><h2 id="选入（保留）变量"><a href="#选入（保留）变量" class="headerlink" title="选入（保留）变量"></a>选入（保留）变量</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">newdata1<span class="operator">&lt;-</span>mydata<span class="punctuation">[</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">6</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">)</span><span class="punctuation">]</span><span class="comment">#其中的“,”表示默认选择所有行</span></span><br><span class="line"><span class="operator">&gt;</span> newdata1</span><br><span class="line">newdata1</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  Pr1 Pr2 Pr3 Pr4 Pr5</span><br><span class="line"><span class="number">1</span>  <span class="number">69</span> <span class="number">180</span>  <span class="number">11</span>   <span class="number">6</span>  <span class="number">20</span></span><br><span class="line"><span class="number">2</span>  <span class="number">57</span> <span class="number">155</span>  <span class="number">14</span>   <span class="number">7</span>  <span class="number">34</span></span><br><span class="line"><span class="number">3</span>  <span class="number">67</span> <span class="number">159</span>  <span class="number">34</span>   <span class="number">5</span>  <span class="number">35</span></span><br><span class="line"><span class="number">4</span>  <span class="number">65</span> <span class="number">184</span>  <span class="number">23</span>   <span class="number">8</span>  <span class="number">56</span></span><br><span class="line"><span class="number">5</span>  <span class="number">72</span> <span class="number">167</span>  <span class="number">35</span>   <span class="number">6</span>  <span class="number">47</span></span><br><span class="line"><span class="number">6</span>  <span class="number">55</span> <span class="number">175</span>  <span class="number">12</span>   <span class="number">9</span>  <span class="number">19</span></span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">newdata3<span class="operator">&lt;-</span>paste<span class="punctuation">(</span><span class="string">&quot;Pr&quot;</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span>sep<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line">newdata3<span class="operator">&lt;-</span>mydata<span class="punctuation">[</span>newdata3<span class="punctuation">]</span></span><br><span class="line">newdata3</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> newdata3<span class="operator">&lt;-</span>paste<span class="punctuation">(</span><span class="string">&quot;Pr&quot;</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span>sep<span class="operator">=</span><span class="string">&quot;&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> newdata3</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;Pr1&quot;</span> <span class="string">&quot;Pr2&quot;</span> <span class="string">&quot;Pr3&quot;</span> <span class="string">&quot;Pr4&quot;</span> <span class="string">&quot;Pr5&quot;</span></span><br><span class="line"><span class="operator">-</span><span class="operator">-</span><span class="operator">-</span></span><br><span class="line">  Pr1 Pr2 Pr3 Pr4 Pr5</span><br><span class="line"><span class="number">1</span>  <span class="number">69</span> <span class="number">180</span>  <span class="number">11</span>   <span class="number">6</span>  <span class="number">20</span></span><br><span class="line"><span class="number">2</span>  <span class="number">57</span> <span class="number">155</span>  <span class="number">14</span>   <span class="number">7</span>  <span class="number">34</span></span><br><span class="line"><span class="number">3</span>  <span class="number">67</span> <span class="number">159</span>  <span class="number">34</span>   <span class="number">5</span>  <span class="number">35</span></span><br><span class="line"><span class="number">4</span>  <span class="number">65</span> <span class="number">184</span>  <span class="number">23</span>   <span class="number">8</span>  <span class="number">56</span></span><br><span class="line"><span class="number">5</span>  <span class="number">72</span> <span class="number">167</span>  <span class="number">35</span>   <span class="number">6</span>  <span class="number">47</span></span><br><span class="line"><span class="number">6</span>  <span class="number">55</span> <span class="number">175</span>  <span class="number">12</span>   <span class="number">9</span>  <span class="number">19</span></span><br></pre></td></tr></table></figure><ul><li><a href="https://www.cnblogs.com/shanger/p/12180706.html#:~:text=R%E8%AF%AD%E8%A8%80%20%E4%B8%AD%E7%9A%84%20paste%2Fpaste0%20%E5%87%BD%E6%95%B0.%20paste%2Fpaste0%20%E5%87%BD%E6%95%B0%EF%BC%8C%20%E7%94%A8%E4%BA%8E%E8%BF%9E%E6%8E%A5%E5%AD%97%E7%AC%A6%EF%BC%88%E5%90%91%E9%87%8F%EF%BC%89%EF%BC%8C%20paste,%22%3D%22%29%20%23%20%E7%94%A8%E2%80%9C%3D%E2%80%9D%20%E8%BF%9E%E6%8E%A5%E5%AD%97%E7%AC%A6%20a%20%E5%92%8C%20b%5B1%5D%20%22a%3Db%22.">paste()</a></li></ul><h3 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">newdata2<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Pr1&quot;</span><span class="punctuation">,</span><span class="string">&quot;Pr2&quot;</span><span class="punctuation">,</span><span class="string">&quot;Pr3&quot;</span><span class="punctuation">,</span><span class="string">&quot;Pr4&quot;</span><span class="punctuation">,</span><span class="string">&quot;Pr5&quot;</span><span class="punctuation">)</span></span><br><span class="line">newdata2<span class="operator">&lt;-</span>mydata<span class="punctuation">[</span>newdata2<span class="punctuation">]</span></span><br><span class="line">newdata2</span><br></pre></td></tr></table></figure><h2 id="剔除（丢弃）变量"><a href="#剔除（丢弃）变量" class="headerlink" title="剔除（丢弃）变量"></a>剔除（丢弃）变量</h2><blockquote><p>若某个变量出现缺失值，在进一步分析之前可能需要丢掉</p></blockquote><h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">newdata4<span class="operator">&lt;-</span><span class="built_in">names</span><span class="punctuation">(</span>mydata<span class="punctuation">)</span><span class="operator">%in%</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Pr2&quot;</span><span class="punctuation">,</span><span class="string">&quot;Pr4&quot;</span><span class="punctuation">)</span></span><br><span class="line">newdata5<span class="operator">&lt;-</span>mydata<span class="punctuation">[</span><span class="operator">!</span>newdata4<span class="punctuation">]</span></span><br><span class="line">newdata5</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  PatientID     Data Age Gender City Pr1 Pr3 Pr5 S1 S2</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span> <span class="number">03</span><span class="operator">/</span><span class="number">20</span><span class="operator">/</span><span class="number">20</span>  <span class="number">18</span>      M 福州  <span class="number">69</span>  <span class="number">11</span>  <span class="number">20</span> <span class="number">88</span> <span class="number">67</span></span><br><span class="line"><span class="number">2</span>         <span class="number">2</span> <span class="number">03</span><span class="operator">/</span><span class="number">21</span><span class="operator">/</span><span class="number">20</span>  <span class="number">25</span>      <span class="built_in">F</span> 厦门  <span class="number">57</span>  <span class="number">14</span>  <span class="number">34</span> <span class="number">78</span> <span class="number">87</span></span><br><span class="line"><span class="number">3</span>         <span class="number">3</span> <span class="number">03</span><span class="operator">/</span><span class="number">22</span><span class="operator">/</span><span class="number">20</span>  <span class="number">26</span>      <span class="built_in">F</span> 泉州  <span class="number">67</span>  <span class="number">34</span>  <span class="number">35</span> <span class="literal">NA</span> <span class="number">45</span></span><br><span class="line"><span class="number">4</span>         <span class="number">4</span> <span class="number">03</span><span class="operator">/</span><span class="number">23</span><span class="operator">/</span><span class="number">20</span>  <span class="number">35</span>      M 龙岩  <span class="number">65</span>  <span class="number">23</span>  <span class="number">56</span> <span class="number">56</span> <span class="number">25</span></span><br><span class="line"><span class="number">5</span>         <span class="number">5</span> <span class="number">03</span><span class="operator">/</span><span class="number">24</span><span class="operator">/</span><span class="number">20</span>  <span class="number">48</span>      <span class="built_in">F</span> 漳州  <span class="number">72</span>  <span class="number">35</span>  <span class="number">47</span> <span class="number">45</span> <span class="literal">NA</span></span><br><span class="line"><span class="number">6</span>         <span class="number">6</span> <span class="number">03</span><span class="operator">/</span><span class="number">25</span><span class="operator">/</span><span class="number">20</span>  <span class="number">50</span>      M 三明  <span class="number">55</span>  <span class="number">12</span>  <span class="number">19</span> <span class="number">60</span> <span class="number">96</span></span><br></pre></td></tr></table></figure><p><strong>解释</strong></p><ul><li><a href="https://vimsky.com/examples/usage/get-or-set-names-of-elements-of-an-object-in-r-programming-names-function.html">names()</a></li><li><a href="https://www.jianshu.com/p/122044b0e798">%in%</a> ：用于提取两个向量中重合的部分，整体返回值为逻辑值</li><li>mydata[!newdata4]：!表示取反，也就是说返回除了“pr2”，”pr4”以外的值。</li></ul><h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二"></a>方法二</h3><blockquote><p>知道元素位置时</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newdata6<span class="operator">&lt;-</span>mydata<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="operator">-</span><span class="number">7</span><span class="punctuation">,</span><span class="operator">-</span><span class="number">9</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">newdata6</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  PatientID     Data Age Gender City Pr1 Pr3 Pr5 S1 S2</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span> <span class="number">03</span><span class="operator">/</span><span class="number">20</span><span class="operator">/</span><span class="number">20</span>  <span class="number">18</span>      M 福州  <span class="number">69</span>  <span class="number">11</span>  <span class="number">20</span> <span class="number">88</span> <span class="number">67</span></span><br><span class="line"><span class="number">2</span>         <span class="number">2</span> <span class="number">03</span><span class="operator">/</span><span class="number">21</span><span class="operator">/</span><span class="number">20</span>  <span class="number">25</span>      <span class="built_in">F</span> 厦门  <span class="number">57</span>  <span class="number">14</span>  <span class="number">34</span> <span class="number">78</span> <span class="number">87</span></span><br><span class="line"><span class="number">3</span>         <span class="number">3</span> <span class="number">03</span><span class="operator">/</span><span class="number">22</span><span class="operator">/</span><span class="number">20</span>  <span class="number">26</span>      <span class="built_in">F</span> 泉州  <span class="number">67</span>  <span class="number">34</span>  <span class="number">35</span> <span class="literal">NA</span> <span class="number">45</span></span><br><span class="line"><span class="number">4</span>         <span class="number">4</span> <span class="number">03</span><span class="operator">/</span><span class="number">23</span><span class="operator">/</span><span class="number">20</span>  <span class="number">35</span>      M 龙岩  <span class="number">65</span>  <span class="number">23</span>  <span class="number">56</span> <span class="number">56</span> <span class="number">25</span></span><br><span class="line"><span class="number">5</span>         <span class="number">5</span> <span class="number">03</span><span class="operator">/</span><span class="number">24</span><span class="operator">/</span><span class="number">20</span>  <span class="number">48</span>      <span class="built_in">F</span> 漳州  <span class="number">72</span>  <span class="number">35</span>  <span class="number">47</span> <span class="number">45</span> <span class="literal">NA</span></span><br><span class="line"><span class="number">6</span>         <span class="number">6</span> <span class="number">03</span><span class="operator">/</span><span class="number">25</span><span class="operator">/</span><span class="number">20</span>  <span class="number">50</span>      M 三明  <span class="number">55</span>  <span class="number">12</span>  <span class="number">19</span> <span class="number">60</span> <span class="number">96</span></span><br></pre></td></tr></table></figure><h3 id="方法三-1"><a href="#方法三-1" class="headerlink" title="方法三"></a>方法三</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mydata<span class="operator">$</span>Pr2<span class="operator">&lt;-</span>mydata<span class="operator">$</span>Pr4<span class="operator">&lt;-</span><span class="literal">NULL</span></span><br><span class="line">mydata</span><br></pre></td></tr></table></figure><h2 id="选入观测"><a href="#选入观测" class="headerlink" title="选入观测"></a>选入观测</h2><h3 id="subset-函数"><a href="#subset-函数" class="headerlink" title="subset()函数"></a><a href="https://www.cnblogs.com/jiaxinwei/p/12239798.html">subset()函数</a></h3><h4 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">subset<span class="punctuation">(</span>dataset <span class="punctuation">,</span> subset <span class="punctuation">,</span> select <span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><ul><li>dataset 是要进行操作的数据集</li><li>subset 是对数据的某些字段进行操作</li><li>select 选取要显示的字段</li></ul><h3 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h3><h4 id="选择mydata中的Age大于等于30或Age小于等于25的行，保留变量Pr1到Pr5"><a href="#选择mydata中的Age大于等于30或Age小于等于25的行，保留变量Pr1到Pr5" class="headerlink" title="选择mydata中的Age大于等于30或Age小于等于25的行，保留变量Pr1到Pr5"></a>选择mydata中的Age大于等于30或Age小于等于25的行，保留变量Pr1到Pr5</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">newdata9<span class="operator">&lt;-</span>subset<span class="punctuation">(</span>mydata<span class="punctuation">,</span>Age<span class="operator">&gt;=</span><span class="number">35</span><span class="operator">|</span>Age<span class="operator">&lt;</span><span class="number">25</span><span class="punctuation">,</span>select<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span>Pr1<span class="punctuation">,</span>Pr2<span class="punctuation">,</span>Pr3<span class="punctuation">,</span>Pr4<span class="punctuation">,</span>Pr5<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">newdata9</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  PatientID     Data Age Gender City Pr1 Pr3 Pr5 S1 S2</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span> <span class="number">03</span><span class="operator">/</span><span class="number">20</span><span class="operator">/</span><span class="number">20</span>  <span class="number">18</span>      M 福州  <span class="number">69</span>  <span class="number">11</span>  <span class="number">20</span> <span class="number">88</span> <span class="number">67</span></span><br><span class="line"><span class="number">4</span>         <span class="number">4</span> <span class="number">03</span><span class="operator">/</span><span class="number">23</span><span class="operator">/</span><span class="number">20</span>  <span class="number">35</span>      M 龙岩  <span class="number">65</span>  <span class="number">23</span>  <span class="number">56</span> <span class="number">56</span> <span class="number">25</span></span><br><span class="line"><span class="number">5</span>         <span class="number">5</span> <span class="number">03</span><span class="operator">/</span><span class="number">24</span><span class="operator">/</span><span class="number">20</span>  <span class="number">48</span>      <span class="built_in">F</span> 漳州  <span class="number">72</span>  <span class="number">35</span>  <span class="number">47</span> <span class="number">45</span> <span class="literal">NA</span></span><br><span class="line"><span class="number">6</span>         <span class="number">6</span> <span class="number">03</span><span class="operator">/</span><span class="number">25</span><span class="operator">/</span><span class="number">20</span>  <span class="number">50</span>      M 三明  <span class="number">55</span>  <span class="number">12</span>  <span class="number">19</span> <span class="number">60</span> <span class="number">96</span></span><br></pre></td></tr></table></figure><h4 id="选60岁以上的男性，并保留变量Age到S1之间所有的列"><a href="#选60岁以上的男性，并保留变量Age到S1之间所有的列" class="headerlink" title="选60岁以上的男性，并保留变量Age到S1之间所有的列"></a>选60岁以上的男性，并保留变量Age到S1之间所有的列</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  Gender City Pr1 Pr3 Pr5 S1</span><br><span class="line"><span class="number">4</span>      M 龙岩  <span class="number">65</span>  <span class="number">23</span>  <span class="number">56</span> <span class="number">56</span></span><br><span class="line"><span class="number">6</span>      M 三明  <span class="number">55</span>  <span class="number">12</span>  <span class="number">19</span> <span class="number">60</span></span><br></pre></td></tr></table></figure><h2 id="使用SQL语句操作数据框"><a href="#使用SQL语句操作数据框" class="headerlink" title="使用SQL语句操作数据框"></a>使用SQL语句操作数据框</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;sqldf&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>sqldf<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="随机抽样"><a href="#随机抽样" class="headerlink" title="随机抽样"></a><a href="https://www.jianshu.com/p/20bb2528753b">随机抽样</a></h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sample<span class="punctuation">(</span>x<span class="punctuation">,</span> size<span class="punctuation">,</span> replace <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>参数详解</p><ul><li>x 整体数据，以向量形式给出</li><li>size 抽取样本的数目</li><li>replace 如果为F（默认），则是不重复抽样，此时size不能大于x的长度；<br>如果为T，则是重复抽样，此时size允许大于x的长度</li></ul><h1 id="日期值"><a href="#日期值" class="headerlink" title="日期值"></a>日期值</h1><table><thead><tr><th>格 式</th><th>涵 义</th></tr></thead><tbody><tr><td>%Y</td><td>年份，以四位数字表示，2007</td></tr><tr><td>%m</td><td>月份，以数字形式表示，从01到12</td></tr><tr><td>%d</td><td>月份中当的天数，从01到31</td></tr><tr><td>%b</td><td>月份，缩写，Feb</td></tr><tr><td>%B</td><td>月份，完整的月份名，指英文，February</td></tr><tr><td>%y</td><td>年份，以二位数字表示，07</td></tr><tr><td>……</td><td>……</td></tr></tbody></table><p>字符型转换为日期</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">as.Date<span class="punctuation">(</span><span class="punctuation">)</span> </span><br></pre></td></tr></table></figure><p>返回当天日期</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sys.Date<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>返回当前日期和时间</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">date<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>输出指定格式的日期值</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">format<span class="punctuation">(</span>x<span class="punctuation">,</span>format<span class="operator">=</span><span class="string">&quot;output_format&quot;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>计算时间间隔</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">difftime<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>将日期转换为字符型变量</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">as.character</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>其它复杂操作</p><ul><li>lubridate包、timeDate包等</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio Part 3</title>
      <link href="/posts/3831880591/"/>
      <url>/posts/3831880591/</url>
      
        <content type="html"><![CDATA[<h1 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h1><h2 id="实现步骤"><a href="#实现步骤" class="headerlink" title="实现步骤"></a>实现步骤</h2><ol><li>关联控件（如按钮）</li><li>设置控件事件监听</li><li>在监听接口添加事件处理程序</li><li>实现接口时，需要重写方法</li></ol><h2 id="以登录页面为例"><a href="#以登录页面为例" class="headerlink" title="以登录页面为例"></a>以登录页面为例</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/imageView&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">tools:srcCompat</span>=<span class="string">&quot;@tools:sample/avatars&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editTextTextPersonName8&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;250dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">&quot;textPersonName&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">&quot;48dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;usr&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/editTextTextPassword&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;250dp&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:ems</span>=<span class="string">&quot;10&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:hint</span>=<span class="string">&quot;pswd&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:inputType</span>=<span class="string">&quot;textPassword&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:minHeight</span>=<span class="string">&quot;48dp&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:orientation</span>=<span class="string">&quot;horizontal&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/button9&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;登录&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_marginRight</span>=<span class="string">&quot;10dp&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">&quot;@+id/button8&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:text</span>=<span class="string">&quot;取消&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20221005211901497.png" alt="image-20221005211901497"></p><h3 id="事件一"><a href="#事件一" class="headerlink" title="事件一"></a>事件一</h3><blockquote><p>当点击登录按钮后，跳转到登录成功页面</p></blockquote><p>首先登录按钮需要设置<code>OnClickListener</code>监听，当按钮被点击，通过<code>OnClickListener</code>监听接口触发<code>onClick</code>事件，实现用户需要的功能。</p><h4 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lptexas.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="comment">//事件处理之0调用接口——添加&quot;implements &lt;接口&gt; ...&quot;</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">View</span>.OnClickListener&#123;</span><br><span class="line">    <span class="comment">//事件处理之1定义widget组件</span></span><br><span class="line">    EditText user_name,user_password;</span><br><span class="line">    Button login_button;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.layout_linear_login);</span><br><span class="line">        <span class="comment">//事件处理之2关联组件——将xml中的标签与widget组件关联</span></span><br><span class="line">        user_name=findViewById(R.id.user_name);</span><br><span class="line">        user_password=findViewById(R.id.user_password);</span><br><span class="line">        login_button=findViewById(R.id.login_button);</span><br><span class="line">        <span class="comment">//事件处理之3设置事件监听接口——在此处我们需要监听点击“登录按钮”，故使用onClickListner这个接口</span></span><br><span class="line">        login_button.setOnClickListener(<span class="built_in">this</span>);</span><br><span class="line"><span class="comment">//&quot;this&quot;指当前类</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//事件处理之4重写onClick方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> user_name.getText()+<span class="string">&quot;. &quot;</span>+user_password.getText();</span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>,str, Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体步骤</p><ol><li>调用接口——添加”implements &lt;接口&gt; …”</li><li>定义widget组件</li><li>将xml中的标签与widget组件关联</li><li>设置事件监听接口——在此处我们需要监听点击“登录按钮”，故使用onClickListner这个接口</li><li>重写onClick方法</li></ol><h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><h2 id="Toast消息提示框"><a href="#Toast消息提示框" class="headerlink" title="Toast消息提示框"></a><a href="https://www.imooc.com/wiki/androidlesson/toast.html">Toast消息提示框</a></h2><p>Toast为当前视图显示一个浮动的显示块，但不会获得焦点。</p><p>Toast提供两个静态方法，他们会返回一个Toast对象，若需要显示，只需要调用show()方法即可。</p><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Toast <span class="title function_">makeText</span><span class="params">(Context context,<span class="type">int</span> resld,<span class="type">int</span> duration)</span></span><br></pre></td></tr></table></figure><ul><li><p>text: 指定消息的来源。可以指定String资源，使用&lt;string.…&#x2F;&gt;标签在XML资源文件中<br>定义，还可以指定一个字符串用于消息展示。</p></li><li><p>Duration: 设置Toast的持续时间，一般使用Toast自带的两个整形的常量:<br>LENGTH LONG (1，时间稍长) 、LENGTH_SHORT (0，时间稍短) ，针对不同的使<br>用场景，选择不用的持续时间。</p></li><li><p>Toast消息的默认显示位置在屏幕的中间偏下，使用setGravity(int gravity int xOffset<br>int yOffset)方法可设置Toast消息的位置，它有三个参数，gravity设置一个重力方向，<br>另外两个设置水平和垂直方向的偏移量。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> Toast <span class="title function_">makeText</span><span class="params">(Content context,CharSequence text,<span class="type">int</span> duration)</span></span><br></pre></td></tr></table></figure></li><li><p>Context: 上下文对象，</p></li><li><p>resld: 用于显示的消息来源，</p></li><li><p>Duration: 设置持续时间。</p></li></ul><h2 id="进度条ProgressBar"><a href="#进度条ProgressBar" class="headerlink" title="进度条ProgressBar"></a>进度条ProgressBar</h2><p>用于显示一个过程</p><h3 id="类型"><a href="#类型" class="headerlink" title="类型"></a>类型</h3><ul><li>默认ProgressBar<ul><li>圆形进度，不停的转圈，不显示具体数值</li></ul></li><li>横向ProgressBar<ul><li>显示横向进度，设置ProgressBar的Style为<code>style=&quot;?android:attr/progressBarStyleHorizontal&quot;</code><ul><li>属性<ul><li>max：指定进度条总进度值</li><li>progress：设置当前进度值，即初始进度值</li><li>secondaryProgress：指第二进度值（缓冲进度）</li></ul></li></ul></li></ul></li></ul><p><img src="https://lptexas.top/img/post/image-20221008103908301.png" alt="image-20221008103908301"></p><h2 id="单选组件与复选组件"><a href="#单选组件与复选组件" class="headerlink" title="单选组件与复选组件"></a>单选组件与复选组件</h2><h3 id="单选组件RadioGroup"><a href="#单选组件RadioGroup" class="headerlink" title="单选组件RadioGroup"></a>单选组件RadioGroup</h3><p>一个程序中可有一个或多个RadioGroup，它是RadioButton的承载体。</p><p>一个RadioGroup中可有一个或多个RadioButton，它是仅可以选择一项的单选组件。</p><h3 id="复选按钮CheckBox"><a href="#复选按钮CheckBox" class="headerlink" title="复选按钮CheckBox"></a>复选按钮CheckBox</h3><p>复选按钮是Button的子类，其属性和方法继承于按钮Button。</p><h2 id="ListView类"><a href="#ListView类" class="headerlink" title="ListView类"></a><a href="https://blog.csdn.net/indeedes/article/details/119530068">ListView类</a></h2><p>ListView是一个比较常用的控件。它以列表的形式 展示具体数据内容，并且能够根据数据的长度自适应屏幕显示。</p><p>该组件必须与<a href="https://www.php.cn/java-article-411857.html">适配器</a>配合使用，由适配器提供显示样式和显示数据。</p><p><img src="https://lptexas.top/img/post/image-20221008112006194.png" alt="image-20221008112006194"></p><h3 id="常见的适配器"><a href="#常见的适配器" class="headerlink" title="常见的适配器"></a>常见的适配器</h3><ul><li><p>BaseAdapter是一个抽象类，继承它需要实现较多的方法，所以也就具有较高的灵<br>活性;</p></li><li><p>ArrayAdapter支持泛型操作，最为简单，只能展示文字。</p></li><li><p>SimpleAdapter有最好的扩充性，可以自定义出各种效果。</p></li></ul><h4 id="ArrayAdapter"><a href="#ArrayAdapter" class="headerlink" title="ArrayAdapter"></a>ArrayAdapter</h4><blockquote><p>使用ArrayAdapter来装配数据，连接 ListView 视图对象和数组来装配一批数据。</p></blockquote><p>ArrayAdapter的构造需要3个参数，依次为this、Listltem布局文件(注意是列表每一行的布局) 、数据源 (一个数组集合) 。</p><blockquote><p>Android系统内置了多种Listltem布局方式。</p></blockquote><ul><li>android.R.layout.simple list_item_1: 一行text。</li><li>android.R.layout.simple list_item_2: 一行title，一行text。</li></ul><blockquote><p>用setAdapter()完成适配的最后工作。</p></blockquote><p><strong>示例</strong></p><blockquote><p>列表的显示需要三个元素:</p></blockquote><ol><li>ListVeiw: 用来展示列表的View。</li><li>适配器: 用来把数据映射到ListView上的中介。</li><li>数据: 具体的将被映射的字符串，图片，或者基本组件。</li></ol><blockquote><p>OnltemclickListener是一个接口， 用于监听列表组件选项的触发事件。</p></blockquote><blockquote><p>可以用Toast.makeText().show()显示信息</p></blockquote><p><strong>具体实现</strong></p><blockquote><p>对应<code>ListViewActivity</code>&amp;<code>activity_list_view</code></p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lptexas.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ListViewActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title class_">AdapterView</span>.OnItemClickListener &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_list_view);</span><br><span class="line">        <span class="comment">//关联组件</span></span><br><span class="line">        ListView listView;</span><br><span class="line">        listView=(ListView) findViewById(R.id.listview);</span><br><span class="line">        <span class="comment">//数据</span></span><br><span class="line">        String[] data=&#123;<span class="string">&quot;后勤管理中心&quot;</span>,<span class="string">&quot;校园服务&quot;</span>,<span class="string">&quot;图书馆预约&quot;</span>,<span class="string">&quot;企业会话&quot;</span>&#125;;</span><br><span class="line">        <span class="comment">//数组适配器</span></span><br><span class="line">        ArrayAdapter adapter=<span class="keyword">new</span> <span class="title class_">ArrayAdapter</span>&lt;String&gt;(<span class="built_in">this</span>, android.R.layout.simple_list_item_1,data);</span><br><span class="line">        listView.setAdapter(adapter);</span><br><span class="line">        listView.setOnItemClickListener(<span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(AdapterView&lt;?&gt; adapterView, View view, <span class="type">int</span> i, <span class="type">long</span> l)</span> &#123;</span><br><span class="line">        Toast.makeText(<span class="built_in">this</span>,<span class="string">&quot;您选中的是&quot;</span>+((TextView)view).getText(),Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">&quot;vertical&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">&quot;.ListViewActivity&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/textView10&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">&quot;智慧校园&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">&quot;@+id/listview&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_weight</span>=<span class="string">&quot;0&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="与列表（项）交互"><a href="#与列表（项）交互" class="headerlink" title="与列表（项）交互"></a>与列表（项）交互</h2><p>第一种：OnItemClickListener listener1; &#x2F;&#x2F;单击Item时调用</p><p>第二种：OnItemSelectedListener listener2; &#x2F;&#x2F;选中Item后调用</p><h2 id="ListActivity类"><a href="#ListActivity类" class="headerlink" title="ListActivity类"></a>ListActivity类</h2><p>与普通Activity区别不大，只是实现了一些封装。做了许多优化，方便显示列表信息。</p><p>ListActivity类继承于Activity，默认绑定了一个ListView组件，并提供一些与ListView处理相关的操作。</p><p>默认继承的是AppCompatActivity类。还可以直接从Activity类继承。</p><h3 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h3><p>getListView()：返回绑定的ListView组件。</p><h1 id="Activivty与Intent"><a href="#Activivty与Intent" class="headerlink" title="Activivty与Intent"></a>Activivty与Intent</h1><h2 id="Activity基础"><a href="#Activity基础" class="headerlink" title="Activity基础"></a><a href="https://lptexas-cub.github.io/posts/2472733465/#%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%BB%84%E6%88%90">Activity基础</a></h2><p>Activity是Android中最基本的组件，显示可视化的用户界面，接受与用户交互所产生的界面事件。</p><h3 id="Activity生命周期"><a href="#Activity生命周期" class="headerlink" title="Activity生命周期"></a>Activity生命周期</h3><blockquote><p>从启动到销毁的过程</p></blockquote><p>四种状态</p><ol><li><p>运行状态（Active or Running）</p><p>界面位于最上层，完全能被看见，可交互。</p></li><li><p>暂停状态（Paused）</p><p>界面被部分遮挡，可见但不拥有焦点，不能交互。（此时保留所有的状态和成员信息并保持与ctivity管理器的连接，当内存不足时，这个暂停状态的Activity可能被kill）</p></li><li><p>停止状态（Stopped）</p><p>界面被全部遮挡，完全看不见，不能交互。（仍然保留当前状态和成员信息，如果内存不足这个Activity很容易被kill）</p></li><li><p>销毁状态（Killed） </p><p>进程终止、Activity从栈中移除，需要重新启动才可以显示和使用。</p></li></ol><p><img src="https://lptexas.top/img/post/image-20221005110147530.png" alt="image-20221005110147530"></p><p align="center">Activity的四种状态转换关系图</p><p>当我们从一种状态切换到另一种状态时会触发一些事件，执行一些<code>回调函数（方法）</code></p><p><img src="https://lptexas.top/img/post/image-20221005110530493.png" alt="image-20221005110530493"></p><h3 id="回调函数"><a href="#回调函数" class="headerlink" title="回调函数"></a><a href="https://my.oschina.net/zhangyujian/blog/786434#:~:text=2.Activity%20%E7%8A%B6%E6%80%81%E4%BF%9D%E5%AD%98%20%2F%20%E6%81%A2%E5%A4%8D%E7%9A%84%E4%BA%8B%E4%BB%B6%E5%9B%9E%E8%B0%83%E5%87%BD%E6%95%B0%20onSaveInstanceState%20%28%29%20%E5%92%8C%20onRestoreInstanceState,%E5%9C%A8%20Activity%20%E8%A2%AB%E6%9A%82%E6%97%B6%E5%81%9C%E6%AD%A2%E6%97%B6%EF%BC%88%E6%88%96%E8%A2%AB%E5%85%B6%E4%BB%96%E7%A8%8B%E5%BA%8F%E4%B8%AD%E6%96%AD%E6%88%96%E8%80%85%E9%94%81%E5%B1%8F%EF%BC%89%E8%A2%AB%E8%B0%83%E7%94%A8%EF%BC%8C%E8%80%8C%20Activity%20%E8%A2%AB%E5%AE%8C%E5%85%A8%E5%85%B3%E9%97%AD%E6%97%B6%EF%BC%88%E8%B0%83%E7%94%A8%20finish%20%28%29%20%E5%87%BD%E6%95%B0%EF%BC%89%E5%88%99%E4%B8%8D%E4%BC%9A%E8%A2%AB%E8%B0%83%E7%94%A8%E3%80%82">回调函数</a></h3><h4 id="Activity-生命周期的事件回调函数"><a href="#Activity-生命周期的事件回调函数" class="headerlink" title="Activity 生命周期的事件回调函数"></a>Activity 生命周期的事件回调函数</h4><table><thead><tr><th align="center">函数</th><th align="center">是否可终止</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">onCreate()</td><td align="center">否</td><td align="center">Android 启动后第一个被调用的函数 &gt; 常用来进行 Activity 的初始化（如创建 view、绑定数据、恢复信息等）</td></tr><tr><td align="center">onStart()</td><td align="center">否</td><td align="center">Activity 显示在屏幕上时，该函数被调用</td></tr><tr><td align="center">onRestart()</td><td align="center">否</td><td align="center">Activity 从停止状态进入活动状态前，调用该函数</td></tr><tr><td align="center">onResume()</td><td align="center">否</td><td align="center">当 Activity 可以接受用户输入时，该函数被调用 &gt; 此时的 Activity 处于 Activity 栈顶</td></tr><tr><td align="center">onPause()</td><td align="center">否</td><td align="center">Activity 进入暂停状态时，该函数被调用 &gt; 主要用来保持持久数据、关闭动画、释放 CPU 资源等 &gt; 该函数必须简短，因为另一个 Activity 必须等待该函数执行完毕后才能显示在界面上</td></tr><tr><td align="center">onStop()</td><td align="center">是</td><td align="center">当 Activity 不对用户可见后，该函数被调用，Activity 进入停止状态</td></tr><tr><td align="center">onDestroy()</td><td align="center">是</td><td align="center">Activity 被终止（进入非活动状态）前，该函数被调用 &gt; 程序主动调用 finish () 函数或程序被 Android 系统终结</td></tr></tbody></table><h4 id="Activity-状态保存-x2F-恢复的事件回调函数"><a href="#Activity-状态保存-x2F-恢复的事件回调函数" class="headerlink" title="Activity 状态保存 &#x2F; 恢复的事件回调函数"></a>Activity 状态保存 &#x2F; 恢复的事件回调函数</h4><p>  onSaveInstanceState () 和 onRestoreInstanceState () 函数不属于生命周期的事件回调函数，onSaveInstanceState () 在 Activity 被暂时停止时（或被其他程序中断或者锁屏）被调用，而 Activity 被完全关闭时（调用 finish () 函数）则不会被调用。当暂停的 Activity 被恢复时，系统调用 onRestoreInstanceState () 函数。</p><p>​    onSaveInstanceState () 函数会将界面临时信息保存在 Bundle 中，onCreate () 函数和 onRestoreInstanceState () 函数都可以恢复这些保存的信息。一般简化的做法是在 onCreate () 函数中恢复保存数据，但有些特殊情况还是需要使用 onRestoreInstanceState () 函数恢复保存信息。如必须在界面完全初始化完毕后才能进行的操作，或有子类来确定是否采用默认设置等。（存疑）</p><table><thead><tr><th align="center">函数</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">onSaveInstanceState()</td><td align="center">暂停或停止 Activity 前调用该函数，用以保存 Activity 的临时信息</td></tr><tr><td align="center">onRestoreInstanceState()</td><td align="center">恢复 onSaveInstanceState () 保存的 Activity 状态信息</td></tr></tbody></table><h3 id="Activity的相关要素"><a href="#Activity的相关要素" class="headerlink" title="Activity的相关要素"></a>Activity的相关要素</h3><p>Activity在使用之前需要在<code>AndroidManifest</code>文件中，注册Activity。</p><blockquote><p>AndroidManifest相当于一个手册文件</p></blockquote><p>使用Android SDK工具创建新的应用程序，会自动创建Activity的意图过滤器</p><p><img src="https://lptexas.top/img/post/image-20221005112027619.png" alt="image-20221005112027619"></p><ul><li><p>android:name 属性是唯一必须的属性，它用来指定Activity的类名。</p></li><li><p>&lt;action&gt;节点用来指定Activity的主入口行为</p><ul><li>类似c语言的main()，即程序运行时先执行的地方</li></ul></li><li><p>&lt;category&gt;指定了该Activity的应用程序中允许用户启动这个Activity</p><ul><li>也就是说当前Activity会不会在手机上产生一个图标</li></ul></li></ul><h4 id="Activity与布局之间的关系"><a href="#Activity与布局之间的关系" class="headerlink" title="Activity与布局之间的关系"></a>Activity与布局之间的关系</h4><p>在Activity的<code>onCreate()</code>方法中调用<code>setContentView()</code>方法来指定Activity显示的内容，也就是指定Layout文件。</p><blockquote><p>这种分工把设计用户界面和编写Activity代码这两件工作很好的分化开来。</p></blockquote><h4 id="Activity与View之间的关系"><a href="#Activity与View之间的关系" class="headerlink" title="Activity与View之间的关系"></a>Activity与View之间的关系</h4><ul><li>View对象<ul><li>用户界面由View类派生的view对象分层次结构提供。每个view在Activity的窗口中控制了一个特定的矩形空间，能够接收相应用户的交互操作。</li></ul></li><li>findViewById()方法<ul><li>在Activity中调用findViewById()方法可以获取控件的对象，在通过这个对象去设置控件的属性，随时修改控件的属性。</li></ul></li></ul><h2 id="Intent与数据传递"><a href="#Intent与数据传递" class="headerlink" title="Intent与数据传递"></a><a href="https://www.runoob.com/w3cnote/android-tutorial-intent-base.html">Intent与数据传递</a></h2><h3 id="Intent介绍"><a href="#Intent介绍" class="headerlink" title="Intent介绍"></a>Intent介绍</h3><blockquote><p>“意图”，它是一种<strong>运行时绑定（run-time binding）机制</strong>，可以应用于两个应用间的通讯交互，也能够应用于在同一个应用下不同组件的交互（activity、service、broadcast receiver）</p></blockquote><p>用于页面切换，传递数据，调用外部程序。</p><p><strong>Intent的属性</strong></p><ol><li><p>Action动作（常用）</p><ul><li><p>Action属性的值为一个字符串，它代表了系统中已经定义了一系列常用的动作。通过setAction()方法或在清单文件AndroidManifestxml中设置。默认为: DEFAULT。</p><ul><li><p>Intent.ACTION_MAIN : 应用程序入口。</p></li><li><p>Intent.ACTION_SEND: 发送短信、发送邮件等。</p></li><li><p>Intent.ACTION_VIEW: 显示数据给用户，如浏览网页、显示应用、寻找应用等。</p></li><li><p>Intent.ACTION_WEB_SEARCH : 从谷歌搜索内容。</p></li><li><p>Intent.ACTION_DIAL: 拨打电话。</p></li><li><p>Intent.ACTION_PICK: 打开联系人列表。</p></li></ul></li></ul></li><li><p>Data数据</p><ul><li>Data通常是URI格式定义的操作数据。例如: tel&#x2F;&#x2F; 。通过<br>setDatal()方法设置。</li></ul></li><li><p>Category分类</p><ul><li>Category属性用于指定当前动作 (Action) 被执行的环<br>境。通过addCategory()方法或在清单文件ndroidManifestxml中<br>设置。默认为: CATEGORY_DEFAULT。</li></ul></li><li><p>Type类型</p></li><li><p>Compent组件</p></li><li><p>Extra拓展</p><ul><li>Extras属性主要用于传递目标组件所需要的额外的数据。通<br>过putExtras()方法设置.</li></ul></li></ol><h3 id="多Activity"><a href="#多Activity" class="headerlink" title="多Activity"></a>多Activity</h3><p><strong>如何实现点击一个按钮跳转到另一个Activity？</strong></p><p>对按钮onClick事件进行处理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> viod <span class="title function_">onClick</span><span class="params">(View v)</span>&#123;</span><br><span class="line">startActivity(<span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>,SecondActivity.class));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Intent()构造函数参数介绍<ul><li>Content上下文：application(全局上下文)、自定义Context、当前Activity（使用this就行）。</li><li>目标activity：可以为activity、service等</li></ul></li></ul><h3 id="显式Intent与隐式Intent的区别"><a href="#显式Intent与隐式Intent的区别" class="headerlink" title="显式Intent与隐式Intent的区别"></a>显式Intent与隐式Intent的区别</h3><ul><li><strong>显式Intent</strong><ul><li>通过组件名指定启动的目标组件,比如startActivity(new Intent(A.this,B.class)); 每次启动的组件只有一个</li></ul></li><li><strong>隐式Intent</strong><ul><li>不指定组件名,而指定Intent的Action,Data,或Category，当我们启动组件时, 会去匹配AndroidManifest.xml相关组件的Intent-filter，逐一匹配出满足属性的组件,当不止一个满足时, 会弹出一个让我们选择启动哪个的对话框<ul><li>系统根据信息进行分析，寻找目标Activity，以及各种系统功能的调用，如：调用浏览器（访问网页），那到底是哪个浏览器呢？</li></ul></li></ul></li></ul><h3 id="Bundle类及应用Intent传递数据"><a href="#Bundle类及应用Intent传递数据" class="headerlink" title="Bundle类及应用Intent传递数据"></a>Bundle类及应用Intent传递数据</h3><blockquote><p>Bundle类是用于为字符串与某组件对象建立映射关系的组件。</p><p>Bundle组件与Intent配合使用，可在不同的Activity之间传递数据。</p></blockquote><p>Bundle类的常用方法如下。</p><ul><li>putString(String key,String value):  把字符曲用“键值对”形式存放到Bundle对象中。</li><li>remove(String key) : 移除指定key的值</li><li>getString(String key): 获取指定key的字符</li></ul><p><img src="https://lptexas.top/img/post/image-20221008204550367.png" alt="image-20221008204550367"></p><p align="center">基本框架</p><h4 id="具体实现-1"><a href="#具体实现-1" class="headerlink" title="具体实现"></a>具体实现</h4><blockquote><p>只给出重写方法中的内容</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//传递数据 Bundle存储、Intent跳转</span></span><br><span class="line">      <span class="type">Intent</span> <span class="variable">intent2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(<span class="built_in">this</span>,SecondActivity.class);</span><br><span class="line">      <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">      bundle.putString(<span class="string">&quot;editText&quot;</span>,editText.getText().toString());</span><br><span class="line">... <span class="comment">//可以继续放数据，Bundle中可以放多组对象</span></span><br><span class="line">      intent2.putExtras(bundle); <span class="comment">//将bundle作为附件传递到下一个页面</span></span><br><span class="line">      startActivity(intent2);</span><br></pre></td></tr></table></figure><blockquote><p>目标界面（）</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="built_in">this</span>.getIntent().getExtras();</span><br><span class="line">String str=bundle.getString(<span class="string">&quot;editText&quot;</span>);</span><br><span class="line">textView.setText(str);</span><br></pre></td></tr></table></figure><h3 id="比较Intent中，putExtra-和putExtras-的区别"><a href="#比较Intent中，putExtra-和putExtras-的区别" class="headerlink" title="比较Intent中，putExtra()和putExtras()的区别"></a>比较Intent中，putExtra()和putExtras()的区别</h3><h4 id="putExtra"><a href="#putExtra" class="headerlink" title="putExtra()"></a><a href="https://www.jianshu.com/p/8a9b84df5018">putExtra()</a></h4><p><strong>设置方法</strong></p><p>putExtra(“A”,B)中，AB为键值对，第一个参数为键名，第二个参数为键对应的值（这里的B为变量，也可以直接用值“B”）。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Intent <span class="title function_">putExtra</span> <span class="params">(String name, <span class="type">double</span>[] value)</span></span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><p>想取出Intent对象中的这些值，需要在你的另一个Activity中用<code>get&lt;数据类型&gt;Extra()</code>方法，注意需要使用对应类型的方法，参数为键名。</p><h4 id="putExtras"><a href="#putExtras" class="headerlink" title="putExtras()"></a>putExtras()</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Intent <span class="title function_">putExtras</span> <span class="params">(Bundle extras)</span></span><br></pre></td></tr></table></figure><p><strong>设置方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Bundle bd=<span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">bd.putString(<span class="string">&quot;A&quot;</span>,B);</span><br><span class="line">intent.putExtras(bd);</span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Bundle bd=<span class="built_in">this</span>.getIntent().getExtras();</span><br><span class="line">bd.getString(<span class="string">&quot;A&quot;</span>));</span><br></pre></td></tr></table></figure><h1 id="对比Manifests中的AndroidManifest与apk中的AndroidManifest"><a href="#对比Manifests中的AndroidManifest与apk中的AndroidManifest" class="headerlink" title="对比Manifests中的AndroidManifest与apk中的AndroidManifest"></a>对比Manifests中的AndroidManifest与apk中的AndroidManifest</h1><h2 id="build一个apk"><a href="#build一个apk" class="headerlink" title="build一个apk"></a>build一个apk</h2><p><img src="https://lptexas.top/img/post/image-20221008202030799.png" alt="image-20221008202030799"></p><p>apk的路径为</p><p><img src="https://lptexas.top/img/post/image-20221008202225197.png" alt="image-20221008202225197"></p><h2 id="分析apk"><a href="#分析apk" class="headerlink" title="分析apk"></a>分析apk</h2><p><img src="https://lptexas.top/img/post/image-20221008202418076.png" alt="image-20221008202418076"></p><p><img src="https://lptexas.top/img/post/image-20221008202440294.png" alt="image-20221008202440294"></p><p><img src="https://lptexas.top/img/post/image-20221008202837860.png" alt="image-20221008202837860"></p><p>对比我们发现apk中与我们manifests中的有些许不同，如上框中的内容没有在manifests的AndroidManifest中。</p><p>我们可以直接在manifests的AndroidManifest，点击下方的<code>Merged Manifest</code>直接可以看到编译成apk后的AndroidManifest。</p><p><img src="https://lptexas.top/img/post/image-20221008203133020.png" alt="image-20221008203133020"></p><h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><h2 id="程序调试Logcat"><a href="#程序调试Logcat" class="headerlink" title="程序调试Logcat"></a><a href="https://blog.csdn.net/qq_38367681/article/details/83096814">程序调试Logcat</a></h2><p><img src="https://lptexas.top/img/post/image-20221005111321808.png" alt="image-20221005111321808"></p><h2 id="打断点"><a href="#打断点" class="headerlink" title="打断点"></a>打断点</h2><p><img src="https://lptexas.top/img/post/image-20221005111523546.png" alt="image-20221005111523546"></p>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker学习Day1</title>
      <link href="/posts/4013225505/"/>
      <url>/posts/4013225505/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>参阅</strong>：<a href="https://www.runoob.com/docker/docker-tutorial.html">Runoob教程</a></p></blockquote><h1 id="什么是Docker"><a href="#什么是Docker" class="headerlink" title="什么是Docker?"></a>什么是Docker?</h1><p>Docker 是一个开源的应用容器引擎，基于 <a href="https://www.runoob.com/go/go-tutorial.html">Go 语言</a> 并遵从 Apache2.0 协议开源。</p><p>Docker 可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><p>容器是完全使用沙箱机制，相互之间不会有任何接口（类似 iPhone 的 app）,更重要的是容器性能开销极低。</p><p>Docker 从 17.03 版本之后分为 CE（Community Edition: 社区版） 和 EE（Enterprise Edition: 企业版），我们用社区版就可以了。</p><h1 id="Docker的应用场景"><a href="#Docker的应用场景" class="headerlink" title="Docker的应用场景"></a>Docker的应用场景</h1><ul><li>Web 应用的自动化打包和发布。</li><li>自动化测试和持续集成、发布。</li><li>在服务型环境中部署和调整数据库或其他的后台应用。</li><li>从头编译或者扩展现有的 OpenShift 或 Cloud Foundry 平台来搭建自己的 PaaS 环境。</li></ul><h1 id="Docker-的优点"><a href="#Docker-的优点" class="headerlink" title="Docker 的优点"></a>Docker 的优点</h1><p>Docker 是一个用于开发，交付和运行应用程序的开放平台。Docker 使您能够将应用程序与基础架构分开，从而可以快速交付软件。借助 Docker，您可以与管理应用程序相同的方式来管理基础架构。通过利用 Docker 的方法来快速交付，测试和部署代码，您可以大大减少编写代码和在生产环境中运行代码之间的延迟。</p><h2 id="快速，一致地交付您的应用程序"><a href="#快速，一致地交付您的应用程序" class="headerlink" title="快速，一致地交付您的应用程序"></a>快速，一致地交付您的应用程序</h2><p>Docker 允许开发人员使用您提供的应用程序或服务的本地容器在标准化环境中工作，从而简化了开发的生命周期。</p><p>容器非常适合持续集成和持续交付（CI &#x2F; CD）工作流程，请考虑以下示例方案：</p><ul><li>您的开发人员在本地编写代码，并使用 Docker 容器与同事共享他们的工作。</li><li>他们使用 Docker 将其应用程序推送到测试环境中，并执行自动或手动测试。</li><li>当开发人员发现错误时，他们可以在开发环境中对其进行修复，然后将其重新部署到测试环境中，以进行测试和验证。</li><li>测试完成后，将修补程序推送给生产环境，就像将更新的镜像推送到生产环境一样简单。</li></ul><h2 id="响应式部署和扩展"><a href="#响应式部署和扩展" class="headerlink" title="响应式部署和扩展"></a>响应式部署和扩展</h2><p>Docker 是基于容器的平台，允许高度可移植的工作负载。Docker 容器可以在开发人员的本机上，数据中心的物理或虚拟机上，云服务上或混合环境中运行。</p><p>Docker 的可移植性和轻量级的特性，还可以使您轻松地完成动态管理的工作负担，并根据业务需求指示，实时扩展或拆除应用程序和服务。</p><h2 id="在同一硬件上运行更多工作负载"><a href="#在同一硬件上运行更多工作负载" class="headerlink" title="在同一硬件上运行更多工作负载"></a>在同一硬件上运行更多工作负载</h2><p>Docker 轻巧快速。它为基于虚拟机管理程序的虚拟机提供了可行、经济、高效的替代方案，因此您可以利用更多的计算能力来实现业务目标。Docker 非常适合于高密度环境以及中小型部署，而您可以用更少的资源做更多的事情。</p><h1 id="Docker-架构"><a href="#Docker-架构" class="headerlink" title="Docker 架构"></a>Docker 架构</h1><blockquote><p>Docker 包括三个基本概念:</p></blockquote><ul><li><strong>镜像（Image）</strong>：Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:16.04 就包含了完整的一套 Ubuntu16.04 最小系统的 root 文件系统。</li><li><strong>容器（Container）</strong>：镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</li><li><strong>仓库（Repository）</strong>：仓库可看成一个代码控制中心，用来保存镜像。</li></ul><table><thead><tr><th align="left">Docker</th><th align="left">面向对象</th></tr></thead><tbody><tr><td align="left">容器</td><td align="left">对象</td></tr><tr><td align="left">镜像</td><td align="left">类</td></tr></tbody></table><p><img src="https://lptexas.top/img/post/docker1.png"></p><table><thead><tr><th align="left">概念</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">Docker 镜像(Images)</td><td align="left">Docker 镜像是用于创建 Docker 容器的模板，比如 Ubuntu 系统。</td></tr><tr><td align="left">Docker 容器(Container)</td><td align="left">容器是独立运行的一个或一组应用，是镜像运行时的实体。</td></tr><tr><td align="left">Docker 客户端(Client)</td><td align="left">Docker 客户端通过命令行或者其他工具使用 Docker SDK (<a href="https://docs.docker.com/develop/sdk/">https://docs.docker.com/develop/sdk/</a>) 与 Docker 的守护进程通信。</td></tr><tr><td align="left">Docker 主机(Host)</td><td align="left">一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。</td></tr><tr><td align="left">Docker Registry</td><td align="left">Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。Docker Hub(<a href="https://hub.docker.com/">https://hub.docker.com</a>) 提供了庞大的镜像集合供使用。一个 Docker Registry 中可以包含多个仓库（Repository）；每个仓库可以包含多个标签（Tag）；每个标签对应一个镜像。通常，一个仓库会包含同一个软件不同版本的镜像，而标签就常用于对应该软件的各个版本。我们可以通过 <strong>&lt;仓库名&gt;:&lt;标签&gt;</strong> 的格式来指定具体是这个软件哪个版本的镜像。如果不给出标签，将以 <strong>latest</strong> 作为默认标签。</td></tr><tr><td align="left">Docker Machine</td><td align="left">Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。</td></tr></tbody></table><h1 id="Docker镜像使用"><a href="#Docker镜像使用" class="headerlink" title="Docker镜像使用"></a>Docker镜像使用</h1><h2 id="列出本地可用镜像"><a href="#列出本地可用镜像" class="headerlink" title="列出本地可用镜像"></a>列出本地可用镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">../files/home # docker images</span><br><span class="line">REPOSITORY        TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">nginx             latest    0c404972e130   2 weeks ago    135MB</span><br><span class="line">ubuntu            latest    21735dab04ba   4 weeks ago    69.2MB</span><br><span class="line">hello-world       latest    46331d942d63   6 months ago   9.14kB</span><br><span class="line">training/webapp   latest    6fae60ef3446   7 years ago    349MB</span><br></pre></td></tr></table></figure><p>选项说明:</p><ul><li><strong>REPOSITORY：</strong>表示镜像的仓库源</li><li><strong>TAG：</strong>镜像的标签</li><li><strong>IMAGE ID：</strong>镜像ID</li><li><strong>CREATED：</strong>镜像创建时间</li><li><strong>SIZE：</strong>镜像大小</li></ul><blockquote><p>我们可以通过<code>tag</code>,<code>IMAGE ID</code>对镜像进行管理</p></blockquote><p>同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本，如 ubuntu 仓库源里，有 15.10、14.04 等多个不同的版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。</p><h2 id="查找镜像"><a href="#查找镜像" class="headerlink" title="查找镜像"></a>查找镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search httpd</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">.../files/home # docker search httpd</span><br><span class="line">NAME                                 DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">httpd                                The Apache HTTP Server Project                  4176      [OK]</span><br><span class="line">centos/httpd-24-centos7              Platform for running Apache httpd 2.4 or bui…   44</span><br><span class="line">centos/httpd                                                                         35                   [OK]</span><br><span class="line">clearlinux/httpd                     httpd HyperText Transfer Protocol (HTTP) ser…   2</span><br><span class="line">solsson/httpd-openidc                mod_auth_openidc on official httpd image, ve…   2                    [OK]</span><br><span class="line">hypoport/httpd-cgi                   httpd-cgi                                       2                    [OK]</span><br><span class="line">dockerpinata/httpd                                                                   1</span><br><span class="line">inanimate/httpd-ssl                  A play container with httpd, ssl enabled, an…   1                    [OK]</span><br><span class="line">publici/httpd                        httpd:latest                                    1                    [OK]</span><br><span class="line">centos/httpd-24-centos8                                                              1</span><br><span class="line">dariko/httpd-rproxy-ldap             Apache httpd reverse proxy with LDAP authent…   1                    [OK]</span><br><span class="line">manageiq/httpd                       Container with httpd, built on CentOS for Ma…   1                    [OK]</span><br><span class="line">nnasaki/httpd-ssi                    SSI enabled Apache 2.4 on Alpine Linux          1</span><br><span class="line">lead4good/httpd-fpm                  httpd server which connects via fcgi proxy h…   1                    [OK]</span><br><span class="line">patrickha/httpd-err                                                                  0</span><br><span class="line">httpdocker/kubia                                                                     0</span><br><span class="line">amd64/httpd                          The Apache HTTP Server Project                  0</span><br><span class="line">e2eteam/httpd                                                                        0</span><br><span class="line">manageiq/httpd_configmap_generator   Httpd Configmap Generator                       0                    [OK]</span><br><span class="line">paketobuildpacks/httpd                                                               0</span><br><span class="line">httpdss/archerysec                   ArcherySec repository                           0                    [OK]</span><br><span class="line">sandeep1988/httpd-new                httpd-new                                       0</span><br><span class="line">19022021/httpd-connection_test       This httpd image will test the connectivity …   0</span><br><span class="line">ppc64le/httpd                        The Apache HTTP Server Project                  0</span><br><span class="line">manasip/httpd                                                                        0</span><br></pre></td></tr></table></figure><p>介绍：</p><ul><li><strong>NAME:</strong> 镜像仓库源的名称</li><li><strong>DESCRIPTION:</strong> 镜像的描述</li><li><strong>OFFICIAL:</strong> 是否 docker 官方发布</li><li><strong>stars:</strong> 类似 Github 里面的 star，表示点赞、喜欢的意思。</li><li><strong>AUTOMATED:</strong> 自动构建。</li></ul><h2 id="获取一个镜像"><a href="#获取一个镜像" class="headerlink" title="获取一个镜像"></a>获取一个镜像</h2><blockquote><p>官网：<a href="https://hub.docker.com/">https://hub.docker.com/</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu:18.04</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">.../files/home # docker pull ubuntu:18.04</span><br><span class="line">18.04: Pulling from library/ubuntu</span><br><span class="line">d30cf2a6a25a: Pull complete</span><br><span class="line">Digest: sha256:6fec50623d6d37b7f3c14c5b6fc36c73fd04aa8173d59d54dba00da0e7ac50ee</span><br><span class="line">Status: Downloaded newer image for ubuntu:18.04</span><br><span class="line">docker.io/library/ubuntu:18.04</span><br><span class="line">.../files/home # docker images</span><br><span class="line">REPOSITORY    TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">nginx         latest    0c404972e130   2 weeks ago    135MB</span><br><span class="line">ubuntu        18.04     b280829784a6   3 weeks ago    56.6MB</span><br><span class="line">ubuntu        latest    21735dab04ba   4 weeks ago    69.2MB</span><br><span class="line">hello-world   latest    46331d942d63   6 months ago   9.14kB</span><br></pre></td></tr></table></figure><h2 id="使用某个操作系统镜像"><a href="#使用某个操作系统镜像" class="headerlink" title="使用某个操作系统镜像"></a>使用某个操作系统镜像</h2><p>以ubuntu为例</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">run</span> -<span class="keyword">it</span> ubuntu /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">.../files/home # docker run -it ubuntu /bin/bash</span><br><span class="line">root@7a2ab5737b1b:/# </span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>-i</strong>: 交互式操作。</li><li><strong>-t</strong>: 终端。</li><li><strong>ubuntu:15.10</strong>: 这是指用 ubuntu 15.10 版本镜像为基础来启动容器。</li><li><strong>&#x2F;bin&#x2F;bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 &#x2F;bin&#x2F;bash。</li></ul><h2 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker rmi ubuntu:latest</span><br><span class="line">docker rmi ubuntu:18.04</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.../files/home # docker rmi ubuntu:latest</span><br><span class="line">Error response from daemon: conflict: unable to remove repository reference &quot;ubuntu:latest&quot; (must force) - container 904ed1b68b91 is using its referenced image 21735dab04ba</span><br><span class="line"></span><br><span class="line">.../files/home # docker rmi ubuntu:18.04</span><br><span class="line">Untagged: ubuntu:18.04</span><br><span class="line">Untagged: ubuntu@sha256:6fec50623d6d37b7f3c14c5b6fc36c73fd04aa8173d59d54dba00da0e7ac50ee</span><br><span class="line">Deleted: sha256:b280829784a60d7ccae510022d45a3ee196f8de218e4264f661d305cc64a1b8c</span><br><span class="line">Deleted: sha256:014eb09f08715ce58b2a3fc48ad6d9a9adb4c0c1dab47ea9231dad2310d13abc</span><br></pre></td></tr></table></figure><p>我们注意到删除第一个镜像<code>ubuntu:latest</code>报错，原因是有容器正在使用当前镜像，我们需要先将容器删除。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.../files/home # docker ps -a</span><br><span class="line">CONTAINER ID   IMAGE         COMMAND                  CREATED          STATUS                      PORTS     NAMES</span><br><span class="line">904ed1b68b91   ubuntu        &quot;/bin/bash&quot;              18 minutes ago   Exited (0) 17 minutes ago             focused_lamport</span><br></pre></td></tr></table></figure><h2 id="创建镜像"><a href="#创建镜像" class="headerlink" title="创建镜像"></a>创建镜像</h2><p>当 docker 镜像仓库中下载的镜像不能满足我们的需求时，我们可以通过以下两种方式对镜像进行更改。</p><ol><li>从已经创建的容器中更新镜像，并且提交这个镜像</li><li>使用 Dockerfile 指令来创建一个新的镜像</li></ol><h3 id="更新镜像并提交"><a href="#更新镜像并提交" class="headerlink" title="更新镜像并提交"></a>更新镜像并提交</h3><p>使用现有镜像创建一个容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it ubuntu:latest /bin/bash</span><br></pre></td></tr></table></figure><p>对容器进行一些操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get upgrade</span><br></pre></td></tr></table></figure><p>使用<code>docker commit</code>提交镜像副本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit -m &quot;This is a new images.&quot; -a &quot;lptexas&quot; 1e5da4fe6dee lptexas/ubuntu:v2</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>-m:</strong> 提交的描述信息</li><li><strong>-a:</strong> 指定镜像作者</li><li><strong>e218edb10161：</strong>容器 ID</li><li><strong>runoob&#x2F;ubuntu:v2:</strong> 指定要创建的目标镜像名</li></ul><h3 id="Dockerfile构建镜像"><a href="#Dockerfile构建镜像" class="headerlink" title="Dockerfile构建镜像"></a>Dockerfile构建镜像</h3><p>编写Dockerfile文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat Dockerfile</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">FROM    centos:latest</span><br><span class="line">MAINTAINER      lptexas &quot;asucanyh@qq.com&quot;</span><br><span class="line"></span><br><span class="line">RUN     /bin/echo &#x27;root:123456&#x27; |chpasswd</span><br><span class="line">RUN     useradd lptexas</span><br><span class="line">RUN     /bin/echo &#x27;lptexas:123456&#x27; |chpasswd</span><br><span class="line">RUN     /bin/echo -e &quot;LANG=\&quot;en_US.UTF-8\&quot;&quot; &gt;/etc/default/local</span><br><span class="line">EXPOSE  22</span><br><span class="line">EXPOSE  80</span><br><span class="line">CMD     /usr/sbin/sshd -D</span><br></pre></td></tr></table></figure><ul><li>FROM，指定使用哪个镜像源</li><li>RUN 指令告诉docker 在镜像内执行命令，安装了什么</li></ul><p>使用 Dockerfile 文件，通过 docker build 命令来构建一个镜像</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t lptexas/centos:latest .</span><br></pre></td></tr></table></figure><p>参数说明：</p><ul><li><strong>-t</strong> ：指定要创建的目标镜像名</li><li><strong>.</strong> ：Dockerfile 文件所在目录，可以指定Dockerfile 的绝对路径</li></ul><p>使用构建的镜像创建容器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it lptexas/centos /bin/bash</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.../home/docker # docker run -it lptexas/centos /bin/bash</span><br><span class="line">[root@021a35feda3b /]# id lptexas</span><br><span class="line">uid=1000(lptexas) gid=1000(lptexas) groups=1000(lptexas)</span><br></pre></td></tr></table></figure><h2 id="设置镜像标签"><a href="#设置镜像标签" class="headerlink" title="设置镜像标签"></a>设置镜像标签</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag 21735dab04ba lptexas/ubuntu:dev</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.../files/home # docker images</span><br><span class="line">REPOSITORY       TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">nginx            latest    0c404972e130   2 weeks ago    135MB</span><br><span class="line">ubuntu           latest    21735dab04ba   4 weeks ago    69.2MB</span><br><span class="line">lptexas/ubuntu   dev       21735dab04ba   4 weeks ago    69.2MB</span><br><span class="line">hello-world      latest    46331d942d63   6 months ago   9.14kB</span><br></pre></td></tr></table></figure><p>语法是：docker tag <code>IMAGE ID</code> <code>REPOSITORY:NEW_TAG</code></p><p>事实上我们使用这条命令还可以定义<code>REPOSITORY</code>名。</p>]]></content>
      
      
      <categories>
          
          <category> 容器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一键部署Hexo环境以及恢复Blog数据</title>
      <link href="/posts/12839243/"/>
      <url>/posts/12839243/</url>
      
        <content type="html"><![CDATA[<blockquote><p>一键部署Hexo环境以及恢复Blog数据</p></blockquote><h1 id="版本介绍"><a href="#版本介绍" class="headerlink" title="版本介绍"></a>版本介绍</h1><h2 id="v0-1"><a href="#v0-1" class="headerlink" title="v0.1"></a>v0.1</h2><ul><li>支持Centos</li><li>支持自定义恢复目录</li></ul><h2 id="v0-2"><a href="#v0-2" class="headerlink" title="v0.2"></a>v0.2</h2><ul><li>支持Ubuntu、Centos7</li><li>新增支持出现错误终止（使用bash执行脚本，若出现错误将自动退出脚本并且返回状态码，状态码设置为出错的项的行号。）</li><li>隐藏不必要输出</li><li>新增<code>clean</code>参数（可在脚本执行完毕后清理压缩文件）</li><li>新增<code>restart</code>参数（清理已经安装的nodejs以及解压的数据包）</li><li>参数支持混合使用（使用案例：bash recovery-blog.sh clean restart）</li></ul><h2 id="v1-0"><a href="#v1-0" class="headerlink" title="v1.0"></a>v1.0</h2><ul><li>优化脚本</li><li>增加检查架构的操作</li><li>支持<code>修复npm module</code>和<code>初始化本地仓库并连接远程仓库</code><ul><li>ri 参数</li></ul></li><li>更多新增参数，可以使用help 参数查看使用方法）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Usage: &lt;Command&gt; [OPTION] [FILE]</span><br><span class="line">    env:     Only install the necessary utils.</span><br><span class="line">    repair:  Repair npm module errors.</span><br><span class="line">    init:    Link the remote reposity with local reposity.</span><br><span class="line">    ri:      Repair and init.</span><br><span class="line">    unzip:   Only unpack the datafile.</span><br><span class="line">    clean:   Clean the necessary files.</span><br><span class="line">    start:   Start recovery nomarlly.</span><br><span class="line">    restart: Reinstall nodejs and re-unzip your blog.</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>将备份好的Blog数据放在<code>currentPath</code>所指目录下，运行脚本即可。</p><h1 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h1><h2 id="Version：0-1"><a href="#Version：0-1" class="headerlink" title="Version：0.1"></a>Version：0.1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch recover-blog.sh</span><br><span class="line">vi recover-blog.sh</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">一键部署Hexo环境以及恢复Blog数据</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line">blog=&quot;myblog&quot; #博客数据包解压后的文件夹名</span><br><span class="line">currentPath=&quot;/home/www&quot; #博客所在目录</span><br><span class="line">nodeurl=&quot;https://nodejs.org/dist/v16.16.0/node-v16.16.0-linux-x64.tar.xz&quot; # nodejs 版本链接（可自定义）</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># git</span></span></span><br><span class="line">yum install -y git</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo &quot;Note: &#x27;git&#x27; installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;Error: Please Check &#x27;git&#x27;&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># node</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">yum install -y nodejs</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> == 0 ];<span class="keyword">then</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;Note: &#x27;nodejs&#x27; installed successfully!&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">else</span></span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;Error: Please Check &#x27;nodejs&#x27;&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="keyword">fi</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 手动安装nodejs</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># wget</span></span></span><br><span class="line">yum install -y wget</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo &quot;Note: &#x27;wget&#x27; installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;Error: Please Check &#x27;wget&#x27;&quot;</span><br><span class="line">fi</span><br><span class="line">if [ ! -e &quot;nodejs&quot; -a ! -e &quot;nodejs.tar.xz&quot; ];then</span><br><span class="line">    wget $nodeurl -O nodejs.tar.xz</span><br><span class="line">fi</span><br><span class="line">if [ -e &quot;nodejs.tar.xz&quot; ];then</span><br><span class="line">    tar -xf $currentPath/nodejs.tar.xz</span><br><span class="line">    rm -f $currentPath/nodejs.tar.xz</span><br><span class="line">    mv `find /home/www -name node-v[0-9]*` /home/www/nodejs</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新创建nodejs软链接</span></span><br><span class="line">rm -f /usr/local/bin/node</span><br><span class="line">ln -s $currentPath/nodejs/bin/node /usr/local/bin/node</span><br><span class="line">rm -f /usr/local/bin/npm</span><br><span class="line">ln -s $currentPath/nodejs/bin/npm /usr/local/bin/npm</span><br><span class="line"></span><br><span class="line">node -v</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo &quot;Note: &#x27;nodejs&#x27; installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;Error: Please Check &#x27;nodejs&#x27;&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># npm</span></span></span><br><span class="line">npm -v</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo &quot;Note: &#x27;npm&#x27; installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo &quot;Error: Please Check &#x27;npm&#x27;&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 安装Hexo</span></span></span><br><span class="line">npm install --location=global hexo-cli</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 链接hexo命令至环境变量中</span></span></span><br><span class="line">rm -f /usr/local/bin/hexo</span><br><span class="line">ln -s $currentPath/nodejs/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 还原数据</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 解压数据包</span></span></span><br><span class="line">if [ ! -e $blog ];then</span><br><span class="line">tar -xf `find [0-9]*_[0-9]*.tar.gz` </span><br><span class="line">fi</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">  echo &quot;Tips: You can use commend:cd switching to $blog and use commend:hexo server to preview your site now!&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="Version：0-2"><a href="#Version：0-2" class="headerlink" title="Version：0.2"></a>Version：0.2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">一键部署Hexo环境以及恢复Blog数据</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line">blog=&quot;myblog&quot; #博客数据包解压后的文件夹名</span><br><span class="line">currentPath=&quot;/home/www&quot; #博客所在目录</span><br><span class="line">dataFile=&quot;[0-9]*_[0-9]*.tar.gz&quot; #可定义数据文件名</span><br><span class="line">nodeurl=&quot;https://nodejs.org/dist/v16.16.0/node-v16.16.0-linux-x64.tar.xz&quot; # nodejs版本链接（可自定义）</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line">if [ &quot;$1&quot; == &quot;restart&quot; -o &quot;$2&quot; == &quot;restart&quot; ];then</span><br><span class="line">  echo -e &quot;\nNote: Cleaning nodejs &amp; $blog...&quot;</span><br><span class="line">  nohup rm -rf $currentPath/nodejs &amp;&gt;/dev/null</span><br><span class="line">  nohup rm -rf $currentPath/$blog &amp;&gt;/dev/null</span><br><span class="line">  sleep 1</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###检查当前操作系统</span></span></span><br><span class="line">echo -e &quot;Recovery starting...&quot;</span><br><span class="line">OS=`cat /etc/os-release|grep ^NAME=&quot;.*&quot;|awk -F &quot;\&quot;&quot; &#x27;&#123;print $2&#125;&#x27;`</span><br><span class="line">if [ &quot;$OS&quot; == &quot;CentOS Linux&quot; -o &quot;$OS&quot; == &quot;CentOS&quot; ];then</span><br><span class="line">  pkgm=&quot;yum&quot;</span><br><span class="line">elif [ &quot;$OS&quot; == &quot;Ubuntu&quot; ];then</span><br><span class="line">  pkgm=&quot;apt-get&quot;</span><br><span class="line">fi</span><br><span class="line">nohup sudo $pkgm update -y --skip-broken &amp;&gt;/dev/null</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># git</span></span></span><br><span class="line">nohup $pkgm install -y git &amp;&gt;/dev/null</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo -e &quot;Note: &#x27;git&#x27; installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\nError: Please check &#x27;git&#x27;\n&quot;</span><br><span class="line">  exit 19</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># wget</span></span></span><br><span class="line">nohup $pkgm install -y wget &amp;&gt;/dev/null</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo -e &quot;Note: &#x27;wget&#x27; installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\nError: Please check &#x27;wget&#x27;\n&quot;</span><br><span class="line">  exit 28</span><br><span class="line">fi</span><br><span class="line">if [ ! -e &quot;nodejs&quot; -a ! -e &quot;nodejs.tar.xz&quot; ];then</span><br><span class="line">    wget $nodeurl -O nodejs.tar.xz</span><br><span class="line">fi</span><br><span class="line">if [ ! -e &quot;nodejs&quot; -a -e &quot;nodejs.tar.xz&quot; ];then</span><br><span class="line">    tar -xf $currentPath/nodejs.tar.xz</span><br><span class="line">    mv `find $currentPath -name node-v[0-9]*` $currentPath/nodejs</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新创建nodejs软链接</span></span><br><span class="line">rm -f /usr/local/bin/node</span><br><span class="line">ln -s $currentPath/nodejs/bin/node /usr/local/bin/node</span><br><span class="line">rm -f /usr/local/bin/npm</span><br><span class="line">ln -s $currentPath/nodejs/bin/npm /usr/local/bin/npm</span><br><span class="line">if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">echo -e &quot;Note: nodejs&quot;</span><br><span class="line">node -v</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo -e &quot;Installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\nError: Please check &#x27;nodejs&#x27;\n&quot;</span><br><span class="line">  exit 44</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># npm</span></span></span><br><span class="line">if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">echo -e &quot;Note: npm&quot;</span><br><span class="line">npm -v</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$?&quot; == 0 ];then</span><br><span class="line">echo -e &quot;Installed successfully!&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\nError: Please check &#x27;npm&#x27;\n&quot;</span><br><span class="line">  exit 57</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 安装Hexo</span></span></span><br><span class="line">nohup hexo &amp;&gt;/dev/null</span><br><span class="line">if [ &quot;$?&quot; -ne 0 ];then </span><br><span class="line">  echo &quot;&quot;</span><br><span class="line">  nohup npm install --location=global hexo-cli &amp;&gt;/dev/null</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 链接hexo命令至环境变量中</span></span></span><br><span class="line">rm -f /usr/local/bin/hexo</span><br><span class="line">ln -s $currentPath/nodejs/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 还原数据</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 解压数据包</span></span></span><br><span class="line"></span><br><span class="line">if [ &quot;$?&quot; -ne 0 ];then</span><br><span class="line">  echo &quot;Error: Please check Your &#x27;DataFile&#x27;!&quot;</span><br><span class="line">elif [ ! -e $blog ];then</span><br><span class="line">tar -xf $dataFile</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$?&quot; -eq 0 ];then</span><br><span class="line">  echo -e &quot;Note: Now,you can switch to &#x27;$blog&#x27; and use &#x27;hexo server&#x27; to preview your site!\nDone&quot;</span><br><span class="line">  else </span><br><span class="line">  echo -e &quot;\nError: Please check &#x27;tar -xf &lt;dataFile&gt;.&#x27;\n&quot;</span><br><span class="line">  exit 80</span><br><span class="line">fi</span><br><span class="line">if [ &quot;$1&quot; == &quot;clean&quot; -o &quot;$2&quot; == &quot;clean&quot; ];then</span><br><span class="line">  echo &quot;Cleaning Starting...&quot;</span><br><span class="line">  if [ ! -e $currentPath/nodejs.tar.xz -a ! -e $currentPath/$dataFile ];then</span><br><span class="line">    echo &quot;Note: Files not exist.&quot;</span><br><span class="line">  fi</span><br><span class="line">  if [ -e $currentPath/nodejs.tar.xz -a -e $currentPath/$dataFile ];then</span><br><span class="line"> nohup rm -f $currentPath/nodejs.tar.xz &amp;&gt;/dev/null</span><br><span class="line"> nohup rm -f $currentPath/$dataFile &amp;&gt;/dev/null</span><br><span class="line">echo -e &quot;Note: Compressed files was cleaned.&quot;</span><br><span class="line">  fi</span><br><span class="line">  if [ -e $currentPath/nodejs.tar.xz ];then</span><br><span class="line"> nohup rm -f $currentPath/nodejs.tar.xz &amp;&gt;/dev/null</span><br><span class="line">echo -e &quot;Note: Compressed files was cleaned.&quot;</span><br><span class="line">  fi</span><br><span class="line">  if [ -e $currentPath/$dataFile ];then</span><br><span class="line">nohup rm -f $currentPath/$dataFile &amp;&gt;/dev/null</span><br><span class="line">echo -e &quot;Note: Compressed files was cleaned.&quot;</span><br><span class="line">  fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h2 id="Version-1-0"><a href="#Version-1-0" class="headerlink" title="Version: 1.0"></a>Version: 1.0</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">一键部署Hexo环境以及恢复Blog数据</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   使用步骤</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   1.<span class="built_in">cd</span>切换至需要恢复到的目录下</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   2.准备好从github中下载的源码(.zip)，或者直接git <span class="built_in">clone</span>(推荐)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   3.准备脚本r.sh，赋予可执行权限，注意修改nodejs的版本</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   4.执行./r.sh start &lt;指定压缩文件&gt;，</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   5.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line">blog=&quot;myblog&quot;              #博客数据包解压后的文件夹名</span><br><span class="line">currentPath=$PWD           #博客所在目录</span><br><span class="line">dataFile=&#x27;blog-source.zip&#x27; #可定义数据文件名</span><br><span class="line">nodeVersion=&quot;v16.16.0&quot;</span><br><span class="line">nodeurl=&quot;https://nodejs.org/dist/$nodeVersion/node-$nodeVersion-linux-$arch.tar.xz&quot; #自动检查</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###用于git配置</span></span></span><br><span class="line">email=asucanyh@outlook.com</span><br><span class="line">username=asucanyh-cn</span><br><span class="line">remoteRepo=blog-source</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line">function checkFileName() &#123;</span><br><span class="line">  if [ $# -eq 2 ]; then</span><br><span class="line">    echo &quot;[Info]Checking filename...&quot;</span><br><span class="line">    if [ $&#123;#2&#125; -lt 3 ]; then</span><br><span class="line">      echo &quot;[Error]Please check your name of data file!&quot;</span><br><span class="line">      exit 17</span><br><span class="line">    fi</span><br><span class="line">    dataFile=$2</span><br><span class="line">    if [ $&#123;dataFile:0-3&#125; == &quot;.gz&quot; -o $&#123;dataFile:0-3&#125; == &quot;zip&quot; ]; then</span><br><span class="line">      if [ $# -eq 1 -a $1 == &quot;start&quot; ]; then</span><br><span class="line">        echo -e &quot;[Note]You are running without data file,you&#x27;d better specify it!&quot;</span><br><span class="line">      elif [ $# -eq 1 -a $1 == &quot;restart&quot; ]; then</span><br><span class="line">        echo -e &quot;[Note]You are running without data file,you&#x27;d better specify it!&quot;</span><br><span class="line">      fi</span><br><span class="line">    else</span><br><span class="line">      echo &quot;[Error]Wrong type of compressed file.Please check your file name parameter!&quot;</span><br><span class="line">      exit 32</span><br><span class="line">    fi</span><br><span class="line">    echo &quot;[Info]$dataFile passed.&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">function cleanFiles() &#123;</span><br><span class="line">  echo -e &quot;[Info]Cleaning nodejs &amp; $blog...&quot;</span><br><span class="line">  nohup rm -rf /usr/local/nodejs &amp;&gt;/dev/null</span><br><span class="line">  nohup rm -rf $currentPath/$blog &amp;&gt;/dev/null</span><br><span class="line">  sleep 1</span><br><span class="line">&#125;</span><br><span class="line">function clean() &#123;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash">清除所有无用的文件</span></span><br><span class="line">  echo &quot;Cleaning Starting...&quot;</span><br><span class="line">  if [ ! -e $currentPath/nodejs.tar.xz -a ! -e $currentPath/$dataFile ]; then</span><br><span class="line">    echo &quot;[Note]Files not exist.&quot;</span><br><span class="line">  fi</span><br><span class="line">  if [ -e $currentPath/nodejs.tar.xz -a -e $currentPath/$dataFile ]; then</span><br><span class="line">    nohup rm -f $currentPath/nodejs.tar.xz &amp;&gt;/dev/null</span><br><span class="line">    nohup rm -f $currentPath/$dataFile &amp;&gt;/dev/null</span><br><span class="line">    echo -e &quot;[Info]Compressed files was cleaned.&quot;</span><br><span class="line">  fi</span><br><span class="line">  if [ -e $currentPath/nodejs.tar.xz ]; then</span><br><span class="line">    nohup rm -f $currentPath/nodejs.tar.xz &amp;&gt;/dev/null</span><br><span class="line">    echo -e &quot;[Info]nodejs.tar.xz was cleaned.&quot;</span><br><span class="line">  fi</span><br><span class="line">  if [ -e $currentPath/$dataFile ]; then</span><br><span class="line">    nohup rm -f $currentPath/$dataFile &amp;&gt;/dev/null</span><br><span class="line">    echo -e &quot;[Info]$dataFile was cleaned.&quot;</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">function checkOS() &#123;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment">###检查发行版本</span></span></span><br><span class="line">  echo -e &quot;[Note]Recovery starting...&quot;</span><br><span class="line">  OS=$(cat /etc/os-release | grep ^NAME=&quot;.*&quot; | awk -F &quot;\&quot;&quot; &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">  if [ &quot;$OS&quot; == &quot;CentOS Linux&quot; -o &quot;$OS&quot; == &quot;CentOS&quot; ]; then</span><br><span class="line">    pkgm=&quot;yum&quot;</span><br><span class="line">  elif [ &quot;$OS&quot; == &quot;Ubuntu&quot; ]; then</span><br><span class="line">    pkgm=&quot;apt-get&quot;</span><br><span class="line">  fi</span><br><span class="line">  nohup sudo $pkgm update -y --skip-broken &amp;&gt;/dev/null</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment">####检查架构</span></span></span><br><span class="line">  if [ &quot;$(dpkg --print-architecture)&quot; == &quot;arm64&quot; ]; then</span><br><span class="line">    arch=&quot;arm64&quot;</span><br><span class="line">  else</span><br><span class="line">    arch=&quot;x64&quot;</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">function env() &#123;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment"># 安装git</span></span></span><br><span class="line">  nohup $pkgm install -y git &amp;&gt;/dev/null</span><br><span class="line">  if [ &quot;$?&quot; -eq 0 ]; then</span><br><span class="line">    echo -e &quot;[Info]&#x27;git&#x27; installed successfully!&quot;</span><br><span class="line">  else</span><br><span class="line">    echo -e &quot;\n[Error]Please check &#x27;git&#x27;\n&quot;</span><br><span class="line">    exit 19</span><br><span class="line">  fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment"># 安装wget</span></span></span><br><span class="line">  nohup $pkgm install -y wget &amp;&gt;/dev/null</span><br><span class="line">  if [ &quot;$?&quot; -eq 0 ]; then</span><br><span class="line">    echo -e &quot;[Info]&#x27;wget&#x27; installed successfully!&quot;</span><br><span class="line">  else</span><br><span class="line">    echo -e &quot;\n[Error]Please check &#x27;wget&#x27;\n&quot;</span><br><span class="line">    exit 28</span><br><span class="line">  fi</span><br><span class="line">  if [ ! -e &quot;nodejs&quot; -a ! -e &quot;nodejs.tar.xz&quot; ]; then</span><br><span class="line">    wget $nodeurl -O nodejs.tar.xz</span><br><span class="line">  fi</span><br><span class="line">  if [ ! -e &quot;nodejs&quot; -a -e &quot;nodejs.tar.xz&quot; ]; then</span><br><span class="line">    tar -xf $currentPath/nodejs.tar.xz</span><br><span class="line">    mv $(find $currentPath -name node-v[0-9]*) $currentPath/nodejs</span><br><span class="line">  fi</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">重新创建nodejs软链接</span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line">  rm -rf /usr/local/nodejs</span><br><span class="line">  mv $currentPath/nodejs /usr/local</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line">  rm -f /usr/local/bin/node</span><br><span class="line">  ln -s /usr/local/nodejs/bin/node /usr/local/bin/node</span><br><span class="line">  rm -f /usr/local/bin/npm</span><br><span class="line">  ln -s /usr/local/nodejs/bin/npm /usr/local/bin/npm</span><br><span class="line">  if [ &quot;$?&quot; -eq 0 ]; then</span><br><span class="line">    nohup node -v &amp;&gt;/dev/null</span><br><span class="line">  fi</span><br><span class="line">  if [ &quot;$?&quot; == 0 ]; then</span><br><span class="line">    echo -e &quot;[Info]&#x27;nodejs&#x27; installed successfully!&quot;</span><br><span class="line">  else</span><br><span class="line">    echo -e &quot;\n[Error]Please check &#x27;nodejs&#x27;\n&quot;</span><br><span class="line">    exit 44</span><br><span class="line">  fi</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment"># npm</span></span></span><br><span class="line">  if [ &quot;$?&quot; -eq 0 ]; then</span><br><span class="line">    nohup npm -v &amp;&gt;/dev/null</span><br><span class="line">  fi</span><br><span class="line">  if [ &quot;$?&quot; == 0 ]; then</span><br><span class="line">    echo -e &quot;[Info]&#x27;npm&#x27; installed successfully!&quot;</span><br><span class="line">  else</span><br><span class="line">    echo -e &quot;\n[Error]Please check &#x27;npm&#x27;\n&quot;</span><br><span class="line">    exit 57</span><br><span class="line">  fi</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment"># 安装Hexo</span></span></span><br><span class="line">  nohup hexo &amp;&gt;/dev/null</span><br><span class="line">  if [ &quot;$?&quot; -ne 0 ]; then</span><br><span class="line">    nohup npm install --location=global hexo-cli &amp;&gt;/dev/null</span><br><span class="line">  fi</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment">## 链接hexo命令至环境变量中</span></span></span><br><span class="line">  rm -f /usr/local/bin/hexo</span><br><span class="line">  ln -s /usr/local/nodejs/lib/node_modules/hexo-cli/bin/hexo /usr/local/bin/hexo</span><br><span class="line">&#125;</span><br><span class="line">function unzip() &#123;</span><br><span class="line">  if [ $# -eq 1 ]; then</span><br><span class="line">    echo -e &quot;[Note]Please specify the datafile.&quot;</span><br><span class="line">    exit 25</span><br><span class="line">  fi</span><br><span class="line">  echo -e &quot;[Note]Starting unpack $2.&quot;</span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment"># 还原数据</span></span></span><br><span class="line"><span class="meta prompt_">  #</span><span class="language-bash"><span class="comment">## 解压数据包 并修改文件夹为$blog</span></span></span><br><span class="line">  if [ ! -d &quot;$currentPath/$blog&quot; ]; then</span><br><span class="line">    if [ &quot;$&#123;dataFile:0-3&#125;&quot; == &quot;.gz&quot; ]; then</span><br><span class="line">      tar -xf $currentPath/$dataFile</span><br><span class="line">      if [ $? -eq 0 ]; then</span><br><span class="line">        mv $currentPath/$&#123;dataFile%*.tar.gz&#125; $currentPath/$blog</span><br><span class="line">      fi</span><br><span class="line">    elif [ $&#123;dataFile:0-3&#125; == &quot;zip&quot; ]; then</span><br><span class="line">      nohup $pkgm install zip -y &amp;&gt;/dev/null</span><br><span class="line">      nohup unzip $currentPath/$dataFile &amp;&gt;/dev/null</span><br><span class="line">      if [ $? -eq 0 ]; then</span><br><span class="line">        mv $currentPath/$&#123;dataFile%*.zip&#125; $currentPath/$blog</span><br><span class="line">      fi</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">  if [ -d $currentPath/$blog ]; then</span><br><span class="line">    echo -e &quot;[Info]Unpack done.&quot;</span><br><span class="line">    echo -e &quot;[Info]Now,you can switch to &#x27;$blog&#x27; and use &#x27;hexo server&#x27; to preview your site!\n[Note]Done&quot;</span><br><span class="line">  else</span><br><span class="line">    if [ &quot;$1&quot; == &quot;start&quot; -a ! &quot;$#&quot; -eq 1 ]; then</span><br><span class="line">      echo -e &quot;\n[Error]Please check &#x27;tar -xf $dataFile or &#x27;unzip $dataFile.&#x27;\n&quot;</span><br><span class="line">      exit 80</span><br><span class="line">    elif [ &quot;$1&quot; == &quot;restart&quot; -a ! &quot;$#&quot; -eq 1 ]; then</span><br><span class="line">      echo -e &quot;\n[Error]Please check &#x27;tar -xf $dataFile or &#x27;unzip $dataFile.&#x27;\n&quot;</span><br><span class="line">      exit 80</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line">function gitConfig() &#123;</span><br><span class="line">  git config --global user.email &quot;$email&quot;</span><br><span class="line">  git config --global user.name &quot;$username&quot;</span><br><span class="line">  git config --global credential.helper store</span><br><span class="line">  git config --global http.sslVerify false</span><br><span class="line">  git config --global init.defaultBranch main</span><br><span class="line">&#125;</span><br><span class="line">function repairNPM() &#123;</span><br><span class="line">  cd $blog</span><br><span class="line">  echo -e &quot;[Info]Repairing the errors,it may take a long time,please be patient!&quot;</span><br><span class="line">  rm -rf node_modules &amp;&amp; nohup npm install --force &amp;&gt;/dev/null</span><br><span class="line">  rm -rf .deploy_git/</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">git config --global core.autocrlf <span class="literal">false</span></span></span><br><span class="line">  cd ../</span><br><span class="line">  echo -e &quot;[Info]Errors repaired.&quot;</span><br><span class="line">&#125;</span><br><span class="line">function initGit() &#123;</span><br><span class="line">  cd $blog</span><br><span class="line">  git init</span><br><span class="line">  git add .</span><br><span class="line">  git remote add origin https://github.com/$username/$remoteRepo.git</span><br><span class="line">  git remote update</span><br><span class="line">  git checkout main</span><br><span class="line">  cd ../</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#main</span></span></span><br><span class="line">checkFileName $1 $2</span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">  checkOS</span><br><span class="line">  env</span><br><span class="line">  gitConfig</span><br><span class="line">  unzip $1 $2</span><br><span class="line">  ;;</span><br><span class="line">&quot;env&quot;)</span><br><span class="line">  checkOS</span><br><span class="line">  env</span><br><span class="line">  ;;</span><br><span class="line">&quot;restart&quot;)</span><br><span class="line">  checkOS</span><br><span class="line">  cleanFiles</span><br><span class="line">  env</span><br><span class="line">  gitConfig</span><br><span class="line">  unzip $1 $2</span><br><span class="line">  ;;</span><br><span class="line">&quot;unzip&quot;)</span><br><span class="line">  unzip</span><br><span class="line">  ;;</span><br><span class="line">&quot;repair&quot;)</span><br><span class="line">  repairNPM</span><br><span class="line">  ;;</span><br><span class="line">&quot;init&quot;)</span><br><span class="line">  initGit</span><br><span class="line">  ;;</span><br><span class="line">  &quot;ri&quot;)</span><br><span class="line">  repairNPM</span><br><span class="line">  initGit</span><br><span class="line">  ;;</span><br><span class="line">&quot;clean&quot;)</span><br><span class="line">  clean</span><br><span class="line">  ;;</span><br><span class="line">&quot;help&quot;)</span><br><span class="line">  echo -e &quot;Usage: &lt;Command&gt; [OPTION] [FILE]&quot;</span><br><span class="line">  echo -e &quot;    env:     Only install the necessary utils.&quot;</span><br><span class="line">  echo -e &quot;    repair:  Repair npm module errors.&quot;</span><br><span class="line">  echo -e &quot;    init:    Link the remote reposity with local reposity.&quot;</span><br><span class="line">  echo -e &quot;    ri:      Repair and init.&quot;</span><br><span class="line">  echo -e &quot;    unzip:   Only unpack the datafile.&quot;</span><br><span class="line">  echo -e &quot;    clean:   Clean the necessary files.&quot;</span><br><span class="line">  echo -e &quot;    start:   Start recovery nomarlly.&quot;</span><br><span class="line">  echo -e &quot;    restart: Reinstall nodejs and re-unzip your blog.\n&quot;</span><br><span class="line">  ;;</span><br><span class="line">*)</span><br><span class="line">  echo &quot;[!] invalid input&quot;</span><br><span class="line">  echo &quot;[Note]Use option: &#x27;start&#x27; to began recovery.&quot;</span><br><span class="line">  echo &quot;[Note]Try &#x27;help&#x27; for more information.&quot;</span><br><span class="line">  ;;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="报错解决方案"><a href="#报错解决方案" class="headerlink" title="报错解决方案"></a>报错解决方案</h1><blockquote><p><a href="https://blog.csdn.net/weixin_42209753/article/details/128478647?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-2-128478647-blog-115394350.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~YuanLiJiHua~Position-2-128478647-blog-115394350.pc_relevant_default&utm_relevant_index=3">git@github.com: Permission denied (publickey).<br>fatal: Could not read from remote repository.<br>Please make sure you have the correct access rights<br>and the repository exists.<br>FATAL Something’s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.html<br>Error: Spawn failed<br>at ChildProcess.<anonymous> (&#x2F;var&#x2F;www&#x2F;myblog&#x2F;node_modules&#x2F;hexo-util&#x2F;lib&#x2F;spawn.js:51:21)<br>   at ChildProcess.emit (node:events:527:28)<br>   at Process.ChildProcess._handle.onexit (node:internal&#x2F;child_process:291:12)</a></p></blockquote><p><a href="https://blog.csdn.net/benisarookie/article/details/113114604">https://blog.csdn.net/benisarookie/article/details/113114604</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加 私钥 到.ssh文件下</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改 私钥 的权限为600 (rw)</span></span><br><span class="line">ssh-agent bash</span><br><span class="line">ssh-add &lt;私钥文件&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML要点梳理（复习用）</title>
      <link href="/posts/2491479626/"/>
      <url>/posts/2491479626/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML-元素详解"><a href="#HTML-元素详解" class="headerlink" title="HTML 元素详解"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/HTML_basics#html_%E5%85%83%E7%B4%A0%E8%AF%A6%E8%A7%A3">HTML 元素详解</a></h1><p><img src="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics/grumpy-cat-small.png" alt="HTML 元素"></p><h1 id="“CSS-规则集”详解"><a href="#“CSS-规则集”详解" class="headerlink" title="“CSS 规则集”详解"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/CSS_basics#%E2%80%9Ccss_%E8%A7%84%E5%88%99%E9%9B%86%E2%80%9D%E8%AF%A6%E8%A7%A3">“CSS 规则集”详解</a></h1><p><img src="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics/css-declaration-small.png" alt="图解CSS声明"></p><h1 id="块级元素与行内元素的差别"><a href="#块级元素与行内元素的差别" class="headerlink" title="块级元素与行内元素的差别"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Getting_started#%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E5%92%8C%E5%86%85%E8%81%94%E5%85%83%E7%B4%A0">块级元素与行内元素的差别</a></h1><ul><li>块级元素在页面中以块的形式展现 —— 相对于其前面的内容它会出现在新的一行，其后的内容也会被挤到下一行展现。块级元素通常用于展示页面上结构化的内容，例如段落、列表、导航菜单、页脚等等。一个以 block 形式展现的块级元素不会被嵌套进内联元素中，但可以嵌套在其它块级元素中。</li><li>内联元素通常出现在块级元素中并环绕文档内容的一小部分，而不是一整个段落或者一组内容。内联元素不会导致文本换行：它通常出现在一堆文字之间，例如超链接元素 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a"><code>&lt;a&gt;</code></a> 或者强调元素：<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/em"><code>&lt;em&gt;</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/strong"><code>&lt;strong&gt;</code></a>。</li></ul><blockquote><p><a href="https://www.w3school.com.cn/css/css_inline-block.asp">display:inline&#x2F;block&#x2F;inline-block区别</a></p></blockquote><h3 id="布尔属性"><a href="#布尔属性" class="headerlink" title="布尔属性"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Getting_started#%E5%B8%83%E5%B0%94%E5%B1%9E%E6%80%A7">布尔属性</a></h3><p>有时你会看到没有值的属性，它是合法的。这些属性被称为布尔属性，他们只能有跟它的属性名一样的属性值。例如<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input#attr-disabled"><code>disabled</code></a> 属性，他们可以标记表单输入使之变为不可用 (变灰色)，此时用户不能向他们输入任何数据。</p><h3 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#%E5%85%B6%E4%BB%96%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE">元数据</a></h3><h1 id="在你的站点增加自定义图标"><a href="#在你的站点增加自定义图标" class="headerlink" title="在你的站点增加自定义图标"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#%E5%9C%A8%E4%BD%A0%E7%9A%84%E7%AB%99%E7%82%B9%E5%A2%9E%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9B%BE%E6%A0%87">在你的站点增加自定义图标</a></h1><h3 id="在下载链接时使用-download-属性"><a href="#在下载链接时使用-download-属性" class="headerlink" title="在下载链接时使用 download 属性"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks#%E5%9C%A8%E4%B8%8B%E8%BD%BD%E9%93%BE%E6%8E%A5%E6%97%B6%E4%BD%BF%E7%94%A8_download_%E5%B1%9E%E6%80%A7">在下载链接时使用 download 属性</a></h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://download.mozilla.org/?product=firefox-latest-ssl&amp;os=win64&amp;lang=zh-CN&quot;</span><br><span class="line">   download=&quot;firefox-latest-64bit-installer.exe&quot;&gt;</span><br><span class="line">  下载最新的 Firefox 中文版 - Windows（64 位）</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure><h1 id="电子邮件链接"><a href="#电子邮件链接" class="headerlink" title="电子邮件链接"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks#%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E9%93%BE%E6%8E%A5">电子邮件链接</a></h1><p>使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a"><code>&lt;a&gt;</code></a> 元素和 <code>mailto</code>:URL 的方案</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;mailto:nowhere@mozilla.org&quot;</span>&gt;</span>向 nowhere 发邮件<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这会创建一个链接，看起来像这样：<a href="mailto:nowhere@mozilla.org">向 nowhere 发邮件</a>。</p><p>实际上，电子邮件地址是可选的。如果你忘记了（也就是说，你的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a#attr-href"><code>href</code></a> 仅仅只是简单的“mailto”），一个新的发送电子邮件的窗口也会被用户的邮件客户端打开，只是没有收件人的地址信息，这通常在“分享”链接是很有用的，用户可以给他们选择的地址发送邮件。</p><h2 id="指定详细信息"><a href="#指定详细信息" class="headerlink" title="指定详细信息"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks#%E6%8C%87%E5%AE%9A%E8%AF%A6%E7%BB%86%E4%BF%A1%E6%81%AF">指定详细信息</a></h2><p>包含 cc、bcc、主题和主体的示例：</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">&quot;mailto:nowhere@mozilla.org?cc=name2@rapidtables.com&amp;bcc=name3@rapidtables.com&amp;subject=The%20subject%20of%20the%20email&amp;body=The%20body%20of%20the%20email&quot;</span>&gt;</span><br><span class="line">  Send mail with cc, bcc, subject <span class="keyword">and</span> body</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure><p><strong>备注：</strong> 每个字段的值必须是使用 URL 编码的，即使用<a href="https://zh.wikipedia.org/wiki/%E7%99%BE%E5%88%86%E5%8F%B7%E7%BC%96%E7%A0%81">百分号转义的</a>非打印字符（不可见字符比如制表符、换行符、分页符）和空格。</p><ul><li>同时注意使用<strong>问号</strong>（<code>?</code>）来分隔主 <strong>URL 与参数值，</strong></li><li>以及使用 <strong>&amp; 符</strong>来分隔 <code>mailto:</code> <strong>URL 中的各个参数。</strong></li></ul><p>这是标准的 URL 查询标记方法。阅读 <a href="https://developer.mozilla.org/zh-CN/docs/Learn/Forms/Sending_and_retrieving_form_data#get_%E6%96%B9%E6%B3%95">GET 方法</a>以了解哪种 URL 查询标记方法是更常用的</p><h2 id="抄送和密送的区别"><a href="#抄送和密送的区别" class="headerlink" title="抄送和密送的区别"></a><a href="https://zhuanlan.zhihu.com/p/32883872">抄送和密送的区别</a></h2><ul><li><p><strong>收件人</strong>知道<strong>其他收件人</strong>是谁且知道<strong>抄送接受者</strong>有谁，但不知道<strong>密送接受者</strong>有谁；</p></li><li><p><strong>抄送接受者</strong>知道<strong>收件人</strong>有谁且知道<strong>其他抄送接受者</strong>是谁，但不知道<strong>密送接受者</strong>有谁；</p></li><li><p><strong>密送接受者</strong>知道<strong>收件人</strong>、<strong>抄送接受者</strong>有谁，但不知道<strong>其他密送接受者</strong>是谁。</p></li></ul><h1 id="在-HTML-中应用-CSS-和-JavaScript"><a href="#在-HTML-中应用-CSS-和-JavaScript" class="headerlink" title="在 HTML 中应用 CSS 和 JavaScript"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#%E5%9C%A8_html_%E4%B8%AD%E5%BA%94%E7%94%A8_css_%E5%92%8C_javascript">在 HTML 中应用 CSS 和 JavaScript</a></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;my-css-file.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;my-js-file.js&quot;</span> <span class="attr">defer</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>rel=&quot;stylesheet&quot;</code> 表明这是文档的样式表，而 <code>href</code> 包含了样式表文件的路径</li><li>加上 <code>defer</code> 以告诉浏览器在解析完成 HTML 后再加载 JavaScript。</li></ul><h1 id="为文档设定主语言"><a href="#为文档设定主语言" class="headerlink" title="为文档设定主语言"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#%E4%B8%BA%E6%96%87%E6%A1%A3%E8%AE%BE%E5%AE%9A%E4%B8%BB%E8%AF%AD%E8%A8%80">为文档设定主语言</a></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你的 HTML 文档的语言设置好了，那么你的 HTML 文档就会被<strong>搜索引擎</strong>更有效地索引（例如，允许它在特定于语言的结果中正确显示），对于那些使用屏幕阅读器的视障人士也很有用（例如，法语和英语中都有“six”这个单词，但是发音却完全不同）。</p><p>这些代码是根据 <a href="https://zh.wikipedia.org/wiki/ISO_639-1">ISO 639-1</a> 标准定义的。你可以在 <a href="https://www.w3.org/International/articles/language-tags/">Language tags in HTML and XML</a> 找到更多相关内容。</p><h1 id="匿名函数与箭头函数"><a href="#匿名函数与箭头函数" class="headerlink" title="匿名函数与箭头函数"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics">匿名函数与箭头函数</a></h1><p>匿名函数，就是没有命名的函数；</p><p>箭头函数使用 <code>() =&gt;</code> 代替 <code>function ()</code>：</p><h1 id="可替换元素"><a href="#可替换元素" class="headerlink" title="可替换元素"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element">可替换元素</a></h1><h1 id="伪类"><a href="#伪类" class="headerlink" title="伪类"></a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes">伪类</a></h1><p>CSS <strong>伪类</strong>是添加到选择器的关键字，指定要选择的元素的特殊状态。例如，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:hover"><code>:hover</code></a> 可被用于在用户将鼠标悬停在按钮上时改变按钮的颜色。</p><h1 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h1><p>伪元素是一个附加至选择器末的关键词，允许你对被选择元素的特定部分修改样式。下例中的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/::first-line"><code>::first-line</code></a> 伪元素可改变段落首行文字的样式。</p><h2 id="before"><a href="#before" class="headerlink" title="::before"></a>::before</h2><p>创建一个<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements">伪元素</a>，其将成为匹配选中的元素的第一个子元素。常通过 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/content"><code>content</code></a> 属性来为一个元素添加修饰性的内容。此元素默认为行内元素。</p><h1 id="描述列表"><a href="#描述列表" class="headerlink" title="描述列表"></a><a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting#%E6%8F%8F%E8%BF%B0%E5%88%97%E8%A1%A8">描述列表</a></h1><p>在 HTML 基础部分，我们讨论了如何在 HTML 中<a href="https://developer.mozilla.org/zh-CN/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals#%E5%88%97%E8%A1%A8_lists">标记基本的列表</a>，但是我们没有提到你偶尔会遇到的第三种类型的列表—<strong>描述列表</strong> (description list) <strong>。</strong>这种列表的目的是标记一组项目及其相关描述，例如术语和定义，或者是问题和答案等。让我们看一组术语和定义的示例：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>内心独白<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>戏剧中，某个角色对自己的内心活动或感受进行念白表演，这些台词只面向观众，而其他角色不会听到。<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>语言独白<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>戏剧中，某个角色把自己的想法直接进行念白表演，观众和其他角色都可以听到。<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>旁白<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>戏剧中，为渲染幽默或戏剧性效果而进行的场景之外的补充注释念白，只面向观众，内容一般都是角色的感受、想法、以及一些背景信息等。<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><p><strong>输出</strong></p><p>内心独白</p><p>​戏剧中，某个角色对自己的内心活动或感受进行念白表演，这些台词只面向观众，而其他角色不会听到。</p><p>语言独白</p><p>​戏剧中，某个角色把自己的想法直接进行念白表演，观众和其他角色都可以听到。</p><p>旁白</p><p>​戏剧中，为渲染幽默或戏剧性效果而进行的场景之外的补充注释念白，只面向观众，内容一般都是角色的感受、想法、以及一些背景信息等。</p><hr><ul><li>浏览器的默认样式会在<strong>描述列表的描述部分</strong>（description definition）和<strong>描述术语</strong>（description terms）之间产生缩进。</li></ul><h1 id="HTML元素参考"><a href="#HTML元素参考" class="headerlink" title="HTML元素参考"></a>HTML元素参考</h1>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android部署原生Docker</title>
      <link href="/posts/937264636/"/>
      <url>/posts/937264636/</url>
      
        <content type="html"><![CDATA[<blockquote><p>文章参阅：<a href="https://space.bilibili.com/519618133">Ivon_Huang</a>（B站）</p></blockquote><p>目前状态：待完工…</p><p>请先看一下总结再决定是否看下去。</p><h1 id="在termux中进行检查"><a href="#在termux中进行检查" class="headerlink" title="在termux中进行检查"></a>在termux中进行检查</h1><p>检查当前kernel缺少的内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pkg install wget</span><br><span class="line">wget https://raw.githubusercontent.com/moby/moby/master/contrib/check-config.sh</span><br><span class="line">chmod +x check-config.sh</span><br><span class="line">sed -i &#x27;1s_.*_#!/data/data/com.termux/files/usr/bin/bash_&#x27; check-config.sh</span><br><span class="line">sudo ./check-config.sh</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220920160952509.png" alt="image-20220920160952509"></p><h1 id="来到计算机（Centos7-VM虚拟机）"><a href="#来到计算机（Centos7-VM虚拟机）" class="headerlink" title="来到计算机（Centos7 VM虚拟机）"></a>来到计算机（Centos7 VM虚拟机）</h1><p>先更新一下软件包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum upgrade -y --skip-broken</span><br></pre></td></tr></table></figure><h2 id="创建customkernel文件夹"><a href="#创建customkernel文件夹" class="headerlink" title="创建customkernel文件夹"></a>创建customkernel文件夹</h2><p>在文件夹下，下载kernel源代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/radcolor/android_kernel_xiaomi_whyred.git</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220920183641632.png" alt="image-20220920183641632"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220920183656029.png" alt="image-20220920183656029"></p><p>进入源代码目录下</p><p>导入环境变量</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> <span class="attribute">ARCH</span>=arm64</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">CROSS_COMPILE</span>=~/文档/customkernel/gcc-arm64-gcc-master/bin/aarch64-elf-</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">CROSS_COMPILE_ARM32</span>=~/文档/customkernel/gcc-arm-gcc-master/bin/arm-eabi-</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> ARCH=arm64</span><br><span class="line"><span class="built_in">export</span> CROSS_COMPILE=/root/customkernel/gcc-arm64-gcc-master/bin/aarch64-elf-</span><br><span class="line"><span class="built_in">export</span> CROSS_COMPILE_ARM32=/root/customkernel/gcc-arm-gcc-master/bin/arm-eabi-</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220920184604785.png" alt="image-20220920184604785"></p><p>按照<code>机型_config</code>档案产生设置，该档案通常在<code>arch/arm64/configs</code>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">源码目录</span></span><br><span class="line">cd /root/customkernel/android_kernel_xiaomi_whyred</span><br><span class="line">make whyred_defconfig</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">輸出: configuration written to .config</span></span><br></pre></td></tr></table></figure><p>报错解决方案：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings /usr/lib64/libstdc++.so.6 | grep GLIBCXX</span><br></pre></td></tr></table></figure><ol><li>[version &#96;GLIBCXX_3.4.20’ not found](<a href="https://www.jianshu.com/p/050b2b777b9d">https://www.jianshu.com/p/050b2b777b9d</a><br>)</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings /lib64/libc.so.6 | grep GLIBC</span><br></pre></td></tr></table></figure><ol><li>[version &#96;GLIBC_2.33’ not found](<a href="https://blog.csdn.net/dm569263708/article/details/125201512">https://blog.csdn.net/dm569263708/article/details/125201512</a>)</li><li>[version &#96;GLIBC_2.34’ not found ](<a href="https://blog.csdn.net/dm569263708/article/details/125201512">https://blog.csdn.net/dm569263708/article/details/125201512</a>)  <a href="https://www.livelu.com/202103411.html">这两个花了好久时间</a></li><li>[&#x2F;lib64&#x2F;libc.so.6: symbol __tunable_get_val, version GLIBC_PRIVATE not defined in file ld-linux-x86-64.so.2 with link time reference 这个错误很严重，请不要退出ssh会话或重启系统，否则会再也打不开!!!!](&#x2F;lib64&#x2F;libc.so.6: symbol __tunable_get_val, version GLIBC_PRIVATE not defined in file ld-linux-x86-64.so.2 with link time reference 这个错误)</li><li><a href="https://codeleading.com/article/2417316301/#:~:text=%E5%9C%A8%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E7%9A%84%E6%97%B6%E5%80%99%E7%A2%B0%E5%88%B0%E2%80%9Cconfigure%3A%20error%3A%20%2A%2A%2AA%20compiler%20with%20support,for%20c%2B%2B11%20language%20features%20is%20required.%E2%80%9D%20%E6%98%AF%E5%9B%A0%E4%B8%BA%E7%BC%96%E8%AF%91%E5%99%A8%E7%89%88%E6%9C%AC%E4%B8%8D%E6%94%AF%E6%8C%81c%2B%2B11%EF%BC%8C%E6%89%80%E4%BB%A5%E9%9C%80%E8%A6%81%E5%AE%89%E8%A3%85%E9%AB%98%E7%89%88%E6%9C%ACgcc%E7%BC%96%E8%AF%91%E5%99%A8%E4%BB%A5%E6%94%AF%E6%8C%81c%2B%2B11%EF%BC%8C%E4%B8%8B%E9%9D%A2%E9%87%87%E7%94%A8%E7%BC%96%E8%AF%91%E6%BA%90%E7%A0%81%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85%E3%80%82">A compiler with support for C++11 language features is required.</a></li><li>LINUX These critical programs are missing or too old: <a href="https://blog.csdn.net/qq_41054313/article/details/119455667?spm=1001.2014.3001.5502">make</a> python bison <a href="https://www.xshell.net/Linux/update-gcc.html#:~:text=gcc4.8%E5%BF%AB%E9%80%9F%E5%8D%87%E7%BA%A7%E6%96%B9%E6%B3%95%E5%A6%82%E4%B8%8B%EF%BC%9A%201%E3%80%81%E5%AE%89%E8%A3%85scl%E6%BA%90%EF%BC%9A%20yum%20install%20centos-release-scl%20scl-utils-build%20-y%202%E3%80%81%E5%88%97%E5%87%BAscl%E5%8F%AF%E7%94%A8%E6%BA%90%3A,list%20all%20--enablerepo%3D%27centos-sclo-rh%27%20%7C%20grep%20%22devtoolset-%22%203%E3%80%81%E5%AE%89%E8%A3%858%E7%89%88%E6%9C%AC%E7%9A%84gcc%E3%80%81gcc-c%2B%2B%E3%80%81gdb%E5%B7%A5%E5%85%B7%E9%93%BE%EF%BC%88toolchian%EF%BC%89%EF%BC%9A%20%28%E8%A6%81%E5%93%AA%E4%B8%AA%E7%89%88%E6%9C%AC%E7%9A%84%E5%B0%B1%E6%8A%8A%E5%91%BD%E4%BB%A4%E4%B8%AD%E7%9A%84%E6%95%B0%E5%AD%978%E6%94%B9%E6%88%90%E4%BD%A0%E8%A6%81%E7%9A%84%E4%B8%BB%E7%89%88%E6%9C%AC%E5%8F%B7%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%E3%80%82">compiler</a> (python直接 yum install python3即可)</li><li>LINUX These critical programs are missing or too old: bison (直接yum install bison解决)</li></ol><h1 id="更换系统重试（Lubuntu-22-04-1-VM虚拟机）"><a href="#更换系统重试（Lubuntu-22-04-1-VM虚拟机）" class="headerlink" title="更换系统重试（Lubuntu 22.04.1 VM虚拟机）"></a>更换系统重试（Lubuntu 22.04.1 VM虚拟机）</h1><p><strong>lubuntu-22.04.1-desktop-amd64</strong></p><p>开启sshd，用moba传文件，这样会方便点，就不用再clone那个哈皮源码了，前提是你之前保存了源码在本地。</p><h2 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h2><p>先更新软件包，再安装套件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line">sudo apt install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev \</span><br><span class="line">gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev \</span><br><span class="line">x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev \</span><br><span class="line">libxml2-utils xsltproc unzip bc</span><br></pre></td></tr></table></figure><h2 id="提取镜像"><a href="#提取镜像" class="headerlink" title="提取镜像"></a>提取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/block/bootdevice/by-name/boot of=/sdcard/stockboot.img</span><br></pre></td></tr></table></figure><h2 id="进入内核源码文件夹"><a href="#进入内核源码文件夹" class="headerlink" title="进入内核源码文件夹"></a>进入内核源码文件夹</h2><p>我把文件放在“&#x2F;home”下了，请根据自己的路径修改下方的export</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export ARCH=arm64</span><br><span class="line">export CROSS_COMPILE=/home/customkernel/gcc-arm64-gcc-master/bin/aarch64-elf-</span><br><span class="line">export CROSS_COMPILE_ARM32=/home/customkernel/gcc-arm-gcc-master/bin/arm-eabi-</span><br></pre></td></tr></table></figure><p>创建档案</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /home/customkernel/android_kernel_xiaomi_whyred</span><br><span class="line">make whyred_defconfig</span><br></pre></td></tr></table></figure><p>编译内核</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /home/customkernel/android_kernel_xiaomi_whyred/arch/arm64/boot/Image.gz-dtb /home/customkernel/AIK-Linux/boot.img-kernel</span><br><span class="line">make -j 8</span><br></pre></td></tr></table></figure><p>报错</p><ul><li><a href="https://blog.csdn.net/shakeme/article/details/80911441">fatal error: openssl&#x2F;opensslv.h: No such file or directory</a></li><li><a href="https://blog.csdn.net/weixin_44843859/article/details/110632136">libcuda.so.1https://blog.csdn.net/weixin_44843859&#x2F;article&#x2F;details&#x2F;110632136: cannot open shared object file: No such file or directory</a></li><li>[drivers&#x2F;bluetooth&#x2F;btfm_slim.c:26:23: fatal error: btfm_slim.h: No such file or directory](drivers&#x2F;bluetooth&#x2F;btfm_slim.c:26:23: fatal error: btfm_slim.h: No such file or directory)</li><li><a href="https://github.com/kuba-moo/mt7601u/issues/1#top">include&#x2F;trace&#x2F;define_trace.h:83:43: fatal error: .&#x2F;trace.h: No such file or directory</a></li></ul><p>终于终于！！！</p><p><strong>arch&#x2F;arm64&#x2F;boot&#x2F;Image.gz-dtb</strong></p><p>你终于出现了~</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922123636288.png" alt="image-20220922123636288"></p><p>接下来将Boot.img和image.gz-dtb档案放在<a href="https://forum.xda-developers.com/t/tool-android-image-kitchen-unpack-repack-kernel-ramdisk-win-android-linux-mac.2073775/">AIK-Linux</a>解压后的文件夹下</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922123846714.png" alt="image-20220922123846714"></p><p>在该目录下执行，解开boot.img</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./unpackimg.sh boot.img</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220922124142593.png" alt="image-20220922124142593"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922124101024.png" alt="image-20220922124101024"></p><p>进入解开后生成的split_img文件，将boot.img-kernel替换成我们编译生成的image.gz-dtb文件（需要改名）</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922124402228.png" alt="image-20220922124402228"></p><p>重新打包，生成了一个新的镜像文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./repackimg.sh</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220922125451058.png" alt="image-20220922125451058"></p><p>接下来只需要将img刷入手机即可！！！！</p><p><strong>注意先备份boot分区，失败可以恢复到原来的boot</strong></p><p>如果出现反复重启，开不了机，就只能重新debug了。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922130944849.png" alt="image-20220922130944849"></p><p>刷入成功！</p><hr><h1 id="开始正事，开放kernel功能！"><a href="#开始正事，开放kernel功能！" class="headerlink" title="开始正事，开放kernel功能！"></a>开始正事，开放kernel功能！</h1><p>进入源码目录，开启kconfig菜单（建议在ssh工具中进行）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220922131718702.png" alt="image-20220922131718702"></p><p>cgroup</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922133112167.png" alt="image-20220922133112167"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922183640705.png" alt="image-20220922183640705"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220922133031936.png" alt="image-20220922133031936"></p><p><a href="https://blog.csdn.net/weixin_40293570/article/details/107811815">linux内核配置iptables</a></p><p><strong>再次编译报错</strong></p><ul><li>error: implicit declaration of function ‘vmalloc’; did you mean ‘kmalloc’? [-Werror&#x3D;implicit-function-declaration]<br>  237 |         *buf &#x3D; vmalloc(size + ecc_notice_size + 1);<br>  |                ^~~~~~~<br>  |                kmalloc</li></ul><h1 id="挂载cgroup"><a href="#挂载cgroup" class="headerlink" title="挂载cgroup"></a>挂载cgroup</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t tmpfs -o uid=0,gid=0,mode=0755 cgroup /sys/fs/cgroup</span><br></pre></td></tr></table></figure><h1 id="启用docker"><a href="#启用docker" class="headerlink" title="启用docker"></a>启用docker</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dockerd --iptables=false</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>前面使用Centos进行操作，但由于更新glibc库过于困难，所以放弃该系统，如果你的系统满足条件的话，可以直接进行操作。</strong></p><hr><p>目前为止（2022&#x2F;9&#x2F;25），我自己编译的内核在开启某些特定功能时，输入手机出现反复重启现象。</p><hr><p>最终，我采用ivon大佬提供的现成的img镜像，刷入lineageos系统，成功开启了docker。</p>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android搞机 </tag>
            
            <tag> Termux </tag>
            
            <tag> Docker </tag>
            
            <tag> Kernel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>R语言1</title>
      <link href="/posts/2356070080/"/>
      <url>/posts/2356070080/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Ctrl+“+” 放大窗口</p><p>Ctrl+“-” 缩小窗口</p></blockquote><h1 id="向量"><a href="#向量" class="headerlink" title="向量"></a>向量</h1><h2 id="创建向量"><a href="#创建向量" class="headerlink" title="创建向量"></a>创建向量</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span>b<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">,</span><span class="string">&quot;three&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span><span class="built_in">c</span><span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="literal">TRUE</span><span class="punctuation">,</span><span class="literal">FALSE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">a<span class="operator">&lt;-</span>vector<span class="punctuation">(</span><span class="punctuation">)</span><span class="comment">#创建空向量</span></span><br></pre></td></tr></table></figure><ul><li><a href="https://www.cnblogs.com/kisen/p/12572692.html#:~:text=R%E8%AF%AD%E8%A8%80%20vector%E6%97%8F%E5%87%BD%E6%95%B0%20vector%20%28mode%20%3D%20%22logical%22%2C%20length%20%3D,%3D%20%22any%22%29%20%23%E4%B8%8B%E9%9D%A2%E6%B2%A1%E5%86%99%E6%98%8E%E9%BB%98%E8%AE%A4%E5%80%BC%EF%BC%8C%E6%89%80%E4%BB%A5Usage%E8%BF%99%E9%87%8C%E5%86%99%E7%9A%84%E5%B0%B1%E7%AE%97%E9%BB%98%E8%AE%A4%E5%80%BC%20is.vector%20%28x%2C%20mode%20%3D%20%22any%22%29">vector()</a>  产生一个指定模式和长度的向量 <ul><li>mode &#x3D; “logical”  设置指定模式</li><li>length &#x3D; 0  设置向量长度</li></ul></li></ul><h2 id="使用向量"><a href="#使用向量" class="headerlink" title="使用向量"></a>使用向量</h2><p>定位向量中某个位置的值</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a<span class="operator">&lt;-</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span></span><br><span class="line">a<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">a<span class="punctuation">[</span><span class="number">6</span><span class="punctuation">]</span></span><br><span class="line">a<span class="punctuation">[</span><span class="operator">-</span><span class="number">1</span><span class="punctuation">]</span> <span class="comment">#访问除第一个以外的元素</span></span><br><span class="line">a<span class="punctuation">[</span><span class="operator">-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">3</span><span class="punctuation">,</span><span class="number">6</span><span class="punctuation">)</span><span class="punctuation">]</span> <span class="comment">#访问除第1至第3以及第6个元素以外的元素</span></span><br></pre></td></tr></table></figure><p>我们可以发现向量值的下标是从1开始的！</p><p>我们可以使用<code>:</code>来生成一个序列</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> v<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">,</span><span class="number">10</span><span class="operator">:</span><span class="number">15</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> v</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span> <span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span> <span class="number">15</span></span><br></pre></td></tr></table></figure><h2 id="向量类型"><a href="#向量类型" class="headerlink" title="向量类型"></a>向量类型</h2><ul><li>数值型向量</li><li>字符型向量</li><li>逻辑型向量<ul><li>TRUE</li><li>FALSE</li><li>T</li><li>F</li></ul></li><li><a href="https://www.runoob.com/r/r-factor.html">因子型向量</a></li></ul><p>使用<code>class()</code>或<code>mode()</code>函数可以查询向量的类型</p><blockquote><p><a href="https://www.cnblogs.com/xuanlvshu/p/5297656.html">class()与mode()是有区别的！</a></p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span>b<span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span><span class="string">&quot;two&quot;</span><span class="punctuation">,</span><span class="string">&quot;three&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">(</span><span class="built_in">c</span><span class="operator">&lt;-</span><span class="built_in">c</span><span class="punctuation">(</span><span class="literal">TRUE</span><span class="punctuation">,</span><span class="literal">FALSE</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">mode<span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span>b<span class="punctuation">)</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mode<span class="punctuation">(</span>a<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;numeric&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>b<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;character&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;logical&quot;</span></span><br></pre></td></tr></table></figure><h3 id="生成数值型向量的符号和函数"><a href="#生成数值型向量的符号和函数" class="headerlink" title="生成数值型向量的符号和函数"></a>生成数值型向量的符号和函数</h3><h4 id="seq"><a href="#seq" class="headerlink" title="seq()"></a>seq()</h4><blockquote><p>可生成等差序列</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">seq<span class="punctuation">(</span>from <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> to <span class="operator">=</span> <span class="number">5</span><span class="punctuation">,</span> by <span class="operator">=</span> <span class="number">0.5</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#从1开始，每隔0.5的距离生成一个数值，一直到5</span></span><br><span class="line">seq<span class="punctuation">(</span>from <span class="operator">=</span> <span class="number">10</span><span class="punctuation">,</span> to <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> by <span class="operator">=</span> <span class="operator">-</span><span class="number">1</span><span class="punctuation">)</span></span><br><span class="line"></span><br><span class="line">seq<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span>length.out <span class="operator">=</span> <span class="number">8</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#可以省略from&amp;to，使用length.out定义输出的总长度，即数值的个数</span></span><br><span class="line">seq<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span>len <span class="operator">=</span> <span class="number">10</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#再次简写，length.out可以直接使用len</span></span><br><span class="line">seq<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span> along.with <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">3</span> <span class="punctuation">)</span></span><br><span class="line"><span class="comment">#从1到5，生成和along.with后序列长度相同的数值个数</span></span><br><span class="line"><span class="comment">#1:3总共3个数值，故结果为：1 3 5</span></span><br><span class="line">seq<span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">,</span> along.with <span class="operator">=</span> <span class="number">2</span><span class="operator">:</span><span class="number">5</span> <span class="punctuation">)</span></span><br><span class="line"><span class="comment">#同上</span></span><br></pre></td></tr></table></figure><h4 id="rep"><a href="#rep" class="headerlink" title="rep()"></a>rep()</h4><blockquote><p>用于生成重复值</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span>times <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#重复输出向量整体值5次</span></span><br><span class="line"><span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span>each <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#依次重复输出向量中每个值各5次，</span></span><br><span class="line"><span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">)</span><span class="punctuation">,</span>len <span class="operator">=</span> <span class="number">9</span><span class="punctuation">)</span></span><br><span class="line"><span class="comment">#重复输出向量整体值，但总长度为9</span></span><br><span class="line">vector4 <span class="operator">&lt;-</span> <span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span>times <span class="operator">=</span> <span class="number">4</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">length</span><span class="punctuation">(</span>vector4<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ul><li>length()函数用于输出向量总长度</li></ul><h3 id="逻辑型向量"><a href="#逻辑型向量" class="headerlink" title="逻辑型向量"></a>逻辑型向量</h3><h4 id="数值运算"><a href="#数值运算" class="headerlink" title="数值运算"></a>数值运算</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> logit <span class="operator">&lt;-</span>  <span class="built_in">rep</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="literal">TRUE</span><span class="punctuation">,</span><span class="literal">FALSE</span><span class="punctuation">)</span><span class="punctuation">,</span>len <span class="operator">=</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> logit</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">sum</span><span class="punctuation">(</span>logit<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>我们可以知道，在进行数值计算时，TRUE&#x3D;1，FALSE&#x3D;0</p><h4 id="逻辑表达式"><a href="#逻辑表达式" class="headerlink" title="逻辑表达式"></a>逻辑表达式</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">比较符号：</span><br><span class="line"><span class="operator">&gt;</span>，大于</span><br><span class="line"><span class="operator">&lt;</span>，小于</span><br><span class="line"><span class="operator">==</span>，因为<span class="operator">=</span>可以用来赋值，所以不能用来进行逻辑判断</span><br><span class="line">！<span class="operator">=</span>，不等于</span><br><span class="line"><span class="operator">&gt;=</span>，大于等于</span><br><span class="line"><span class="operator">&lt;=</span>，小于等于</span><br><span class="line"><span class="operator">&amp;</span>，与</span><br><span class="line"><span class="operator">||</span>，或</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> logit2 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">100</span><span class="operator">!=</span><span class="number">99</span><span class="punctuation">,</span><span class="number">100</span> <span class="operator">&gt;=</span><span class="number">102</span><span class="punctuation">,</span><span class="number">1</span><span class="operator">&gt;</span><span class="number">2</span><span class="operator">||</span><span class="number">1</span><span class="operator">&lt;</span><span class="number">3</span><span class="punctuation">,</span><span class="number">5</span><span class="operator">==</span><span class="number">5</span><span class="operator">&amp;</span><span class="number">7</span><span class="operator">&gt;=</span><span class="number">8</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> logit2</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span>  <span class="literal">TRUE</span> <span class="literal">FALSE</span></span><br></pre></td></tr></table></figure><h3 id="字符串向量"><a href="#字符串向量" class="headerlink" title="字符串向量"></a>字符串向量</h3><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p>如果向量中既有数值型数据又有字符串型数据，则<code>数值型数据被强制转换为字符型数据</code></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;abc&quot;</span><span class="punctuation">,</span><span class="string">&quot;def&quot;</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="operator">&gt;</span> string <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;abc&quot;</span><span class="punctuation">,</span><span class="string">&quot;def&quot;</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>string<span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;character&quot;</span></span><br><span class="line"><span class="built_in">class</span><span class="punctuation">(</span>string<span class="punctuation">[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h4 id="R语言内置向量"><a href="#R语言内置向量" class="headerlink" title="R语言内置向量"></a>R语言内置向量</h4><h5 id="letters"><a href="#letters" class="headerlink" title="letters"></a>letters</h5><blockquote><p>它表示a到z的26个字母，且为小写</p></blockquote><h5 id="LETTERS"><a href="#LETTERS" class="headerlink" title="LETTERS"></a>LETTERS</h5><blockquote><p>它表示A到Z的26个字母，且为大写</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> <span class="built_in">letters</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;a&quot;</span> <span class="string">&quot;b&quot;</span> <span class="string">&quot;c&quot;</span> <span class="string">&quot;d&quot;</span> <span class="string">&quot;e&quot;</span> <span class="string">&quot;f&quot;</span> <span class="string">&quot;g&quot;</span> <span class="string">&quot;h&quot;</span> <span class="string">&quot;i&quot;</span> <span class="string">&quot;j&quot;</span> <span class="string">&quot;k&quot;</span> <span class="string">&quot;l&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">]</span> <span class="string">&quot;m&quot;</span> <span class="string">&quot;n&quot;</span> <span class="string">&quot;o&quot;</span> <span class="string">&quot;p&quot;</span> <span class="string">&quot;q&quot;</span> <span class="string">&quot;r&quot;</span> <span class="string">&quot;s&quot;</span> <span class="string">&quot;t&quot;</span> <span class="string">&quot;u&quot;</span> <span class="string">&quot;v&quot;</span> <span class="string">&quot;w&quot;</span> <span class="string">&quot;x&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="string">&quot;y&quot;</span> <span class="string">&quot;z&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">LETTERS</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;A&quot;</span> <span class="string">&quot;B&quot;</span> <span class="string">&quot;C&quot;</span> <span class="string">&quot;D&quot;</span> <span class="string">&quot;E&quot;</span> <span class="string">&quot;F&quot;</span> <span class="string">&quot;G&quot;</span> <span class="string">&quot;H&quot;</span> <span class="string">&quot;I&quot;</span> <span class="string">&quot;J&quot;</span> <span class="string">&quot;K&quot;</span> <span class="string">&quot;L&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">13</span><span class="punctuation">]</span> <span class="string">&quot;M&quot;</span> <span class="string">&quot;N&quot;</span> <span class="string">&quot;O&quot;</span> <span class="string">&quot;P&quot;</span> <span class="string">&quot;Q&quot;</span> <span class="string">&quot;R&quot;</span> <span class="string">&quot;S&quot;</span> <span class="string">&quot;T&quot;</span> <span class="string">&quot;U&quot;</span> <span class="string">&quot;V&quot;</span> <span class="string">&quot;W&quot;</span> <span class="string">&quot;X&quot;</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">25</span><span class="punctuation">]</span> <span class="string">&quot;Y&quot;</span> <span class="string">&quot;Z&quot;</span></span><br></pre></td></tr></table></figure><h3 id="因子型向量"><a href="#因子型向量" class="headerlink" title="因子型向量"></a><a href="https://www.runoob.com/r/r-factor.html">因子型向量</a></h3><h4 id="factor"><a href="#factor" class="headerlink" title="factor()"></a>factor()</h4><blockquote><p>用于生成因子型向量</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">factor<span class="punctuation">(</span>x <span class="operator">=</span> character<span class="punctuation">(</span><span class="punctuation">)</span><span class="punctuation">,</span> levels<span class="punctuation">,</span> labels <span class="operator">=</span> levels<span class="punctuation">,</span></span><br><span class="line">       exclude <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">,</span> ordered <span class="operator">=</span> is.ordered<span class="punctuation">(</span>x<span class="punctuation">)</span><span class="punctuation">,</span> nmax <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><ul><li>x：向量。</li><li>levels：指定各水平值, 不指定时由x的不同值来求得。</li><li>labels：水平的标签, 不指定时用各水平值的对应字符串。</li><li>exclude：排除的字符。</li><li>ordered：逻辑值，用于指定水平是否有序。</li><li>nmax：水平的上限数量。</li></ul><h4 id="gl"><a href="#gl" class="headerlink" title="gl()"></a>gl()</h4><blockquote><p>用于生成因子水平</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gl<span class="punctuation">(</span>n<span class="punctuation">,</span> k<span class="punctuation">,</span> <span class="built_in">length</span> <span class="operator">=</span> n<span class="operator">*</span>k<span class="punctuation">,</span> labels <span class="operator">=</span> <span class="built_in">seq_len</span><span class="punctuation">(</span>n<span class="punctuation">)</span><span class="punctuation">,</span> ordered <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><ul><li><strong>n</strong>: 设置 level 的个数</li><li><strong>k</strong>: 设置每个 level 重复的次数</li><li><strong>length</strong>: 设置长度</li><li><strong>labels</strong>: 设置 level 的值</li><li><strong>ordered</strong>: 设置是否 level 是排列好顺序的，布尔值。</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> my_fac4 <span class="operator">&lt;-</span> gl<span class="punctuation">(</span>n<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> k<span class="operator">=</span><span class="number">5</span><span class="punctuation">,</span> labels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Control&quot;</span><span class="punctuation">,</span><span class="string">&quot;Treatment&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_fac4</span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> Control   Control   Control   Control   Control   Treatment</span><br><span class="line"> <span class="punctuation">[</span><span class="number">7</span><span class="punctuation">]</span> Treatment Treatment Treatment Treatment</span><br><span class="line">Levels<span class="operator">:</span> Control Treatment</span><br><span class="line"><span class="operator">&gt;</span> my_fac5 <span class="operator">&lt;-</span> gl<span class="punctuation">(</span>n<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> k<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span> labels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Control&quot;</span><span class="punctuation">,</span><span class="string">&quot;Treatment&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_fac5</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> Control   Treatment</span><br><span class="line">Levels<span class="operator">:</span> Control Treatment</span><br><span class="line"><span class="operator">&gt;</span> my_fac5 <span class="operator">&lt;-</span> gl<span class="punctuation">(</span>n<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> k<span class="operator">=</span><span class="number">1</span><span class="punctuation">,</span><span class="built_in">length</span> <span class="operator">=</span> <span class="number">8</span><span class="punctuation">,</span> labels <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;Control&quot;</span><span class="punctuation">,</span><span class="string">&quot;Treatment&quot;</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_fac5</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> Control   Treatment Control   Treatment Control   Treatment</span><br><span class="line"><span class="punctuation">[</span><span class="number">7</span><span class="punctuation">]</span> Control   Treatment</span><br><span class="line">Levels<span class="operator">:</span> Control Treatment</span><br></pre></td></tr></table></figure><p>可以省略n，k直接写个数与重复次数。</p><h4 id="类型转换-1"><a href="#类型转换-1" class="headerlink" title="类型转换"></a>类型转换</h4><h5 id="as-factor"><a href="#as-factor" class="headerlink" title="as.factor()"></a>as.factor()</h5><blockquote><p>字符串型-&gt;因子型</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> temp_string <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;A&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;B&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;AB&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;O&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_fac6 <span class="operator">&lt;-</span> as.factor<span class="punctuation">(</span>temp_string<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_fac6</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> A  B  AB O </span><br><span class="line">Levels<span class="operator">:</span> A AB B O</span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>my_fac6<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;factor&quot;</span></span><br></pre></td></tr></table></figure><h5 id="as-charactor"><a href="#as-charactor" class="headerlink" title="as.charactor()"></a>as.charactor()</h5><blockquote><p>因子型-&gt;字符串型</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> my_fac6<span class="operator">&lt;-</span><span class="built_in">as.character</span><span class="punctuation">(</span>my_fac6<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">class</span><span class="punctuation">(</span>my_fac6<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;character&quot;</span></span><br></pre></td></tr></table></figure><h4 id="求因子水平个数和具体值"><a href="#求因子水平个数和具体值" class="headerlink" title="求因子水平个数和具体值"></a>求因子水平个数和具体值</h4><h5 id="nlevels"><a href="#nlevels" class="headerlink" title="nlevels()"></a>nlevels()</h5><blockquote><p>求level个数</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> nlevels<span class="punctuation">(</span>my_fac6<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h5 id="levels"><a href="#levels" class="headerlink" title="levels"></a>levels</h5><blockquote><p>求具体值</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> levels<span class="punctuation">(</span>my_fac6<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;A&quot;</span>  <span class="string">&quot;AB&quot;</span> <span class="string">&quot;B&quot;</span>  <span class="string">&quot;O&quot;</span> </span><br></pre></td></tr></table></figure><h4 id="relevel"><a href="#relevel" class="headerlink" title="relevel()"></a>relevel()</h4><blockquote><p>生成哑变量</p></blockquote><p><strong>需要导入Epi包</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> my_fac7 <span class="operator">&lt;-</span> relevel<span class="punctuation">(</span>my_fac6<span class="punctuation">,</span>ref<span class="operator">=</span><span class="string">&#x27;B&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_fac7</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> A  B  AB O </span><br><span class="line">Levels<span class="operator">:</span> B A AB O</span><br></pre></td></tr></table></figure><ul><li>ref：作为参考的值，效果是在levels中会出现在首位</li></ul><h4 id="改变有序变量的排序"><a href="#改变有序变量的排序" class="headerlink" title="改变有序变量的排序"></a>改变有序变量的排序</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;plocebo&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;20mg&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;10mg&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;50mg&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_order_fac <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>x<span class="punctuation">,</span>ordered <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_order_fac</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">0</span>mg  <span class="number">10</span>mg <span class="number">20</span>mg plocebo</span><br><span class="line">Levels<span class="operator">:</span> <span class="number">0</span>mg <span class="operator">&lt;</span> <span class="number">10</span>mg <span class="operator">&lt;</span> <span class="number">20</span>mg <span class="operator">&lt;</span> plocebo</span><br></pre></td></tr></table></figure><ul><li>plocebo：微量，应该是要在0mg前的，如何实现呢？</li></ul><p>首先导入DescTools包</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">install.packages<span class="punctuation">(</span><span class="string">&quot;DescTools&quot;</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>DescTools<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;plocebo&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;10mg&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;20mg&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;50mg&#x27;</span><span class="punctuation">)</span></span><br><span class="line">my_order_fac <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>x<span class="punctuation">,</span>ordered <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line">library<span class="punctuation">(</span>DescTools<span class="punctuation">)</span></span><br><span class="line">my_order_fac2 <span class="operator">&lt;-</span> reorder.factor<span class="punctuation">(</span>my_order_fac<span class="punctuation">,</span>new.order <span class="operator">=</span> x<span class="punctuation">)</span></span><br><span class="line">my_order_fac2</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> plocebo <span class="number">10</span>mg    <span class="number">20</span>mg    <span class="number">50</span>mg   </span><br><span class="line">Levels<span class="operator">:</span> plocebo <span class="operator">&lt;</span> <span class="number">10</span>mg <span class="operator">&lt;</span> <span class="number">20</span>mg <span class="operator">&lt;</span> <span class="number">50</span>mg</span><br></pre></td></tr></table></figure><p>如果我们调整一下</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;10mg&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;plocebo&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;20mg&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;50mg&#x27;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_order_fac <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>x<span class="punctuation">,</span>ordered <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_order_fac2 <span class="operator">&lt;-</span> reorder.factor<span class="punctuation">(</span>my_order_fac<span class="punctuation">,</span>new.order <span class="operator">=</span> x<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_order_fac2</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">10</span>mg    plocebo <span class="number">20</span>mg    <span class="number">50</span>mg   </span><br><span class="line">Levels<span class="operator">:</span> <span class="number">10</span>mg <span class="operator">&lt;</span> plocebo <span class="operator">&lt;</span> <span class="number">20</span>mg <span class="operator">&lt;</span> <span class="number">50</span>mg</span><br></pre></td></tr></table></figure><p>我们发现plocebo变化10mg后了！</p><p>总结一下就是，利用DescTools中的<code>reorder.factor()</code>函数，在<code>new.order</code>后指定我们需要的顺序，这样就改变了因子水平的顺序了！</p><h1 id="数据框"><a href="#数据框" class="headerlink" title="数据框"></a>数据框</h1><h2 id="定义数据框"><a href="#定义数据框" class="headerlink" title="定义数据框"></a>定义数据框</h2><p> data.frame()</p><blockquote><p>类似excel表格</p></blockquote><ol><li>首先创建数据</li></ol><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">patientID</span> &lt;- c(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>)</span><br><span class="line"><span class="attribute">age</span> &lt;- c(<span class="number">25</span>, <span class="number">34</span>, <span class="number">28</span>, <span class="number">52</span>)</span><br><span class="line"><span class="attribute">diabetes</span> &lt;- c(<span class="string">&quot;Type1&quot;</span>, <span class="string">&quot;Type2&quot;</span>, <span class="string">&quot;Type1&quot;</span>, <span class="string">&quot;Type1&quot;</span>)</span><br><span class="line"><span class="attribute">status</span> &lt;- c(<span class="string">&quot;Poor&quot;</span>, <span class="string">&quot;Improved&quot;</span>, <span class="string">&quot;Excellent&quot;</span>, <span class="string">&quot;Poor&quot;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>设置数据类型</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">diabetes <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>diabetes<span class="punctuation">)</span></span><br><span class="line">status <span class="operator">&lt;-</span> factor<span class="punctuation">(</span>status<span class="punctuation">,</span> order<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ol start="3"><li>定义数据框&amp;输出</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">patientdata <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>patientID<span class="punctuation">,</span> age<span class="punctuation">,</span> diabetes<span class="punctuation">,</span> status<span class="punctuation">)</span></span><br><span class="line">patientdata</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> patientdata</span><br><span class="line">  patientID age diabetes    status</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span>  <span class="number">25</span>    Type1      Poor</span><br><span class="line"><span class="number">2</span>         <span class="number">2</span>  <span class="number">34</span>    Type2  Improved</span><br><span class="line"><span class="number">3</span>         <span class="number">3</span>  <span class="number">28</span>    Type1 Excellent</span><br><span class="line"><span class="number">4</span>         <span class="number">4</span>  <span class="number">52</span>    Type1      Poor</span><br></pre></td></tr></table></figure><p>我们可以发现，我们定义的变量名作为了列名。</p><p><strong>需要注意</strong>  定义的变量作为数据框时需要具备相同的维度！</p><ol start="4"><li>输出数据框的结构</li></ol><p>str()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> str<span class="punctuation">(</span>patientdata<span class="punctuation">)</span> </span><br><span class="line"><span class="string">&#x27;data.frame&#x27;</span><span class="operator">:</span><span class="number">4</span> obs. of  <span class="number">4</span> variables<span class="operator">:</span></span><br><span class="line"> <span class="operator">$</span> patientID<span class="operator">:</span> num  <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"> <span class="operator">$</span> age      <span class="operator">:</span> num  <span class="number">25</span> <span class="number">34</span> <span class="number">28</span> <span class="number">52</span></span><br><span class="line"> <span class="operator">$</span> diabetes <span class="operator">:</span> Factor w<span class="operator">/</span> <span class="number">2</span> levels <span class="string">&quot;Type1&quot;</span><span class="punctuation">,</span><span class="string">&quot;Type2&quot;</span><span class="operator">:</span> <span class="number">1</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"> <span class="operator">$</span> status   <span class="operator">:</span> Ord.factor w<span class="operator">/</span> <span class="number">3</span> levels <span class="string">&quot;Excellent&quot;</span><span class="operator">&lt;</span><span class="string">&quot;Improved&quot;</span><span class="operator">&lt;</span>..<span class="operator">:</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><ol start="5"><li>输出统计数据</li></ol><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> summary<span class="punctuation">(</span>patientdata<span class="punctuation">)</span></span><br><span class="line">   patientID         age         diabetes       status </span><br><span class="line"> Min.   <span class="operator">:</span><span class="number">1.00</span>   Min.   <span class="operator">:</span><span class="number">25.00</span>   Type1<span class="operator">:</span><span class="number">3</span>   Excellent<span class="operator">:</span><span class="number">1</span>  </span><br><span class="line"> <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">1.75</span>   <span class="number">1</span>st Qu.<span class="operator">:</span><span class="number">27.25</span>   Type2<span class="operator">:</span><span class="number">1</span>   Improved <span class="operator">:</span><span class="number">1</span>  </span><br><span class="line"> Median <span class="operator">:</span><span class="number">2.50</span>   Median <span class="operator">:</span><span class="number">31.00</span>             Poor     <span class="operator">:</span><span class="number">2</span>  </span><br><span class="line"> Mean   <span class="operator">:</span><span class="number">2.50</span>   Mean   <span class="operator">:</span><span class="number">34.75</span>                          </span><br><span class="line"> <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">3.25</span>   <span class="number">3</span>rd Qu.<span class="operator">:</span><span class="number">38.50</span>                          </span><br><span class="line"> Max.   <span class="operator">:</span><span class="number">4.00</span>   Max.   <span class="operator">:</span><span class="number">52.00</span>  </span><br></pre></td></tr></table></figure><h2 id="以视图的形式输出"><a href="#以视图的形式输出" class="headerlink" title="以视图的形式输出"></a>以视图的形式输出</h2><p>view()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">View<span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220918122324334.png" alt="image-20220918122324334"></p><h2 id="去除某列"><a href="#去除某列" class="headerlink" title="去除某列"></a>去除某列</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span>   my_df <span class="operator">&lt;-</span> data.frame<span class="punctuation">(</span>one<span class="operator">=</span><span class="built_in">c</span><span class="punctuation">(</span><span class="number">1.2</span><span class="punctuation">,</span><span class="number">2.3</span><span class="punctuation">,</span><span class="number">3.4</span><span class="punctuation">,</span><span class="number">4.5</span><span class="punctuation">,</span><span class="number">5.6</span><span class="punctuation">)</span><span class="punctuation">,</span>two <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;Tom&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;Andy&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;Mary&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;Bob&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;Leo&#x27;</span><span class="punctuation">)</span><span class="punctuation">,</span>three <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="literal">TRUE</span><span class="punctuation">,</span><span class="literal">FALSE</span><span class="punctuation">,</span><span class="literal">TRUE</span><span class="punctuation">,</span><span class="literal">FALSE</span><span class="punctuation">,</span><span class="literal">TRUE</span><span class="punctuation">)</span><span class="punctuation">,</span>stringsAsFactors <span class="operator">=</span> <span class="literal">TRUE</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_df</span><br><span class="line">  one  two three</span><br><span class="line"><span class="number">1</span> <span class="number">1.2</span>  Tom  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span> <span class="number">2.3</span> Andy <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span> <span class="number">3.4</span> Mary  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">4</span> <span class="number">4.5</span>  Bob <span class="literal">FALSE</span></span><br><span class="line"><span class="number">5</span> <span class="number">5.6</span>  Leo  <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span>   my_df<span class="punctuation">[</span><span class="punctuation">,</span><span class="operator">-</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line">  one three</span><br><span class="line"><span class="number">1</span> <span class="number">1.2</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span> <span class="number">2.3</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span> <span class="number">3.4</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">4</span> <span class="number">4.5</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">5</span> <span class="number">5.6</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="operator">&gt;</span>   my_df</span><br><span class="line">  one  two three</span><br><span class="line"><span class="number">1</span> <span class="number">1.2</span>  Tom  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span> <span class="number">2.3</span> Andy <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span> <span class="number">3.4</span> Mary  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">4</span> <span class="number">4.5</span>  Bob <span class="literal">FALSE</span></span><br><span class="line"><span class="number">5</span> <span class="number">5.6</span>  Leo  <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><ul><li>使用<code>-</code>只是临时的删除</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span>   my_df<span class="operator">$</span>two <span class="operator">&lt;-</span> <span class="literal">NULL</span></span><br><span class="line"><span class="operator">&gt;</span>   my_df</span><br><span class="line">  one three</span><br><span class="line"><span class="number">1</span> <span class="number">1.2</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">2</span> <span class="number">2.3</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">3</span> <span class="number">3.4</span>  <span class="literal">TRUE</span></span><br><span class="line"><span class="number">4</span> <span class="number">4.5</span> <span class="literal">FALSE</span></span><br><span class="line"><span class="number">5</span> <span class="number">5.6</span>  <span class="literal">TRUE</span></span><br></pre></td></tr></table></figure><ul><li>使用<code>&lt;-null</code>为第二列赋予null值，实现永久删除</li></ul><h2 id="新增一列"><a href="#新增一列" class="headerlink" title="新增一列"></a>新增一列</h2><blockquote><p>使用方法类似赋空值</p></blockquote><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_df<span class="operator">$</span>four <span class="operator">&lt;-</span> <span class="built_in">LETTERS</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line">my_df</span><br></pre></td></tr></table></figure><h2 id="使用可视化数据框进行修改"><a href="#使用可视化数据框进行修改" class="headerlink" title="使用可视化数据框进行修改"></a>使用可视化数据框进行修改</h2><p>edit()或fix()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my_df <span class="operator">&lt;-</span> edit<span class="punctuation">(</span>my_df<span class="punctuation">)</span></span><br><span class="line">my_df</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220918123425270.png" alt="image-20220918123425270"></p><h2 id="快速查看数据框中的数据元素"><a href="#快速查看数据框中的数据元素" class="headerlink" title="快速查看数据框中的数据元素"></a>快速查看数据框中的数据元素</h2><h4 id="head"><a href="#head" class="headerlink" title="head()"></a>head()</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">head<span class="punctuation">(</span>iris<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h4 id="tail"><a href="#tail" class="headerlink" title="tail()"></a>tail()</h4>  <figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail<span class="punctuation">(</span>iris<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="描述性统计"><a href="#描述性统计" class="headerlink" title="描述性统计"></a><a href="https://blog.csdn.net/XIUXIU179/article/details/79930247">描述性统计</a></h2><p><strong>加载psych包</strong></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">library<span class="punctuation">(</span>psych<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h3 id="summary"><a href="#summary" class="headerlink" title="summary()"></a><a href="https://blog.csdn.net/weixin_58587245/article/details/122761986">summary()</a></h3><blockquote><p>可以提供最小值、最大值、四分位数和数值型变量的均值，以及因子向量和逻辑型向量的频数统计</p></blockquote><h3 id="describe"><a href="#describe" class="headerlink" title="describe()"></a>describe()</h3><blockquote><p>计算非缺失值的数量、平均数、标准差、中位数、截尾均值、绝对中位差、最小值、最大值、值域、偏度、峰度和平均值的标准误</p></blockquote><h2 id="在局部环境中使用数据框的变量"><a href="#在局部环境中使用数据框的变量" class="headerlink" title="在局部环境中使用数据框的变量"></a>在局部环境中使用数据框的变量</h2><p><a href="https://www.cnblogs.com/jiaxinwei/p/12343120.html">table()</a></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span>  patientdata<span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line">  patientID age</span><br><span class="line"><span class="number">1</span>         <span class="number">1</span>  <span class="number">25</span></span><br><span class="line"><span class="number">2</span>         <span class="number">2</span>  <span class="number">34</span></span><br><span class="line"><span class="number">3</span>         <span class="number">3</span>  <span class="number">28</span></span><br><span class="line"><span class="number">4</span>         <span class="number">4</span>  <span class="number">52</span></span><br><span class="line"><span class="operator">&gt;</span>  patientdata<span class="punctuation">[</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;diabetes&quot;</span><span class="punctuation">,</span><span class="string">&quot;status&quot;</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line">  diabetes    status</span><br><span class="line"><span class="number">1</span>    Type1      Poor</span><br><span class="line"><span class="number">2</span>    Type2  Improved</span><br><span class="line"><span class="number">3</span>    Type1 Excellent</span><br><span class="line"><span class="number">4</span>    Type1      Poor</span><br><span class="line"><span class="operator">&gt;</span>  patientdata<span class="operator">$</span>age                       </span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">25</span> <span class="number">34</span> <span class="number">28</span> <span class="number">52</span></span><br><span class="line"><span class="operator">&gt;</span>  </span><br><span class="line"><span class="operator">&gt;</span>  table<span class="punctuation">(</span>patientdata<span class="operator">$</span>diabetes<span class="punctuation">,</span> patientdata<span class="operator">$</span>status<span class="punctuation">)</span></span><br><span class="line">       </span><br><span class="line">        Excellent Improved Poor</span><br><span class="line">  Type1         <span class="number">1</span>        <span class="number">0</span>    <span class="number">2</span></span><br><span class="line">  Type2         <span class="number">0</span>        <span class="number">1</span>    <span class="number">0</span></span><br></pre></td></tr></table></figure><ul><li>用 table() 函数统计因子各水平的出现次数（称为频数或频率）。也可以对一般的向量统计每个不同元素的出现次数。</li></ul><h3 id="attach-、detach-和with"><a href="#attach-、detach-和with" class="headerlink" title="attach()、detach()和with()"></a>attach()、detach()和with()</h3><p>使用内置数据</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span>  View<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span>  summary<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">)</span></span><br><span class="line">   Min. <span class="number">1</span>st Qu.  Median    Mean <span class="number">3</span>rd Qu.    Max. </span><br><span class="line">  <span class="number">10.40</span>   <span class="number">15.43</span>   <span class="number">19.20</span>   <span class="number">20.09</span>   <span class="number">22.80</span>   <span class="number">33.90</span> </span><br><span class="line"><span class="operator">&gt;</span>  plot<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">,</span> mtcars<span class="operator">$</span>disp<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span>  plot<span class="punctuation">(</span>mtcars<span class="operator">$</span>mpg<span class="punctuation">,</span> mtcars<span class="operator">$</span>wt<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h4 id="attach-amp-detach"><a href="#attach-amp-detach" class="headerlink" title="attach()&amp;detach"></a>attach()&amp;detach</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">attach<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br><span class="line">summary<span class="punctuation">(</span>mpg<span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>mpg<span class="punctuation">,</span> disp<span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>mpg<span class="punctuation">,</span> wt<span class="punctuation">)</span></span><br><span class="line">detach<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ul><li>如果<code>环境变量</code>中有变量与使用的数据重名，则会优先使用环境变量中的数据</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mpg <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">25</span><span class="punctuation">,</span> <span class="number">36</span><span class="punctuation">,</span> <span class="number">47</span><span class="punctuation">)</span></span><br><span class="line">attach<span class="punctuation">(</span>mtcars<span class="punctuation">)</span></span><br><span class="line">plot<span class="punctuation">(</span>mpg<span class="punctuation">,</span> wt<span class="punctuation">)</span></span><br><span class="line">mpg</span><br></pre></td></tr></table></figure><h4 id="with"><a href="#with" class="headerlink" title="with()"></a>with()</h4><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">with<span class="punctuation">(</span>mtcars<span class="punctuation">,</span> <span class="punctuation">&#123;</span></span><br><span class="line">  print<span class="punctuation">(</span>summary<span class="punctuation">(</span>mpg<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">  plot<span class="punctuation">(</span>mpg<span class="punctuation">,</span> disp<span class="punctuation">)</span></span><br><span class="line">  plot<span class="punctuation">(</span>mpg<span class="punctuation">,</span> wt<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><ul><li>使用with()不会受重名变量的影响</li><li>在with()中产生的对象是局部变量，只在{}中有效</li></ul><h1 id="矩阵"><a href="#矩阵" class="headerlink" title="矩阵"></a><a href="https://www.runoob.com/r/r-matrix.html">矩阵</a></h1><h2 id="定义矩阵"><a href="#定义矩阵" class="headerlink" title="定义矩阵"></a>定义矩阵</h2><p>matrix()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">matrix<span class="punctuation">(</span>data <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">,</span> nrow <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> ncol <span class="operator">=</span> <span class="number">1</span><span class="punctuation">,</span> byrow <span class="operator">=</span> <span class="literal">FALSE</span><span class="punctuation">,</span><span class="built_in">dimnames</span> <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span>rownames<span class="punctuation">,</span> colnames<span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><ul><li><strong>data</strong> 向量，矩阵的数据</li><li><strong>nrow</strong> 行数</li><li><strong>ncol</strong> 列数</li><li><strong>byrow</strong> 逻辑值，为 FALSE 按列排列，为 TRUE 按行排列</li><li><strong>dimname</strong> 设置行和列的名称</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> y <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">20</span><span class="punctuation">,</span> nrow<span class="operator">=</span><span class="number">5</span><span class="punctuation">,</span> ncol<span class="operator">=</span><span class="number">4</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> y</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">6</span>   <span class="number">11</span>   <span class="number">16</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">7</span>   <span class="number">12</span>   <span class="number">17</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">8</span>   <span class="number">13</span>   <span class="number">18</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">9</span>   <span class="number">14</span>   <span class="number">19</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">5</span>   <span class="number">10</span>   <span class="number">15</span>   <span class="number">20</span></span><br><span class="line"><span class="operator">&gt;</span> cells    <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">1</span><span class="punctuation">,</span><span class="number">26</span><span class="punctuation">,</span><span class="number">24</span><span class="punctuation">,</span><span class="number">68</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> rnames   <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;R1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;R2&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> cnames   <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;C1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;C2&quot;</span><span class="punctuation">)</span> </span><br><span class="line"><span class="operator">&gt;</span> mymatrix <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span>cells<span class="punctuation">,</span> nrow<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> ncol<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> byrow<span class="operator">=</span><span class="literal">TRUE</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                    <span class="built_in">dimnames</span><span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>rnames<span class="punctuation">,</span> cnames<span class="punctuation">)</span><span class="punctuation">)</span> </span><br><span class="line"><span class="operator">&gt;</span> mymatrix</span><br><span class="line">   C1 C2</span><br><span class="line">R1  <span class="number">1</span> <span class="number">26</span></span><br><span class="line">R2 <span class="number">24</span> <span class="number">68</span></span><br><span class="line"><span class="operator">&gt;</span> mymatrix <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span>cells<span class="punctuation">,</span> nrow<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> ncol<span class="operator">=</span><span class="number">2</span><span class="punctuation">,</span> byrow<span class="operator">=</span><span class="literal">FALSE</span><span class="punctuation">,</span></span><br><span class="line"><span class="operator">+</span>                    <span class="built_in">dimnames</span><span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>rnames<span class="punctuation">,</span> cnames<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mymatrix</span><br><span class="line">   C1 C2</span><br><span class="line">R1  <span class="number">1</span> <span class="number">24</span></span><br><span class="line">R2 <span class="number">26</span> <span class="number">68</span></span><br></pre></td></tr></table></figure><h2 id="定位数据"><a href="#定位数据" class="headerlink" title="定位数据"></a>定位数据</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> x <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span> nrow<span class="operator">=</span><span class="number">2</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> x</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">3</span>    <span class="number">5</span>    <span class="number">7</span>    <span class="number">9</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">4</span>    <span class="number">6</span>    <span class="number">8</span>   <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">2</span>  <span class="number">4</span>  <span class="number">6</span>  <span class="number">8</span> <span class="number">10</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">3</span> <span class="number">4</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">7</span></span><br><span class="line"><span class="operator">&gt;</span> x<span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">)</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">7</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><ul><li>中括号中省略某一边，代表整行或整列</li><li>可以在中括号中使用向量，同时选中多个行或列</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> my_matrix2 <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span>data <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span> nrow <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_matrix2</span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">6</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">7</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">8</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">9</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">5</span>   <span class="number">10</span></span><br></pre></td></tr></table></figure><ul><li>默认情况下，按行排列</li><li>若未规定行数、列数的某一个的具体值，则会根据数据自行生成，但必须保证数据长度能够被已知行或列数整除，否则会报错。</li></ul><p>如：</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning message<span class="operator">:</span></span><br><span class="line">In matrix<span class="punctuation">(</span>data <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">9</span><span class="punctuation">,</span> nrow <span class="operator">=</span> <span class="number">5</span><span class="punctuation">)</span> <span class="operator">:</span></span><br><span class="line">  data <span class="built_in">length</span> <span class="punctuation">[</span><span class="number">9</span><span class="punctuation">]</span> is not a sub<span class="operator">-</span>multiple or multiple of the number of rows <span class="punctuation">[</span><span class="number">5</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><h2 id="转置"><a href="#转置" class="headerlink" title="转置"></a>转置</h2><p>t()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> my_matrix5 <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span>data <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">12</span><span class="punctuation">,</span> nrow <span class="operator">=</span> <span class="number">3</span><span class="punctuation">,</span> ncol <span class="operator">=</span> <span class="number">4</span><span class="punctuation">,</span> </span><br><span class="line"><span class="operator">+</span>                      <span class="built_in">dimnames</span> <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;A&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;B&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;C&#x27;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;V1&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;V2&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;V3&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;V4&#x27;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_matrix5</span><br><span class="line">  V1 V2 V3 V4</span><br><span class="line">A  <span class="number">1</span>  <span class="number">4</span>  <span class="number">7</span> <span class="number">10</span></span><br><span class="line">B  <span class="number">2</span>  <span class="number">5</span>  <span class="number">8</span> <span class="number">11</span></span><br><span class="line">C  <span class="number">3</span>  <span class="number">6</span>  <span class="number">9</span> <span class="number">12</span></span><br><span class="line"><span class="operator">&gt;</span> t<span class="punctuation">(</span>my_matrix5<span class="punctuation">)</span></span><br><span class="line">    A  B  C</span><br><span class="line">V1  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span></span><br><span class="line">V2  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span></span><br><span class="line">V3  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span></span><br><span class="line">V4 <span class="number">10</span> <span class="number">11</span> <span class="number">12</span></span><br></pre></td></tr></table></figure><h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><p><img src="https://lptexas.top/img/post/2039-08-06Done.png"></p><h2 id="定义数组"><a href="#定义数组" class="headerlink" title="定义数组"></a>定义数组</h2><p>array()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array<span class="punctuation">(</span>data <span class="operator">=</span> <span class="literal">NA</span><span class="punctuation">,</span> <span class="built_in">dim</span> <span class="operator">=</span> <span class="built_in">length</span><span class="punctuation">(</span>data<span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">dimnames</span> <span class="operator">=</span> <span class="literal">NULL</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p><strong>参数说明</strong></p><ul><li>data 向量，数组元素。</li><li>dim 数组的维度，默认是一维数组。</li><li>dimnames 维度的名称，必须是个列表，默认情况下是不设置名称的。分别是：行、列、各个维度名</li></ul><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dim1 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;A1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;A2&quot;</span><span class="punctuation">)</span></span><br><span class="line">dim2 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;B1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;B2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;B3&quot;</span><span class="punctuation">)</span></span><br><span class="line">dim3 <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;C1&quot;</span><span class="punctuation">,</span> <span class="string">&quot;C2&quot;</span><span class="punctuation">,</span> <span class="string">&quot;C3&quot;</span><span class="punctuation">,</span> <span class="string">&quot;C4&quot;</span><span class="punctuation">)</span></span><br><span class="line">z <span class="operator">&lt;-</span> array<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">24</span><span class="punctuation">,</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">dimnames</span><span class="operator">=</span><span class="built_in">list</span><span class="punctuation">(</span>dim1<span class="punctuation">,</span> dim2<span class="punctuation">,</span> dim3<span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line">z</span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C1</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1  <span class="number">1</span>  <span class="number">3</span>  <span class="number">5</span></span><br><span class="line">A2  <span class="number">2</span>  <span class="number">4</span>  <span class="number">6</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C2</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1  <span class="number">7</span>  <span class="number">9</span> <span class="number">11</span></span><br><span class="line">A2  <span class="number">8</span> <span class="number">10</span> <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C3</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1 <span class="number">13</span> <span class="number">15</span> <span class="number">17</span></span><br><span class="line">A2 <span class="number">14</span> <span class="number">16</span> <span class="number">18</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> C4</span><br><span class="line"></span><br><span class="line">   B1 B2 B3</span><br><span class="line">A1 <span class="number">19</span> <span class="number">21</span> <span class="number">23</span></span><br><span class="line">A2 <span class="number">20</span> <span class="number">22</span> <span class="number">24</span></span><br></pre></td></tr></table></figure><h2 id="维度信息"><a href="#维度信息" class="headerlink" title="维度信息"></a>维度信息</h2><h3 id="返回维度信息"><a href="#返回维度信息" class="headerlink" title="返回维度信息"></a>返回维度信息</h3><p>dim()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> my_array <span class="operator">&lt;-</span> array<span class="punctuation">(</span>data <span class="operator">=</span> <span class="number">1</span><span class="operator">:</span><span class="number">16</span><span class="punctuation">,</span> <span class="built_in">dim</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">2</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> <span class="built_in">dim</span><span class="punctuation">(</span>my_array<span class="punctuation">)</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">2</span> <span class="number">4</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h3 id="重新设置维度"><a href="#重新设置维度" class="headerlink" title="重新设置维度"></a>重新设置维度</h3><p>dim()&lt;-c()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">dim</span><span class="punctuation">(</span>my_array<span class="punctuation">)</span> <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">my_array2 <span class="operator">&lt;-</span> array<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">16</span><span class="punctuation">,</span> <span class="built_in">dim</span> <span class="operator">=</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">4</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">)</span><span class="punctuation">,</span> <span class="built_in">dimnames</span> <span class="operator">=</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="built_in">c</span><span class="punctuation">(</span><span class="built_in">LETTERS</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;col1&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;col2&#x27;</span><span class="punctuation">)</span><span class="punctuation">,</span><span class="built_in">c</span><span class="punctuation">(</span><span class="string">&#x27;first&#x27;</span><span class="punctuation">,</span><span class="string">&#x27;second&#x27;</span><span class="punctuation">)</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> first</span><br><span class="line"></span><br><span class="line">  col1 col2</span><br><span class="line">A    <span class="number">1</span>    <span class="number">5</span></span><br><span class="line">B    <span class="number">2</span>    <span class="number">6</span></span><br><span class="line">C    <span class="number">3</span>    <span class="number">7</span></span><br><span class="line">D    <span class="number">4</span>    <span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">,</span> <span class="punctuation">,</span> second</span><br><span class="line"></span><br><span class="line">  col1 col2</span><br><span class="line">A    <span class="number">9</span>   <span class="number">13</span></span><br><span class="line">B   <span class="number">10</span>   <span class="number">14</span></span><br><span class="line">C   <span class="number">11</span>   <span class="number">15</span></span><br><span class="line">D   <span class="number">12</span>   <span class="number">16</span></span><br></pre></td></tr></table></figure><h2 id="提取元素"><a href="#提取元素" class="headerlink" title="提取元素"></a>提取元素</h2><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#第一层的第一列</span></span><br><span class="line"><span class="operator">&gt;</span>  my_array2<span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line">A B C D </span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> </span><br><span class="line"><span class="comment">#提取元素6</span></span><br><span class="line"> <span class="operator">&gt;</span>  my_array2<span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="定义列表"><a href="#定义列表" class="headerlink" title="定义列表"></a>定义列表</h2><p>list()</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> g <span class="operator">&lt;-</span> <span class="string">&quot;My First List&quot;</span></span><br><span class="line"><span class="operator">&gt;</span> h <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="number">25</span><span class="punctuation">,</span> <span class="number">26</span><span class="punctuation">,</span> <span class="number">18</span><span class="punctuation">,</span> <span class="number">39</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> j <span class="operator">&lt;-</span> matrix<span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span> nrow<span class="operator">=</span><span class="number">5</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> k <span class="operator">&lt;-</span> <span class="built_in">c</span><span class="punctuation">(</span><span class="string">&quot;one&quot;</span><span class="punctuation">,</span> <span class="string">&quot;two&quot;</span><span class="punctuation">,</span> <span class="string">&quot;three&quot;</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mylist <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span>title<span class="operator">=</span>g<span class="punctuation">,</span> ages<span class="operator">=</span>h<span class="punctuation">,</span> j<span class="punctuation">,</span> k<span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> mylist</span><br><span class="line"><span class="operator">$</span>title</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;My First List&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">$</span>ages</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">25</span> <span class="number">26</span> <span class="number">18</span> <span class="number">39</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line">     <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span> <span class="punctuation">[</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">1</span>    <span class="number">6</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">2</span>    <span class="number">7</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">3</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">3</span>    <span class="number">8</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">4</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">4</span>    <span class="number">9</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">5</span><span class="punctuation">,</span><span class="punctuation">]</span>    <span class="number">5</span>   <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;one&quot;</span>   <span class="string">&quot;two&quot;</span>   <span class="string">&quot;three&quot;</span></span><br></pre></td></tr></table></figure><ul><li>list()中每一个逗号分割一个元素</li><li>可以每个元素定义新名字，默认为[[n]]</li></ul><h2 id="提取元素-1"><a href="#提取元素-1" class="headerlink" title="提取元素"></a>提取元素</h2><h3 id="第二个数组元素"><a href="#第二个数组元素" class="headerlink" title="第二个数组元素"></a>第二个数组元素</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mylist<span class="operator">$</span>ages</span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">25</span> <span class="number">26</span> <span class="number">18</span> <span class="number">39</span></span><br></pre></td></tr></table></figure><p>这里我们直接使用了<code>$+名字</code>引用了第二个数组元素</p><h3 id="提取one元素"><a href="#提取one元素" class="headerlink" title="提取one元素"></a>提取one元素</h3><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> mylist<span class="punctuation">[[</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;one&quot;</span></span><br></pre></td></tr></table></figure><h3 id="若列表中嵌套了列表"><a href="#若列表中嵌套了列表" class="headerlink" title="若列表中嵌套了列表"></a>若列表中嵌套了列表</h3><p>查找“A”</p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> my_list3 <span class="operator">&lt;-</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="number">1</span><span class="operator">:</span><span class="number">10</span><span class="punctuation">,</span> <span class="built_in">letters</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">]</span><span class="punctuation">,</span> <span class="built_in">list</span><span class="punctuation">(</span><span class="number">11</span><span class="operator">:</span><span class="number">14</span><span class="punctuation">,</span> <span class="built_in">LETTERS</span><span class="punctuation">[</span><span class="number">1</span><span class="operator">:</span><span class="number">5</span><span class="punctuation">]</span><span class="punctuation">)</span><span class="punctuation">)</span></span><br><span class="line"><span class="operator">&gt;</span> my_list3</span><br><span class="line"><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"> <span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span>  <span class="number">1</span>  <span class="number">2</span>  <span class="number">3</span>  <span class="number">4</span>  <span class="number">5</span>  <span class="number">6</span>  <span class="number">7</span>  <span class="number">8</span>  <span class="number">9</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;a&quot;</span> <span class="string">&quot;b&quot;</span> <span class="string">&quot;c&quot;</span> <span class="string">&quot;d&quot;</span> <span class="string">&quot;e&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[[</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="number">11</span> <span class="number">12</span> <span class="number">13</span> <span class="number">14</span></span><br><span class="line"></span><br><span class="line"><span class="punctuation">[[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;A&quot;</span> <span class="string">&quot;B&quot;</span> <span class="string">&quot;C&quot;</span> <span class="string">&quot;D&quot;</span> <span class="string">&quot;E&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> my_list3<span class="punctuation">[[</span><span class="number">3</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[[</span><span class="number">2</span><span class="punctuation">]</span><span class="punctuation">]</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">]</span> <span class="string">&quot;A&quot;</span></span><br></pre></td></tr></table></figure><h1 id="工作空间"><a href="#工作空间" class="headerlink" title="工作空间"></a><a href="https://blog.csdn.net/xinxing__8185/article/details/46908257">工作空间</a></h1><h2 id="用于管理工作空间的部分标准命令"><a href="#用于管理工作空间的部分标准命令" class="headerlink" title="用于管理工作空间的部分标准命令"></a>用于管理工作空间的部分标准命令</h2><ul><li><strong>getwd()</strong>   <ul><li>显示当前的工作目录</li></ul></li><li>setwd(“mydirectory”)  <ul><li>修改当前的工作目录为mydirectory</li></ul></li><li><strong>ls()</strong>  <ul><li>列出当前工作空间中的对象</li></ul></li><li><strong>rm(objectlist)</strong>  <ul><li>移除（删除）一个或多个对象</li></ul></li><li><strong>help(options)</strong> <ul><li>显示可用选项的说明</li></ul></li><li>options() <ul><li>显示或设置当前选项</li></ul></li><li>history(#)<ul><li>显示最近使用过的#个命令（默认值为25）</li></ul></li><li>savehistory(“myfile”)<ul><li>保存命令历史到文件myfile中（默认值为.Rhistory）</li></ul></li><li>loadhistory(“myfile”)  <ul><li>载入一个命令历史文件（默认值为.Rhistory）</li></ul></li><li>save.image(“myfile”)<ul><li>保存工作空间到文件myfile中（默认值为.RData）</li></ul></li><li>save(objectlist, file&#x3D;”myfile”) <ul><li>保存指定对象到一个文件中</li></ul></li><li>load(“myfile”) <ul><li>读取一个工作空间到当前会话中（默认值为.RData）</li></ul></li><li>q()  <ul><li>退出R</li></ul></li></ul><h1 id="判断数据类型，返回布尔值"><a href="#判断数据类型，返回布尔值" class="headerlink" title="判断数据类型，返回布尔值"></a>判断数据类型，返回布尔值</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">is.integer</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">is.character</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">is.double</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">is.numeric</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br><span class="line"><span class="built_in">is.logical</span><span class="punctuation">(</span><span class="punctuation">)</span></span><br></pre></td></tr></table></figure><p>使用<code>is.对象</code>还可以对很多东西进行判断。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> R </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio Part 1</title>
      <link href="/posts/248435819/"/>
      <url>/posts/248435819/</url>
      
        <content type="html"><![CDATA[<h1 id="AS首次运行时报错"><a href="#AS首次运行时报错" class="headerlink" title="AS首次运行时报错"></a>AS首次运行时报错</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Failed to find Build Tools revision 30.0.3</span><br></pre></td></tr></table></figure><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>点击右上角SDK Manager</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220903214446607.png" alt="image-20220903214446607"></p><p>点击SDK Tools，勾选第一行，再勾选Show Package Details</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220903214559963.png" alt="image-20220903214559963"></p><p>勾选提示未找到的版本，点击Apply，再次重新运行即可</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220903214806514.png" alt="image-20220903214806514"></p><h1 id="改变Emulator的样式"><a href="#改变Emulator的样式" class="headerlink" title="改变Emulator的样式"></a>改变Emulator的样式</h1><p>取消勾选Launch in a tool windows</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220903215127535.png" alt="image-20220903215127535"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220903215115923.png" alt="image-20220903215115923"></p><h1 id="字符串资源"><a href="#字符串资源" class="headerlink" title="字符串资源"></a><a href="https://blog.csdn.net/weixin_45155865/article/details/121862250">字符串资源</a></h1><p>在strings.xml文件中定义需要用到的文本，使用@+变量名引用。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220905170555415.png" alt="image-20220905170555415"></p><p><a href="https://blog.csdn.net/hzw2017/article/details/78070003">快捷键添加</a></p><p>ALT+ENTER</p><h1 id="真机调试"><a href="#真机调试" class="headerlink" title="真机调试"></a>真机调试</h1><p>一般步骤：</p><ul><li>手机连接电脑</li><li>手机开启开发者选项<ul><li>启用USB调试、USB安装</li></ul></li><li>Run</li></ul><p><img src="https://lptexas-cub.github.io/img/post/GIF2022-9-518-54-43.gif" alt="GIF 2022-9-5 18-54-43"></p><h1 id="文件目录视图"><a href="#文件目录视图" class="headerlink" title="文件目录视图"></a>文件目录视图</h1><blockquote><p>建议选用Android视图</p></blockquote><h2 id="Android视图"><a href="#Android视图" class="headerlink" title="Android视图"></a>Android视图</h2><p><strong><a href="https://blog.csdn.net/weixin_42255190/article/details/97500237">app模块下的文件目录结构及作用：</a></strong></p><ul><li><p>manifests：项目的配置信息文件。</p></li><li><p>java：源代码和测试代码。</p><ul><li><p><img src="https://lptexas-cub.github.io/img/post/image-20220905193208272.png" alt="image-20220905193208272"></p><p>一般只关注第一个，另外两个是用于测试的。</p></li></ul></li><li><p>res：资源目录，存储项目资源。</p><ul><li>drawable：用于存放图片资源。</li><li>layout：存放视图资源，外观文件，文件形式xml。</li><li>values：存放：包含字符串、整型数和颜色等简单值的 XML 文件。一般指的是属性配置参数及控件组件显示的文字。</li></ul></li></ul><p><strong>Gradle Scripts模块（一般只会用到build.gradle这两个）：</strong></p><p>与编译和构建有关。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220905171445069.png" alt="image-20220905171445069"></p><hr><p><strong>程序引用资源需要使用R类，调用方法</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">R.资源类型.资源名称</span><br></pre></td></tr></table></figure><hr><p><strong>app模块manifests下的文件</strong></p><p>每个应用程序都需要配置文件，它位于程序根目录下。</p><p>很多Activity都需要在配置文件中注册。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220905171742651.png" alt="image-20220905171742651"></p><h2 id="Project视图"><a href="#Project视图" class="headerlink" title="Project视图"></a>Project视图</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20220905172026557.png" alt="image-20220905172026557"></p><h2 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20220905172053535.png" alt="image-20220905172053535"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220905172533944.png" alt="image-20220905172533944"></p>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio Part 2</title>
      <link href="/posts/2472733465/"/>
      <url>/posts/2472733465/</url>
      
        <content type="html"><![CDATA[<h1 id="Activity主程序"><a href="#Activity主程序" class="headerlink" title="Activity主程序"></a>Activity主程序</h1><p><img src="https://lptexas-cub.github.io/img/post/image-20220905194746146.png" alt="image-20220905194746146"></p><hr><p><img src="https://lptexas-cub.github.io/img/post/image-20220905194813650.png" alt="image-20220905194813650"></p><hr><h1 id="应用程序组成"><a href="#应用程序组成" class="headerlink" title="应用程序组成"></a>应用程序组成</h1><p>Android应用程序由松散耦合的组件组成并使用Manifest绑定在一起。文件Manifest描述了每一个组件和他们的交互方式，还用于指定应用程序元数据、平台要求、外部库以及必须的权限。</p><h2 id="组件（除Intent的话，称为四大组件-D）"><a href="#组件（除Intent的话，称为四大组件-D）" class="headerlink" title="组件（除Intent的话，称为四大组件:D）"></a>组件（除Intent的话，称为四大组件:D）</h2><blockquote><p>提供了应用程序的基本结构模块</p></blockquote><h3 id="Activity（最重要）"><a href="#Activity（最重要）" class="headerlink" title="Activity（最重要）"></a>Activity（最重要）</h3><ul><li><p>对应各种各样的界面。</p><ul><li>一个Activity代表一个单独的屏幕，可以添加多个控件，如Button、TextView单独，组成和用户交互的用户界面。</li></ul></li><li><p>Activity用<code>栈</code>进行管理，当前活动的Activity位于栈顶。随着不同应用的运行，每个Activity都有可能从活动状态转入非活动状态，也可能从非活动状态转入活动状态。</p></li><li><p>由java文件和xml文件构成。</p></li></ul><h3 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h3><ul><li>后台服务</li></ul><h3 id="Intent"><a href="#Intent" class="headerlink" title="Intent"></a>Intent</h3><ul><li>实现在Activity之间的跳转，并且传递数据</li></ul><h3 id="Content-Provider"><a href="#Content-Provider" class="headerlink" title="Content Provider"></a>Content Provider</h3><ul><li>用于在不同app之间传递数据</li></ul><h3 id="BroadcastReceiver"><a href="#BroadcastReceiver" class="headerlink" title="BroadcastReceiver"></a>BroadcastReceiver</h3><ul><li>广播</li><li>对外部事件进行相应</li></ul><h1 id="Android用户界面框架"><a href="#Android用户界面框架" class="headerlink" title="Android用户界面框架"></a>Android用户界面框架</h1><h2 id="MVC模型"><a href="#MVC模型" class="headerlink" title="MVC模型"></a>MVC模型</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20220905194534158.png" alt="image-20220905194534158"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220905172719934.png" alt="image-20220905172719934"></p><h2 id="View-Tree-视图树模型"><a href="#View-Tree-视图树模型" class="headerlink" title="View Tree 视图树模型"></a>View Tree 视图树模型</h2><blockquote><p>对应一个xml文件</p></blockquote><h3 id="View"><a href="#View" class="headerlink" title="View"></a>View</h3><p>最基本的可视单元（非容器类从View衍生出来）</p><ul><li>存储了屏幕上特定矩形区域内所显示内容的<code>数据结构</code></li><li>实现所占据区域的<code>界面绘制</code>、<code>焦点变化</code>、<code>用户输入</code>和<code>界面事件处理</code>等</li><li>一个<code>重要的基类</code>，所有在界面上的可见元素都是View的子类</li></ul><h3 id="ViewGroup"><a href="#ViewGroup" class="headerlink" title="ViewGroup"></a>ViewGroup</h3><p>一种能够承载含多个View的显示单元，ViewGroup类通常作为控件的容器使用（容器类继承自ViewGroup）</p><ul><li>承载界面布局</li><li>承载具有原子特征的重构模块</li></ul><h1 id="Android系统绘制界面的规则"><a href="#Android系统绘制界面的规则" class="headerlink" title="Android系统绘制界面的规则"></a>Android系统绘制界面的规则</h1><p>依据视图树的结构<code>从上至下</code>绘制每一个界面元素，每个元素负责自身的绘制，如果元素包含子元素，该元素就会通知其下的元素进行绘制。</p><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><p>Android中主线程主要负责UI的刷新，UI相关的操作都需要在主线程处理。 处理时的注意事项：耗时的操作，例如文件I&#x2F;O处理，网络请求不要在主线程处理，需要在子线程处理。</p><h2 id="单线程用户界面"><a href="#单线程用户界面" class="headerlink" title="单线程用户界面"></a>单线程用户界面</h2><p>控制器从队列中<code>获取事件和视图</code>在屏幕上<code>绘制用户界面</code>，使用的都是同一个线程</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>处理函数具有<code>顺序性</code>，能够降低应用程序的复杂程度，同时也能减低开发的难度</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><p>如果事件处理函数过于复杂，可能导致用户界面失去响应</p><h2 id="多线程用户界面"><a href="#多线程用户界面" class="headerlink" title="多线程用户界面"></a><a href="https://www.nowcoder.com/questionTerminal/8af5a131f0ea4029928043715bcebef4#:~:text=%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%9A%84%E4%BC%98%E7%BC%BA%E7%82%B9%EF%BC%9A,%EF%BC%8C%E9%81%BF%E5%85%8D%E6%AD%BB%E9%94%81%E7%AD%89%E7%AD%89%E3%80%82">多线程用户界面</a></h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>多线程执行任务，可以并发执行多个任务，增加处理效率。 </p><h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><p>多线程增加任务处理的复杂度，如果线程之间需要使用共享变量的时候，需要考虑线程之间的同步。 </p><h1 id="Android界面元素"><a href="#Android界面元素" class="headerlink" title="Android界面元素"></a>Android界面元素</h1><ul><li>View（不展开了）<ul><li>所有可视界面元素（通常称为控件或小组件）的基类</li></ul></li><li>ViewGroup（不展开了）<ul><li>视图类的拓展，其中包含多个子视图</li></ul></li><li>布局管理<ul><li>管理控件的布局格式，组织界面中控件的呈现方式</li></ul></li><li>Activity<ul><li>用于为用户呈现窗口或屏幕</li></ul></li><li>Fragment<ul><li>针对不同屏幕尺寸时，优化UI布局以及创建可重用的UI元素</li></ul></li></ul><hr><h1 id="组件宽高单位"><a href="#组件宽高单位" class="headerlink" title="组件宽高单位"></a><a href="https://www.jianshu.com/p/34b46bf6d2e5">组件宽高单位</a></h1><h2 id="px"><a href="#px" class="headerlink" title="px"></a>px</h2><p>像素，在分辨率不同的手机上显示出来的大小不一样</p><h2 id="dp"><a href="#dp" class="headerlink" title="dp"></a>dp</h2><p>设备独立像素，密度无关像素，兼容不同分辨率的设备，一般用于设置控件宽高</p><h2 id="sp"><a href="#sp" class="headerlink" title="sp"></a>sp</h2><p>放大像素，可伸缩像素，和dp一样兼容不同分辨率的设备，用于字体</p><h2 id="pt"><a href="#pt" class="headerlink" title="pt"></a>pt</h2><p>磅数，与px相似，用于字体（不推荐）</p><hr><h1 id="布局管理"><a href="#布局管理" class="headerlink" title="布局管理"></a>布局管理</h1><h2 id="UI布局-Layout"><a href="#UI布局-Layout" class="headerlink" title="UI布局(Layout)"></a>UI布局(Layout)</h2><blockquote><p>定义界面中所有的元素、结构和相互关系</p></blockquote><p>在对应的Java文件中使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setContentView(R.layout.&lt;layout_name&gt;)</span><br></pre></td></tr></table></figure><p>设置对应的xml文件。</p><hr><p><strong>小技巧：</strong></p><p>使用Ctrl键，按一下&lt;layout_name&gt;可以定位到对应的xml文件。</p><h2 id="申明Android程序的界面布局的两种方法"><a href="#申明Android程序的界面布局的两种方法" class="headerlink" title="申明Android程序的界面布局的两种方法"></a>申明Android程序的界面布局的两种方法</h2><ol><li><strong>使用XML文件描述界面布局（推荐使用）</strong></li></ol><ul><li>将程序的表现层和控制层分离，修改界面时无需更改程序源代码</li><li>可以通过“可视化编辑器”直接查看用户界面，有利于加快界面设计过程</li></ul><ol start="2"><li><strong>在程序运行时动态添加或修改界面布局</strong></li></ol><hr><p><strong>Android Studio可视化布局设计界面</strong></p><ul><li>左屏用于展示界面实际渲染状态</li><li>右屏可以展示布局层次结构，右屏上的每一个布局与组件的id都被标记出来，有利于开发者快速掌握布局结构</li></ul><hr><blockquote><p>在Android开发当中，界面的设计通过布局文件实现的，布局文件采用XML的格式，每个应用程序默认会创建一个activity_main.xml布局文件，它是应用启动的界面。</p></blockquote><p>我们可以通过，File-&gt;New-&gt;XML或者在layout文件夹右击新建xml文件，来<strong>创建一个新的布局文件</strong>，<code>文件名的字母必须全部小写</code>，在Root Tag中选择布局类型。<strong>添加控件</strong>，可以直接在图形化界面上进行拖拽操作，再对代码进行修改。</p><h2 id="Root-Tag-布局方式"><a href="#Root-Tag-布局方式" class="headerlink" title="Root Tag 布局方式"></a>Root Tag 布局方式</h2><blockquote><p>常见的布局类型如下</p></blockquote><h3 id="constraintlayout"><a href="#constraintlayout" class="headerlink" title="constraintlayout"></a><a href="https://blog.csdn.net/Airsaid/article/details/79052011#:~:text=%E7%BA%A6%E6%9D%9F%E6%A6%82%E8%BF%B0">constraintlayout</a></h3><blockquote><p>约束布局</p></blockquote><p>构建方法</p><ul><li>将现有布局转化为约束布局<ul><li>打开布局，在Design视图中，Component Tree窗口，右键布局，然后点击Convert layout to ConstraintLayout</li></ul></li><li>直接新建约束布局<ul><li>新建布局文件（New&gt;XML&gt;Layout XML File），将”androidx.constraintlayout.widget.ConstraintLayout“作为Root Tag标签</li></ul></li></ul><p><strong>如果组件不设置约束，在运行时，将定位至左上方，和Design视图效果不一致。</strong></p><h3 id="linearlayout"><a href="#linearlayout" class="headerlink" title="linearlayout"></a><a href="https://www.runoob.com/w3cnote/android-tutorial-linearlayout.html">linearlayout</a></h3><blockquote><p>线性布局</p></blockquote><h4 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h4><h5 id="指明控件排布方式（垂直-x2F-水平）使用"><a href="#指明控件排布方式（垂直-x2F-水平）使用" class="headerlink" title="指明控件排布方式（垂直&#x2F;水平）使用"></a>指明控件排布方式（垂直&#x2F;水平）使用</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:orientation=&quot;vertical/horizontal&quot;</span><br></pre></td></tr></table></figure><h5 id="设置控件的宽高"><a href="#设置控件的宽高" class="headerlink" title="设置控件的宽高"></a>设置控件的宽高</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">android:layout_width=&quot;match_parent&quot;</span><br><span class="line">android:layout_height=&quot;wrap_content&quot;</span><br></pre></td></tr></table></figure><ul><li><code>match_parent</code>表示匹配父容器</li><li><code>wrap_content</code>表示匹配内容，即表示和自身内容一样的长度</li></ul><h5 id="设置控件的权重"><a href="#设置控件的权重" class="headerlink" title="设置控件的权重"></a>设置控件的权重</h5><p>决定剩余空间的分配</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:layout_weight=&quot;1&quot;</span><br></pre></td></tr></table></figure><p>控件会根据自身权重，尽可能的占用剩余的空间</p><h5 id="设置控件的位置"><a href="#设置控件的位置" class="headerlink" title="设置控件的位置"></a>设置控件的位置</h5><p>相当于RelativeLayout中的android:layout_alignRight</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:layout_gravity=&quot;right&quot;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220915195659482.png" alt="image-20220915195638209"></p><h5 id="设置控件内容的位置"><a href="#设置控件内容的位置" class="headerlink" title="设置控件内容的位置"></a>设置控件内容的位置</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">android:gravity=&quot;top&quot;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas-cub.github.io/img/post/image-20220915195734398.png" alt="image-20220915195734398"></p><h3 id="GridLayout"><a href="#GridLayout" class="headerlink" title="GridLayout"></a>GridLayout</h3><blockquote><p>网格布局</p></blockquote><p>在网格布局中，一个组件可以跨多行或多列；</p><p>行号、列号从0开始；</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220925082836456.png" alt="image-20220925082836456"></p><h4 id="属性-1"><a href="#属性-1" class="headerlink" title="属性"></a>属性</h4><p>布局属性</p><ul><li>alignmentMode：设置布局管理器的对齐方式</li><li>columnCount：设置网格列的数量</li><li>rowCount：设置网格行的数量</li></ul><p>组件属性</p><ul><li>layout_column：指定组件在第几列显示</li><li>layout_row：指定组件在第几行显示</li><li>layout_columnSpan：设置组件占据的列数</li><li>layout_rowSpan：设置组件占据的行数</li><li>layout_columnWeight：设置列的权重</li><li>layout_rowWeight：设置行的权重</li></ul><h3 id="RelativeLayout"><a href="#RelativeLayout" class="headerlink" title="RelativeLayout"></a><a href="https://www.runoob.com/w3cnote/android-tutorial-relativelayout.html">RelativeLayout</a></h3><blockquote><p>相对布局</p></blockquote><p>需要在控件中使用，用于指定控件与控件、父级Layout与控件之间的相对位置</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220925083427607.png" alt="image-20220925083427607"></p><h4 id="属性-2"><a href="#属性-2" class="headerlink" title="属性"></a><a href="https://blog.csdn.net/cms18374672699/article/details/82596194">属性</a></h4><h5 id="相对于父元素给控件布局，属性值为“True-x2F-False”"><a href="#相对于父元素给控件布局，属性值为“True-x2F-False”" class="headerlink" title="相对于父元素给控件布局，属性值为“True&#x2F;False”"></a>相对于父元素给控件布局，属性值为“True&#x2F;False”</h5><ul><li>android:layout_centerHrizontal  水平居中 </li><li>android:layout_centerVertical 垂直居中 </li><li>android:layout_centerInparent    相对于父元素完全居中 </li><li>android:layout_alignParentBottom 位于父元素的下边缘 </li><li>android:layout_alignParentLeft   位于父元素的左边缘 </li><li>android:layout_alignParentRight  位于父元素的右边缘 </li><li>android:layout_alignParentTop    位于父元素的上边缘 </li><li>android:layout_alignWithParentIfMissing  如果对应的兄弟元素找不到的话就以父元素做参照物</li></ul><h5 id="属性值必须为id的引用名“-id-x2F-id-name”"><a href="#属性值必须为id的引用名“-id-x2F-id-name”" class="headerlink" title="属性值必须为id的引用名“@id&#x2F;id-name”"></a>属性值必须为id的引用名“@id&#x2F;id-name”</h5><ul><li>android:layout_below      位于元素的下方 </li><li>android:layout_above      位于元素的的上方 </li><li>android:layout_toLeftOf   位于元素的左边 </li><li>android:layout_toRightOf  位于元素的右边    </li><li>android:layout_alignTop   该元素的上边缘和某元素的的上边缘对齐 </li><li>android:layout_alignLeft  该元素的左边缘和某元素的的左边缘对齐 </li><li>android:layout_alignBottom 该元素的下边缘和某元素的的下边缘对齐 </li><li>android:layout_alignRight  该元素的右边缘和某元素的的右边缘对齐</li></ul><h5 id="给属性赋予像素值"><a href="#给属性赋予像素值" class="headerlink" title="给属性赋予像素值"></a>给属性赋予像素值</h5><ul><li>android:layout_marginBottom      底边缘的距离 </li><li>android:layout_marginLeft           左边缘的距离 </li><li>android:layout_marginRight         右边缘的距离 </li><li>android:layout_marginTop           上边缘的距离</li></ul><h3 id="FrameLayout"><a href="#FrameLayout" class="headerlink" title="FrameLayout"></a><a href="https://www.runoob.com/w3cnote/android-tutorial-framelayout.html">FrameLayout</a></h3><blockquote><p>帧布局（基本不用）</p></blockquote><p>六大布局中最为简单的一个布局,这个布局直接在屏幕上开辟出一块空白的区域,当我们往里面添加控件的时候,会默认把他们放到这块区域的<strong>左上角</strong>,而这种布局方式却没有任何的定位方式。</p><p>当添加多个组件时，后面的组件将遮盖之前的组件。</p><h3 id="TableLayout"><a href="#TableLayout" class="headerlink" title="TableLayout"></a><a href="https://www.runoob.com/w3cnote/android-tutorial-tablelayout.html">TableLayout</a></h3><blockquote><p>表布局（不常用）</p></blockquote><p>表格布局类似网格布局</p><p><img src="https://lptexas-cub.github.io/img/post/60974640.jpg"></p><h3 id="属性-3"><a href="#属性-3" class="headerlink" title="属性"></a>属性</h3><ul><li><p>使用&lt;tablerow&gt;定义行</p></li><li><p>android:collapseColumns:设置需要被隐藏的列的序号</p></li><li><p>android:shrinkColumns:设置允许被收缩的列的列序号</p></li><li><p>android:stretchColumns:设置运行被拉伸的列的列序号、</p></li></ul><h3 id="AbsoluteLayout"><a href="#AbsoluteLayout" class="headerlink" title="AbsoluteLayout"></a><a href="https://www.imooc.com/wiki/androidlesson/absolutelayout.html">AbsoluteLayout</a></h3><blockquote><p>绝对布局（不推荐）</p></blockquote><p>绝对布局就是可以设置布局内 View 及 ViewGroup 所在的绝对位置，如下图所示，直接对他的子 View 设置 X &#x2F; Y 坐标，然后 Android 系统就会帮我们将各个 View 摆放到相应的位置。</p><p><img src="https://lptexas-cub.github.io/img/post/absolutelayout.jpg"></p><h4 id="属性-4"><a href="#属性-4" class="headerlink" title="属性"></a>属性</h4><ul><li><strong>android:id：</strong><br>唯一标识当前 View 的 id</li><li><strong>android:layout_x：</strong><br>设置 View 的横坐标</li><li><strong>android:layout_y：</strong><br>设置 View 的纵坐标</li></ul><p>需注意<strong>这里所设置的横纵坐标均是 View 左上角的坐标，不是中心点</strong></p><h1 id="UI控件"><a href="#UI控件" class="headerlink" title="UI控件"></a>UI控件</h1><p>大多数用户界面组件都放在widget包及其子包中。常用组件如图：</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220925095755491.png" alt="image-20220925095755491"></p><h2 id="View的常见属性"><a href="#View的常见属性" class="headerlink" title="View的常见属性"></a>View的常见属性</h2><p><img src="https://lptexas-cub.github.io/img/post/image-20220925100020152.png" alt="image-20220925100020152"></p><h2 id="颜色属性"><a href="#颜色属性" class="headerlink" title="颜色属性"></a><a href="https://blog.csdn.net/feiyangxiaomi/article/details/38338305">颜色属性</a></h2><p>android系统在android.graphics.Color中定义了12种常见的颜色常数。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220925100437821.png" alt="image-20220925100437821"></p><h2 id="TextView"><a href="#TextView" class="headerlink" title="TextView"></a><a href="https://www.runoob.com/w3cnote/android-tutorial-textview.html">TextView</a></h2><blockquote><p>文本框</p></blockquote><p>功能：用于显示文本的一个控件</p><h3 id="基本属性"><a href="#基本属性" class="headerlink" title="基本属性"></a>基本属性</h3><ul><li><strong>id：</strong>为TextView设置一个组件id，根据id，我们可以在Java代码中通过findViewById()的方法获取到该对象，然后进行相关属性的设置，又或者使用RelativeLayout时，参考组件用的也是id！</li><li><strong>layout_width：</strong>组件的宽度，一般写：<strong>wrap_content</strong>或者**match_parent(fill_parent)**，前者是控件显示的内容多大，控件就多大，而后者会填满该控件所在的父容器；当然也可以设置成特定的大小，比如我这里为了显示效果，设置成了200dp。</li><li><strong>layout_height：</strong>组件的高度，内容同上。</li><li><strong>gravity：</strong>设置控件中内容的对齐方向，TextView中是文字，ImageView中是图片等等。</li><li><strong>text：</strong>设置显示的文本内容，一般我们是把字符串写到string.xml文件中，然后通过@String&#x2F;xxx取得对应的字符串内容的，这里为了方便我直接就写到””里，不建议这样写！！！</li><li><strong>textColor：</strong>设置字体颜色，同上，通过colors.xml资源来引用，别直接这样写！</li><li><strong>textStyle：</strong>设置字体风格，三个可选值：<strong>normal</strong>(无效果)，<strong>bold</strong>(加粗)，<strong>italic</strong>(斜体)</li><li><strong>textSize：</strong>字体大小，单位一般是用sp！</li><li><strong>background：</strong>控件的背景颜色，可以理解为填充整个控件的颜色，可以是图片哦！</li></ul><h2 id="EditText"><a href="#EditText" class="headerlink" title="EditText"></a><a href="https://www.runoob.com/w3cnote/android-tutorial-edittext.html">EditText</a></h2><blockquote><p>输入框</p></blockquote><h3 id="属性-5"><a href="#属性-5" class="headerlink" title="属性"></a>属性</h3><ul><li><p>inputTpye：可用于限制EditText输入类型，控制虚拟键盘的类型</p><ul><li><p>android:inputType&#x3D;”none”  </p></li><li><p>android:inputType&#x3D;”text”   &#x2F;&#x2F;文本类型</p></li><li><p>android:inputType&#x3D;”textCapCharacters”  </p></li><li><p>android:inputType&#x3D;”textCapWords”  </p></li><li><p>android:inputType&#x3D;”textCapSentences”  </p></li><li><p>android:inputType&#x3D;”textAutoCorrect”  </p></li><li><p>android:inputType&#x3D;”textAutoComplete”  </p></li><li><p>android:inputType&#x3D;”textMultiLine”  </p></li><li><p>android:inputType&#x3D;”textImeMultiLine”  </p></li><li><p>android:inputType&#x3D;”textNoSuggestions”  </p></li><li><p>android:inputType&#x3D;”textUri”  </p></li><li><p>android:inputType&#x3D;”textEmailAddress”  </p></li><li><p>android:inputType&#x3D;”textEmailSubject”  </p></li><li><p>android:inputType&#x3D;”textShortMessage”  </p></li><li><p>android:inputType&#x3D;”textLongMessage”  </p></li><li><p>android:inputType&#x3D;”textPersonName”  </p></li><li><p>android:inputType&#x3D;”textPostalAddress”  </p></li><li><p>android:inputType&#x3D;”textPassword”   &#x2F;&#x2F;密码</p></li><li><p>android:inputType&#x3D;”textVisiblePassword”  &#x2F;&#x2F;可见密码 </p></li><li><p>android:inputType&#x3D;”textWebEditText”  </p></li><li><p>android:inputType&#x3D;”textFilter”  </p></li><li><p>android:inputType&#x3D;”textPhonetic” </p></li><li><p>android:inputType&#x3D;”number”  &#x2F;&#x2F;数字</p></li><li><p>android:inputType&#x3D;”numberSigned”  </p></li><li><p>android:inputType&#x3D;”numberDecimal”  </p></li><li><p>android:inputType&#x3D;”phone” &#x2F;&#x2F;拨号键盘  </p></li><li><p>android:inputType&#x3D;”datetime”  </p></li><li><p>android:inputType&#x3D;”date” &#x2F;&#x2F;日期键盘  </p></li><li><p>android:inputType&#x3D;”time” &#x2F;&#x2F;时间键盘</p></li></ul></li></ul><h2 id="ScrollView"><a href="#ScrollView" class="headerlink" title="ScrollView"></a><a href="https://blog.csdn.net/qq_36243942/article/details/82185051">ScrollView</a></h2><blockquote><p>滚动条</p></blockquote><h2 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h2><h2 id="ImageButton"><a href="#ImageButton" class="headerlink" title="ImageButton"></a>ImageButton</h2>]]></content>
      
      
      <categories>
          
          <category> 移动软件技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> APP开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML+CSS实现页面布局</title>
      <link href="/posts/4235604039/"/>
      <url>/posts/4235604039/</url>
      
        <content type="html"><![CDATA[<h1 id="使用浮动属性"><a href="#使用浮动属性" class="headerlink" title="使用浮动属性"></a>使用浮动属性</h1><h2 id="样式一"><a href="#样式一" class="headerlink" title="样式一"></a>样式一</h2><p><img src="https://lptexas.top/img/post/image-20220903153135447.png" alt="image-20220903153135447"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span>&#123;<span class="attribute">background-color</span>:green;&#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box</span>&#123;<span class="attribute">width</span>:<span class="number">75%</span>;<span class="attribute">height</span>:<span class="number">100px</span>;<span class="attribute">float</span><span class="selector-pseudo">:left</span>&#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box1</span>&#123;<span class="attribute">background-color</span>:red;&#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box2</span>&#123;<span class="attribute">background-color</span>:yellow;&#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box1</span>,<span class="selector-class">.box2</span>&#123;<span class="attribute">height</span>:<span class="number">50px</span>;&#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box3</span>&#123;<span class="attribute">background-color</span>:blue;<span class="attribute">float</span><span class="selector-pseudo">:right</span>&#125;</span></span><br><span class="line"><span class="language-css">  <span class="selector-class">.box3</span>&#123;<span class="attribute">width</span>:<span class="number">25%</span>;<span class="attribute">height</span>:<span class="number">100px</span>;&#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">   1</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span></span><br><span class="line">    2</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span></span><br><span class="line">    3</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux中的打包、压缩、解包、解压操作</title>
      <link href="/posts/2242882387/"/>
      <url>/posts/2242882387/</url>
      
        <content type="html"><![CDATA[<h1 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h1><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><blockquote><p>文件后缀：<code>tar</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf 目标文件.tar 源文件</span><br></pre></td></tr></table></figure><h2 id="解包"><a href="#解包" class="headerlink" title="解包"></a>解包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf 目标文件.tar</span><br></pre></td></tr></table></figure><h2 id="压缩"><a href="#压缩" class="headerlink" title="压缩"></a>压缩</h2><blockquote><p>压缩的格式：</p><p><a href="https://www.jianshu.com/p/6c34f4d40602">gz、tar.gz或tgz、bz或bz2、tar.bz或tar.bz2、Z、tar.Z、xz、tar.xz、zip等等</a></p></blockquote><h3 id="tar-gz格式"><a href="#tar-gz格式" class="headerlink" title="tar.gz格式"></a>tar.gz格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zcvf 目标文件.tar.gz 源文件</span><br></pre></td></tr></table></figure><p>等同于</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -cvf 目标文件.tar 源文件</span><br><span class="line">gzip 目标文件.tar</span><br></pre></td></tr></table></figure><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><ul><li>c：创建归档文件</li><li>x：解包归档文件</li><li>v：开启详细的输出信息</li><li>f：指定归档文件的位置</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> compress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在arm64架构下搭建Kodbox私有云</title>
      <link href="/posts/276533368/"/>
      <url>/posts/276533368/</url>
      
        <content type="html"><![CDATA[<h1 id="演示设备"><a href="#演示设备" class="headerlink" title="演示设备"></a>演示设备</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>aarch64 Android</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~ $ uname -a</span><br><span class="line">Linux localhost 4.4.153-perf-g31d46477eb90 #1 SMP PREEMPT Sun Mar 29 01:11:45 CST 2020 aarch64 Android</span><br></pre></td></tr></table></figure><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><p><a href="https://termux.dev/en/">Termux</a><br>需要开启root并安装Termux拟真工具。</p><h1 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h1><ul><li><p><strong>kodbox</strong></p></li><li><p><strong>nginx</strong> 1.20</p></li><li><p><strong>php</strong> 7.4</p></li><li><p><strong>MySQL</strong> 5.7 （可跳过，PHP内置轻量级数据库，适合小规模使用）</p></li><li><p><strong>redis</strong> 6.2（可跳过，内置文件缓存方式）</p></li></ul><h1 id="kodbox"><a href="#kodbox" class="headerlink" title="kodbox"></a>kodbox</h1><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p><a href="https://kodcloud.com/download/">官网</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget https://static.kodcloud.com/update/download/kodbox.1.33.zip</span><br><span class="line">mkdir kodbox</span><br><span class="line">mv kodbox.1.33.zip kodbox</span><br><span class="line">cd kodbox</span><br><span class="line">unzip kodbox.1.33.zip &amp;&amp; chmod -Rf 777 ./*</span><br></pre></td></tr></table></figure><h1 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h1><h2 id="下载安装-1"><a href="#下载安装-1" class="headerlink" title="下载安装"></a>下载安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install nginx -y</span><br><span class="line">nginx -v</span><br></pre></td></tr></table></figure><h2 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mv /data/data/com.termux/files/usr/etc/nginx/nginx.conf /data/data/com.termux/files/usr/etc/nginx/nginx.conf.old</span><br><span class="line">vim /data/data/com.termux/files/usr/etc/nginx/nginx.conf </span><br></pre></td></tr></table></figure><p><strong>nginx.conf</strong> </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">user  root;</span><br><span class="line">worker_processes auto;</span><br><span class="line">pid        /data/data/com.termux/files/usr/var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    use epoll;</span><br><span class="line">    worker_connections 51200;</span><br><span class="line">    multi_accept on;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    </span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line">                      </span><br><span class="line">    server_names_hash_bucket_size 512;</span><br><span class="line">    client_header_buffer_size 32k;</span><br><span class="line">    large_client_header_buffers 4 32k;</span><br><span class="line">    client_max_body_size 10G;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    tcp_nopush     on;</span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    keepalive_timeout 60;</span><br><span class="line"></span><br><span class="line">    fastcgi_connect_timeout 3600;</span><br><span class="line">    fastcgi_send_timeout 3600;</span><br><span class="line">    fastcgi_read_timeout 3600;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    fastcgi_temp_file_write_size 256k;</span><br><span class="line">    fastcgi_intercept_errors on;</span><br><span class="line"></span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length  1k;</span><br><span class="line">    gzip_buffers     4 16k;</span><br><span class="line">    gzip_http_version 1.1;</span><br><span class="line">    gzip_comp_level 2;</span><br><span class="line">    gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;</span><br><span class="line">    gzip_vary on;</span><br><span class="line">    gzip_proxied   expired no-cache no-store private auth;</span><br><span class="line">    gzip_disable   &quot;MSIE [1-6]\.&quot;;</span><br><span class="line">    server_tokens off;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        root /data/data/com.termux/files/home/kodbox/html;             #改成自己的站点目录</span><br><span class="line">        index index.php;</span><br><span class="line">        server_name _;</span><br><span class="line">        error_log  /data/data/com.termux/files/usr/var/log/nginx/kodbox_error.log  notice;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">       access_log /data/data/com.termux/files/usr/var/log/nginx/kodbox_access.log main;</span></span><br><span class="line">        location ~ [^/]\.php(/|$) &#123;</span><br><span class="line">            try_files $uri =404;</span><br><span class="line">            fastcgi_pass unix:/data/data/com.termux/files/usr/var/run/php-fpm.sock;</span><br><span class="line">            fastcgi_index index.php;</span><br><span class="line">            set $path_info $fastcgi_path_info;</span><br><span class="line">            set $real_script_name $fastcgi_script_name;</span><br><span class="line">            if ($fastcgi_script_name ~ &quot;^(.+?\.php)(/.+)$&quot;) &#123;</span><br><span class="line">                set $real_script_name $1;</span><br><span class="line">                set $path_info $2;</span><br><span class="line">            &#125;</span><br><span class="line">            fastcgi_param SCRIPT_FILENAME $document_root$real_script_name;</span><br><span class="line">            fastcgi_param SCRIPT_NAME $real_script_name;</span><br><span class="line">            fastcgi_param PATH_INFO $path_info;</span><br><span class="line">            include fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~* \.(jpg|jpeg|gif|png|css|js|ico|webp|tiff|ttf|svg)$ &#123;</span><br><span class="line">            expires      30d;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ .*\.(js|css)?$ &#123;</span><br><span class="line">            expires      12h;</span><br><span class="line">        &#125;</span><br><span class="line">        location = /favicon.ico &#123;</span><br><span class="line">            log_not_found off;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="php"><a href="#php" class="headerlink" title="php"></a>php</h1><h2 id="下载安装-2"><a href="#下载安装-2" class="headerlink" title="下载安装"></a>下载安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt install php</span><br><span class="line">apt install php-fpm</span><br><span class="line">php --version</span><br></pre></td></tr></table></figure><h2 id="配置PHP"><a href="#配置PHP" class="headerlink" title="配置PHP"></a>配置PHP</h2><h3 id="php配置"><a href="#php配置" class="headerlink" title="php配置"></a>php配置</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /data/data/com.termux/files/usr/etc/php.ini</span><br></pre></td></tr></table></figure><p><strong>php.ini</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post_max_size = 512M;</span><br><span class="line">upload_max_filesize = 512M;</span><br><span class="line">memory_limit = 1024M;</span><br><span class="line">max_execution_time = 3600;</span><br><span class="line">max_input_time = 3600;</span><br><span class="line">cgi.fix_pathinfo=1</span><br></pre></td></tr></table></figure><h3 id="php-fpm配置"><a href="#php-fpm配置" class="headerlink" title="php-fpm配置"></a>php-fpm配置</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/data/</span>data<span class="regexp">/com.termux/</span>files<span class="regexp">/usr/</span>etc<span class="regexp">/php-fpm.d/</span>www.conf</span><br></pre></td></tr></table></figure><p><strong><a href="http://www.conf/">www.conf</a></strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[www]</span><br><span class="line">pm = static</span><br><span class="line">user = root</span><br><span class="line">group = root</span><br><span class="line">listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock</span><br><span class="line">listen.owner = root</span><br><span class="line">listen.group = root</span><br><span class="line">pm.max_children = 50</span><br><span class="line">pm.start_servers = 20</span><br><span class="line">pm.min_spare_servers = 10</span><br><span class="line">pm.max_spare_servers = 35</span><br></pre></td></tr></table></figure><h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><blockquote><p>如果您不考虑使用mysql，可以跳过此节。</p></blockquote><h2 id="下载安装-3"><a href="#下载安装-3" class="headerlink" title="下载安装"></a>下载安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install mariadb -y</span><br><span class="line">mariadb --version</span><br></pre></td></tr></table></figure><h2 id="配置Mysql"><a href="#配置Mysql" class="headerlink" title="配置Mysql"></a>配置Mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /data/data/com.termux/files/usr/etc/my.cnf</span><br></pre></td></tr></table></figure><p><strong>my.cnf</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># This group is read both by the client and the server</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">use it <span class="keyword">for</span> options that affect everything</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">####[client-server]</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># include *.cnf from the config directory</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment">####!includedir /data/data/com.termux/files/usr/etc/my.cnf.d</span></span></span><br><span class="line"></span><br><span class="line">binlog_cache_size = 192K</span><br><span class="line">thread_stack = 384K</span><br><span class="line">join_buffer_size = 4096K</span><br><span class="line">key_buffer_size = 512M</span><br><span class="line">sort_buffer_size = 2048K</span><br><span class="line">read_buffer_size = 2048K</span><br><span class="line">read_rnd_buffer_size = 1024K</span><br><span class="line">thread_cache_size = 192</span><br><span class="line">query_cache_size = 256M</span><br><span class="line">tmp_table_size = 1024M</span><br><span class="line">max_connections = 500</span><br><span class="line">innodb_buffer_pool_size = 1024M</span><br><span class="line">innodb_log_buffer_size = 512M</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysqld</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">grep <span class="string">&#x27;temporary password&#x27;</span> /var/log/mysqld.log  <span class="comment">##获取临时密码</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysql_secure_installation   <span class="comment">##根据提示步骤进行安全设置</span></span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysql -uroot -p  <span class="comment">##连上数据库，单独创建kodbox数据库和账号</span></span></span><br><span class="line">    CREATE DATABASE db_kodbox;</span><br><span class="line">    grant all privileges on db_kodbox.* to &#x27;user_kodbox&#x27;@&#x27;%&#x27; identified by &#x27;your_password&#x27;;</span><br><span class="line">    flush privileges;</span><br></pre></td></tr></table></figure><h1 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h1><blockquote><p>如果选择使用文件缓存，可以跳过此节。</p></blockquote><h2 id="下载安装-4"><a href="#下载安装-4" class="headerlink" title="下载安装"></a>下载安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install redis -y</span><br><span class="line">apt install php-redis </span><br></pre></td></tr></table></figure><h1 id="启动kodbox"><a href="#启动kodbox" class="headerlink" title="启动kodbox"></a>启动kodbox</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su root #切换至root用户</span><br><span class="line">nginx</span><br><span class="line">php-fpm -R</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 服务器搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kodbox </tag>
            
            <tag> arm64 </tag>
            
            <tag> php </tag>
            
            <tag> mysql </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql server数据库操作part7</title>
      <link href="/posts/1160719361/"/>
      <url>/posts/1160719361/</url>
      
        <content type="html"><![CDATA[<h1 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a><a href="https://www.yiibai.com/sqlserver/sql-server-triggers.html">触发器</a></h1><blockquote><p>当发生某一事件时，如果满足给定条件，则执行相应的动作</p></blockquote><h2 id="创建触发器"><a href="#创建触发器" class="headerlink" title="创建触发器"></a>创建触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> [schema_name.]trigger_name</span><br><span class="line"><span class="keyword">ON</span> table_name</span><br><span class="line">AFTER  &#123;[<span class="keyword">INSERT</span>],[<span class="keyword">UPDATE</span>],[<span class="keyword">DELETE</span>]&#125;</span><br><span class="line">[<span class="keyword">NOT</span> <span class="keyword">FOR</span> REPLICATION]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&#123;sql_statements&#125;</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><ul><li><code>schema_name</code>是新触发器所属模式的名称。模式名称是可选的。</li><li><code>trigger_name</code>是要创建触发器的用户定义名称。</li><li><code>table_name</code>是触发器作用的表。</li><li>事件列在<code>AFTER</code>子句中。事件可以是<code>INSERT</code>，<code>UPDATE</code>或<code>DELETE</code>。单个触发器可以响应针对该表的一个或多个动作而触发。</li><li><code>NOT FOR REPLICATION</code>选项指示SQL Server在复制过程中进行数据修改时不触发触发器。</li><li><code>sql_statements</code>是一个或多个Transact-SQL，用于在事件发生后执行操作。</li></ul><h3 id="触发器的虚拟表"><a href="#触发器的虚拟表" class="headerlink" title="触发器的虚拟表"></a>触发器的虚拟表</h3><p>SQL Server提供了两个专门用于名为<code>INSERTED</code>和<code>DELETED</code>表的触发器的虚拟表。 </p><p>SQL Server使用这些表来捕获<code>事件发生之前</code>和<code>之后</code>修改行的数据。</p><p>下表显示了<code>INSERTED</code>和<code>DELETED</code>表每个事件之前和之后的内容：</p><table><thead><tr><th>DML事件</th><th>INSERTED表持有</th><th>DELETED表持有</th></tr></thead><tbody><tr><td>INSERT</td><td>要插入的行</td><td>空</td></tr><tr><td>UPDATE</td><td>更新修改的新行</td><td>更新修改的现有行</td></tr><tr><td>DELETE</td><td>空</td><td>要删除的行</td></tr></tbody></table><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><h3 id="创建一张新表，用于存放Student表的插入与删除操作的日志信息"><a href="#创建一张新表，用于存放Student表的插入与删除操作的日志信息" class="headerlink" title="创建一张新表，用于存放Student表的插入与删除操作的日志信息"></a>创建一张新表，用于存放Student表的插入与删除操作的日志信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Student_logs(</span><br><span class="line">    change_id <span class="type">INT</span> <span class="keyword">IDENTITY</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">    change_date DATETIME <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    Sno <span class="type">char</span>(<span class="number">9</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    Sname <span class="type">char</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    Ssex <span class="type">char</span>(<span class="number">2</span>),</span><br><span class="line">    Sage <span class="type">smallint</span>,</span><br><span class="line">    Sdept <span class="type">char</span>(<span class="number">20</span>),</span><br><span class="line">    operation <span class="type">char</span>(<span class="number">3</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span>(operation<span class="operator">=</span><span class="string">&#x27;INS&#x27;</span> <span class="keyword">OR</span> operation<span class="operator">=</span><span class="string">&#x27;DEL&#x27;</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="创建触发器-1"><a href="#创建触发器-1" class="headerlink" title="创建触发器"></a>创建触发器</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> trg_student_logs</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line">AFTER <span class="keyword">INSERT</span>,<span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Student_logs(</span><br><span class="line">Sno,Sname,Ssex,Sage,Sdept,operation</span><br><span class="line">)</span><br><span class="line"><span class="keyword">SELECT</span> GETDATE(),Sno,Sname,Ssex,Sage,Sdept,<span class="string">&#x27;INS&#x27;</span> <span class="keyword">FROM</span> INSERTED</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> GETDATE(),Sno,Sname,Ssex,Sage,Sdept,<span class="string">&#x27;DEL&#x27;</span> <span class="keyword">FROM</span> DELETED</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823140407373.png" alt="image-20220823140407373"></p><h2 id="INSTEAD-OF触发器"><a href="#INSTEAD-OF触发器" class="headerlink" title="INSTEAD OF触发器"></a><a href="https://www.yiibai.com/sqlserver/sql-server-instead-of-trigger.html">INSTEAD OF触发器</a></h2><p><code>INSTEAD OF</code>触发器是一种触发器，用于跳过对表或视图的<a href="http://www.yiibai.com/sqlserver/sql-server-insert.html">INSERT</a>，<a href="http://www.yiibai.com/sqlserver/sql-server-delete.html">DELETE</a>或<a href="http://www.yiibai.com/sqlserver/sql-server-update.html">UPDATE</a>语句，并执行触发器中定义的其他语句。根本不会发生实际的插入，删除或更新操作。</p><p>换句话说，<code>INSTEAD OF</code>触发器会跳过<code>DML</code>语句并执行其他语句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> [schema_name.] trigger_name</span><br><span class="line"><span class="keyword">ON</span> &#123;table_name <span class="operator">|</span> view_name &#125;</span><br><span class="line">INSTEAD <span class="keyword">OF</span> &#123;[<span class="keyword">INSERT</span>] [,] [<span class="keyword">UPDATE</span>] [,] [<span class="keyword">DELETE</span>] &#125;</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">&#123;sql_statements&#125;</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><ul><li>首先，在<code>CREATE TRIGGER</code>子句中指定触发器的名称以及触发器所属的模式的名称。</li><li>其次，指定触发器关联的表或视图的名称。</li><li>第三，指定触发器将在<code>INSTEAD OF</code>子句中触发的事件，如<code>INSERT</code>，<code>DELETE</code>或<code>UPDATE</code>。 可以调用触发器以响应一个或多个事件。</li><li>第四，将触发器主体放在<code>AS</code>关键字之后。 触发器的主体可能包含一个或多个Transact-SQL语句。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>使用<code>INSTEAD OF</code>触发器的典型示例是覆盖视图上的插入，更新或删除操作。</p><p>假设，应用程序需要将新品牌插入到<code>production.brands</code>表中。 但是，在插入到<code>production.brands</code>表之前，新品牌应存储在另一个名为<code>production.brand_approvals</code>的表中以供批准。</p><p>为此，需要为应用程序创建名为<code>production.vw_brands</code>的视图以插入新品牌。 如果将品牌插入到视图中，则会触发<code>INSTEAD OF</code>触发器以将品牌插入到<code>production.brand_approvals</code>表中。</p><p><a href="https://www.yiibai.com/sqlserver/sql-server-instead-of-trigger.html">具体演示请见原文</a></p><h2 id="DDL触发器"><a href="#DDL触发器" class="headerlink" title="DDL触发器"></a><a href="https://www.yiibai.com/sqlserver/sql-server-ddl-trigger.html">DDL触发器</a></h2><p>SQL Server DDL触发器响应服务器或数据库事件而不是表数据修改。 这些事件由Transact-SQL语句创建，通常以以下关键字之一：<code>CREATE</code>，<code>ALTER</code>，<code>DROP</code>，<code>GRANT</code>，<code>DENY</code>，<code>REVOKE</code>或<code>UPDATE STATISTICS</code>开头。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> trigger_name</span><br><span class="line"><span class="keyword">ON</span> &#123; DATABASE <span class="operator">|</span>  <span class="keyword">ALL</span> SERVER&#125;</span><br><span class="line">[<span class="keyword">WITH</span> ddl_trigger_option]</span><br><span class="line"><span class="keyword">FOR</span> &#123;event_type <span class="operator">|</span> event_group &#125;</span><br><span class="line"><span class="keyword">AS</span> &#123;sql_statement&#125;</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><ul><li><code>trigger_name</code> - 在<code>CREATE TRIGGER</code>关键字后指定用户定义的触发器名称。 请注意，不必为DDL触发器指定模式，因为它与实际的数据库表或视图无关。</li><li><code>DATABASE | ALL SERVER</code> - 如果触发器响应数据库范围的事件，则使用<code>DATABASE</code>;如果触发器响应服务器范围的事件，则使用<code>ALL SERVER</code>。</li><li><code>ddl_trigger_option</code> - 用于指定<code>ENCRYPTION</code>和&#x2F;或<code>EXECUTE AS</code>子句。 <code>ENCRYPTION</code>加密触发器的定义。 <code>EXECUTE AS</code>定义执行触发器的安全上下文。</li><li><code>event_type | event_group</code> - 表示导致触发器触发的DDL事件，例如，<code>CREATE_TABLE</code>，<code>ALTER_TABLE</code>等。</li><li><code>event_group</code>是一组<code>event_type</code>事件，例如<code>DDL_TABLE_EVENTS</code>。</li><li>触发器可以订阅一个或多个事件或事件组。</li></ul><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>DDL触发器在以下情况下很有用：</p><ul><li>记录数据库模式中的更改。</li><li>防止对数据库模式进行某些特定更改。</li><li>响应数据库模式的更改。</li></ul><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p><a href="https://www.yiibai.com/sqlserver/sql-server-ddl-trigger.html">见原文</a></p><h2 id="禁用触发器"><a href="#禁用触发器" class="headerlink" title="禁用触发器"></a><a href="https://www.yiibai.com/sqlserver/sql-server-disable-trigger.html">禁用触发器</a></h2><p>有时，为了进行故障排除或数据恢复，可能需要暂时禁用触发器。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DISABLE <span class="keyword">TRIGGER</span> [schema_name.][trigger_name] </span><br><span class="line"><span class="keyword">ON</span> [object_name <span class="operator">|</span> DATABASE <span class="operator">|</span> <span class="keyword">ALL</span> SERVER]</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><ul><li>首先，指定触发器所属的模式名称以及<code>DISABLE TRIGGER</code>关键字后要禁用的触发器的名称。</li><li>其次，如果触发器是DML触发器，请指定触发器绑定的表名或视图。 如果触发器是DDL数据库范围的触发器，则使用<code>DATABASE</code>;如果触发器是DDL服务器范围的触发器，则使用<code>ALL SERVER</code>。</li></ul><h3 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h3><p>创建一个简单的显示信息的触发器，然后禁止它。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> prt_stu</span><br><span class="line"><span class="keyword">ON</span> Student</span><br><span class="line">INSTEAD <span class="keyword">OF</span> <span class="keyword">INSERT</span></span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">PRINT &quot;禁止插入！&quot;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823145015026.png" alt="image-20220823145015026"><img src="https://lptexas.top/img/post/image-20220823145026560.png" alt="image-20220823145026560"></p><p>禁止该触发器</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DISABLE <span class="keyword">TRIGGER</span> prt_stu</span><br><span class="line"><span class="keyword">ON</span> Student</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823145638707.png" alt="image-20220823145638707"></p><p>成功禁用了！</p><h2 id="启用触发器"><a href="#启用触发器" class="headerlink" title="启用触发器"></a><a href="https://www.yiibai.com/sqlserver/sql-server-enable-trigger.html">启用触发器</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENABLE <span class="keyword">TRIGGER</span> [schema_name.][trigger_name] </span><br><span class="line"><span class="keyword">ON</span> [object_name <span class="operator">|</span> DATABASE <span class="operator">|</span> <span class="keyword">ALL</span> SERVER]</span><br></pre></td></tr></table></figure><p><strong>实例</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ENABLE <span class="keyword">TRIGGER</span> prt_stu</span><br><span class="line"><span class="keyword">ON</span> Student</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823150520259.png" alt="image-20220823150520259"></p><p><img src="https://lptexas.top/img/post/image-20220823150530615.png" alt="image-20220823150530615"></p><p>成功启用！</p><h2 id="查看触发器定义"><a href="#查看触发器定义" class="headerlink" title="查看触发器定义"></a><a href="https://www.yiibai.com/sqlserver/sql-server-view-trigger-definition.html">查看触发器定义</a></h2><h3 id="通过从系统视图查询获取触发器定义"><a href="#通过从系统视图查询获取触发器定义" class="headerlink" title="通过从系统视图查询获取触发器定义"></a>通过从系统视图查询获取触发器定义</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    definition   </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    sys.sql_modules  </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">    object_id <span class="operator">=</span> OBJECT_ID(<span class="string">&#x27;[trigger_name]&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823151126772.png" alt="image-20220823151126772"></p><h3 id="使用OBJECT-DEFINITION函数获取触发器定义"><a href="#使用OBJECT-DEFINITION函数获取触发器定义" class="headerlink" title="使用OBJECT_DEFINITION函数获取触发器定义"></a>使用OBJECT_DEFINITION函数获取触发器定义</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line">    OBJECT_DEFINITION (</span><br><span class="line">        OBJECT_ID(</span><br><span class="line">            <span class="string">&#x27;[trigger_name]&#x27;</span></span><br><span class="line">        )</span><br><span class="line">    ) <span class="keyword">AS</span> trigger_definition;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823152149157.png" alt="image-20220823152149157"></p><p><strong>结果不全，因为我设置了“查询选项”每列最多256字符。</strong></p><h3 id="使用sp-helptext存储过程获取触发器定义"><a href="#使用sp-helptext存储过程获取触发器定义" class="headerlink" title="使用sp_helptext存储过程获取触发器定义"></a>使用sp_helptext存储过程获取触发器定义</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_helptext <span class="string">&#x27;[trigger_name]&#x27;</span> ;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823152457404.png" alt="image-20220823152457404"></p><h3 id="使用SSMS获取触发器定义"><a href="#使用SSMS获取触发器定义" class="headerlink" title="使用SSMS获取触发器定义"></a>使用SSMS获取触发器定义</h3><p>在图形化界面中找到对应的触发器，右键点击修改。</p><p><img src="https://lptexas.top/img/post/image-20220823152635789.png" alt="image-20220823152635789"></p><h2 id="列出所有触发器"><a href="#列出所有触发器" class="headerlink" title="列出所有触发器"></a>列出所有触发器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  </span><br><span class="line">    name,</span><br><span class="line">    is_instead_of_trigger</span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">    sys.triggers  </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">    type <span class="operator">=</span> <span class="string">&#x27;TR&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220823153032804.png" alt="image-20220823153032804"></p><h2 id="删除触发器"><a href="#删除触发器" class="headerlink" title="删除触发器"></a>删除触发器</h2><h3 id="DROP-TRIGGER语句用于从数据库中删除一个或多个触发器"><a href="#DROP-TRIGGER语句用于从数据库中删除一个或多个触发器" class="headerlink" title="DROP TRIGGER语句用于从数据库中删除一个或多个触发器"></a><code>DROP TRIGGER</code>语句用于从数据库中删除一个或多个触发器</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> [ IF <span class="keyword">EXISTS</span> ] [schema_name.]trigger_name [ ,...n ];</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><ul><li><code>IF EXISTS</code>仅在已经存在的情况下有条件地移除触发器。</li><li><code>schema_name</code>是DML触发器所属的模式名称。</li><li><code>trigger_name</code>是将要删除的触发器的名称。</li></ul><p>如果要一次删除多个触发器，则需要用逗号分隔触发器。</p><hr><h3 id="要删除一个或多个DDL触发器"><a href="#要删除一个或多个DDL触发器" class="headerlink" title="要删除一个或多个DDL触发器"></a>要删除一个或多个<code>DDL触发器</code></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> [ IF <span class="keyword">EXISTS</span> ] trigger_name [ ,...n ]   </span><br><span class="line"><span class="keyword">ON</span> &#123; DATABASE <span class="operator">|</span> <span class="keyword">ALL</span> SERVER &#125;;</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><ul><li><code>DATABASE</code>表示DDL触发器的范围适用于当前数据库。</li><li><code>ALL SERVER</code>指示DDL触发器的范围适用于当前服务器。</li></ul><h3 id="要删除LOGON事件触发器"><a href="#要删除LOGON事件触发器" class="headerlink" title="要删除LOGON事件触发器"></a>要删除<a href="https://docs.microsoft.com/zh-cn/sql/relational-databases/triggers/logon-triggers?view=sql-server-ver16"><code>LOGON</code>事件触发器</a></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TRIGGER</span> [ IF <span class="keyword">EXISTS</span> ] trigger_name [ ,...n ]   </span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">ALL</span> SERVER;</span><br></pre></td></tr></table></figure><p><strong>请注意，当删除表时，与表关联的所有触发器也会自动删除。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> sql server </tag>
            
            <tag> T-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql server数据库操作part6</title>
      <link href="/posts/841489559/"/>
      <url>/posts/841489559/</url>
      
        <content type="html"><![CDATA[<h1 id="过程化SQL"><a href="#过程化SQL" class="headerlink" title="过程化SQL"></a>过程化SQL</h1><h2 id="变量和常量的定义"><a href="#变量和常量的定义" class="headerlink" title="变量和常量的定义"></a>变量和常量的定义</h2><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a><a href="https://docs.microsoft.com/zh-cn/sql/t-sql/language-elements/variables-transact-sql?view=sql-server-ver16#declaring-a-transact-sql-variable">变量</a></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DELCARE @变量名 数据类型</span><br><span class="line"><span class="comment">--定义实例</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@name</span> NVARCHAR(<span class="number">10</span>) <span class="comment">-- 使用DECLARE 语句声明局部变量</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@name</span> <span class="operator">=</span> <span class="string">&#x27;TOM&#x27;</span> <span class="comment">-- 使用 SET 语句赋值</span></span><br><span class="line">PRINT <span class="variable">@name</span> <span class="comment">-- PRINT 在查询编辑器上显示结果</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> employee</span><br><span class="line">PRINT @<span class="variable">@ROWCOUNT</span> </span><br></pre></td></tr></table></figure><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a><a href="https://docs.microsoft.com/zh-cn/sql/t-sql/data-types/constants-transact-sql?view=sql-server-ver16">常量</a></h3><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a><a href="https://www.cnblogs.com/libingql/p/4133409.html">流程控制</a></h2><h3 id="IF…ELSE语句"><a href="#IF…ELSE语句" class="headerlink" title="IF…ELSE语句"></a>IF…ELSE语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">IF Boolean_expression </span><br><span class="line">     &#123; sql_statement <span class="operator">|</span> statement_block &#125; </span><br><span class="line">[ <span class="keyword">ELSE</span> </span><br><span class="line">     &#123; sql_statement <span class="operator">|</span> statement_block &#125; ] </span><br></pre></td></tr></table></figure><h3 id="BEGIN…AND语句"><a href="#BEGIN…AND语句" class="headerlink" title="BEGIN…AND语句"></a>BEGIN…AND语句</h3><p><code>BEGIN...END</code> 用来设定一个程序块，将在 <code>BEGIN...END</code> 内的所有程序设为一个单元执行；<br><code>BEGIN...END</code> 经常在条件语句（如 <code>IF...ELSE</code>）中使用，在 <code>BEGIN...END</code> 中可嵌套另外的 <code>BEGIN...END</code> 来定义另一程序块；<br>语法格式如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">&#123;</span><br><span class="line">    sql_statement</span><br><span class="line">    <span class="operator">|</span> statement_block    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="CASE语句"><a href="#CASE语句" class="headerlink" title="CASE语句"></a>CASE语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span> input_expression </span><br><span class="line">     <span class="keyword">WHEN</span> when_expression <span class="keyword">THEN</span> result_expression [ ...n ] </span><br><span class="line">     [ <span class="keyword">ELSE</span> else_result_expression ] </span><br><span class="line"><span class="keyword">END</span> </span><br><span class="line"><span class="keyword">CASE</span></span><br><span class="line">     <span class="keyword">WHEN</span> Boolean_expression <span class="keyword">THEN</span> result_expression [ ...n ] </span><br><span class="line">     [ <span class="keyword">ELSE</span> else_result_expression ] </span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@score</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@score</span> <span class="operator">=</span> <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> <span class="variable">@score</span> </span><br><span class="line">            <span class="keyword">WHEN</span> <span class="number">100</span> <span class="keyword">THEN</span> <span class="string">&#x27;满分&#x27;</span></span><br><span class="line">            <span class="keyword">WHEN</span> <span class="number">60</span> <span class="keyword">THEN</span> <span class="string">&#x27;及格&#x27;</span></span><br><span class="line">        <span class="keyword">END</span></span><br><span class="line">        <span class="keyword">AS</span> <span class="string">&#x27;成绩&#x27;</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="variable">@score</span> <span class="type">INT</span></span><br><span class="line"><span class="keyword">SET</span> <span class="variable">@score</span> <span class="operator">=</span> <span class="number">100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">CASE</span> </span><br><span class="line">            <span class="keyword">WHEN</span> <span class="variable">@score</span> <span class="operator">&gt;=</span> <span class="number">90</span> <span class="keyword">THEN</span> <span class="string">&#x27;优秀&#x27;</span></span><br><span class="line">            <span class="keyword">WHEN</span> <span class="variable">@score</span> <span class="operator">&gt;=</span> <span class="number">80</span> <span class="keyword">THEN</span> <span class="string">&#x27;良好&#x27;</span></span><br><span class="line">            <span class="keyword">WHEN</span> <span class="variable">@score</span> <span class="operator">&gt;=</span> <span class="number">70</span> <span class="keyword">THEN</span> <span class="string">&#x27;中等&#x27;</span></span><br><span class="line">            <span class="keyword">WHEN</span> <span class="variable">@score</span> <span class="operator">&gt;=</span> <span class="number">60</span> <span class="keyword">THEN</span> <span class="string">&#x27;及格&#x27;</span></span><br><span class="line">            <span class="keyword">ELSE</span> <span class="string">&#x27;不及格&#x27;</span></span><br><span class="line">        <span class="keyword">END</span></span><br><span class="line">        <span class="keyword">AS</span> <span class="string">&#x27;成绩&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="WHILE语句"><a href="#WHILE语句" class="headerlink" title="WHILE语句"></a>WHILE语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WHILE Boolean_expression </span><br><span class="line">     &#123; sql_statement <span class="operator">|</span> statement_block <span class="operator">|</span> BREAK <span class="operator">|</span> CONTINUE &#125; </span><br></pre></td></tr></table></figure><h4 id="WAITFOR语句"><a href="#WAITFOR语句" class="headerlink" title="##WAITFOR语句"></a>##WAITFOR语句</h4><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">WAITFOR </span><br><span class="line">&#123;</span><br><span class="line">    DELAY &#x27;time_to_pass&#x27; </span><br><span class="line">  | <span class="type">TIME</span> &#x27;time_to_execute&#x27; </span><br><span class="line">  | <span class="type">[ ( receive_statement</span> ) | <span class="type">( get_conversation_group_statement</span> ) ] </span><br><span class="line">    [ , TIMEOUT <span class="built_in">timeout</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="DELAY参数"><a href="#DELAY参数" class="headerlink" title="DELAY参数"></a>DELAY参数</h4><p>DELAY参数指定了等待的时间段。不能指定天数，只能指定小时数、分钟数和秒数。允许延迟的最长时间为24小时。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">WAITFOR</span> DELAY &#x27;<span class="number">01</span>：<span class="number">00</span>&#x27;</span><br></pre></td></tr></table></figure><p>将运行WAITFOR语句前的任何代码，然后到达WAITFOR语句，停止1小时，之后继续执行下一条语句中的代码。</p><h4 id="TIME参数"><a href="#TIME参数" class="headerlink" title="TIME参数"></a>TIME参数</h4><p>TIME参数指定到达指定时间的等待时间。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">WAITFOR</span> TIME &#x27;<span class="number">01</span>：<span class="number">00</span>&#x27;</span><br></pre></td></tr></table></figure><p>　　将运行WAITFOR语句前的任何代码，然后到达WAITFOR语句，直到凌晨1点停止执行，之后执行WAITFOR语句后的下一条语句。</p><h1 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a><a href="https://www.w3cschool.cn/sql/sql-storage.html#:~:text=%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%8F%AA%E5%9C%A8%E5%88%9B%E9%80%A0,-SQL%E8%AF%AD%E5%8F%A5%E9%AB%98%E3%80%82">存储过程</a></h1><p>存储过程是由过程化SQL语句书写的过程，这个过程经编译和优化后存储在数据库服务器中，因此称它为存储过程，使用时只要调用即可。</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>存储过程不像解释执行的sql语句那样在提出操作请求时才进行语法分析和优化工作，因而<code>运作效率高</code>，它提供了在服务器端快速执行sql语句的有效途径。</li><li>存储过程<code>降低了客户机和服务器之间的通信量</code>。客户机上的应用程序只要通过网络向服务器发出存储过程名字和参数，就可以让关系型数据库管理系统执行其中的多条sql语句并进行数据处理。只有最终的处理结果才返回客户端。</li><li>方便实施企业规则。可以在企业规则的运算程序写成存储过程放入数据库服务器中，由关系数据库管理系统管理，既有利于集中控制，又能够方便地进行维护。当企业规则发生变化时只要修改存储过程即可，无需修改其它应用程序。</li></ul><h2 id="创建存储过程"><a href="#创建存储过程" class="headerlink" title="创建存储过程"></a>创建存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> PROC <span class="operator">|</span> <span class="keyword">PROCEDURE</span> pro_name</span><br><span class="line">    [&#123;@参数 数据类型&#125; [<span class="operator">=</span>默认值] [OUTPUT],</span><br><span class="line">     &#123;@参数 数据类型&#125; [<span class="operator">=</span>默认值] [OUTPUT],</span><br><span class="line">     ....</span><br><span class="line">    ]</span><br><span class="line">[ <span class="keyword">WITH</span>&#123; RECOMPILE <span class="operator">|</span> ENCRYPTION <span class="operator">|</span> RECOMPILE , ENCRYPTION &#125; ]</span><br><span class="line">[ <span class="keyword">FOR</span> REPLICATION ]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">    SQL_statements</span><br></pre></td></tr></table></figure><h2 id="修改存储过程"><a href="#修改存储过程" class="headerlink" title="修改存储过程"></a>修改存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> PROC <span class="operator">|</span> <span class="keyword">PROCEDURE</span> pro_name</span><br><span class="line">[&#123;@参数 数据类型&#125; [<span class="operator">=</span>默认值] [output],</span><br><span class="line">     &#123;@参数 数据类型&#125; [<span class="operator">=</span>默认值] [output],</span><br><span class="line">     ....</span><br><span class="line">    ]</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line">SQL_statements</span><br></pre></td></tr></table></figure><h3 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> PROC <span class="operator">|</span> <span class="keyword">PROCEDURE</span> pro_name RENAME <span class="keyword">TO</span> new_name;</span><br></pre></td></tr></table></figure><h2 id="删除存储过程"><a href="#删除存储过程" class="headerlink" title="删除存储过程"></a>删除存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> PROC <span class="operator">|</span> <span class="keyword">PROCEDURE</span> pro_name;</span><br></pre></td></tr></table></figure><h2 id="调用存储过程"><a href="#调用存储过程" class="headerlink" title="调用存储过程"></a>调用存储过程</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> <span class="operator">|</span> <span class="keyword">EXECUTE</span> pro_name;</span><br><span class="line"><span class="keyword">EXEC</span> <span class="operator">|</span> <span class="keyword">EXECUTE</span> pro_name [@参数名<span class="operator">=</span><span class="string">&#x27;value&#x27;</span>或者<span class="string">&#x27;value&#x27;</span>] ...;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> sql server </tag>
            
            <tag> T-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql server数据库操作part5</title>
      <link href="/posts/2871086381/"/>
      <url>/posts/2871086381/</url>
      
        <content type="html"><![CDATA[<blockquote><p>换一个数据吧，之前的不要用了。还是根据教程《数据库系统概论》（第5版）中的例子比较好。</p></blockquote><h1 id="数据表准备"><a href="#数据表准备" class="headerlink" title="数据表准备"></a>数据表准备</h1><h3 id="Student表"><a href="#Student表" class="headerlink" title="Student表"></a>Student表</h3><p><img src="https://lptexas.top/img/post/image-20220816102319093.png" alt="image-20220816102319093"></p><h4 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h4><p><img src="https://lptexas.top/img/post/image-20220816102354172.png" alt="image-20220816102354172"></p><h3 id="SC表"><a href="#SC表" class="headerlink" title="SC表"></a>SC表</h3><p><img src="https://lptexas.top/img/post/image-20220816102429827.png" alt="image-20220816102429827"></p><h4 id="数据-1"><a href="#数据-1" class="headerlink" title="数据"></a>数据</h4><p><img src="https://lptexas.top/img/post/image-20220816102455810.png" alt="image-20220816102455810"></p><h3 id="Course表"><a href="#Course表" class="headerlink" title="Course表"></a>Course表</h3><p><img src="https://lptexas.top/img/post/image-20220816102523358.png" alt="image-20220816102523358"></p><h4 id="数据-2"><a href="#数据-2" class="headerlink" title="数据"></a>数据</h4><p><img src="https://lptexas.top/img/post/image-20220816102539880.png" alt="image-20220816102539880"></p><h1 id="EXIST"><a href="#EXIST" class="headerlink" title="EXIST"></a>EXIST</h1><blockquote><p>重新举一些例子</p></blockquote><h3 id="查询选修了1号课程的学生姓名"><a href="#查询选修了1号课程的学生姓名" class="headerlink" title="查询选修了1号课程的学生姓名"></a>查询选修了1号课程的学生姓名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sname <span class="keyword">From</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> SC.sno<span class="operator">=</span>Student.sno <span class="keyword">AND</span> cno<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220816104320917.png" alt="image-20220816104320917"></p><h3 id="查询没有选修1号课程的学生姓名"><a href="#查询没有选修1号课程的学生姓名" class="headerlink" title="查询没有选修1号课程的学生姓名"></a>查询没有选修1号课程的学生姓名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sname <span class="keyword">From</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> SC.sno<span class="operator">=</span>Student.sno <span class="keyword">AND</span> cno<span class="operator">=</span><span class="string">&#x27;1&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220816104435466.png" alt="image-20220816104435466"></p><h3 id="查询选修了所有课程的学生姓名"><a href="#查询选修了所有课程的学生姓名" class="headerlink" title="查询选修了所有课程的学生姓名"></a>查询选修了所有课程的学生姓名</h3><blockquote><p>使用NOT EXISITS实现<strong>全称量词查询</strong></p></blockquote><p>题目等价变化为：查询没有一个科目没有选的学生姓名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sname <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Course <span class="keyword">WHERE</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> (<span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> SC <span class="keyword">WHERE</span> sno<span class="operator">=</span>Student.sno <span class="keyword">AND</span> Cno<span class="operator">=</span>Course.Cno))</span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>一些EXISTS或NOT EXISTS谓词的子查询不能被其它形式的子查询等价替换，但所有的<code>IN、比较运算符、ANY、ALL谓词</code>的子查询都能用<code>EXISTS谓词</code>的子查询等价替换。</p><h1 id="集合查询"><a href="#集合查询" class="headerlink" title="集合查询"></a>集合查询</h1><blockquote><p>UNION并、INTERSECT交、EXCEPT叉</p></blockquote><p><strong>注意</strong></p><p>参加集合操作的各查询结果的<code>列数必须相同</code>，对应项的<code>数据类型也必须相同</code>。  </p><h2 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a><a href="https://www.yiibai.com/sql/sql-union.html">UNION</a></h2><blockquote><p>UNION ALL可以将重复值也列出来</p></blockquote><p><img src="https://lptexas.top/img/post/213135_35067.png" alt="img"></p><p><img src="https://lptexas.top/img/post/214402_33640.png" alt="img"></p><h2 id="INTERSECT"><a href="#INTERSECT" class="headerlink" title="INTERSECT"></a><a href="https://www.yiibai.com/sql/sql-intersect.html">INTERSECT</a></h2><p><img src="https://lptexas.top/img/post/170129_91045.png"></p><h2 id="EXCEPT"><a href="#EXCEPT" class="headerlink" title="EXCEPT"></a><a href="https://www.yiibai.com/sqlserver/sql-server-except.html">EXCEPT</a></h2><p><img src="https://lptexas.top/img/post/093406_42039.png"></p><h1 id="派生表"><a href="#派生表" class="headerlink" title="派生表"></a>派生表</h1><blockquote><p>子查询不仅可以放在WHERE 子句后，还可以放在From 子句后，这时子查询产生临时的<code>派生表</code></p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="查询选修课程分数超过选修课程平均分的学生学号和课程"><a href="#查询选修课程分数超过选修课程平均分的学生学号和课程" class="headerlink" title="查询选修课程分数超过选修课程平均分的学生学号和课程"></a>查询选修课程分数超过选修课程平均分的学生学号和课程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sno,Cno </span><br><span class="line"><span class="keyword">FROM</span> SC,(<span class="keyword">SELECT</span> Cno,<span class="built_in">AVG</span>(Grade) <span class="keyword">FROM</span> SC <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno) <span class="keyword">AS</span> <span class="built_in">Avg</span>(avg_Cno,avg_Grade) </span><br><span class="line"><span class="keyword">WHERE</span> SC.Grade<span class="operator">&gt;</span>Avg.avg_Grade</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sno,SC.Cno </span><br><span class="line"><span class="keyword">FROM</span> SC,(<span class="keyword">SELECT</span> Cno,<span class="built_in">AVG</span>(Grade) <span class="keyword">AS</span> avg_Grade <span class="keyword">FROM</span> SC <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno) Avg </span><br><span class="line"><span class="keyword">WHERE</span> SC.Grade<span class="operator">&gt;</span>Avg.avg_Grade</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sno,Cno</span><br><span class="line"><span class="keyword">FROM</span> SC,(<span class="keyword">SELECT</span> Cno <span class="keyword">AS</span> avg_Cno,<span class="built_in">AVG</span>(Grade) <span class="keyword">AS</span> avg_Grade <span class="keyword">FROM</span> SC <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno) Avg </span><br><span class="line"><span class="keyword">WHERE</span> SC.Grade<span class="operator">&gt;</span>Avg.avg_Grade</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Sno,Cno</span><br><span class="line"><span class="keyword">FROM</span> SC,(<span class="keyword">SELECT</span> Cno avg_Cno,<span class="built_in">AVG</span>(Grade) avg_Grade <span class="keyword">FROM</span> SC <span class="keyword">GROUP</span> <span class="keyword">BY</span> Cno) Avg </span><br><span class="line"><span class="keyword">WHERE</span> SC.Grade<span class="operator">&gt;</span>Avg.avg_Grade</span><br></pre></td></tr></table></figure><p>在使用派生表时有多种写法，但必须给临时派生表设置<code>AS别名</code>，<code>AS可以省略</code>。</p><h1 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h1><blockquote><p>视图的使用和普通表一样，可以查询，增删改查。</p></blockquote><h2 id="定义视图"><a href="#定义视图" class="headerlink" title="定义视图"></a>定义视图</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> <span class="operator">&lt;</span>视图名<span class="operator">&gt;</span> [(列<span class="number">1</span>),[(列<span class="number">2</span>)]...]</span><br><span class="line"><span class="keyword">AS</span> <span class="operator">&lt;</span>子查询<span class="operator">&gt;</span></span><br><span class="line">[<span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION];</span><br></pre></td></tr></table></figure><p><strong>说明</strong></p><p>子查询可以是任意的SELECT语句，是否可以含有ORDER BY子句和DISTINCT短语，取决于具体系统的实现。</p><p>启用WITH CHECK OPTION表示在对视图进行增删改操作时，需要满足视图定义中子查询中的条件表达式（WHERE条件）。</p><h2 id="视图和派生表的区别"><a href="#视图和派生表的区别" class="headerlink" title="视图和派生表的区别"></a>视图和派生表的区别</h2><p>视图被创建后，保存在数据字典中，以后可以直接用视图名引用；</p><p>派生表只是临时表。</p><h2 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h2><h3 id="创建一个学生表的视图，只需要Sno、Sdept"><a href="#创建一个学生表的视图，只需要Sno、Sdept" class="headerlink" title="创建一个学生表的视图，只需要Sno、Sdept"></a>创建一个学生表的视图，只需要Sno、Sdept</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> vstudent </span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> Sno,Sdept <span class="keyword">FROM</span> Student</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220816185942448.png" alt="image-20220816185942448"></p><h3 id="创建一个计算机科学专业的学生表，并启用WITH-CHECK-OPTION"><a href="#创建一个计算机科学专业的学生表，并启用WITH-CHECK-OPTION" class="headerlink" title="创建一个计算机科学专业的学生表，并启用WITH CHECK OPTION"></a>创建一个计算机科学专业的学生表，并启用WITH CHECK OPTION</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> vcsstudent</span><br><span class="line"><span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> Student</span><br><span class="line"><span class="keyword">WHERE</span> Sdept<span class="operator">=</span><span class="string">&#x27;CS&#x27;</span></span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220816190231462.png" alt="image-20220816190231462"></p><h2 id="更新视图"><a href="#更新视图" class="headerlink" title="更新视图"></a>更新视图</h2><blockquote><p>使用vcsstudent视图</p></blockquote><h3 id="为vcsstudent添加数据"><a href="#为vcsstudent添加数据" class="headerlink" title="为vcsstudent添加数据"></a>为vcsstudent添加数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> vcsstudent <span class="keyword">VALUES</span>(<span class="number">201215129</span>,<span class="string">&#x27;李明&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;MA&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220816190605700.png" alt="image-20220816190605700"></p><h3 id="我们再尝试更新数据"><a href="#我们再尝试更新数据" class="headerlink" title="我们再尝试更新数据"></a>我们再尝试更新数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> vcsstudent <span class="keyword">SET</span> Sdept<span class="operator">=</span><span class="string">&#x27;IS&#x27;</span> <span class="keyword">WHERE</span> Sno<span class="operator">=</span><span class="number">201215121</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220816191011430.png" alt="image-20220816191011430"></p><p>同上</p><p>由于插入、更新的数据未符合WHERE条件，故失败。</p><hr><p>正确的插入</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> vcsstudent <span class="keyword">VALUES</span>(<span class="number">201215129</span>,<span class="string">&#x27;李明&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="number">22</span>,<span class="string">&#x27;CS&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220816191700062.png" alt="image-20220816191700062"></p><p>通过观察上述插入的结果，我们发现，视图其实是不存储数据的<code>虚表</code>，因此对视图的更新操作都最终转换为了对基本表的更新。</p><p><code>但是</code>，并不是所有的视图都是可以更新的！</p><p><code>DB2规定</code>的不允许更新的情况：</p><ul><li>由多个基本表导出的</li><li>字段来源为表达式或常数，只能执行DELETE操作</li><li>字段来源为聚集函数</li><li>定义中含有GROUP BY子句</li><li>定义中含有DISTINCT短语</li><li>定义中含有嵌套查询，且内层嵌套的FROM子句中设计的表也是导出该视图的基本表。</li><li>在不允许更新的视图上定义的视图</li></ul><p>另外还有一种情况，就是定义的视图为基础表中的部分列，如果我们进行插入操作，若未指定的列在基础表中不允许为空，则会报错：</p><p><img src="https://lptexas.top/img/post/image-20220816193056866.png" alt="image-20220816193056866"></p><p><img src="https://lptexas.top/img/post/image-20220816193039336.png" alt="image-20220816193039336"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> sql server </tag>
            
            <tag> T-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql server数据库操作part4</title>
      <link href="/posts/3693510075/"/>
      <url>/posts/3693510075/</url>
      
        <content type="html"><![CDATA[<h1 id="ORDER-BY-子句"><a href="#ORDER-BY-子句" class="headerlink" title="ORDER BY 子句"></a>ORDER BY 子句</h1><blockquote><p>可用在<code>WHERE子句</code>后</p></blockquote><p>用户可以使用该子句对查询结果根据<code>一个属性</code>或<code>多个属性</code>列进行升序<code>ASC</code></p><p>（Ascending 升序）或者降序<code>DESC</code>（descend 降序）。</p><p>对于<code>空值</code>，排序的次序由具体系统实现来决定。</p><p>默认值为<code>ASC</code>（升序）。</p><h2 id="一个属性"><a href="#一个属性" class="headerlink" title="一个属性"></a>一个属性</h2><h3 id="将学号大于105的学生的成绩表按学生成绩升序输出"><a href="#将学号大于105的学生的成绩表按学生成绩升序输出" class="headerlink" title="将学号大于105的学生的成绩表按学生成绩升序输出"></a>将学号大于105的学生的成绩表按学生成绩升序输出</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> sno<span class="operator">&gt;</span><span class="number">105</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> degree <span class="keyword">ASC</span></span><br><span class="line"><span class="comment">-- 省略ASC</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> sno<span class="operator">&gt;</span><span class="number">105</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> degree  </span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220813175602717.png" alt="image-20220813175602717"></p><h2 id="多个属性"><a href="#多个属性" class="headerlink" title="多个属性"></a>多个属性</h2><h3 id="将成绩表按成绩降序、学号升序排序"><a href="#将成绩表按成绩降序、学号升序排序" class="headerlink" title="将成绩表按成绩降序、学号升序排序"></a>将成绩表按成绩降序、学号升序排序</h3><p>多个属性时的<code>优先度</code>为<code>从左到右</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> score <span class="keyword">ORDER</span> <span class="keyword">BY</span> degree <span class="keyword">DESC</span>,sno <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220813175229695.png" alt="image-20220813175229695"></p><h1 id="聚集函数"><a href="#聚集函数" class="headerlink" title="聚集函数"></a>聚集函数</h1><p>为了方便用户，增强检索功能，SQL提供了许多聚集函数：</p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>COUNT(*)</td><td>统计元组个数</td></tr><tr><td>COUNT([DISTINCT|ALL] &lt;别名&gt;)</td><td>统计一列中值的<code>个数</code></td></tr><tr><td>SUM([DISTINCT|ALL] &lt;别名&gt;)</td><td>计算一列值的<code>总和</code></td></tr><tr><td>AVG([DISTINCT|ALL &lt;别名&gt;)</td><td>计算一列值的<code>平均值</code></td></tr><tr><td>MAX([DISTINCT|ALL &lt;别名&gt;)</td><td>求某列的最大值</td></tr><tr><td>MIN([DISTINCT|ALL &lt;别名&gt;)</td><td>求某列的最小值</td></tr></tbody></table><ul><li>DISTINCT短语，表示在计算时取消指定列中的重复值。</li><li>ALL短语，表示不取消重复值。</li></ul><p>当聚合函数遇到列中的<code>空值</code>时，都<code>跳过</code>空值而<code>只处理非空值</code>。</p><p><strong>注意</strong></p><ul><li>COUNT(*)是对元组进行计数，某个元组的一个或者部分取空值不影响COUNT的统计结果；</li><li><code>WHERE子句</code>中不能用<code>聚集函数</code>作为条件表达式；</li><li><code>聚集函数</code>只能用于<code>SELECT子句</code>和<code>GROUP BY子句</code>中的<code>HAVING短语</code></li></ul><h1 id="GROUP-BY-子句"><a href="#GROUP-BY-子句" class="headerlink" title="GROUP BY 子句"></a>GROUP BY 子句</h1><p>将查询结果按<code>某一列</code>或<code>多列</code>的值分组，<code>值相等的为一组</code>。</p><p>分组后<code>聚集函数将作用于每一个组</code>，即每一组都有一个函数值。</p><p>结合<code>HAVING</code>短语可进一步筛选结果。</p><h2 id="某一列"><a href="#某一列" class="headerlink" title="某一列"></a>某一列</h2><h3 id="求各班级的人数"><a href="#求各班级的人数" class="headerlink" title="求各班级的人数"></a>求各班级的人数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sclass,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> sclass</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220813192008924.png" alt="image-20220813192008924"></p><h2 id="多列"><a href="#多列" class="headerlink" title="多列"></a>多列</h2><h3 id="求各班男女生的人数"><a href="#求各班男女生的人数" class="headerlink" title="求各班男女生的人数"></a>求各班男女生的人数</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student;</span><br><span class="line"><span class="keyword">SELECT</span> sclass,ssex,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> sclass,ssex</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220813193110140.png" alt="image-20220813193110140"></p><h2 id="结合HAVING短语"><a href="#结合HAVING短语" class="headerlink" title="结合HAVING短语"></a>结合HAVING短语</h2><p>查询人数小于15人的班级</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sclass,<span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">FROM</span> student <span class="keyword">GROUP</span> <span class="keyword">BY</span> sclass <span class="keyword">HAVING</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>)<span class="operator">&lt;</span><span class="number">15</span> </span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220813194128038.png" alt="image-20220813194128038"></p><h1 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a><a href="https://blog.csdn.net/qq_40212930/article/details/88747271">连接查询</a></h1><p>同时涉及<code>多张表</code></p><p><img src="https://lptexas.top/img/post/sql-join.png"></p><h2 id="等值连接"><a href="#等值连接" class="headerlink" title="等值连接"></a>等值连接</h2><h3 id="一般格式"><a href="#一般格式" class="headerlink" title="一般格式"></a>一般格式</h3><p>连接谓词为<code>=</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>cl<span class="operator">&gt;</span>,<span class="operator">&lt;</span>c2<span class="operator">&gt;</span>,... <span class="keyword">FROM</span> <span class="operator">&lt;</span>TB1<span class="operator">&gt;</span>,<span class="operator">&lt;</span>TB2<span class="operator">&gt;</span>,... <span class="keyword">WHERE</span> [TB1.]<span class="operator">&lt;</span>列名<span class="number">1</span><span class="operator">&gt;</span> <span class="operator">=</span> [<span class="operator">&lt;</span>TB2.<span class="operator">&gt;</span>]<span class="operator">&lt;</span>列名<span class="number">2</span><span class="operator">&gt;</span> <span class="operator">=</span> ...</span><br><span class="line"><span class="comment">-- 还可以使用BETWEEN作为连接谓词</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">&lt;</span>cl<span class="operator">&gt;</span>,<span class="operator">&lt;</span>c2<span class="operator">&gt;</span> <span class="keyword">FROM</span> <span class="operator">&lt;</span>TB1<span class="operator">&gt;</span>,<span class="operator">&lt;</span>TB2<span class="operator">&gt;</span>,<span class="operator">&lt;</span>TB3<span class="operator">&gt;</span> <span class="keyword">WHERE</span> [TB1.]<span class="operator">&lt;</span>列名<span class="number">1</span><span class="operator">&gt;</span> <span class="keyword">BETWEEN</span> [<span class="operator">&lt;</span>TB2.<span class="operator">&gt;</span>]<span class="operator">&lt;</span>列名<span class="number">2</span><span class="operator">&gt;</span> <span class="keyword">AND</span> [<span class="operator">&lt;</span>TB3.<span class="operator">&gt;</span>]<span class="operator">&lt;</span>列名<span class="number">3</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student,score <span class="keyword">WHERE</span> student.sno<span class="operator">=</span>score.sno</span><br></pre></td></tr></table></figure><h4 id="student表"><a href="#student表" class="headerlink" title="student表"></a>student表</h4><p><img src="https://lptexas.top/img/post/image-20220813201828327.png" alt="image-20220813201828327"></p><h4 id="score表"><a href="#score表" class="headerlink" title="score表"></a>score表</h4><p><img src="https://lptexas.top/img/post/image-20220813201919626.png" alt="image-20220813201919626"></p><h4 id="等值连接结果"><a href="#等值连接结果" class="headerlink" title="等值连接结果"></a>等值连接结果</h4><p><img src="https://lptexas.top/img/post/image-20220813201420782.png" alt="image-20220813201420782"></p><h2 id="非等值连接"><a href="#非等值连接" class="headerlink" title="非等值连接"></a>非等值连接</h2><p>连接谓词为其他运算符</p><p>&lt;，&gt;，&gt;&#x3D;，&lt;&#x3D;，!&#x3D;，&lt;&gt;等等</p><h2 id="自然连接"><a href="#自然连接" class="headerlink" title="自然连接"></a>自然连接</h2><blockquote><p>在等值连接中去除重复的属性列</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student.sno,sname,cno,grade</span><br><span class="line"><span class="keyword">FROM</span> Student,SC <span class="keyword">where</span> (Student.Sno<span class="operator">=</span>SC.Sno);</span><br></pre></td></tr></table></figure><h2 id="自身连接"><a href="#自身连接" class="headerlink" title="自身连接"></a>自身连接</h2><p>自身连接是一个表与其自己进行连接， 需要给表起别名<code>AS</code>以示区别， 又由于所有属性名都是同名属性，因此必须使用别名前缀</p><p><img src="https://lptexas.top/img/post/2019032218014661.png"></p><h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p>外连接与普通连接的区别</p><p><code>普通连接操作只输出满足连接条件的元组；外连接操作以指定表为连接主体，将主体表中不满足连接条件的元组一并输出</code></p><p>外连接又分为<code>左连接</code>和&#96;&#96;右外连接&#96;</p><h3 id="左连接"><a href="#左连接" class="headerlink" title="左连接"></a>左连接</h3><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> student.Sno,Sname,Ssex,Sage,Sdept,Cno,Grade</span><br><span class="line"><span class="keyword">FROM</span> Student <span class="keyword">LEFT</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> SC <span class="keyword">ON</span> (Student.Sno<span class="operator">=</span>SC.Sno);</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/20190322180632883.png"></p><p>说明</p><p><code>Student表</code>作为<code>主体</code>，列出所有的元组（行），再将<code>SC表</code>中的元组进行连接</p><h3 id="右连接"><a href="#右连接" class="headerlink" title="右连接"></a>右连接</h3><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sc.sno,Grade,course.cno,course.Cname,course.Ccredit</span><br><span class="line"><span class="keyword">FROM</span> SC <span class="keyword">right</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> course <span class="keyword">ON</span> (sc.Cno<span class="operator">=</span>Course.Cno);</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/20190322180744495.png"></p><p>说明</p><p><code>SC表</code>作为<code>主体</code>，列出所有的元组（行），再将<code>student表</code>中的元组进行连接</p><h2 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a><a href="https://www.yiibai.com/sqlserver/sql-server-inner-join.html">内连接</a></h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span></span><br><span class="line">    select_list</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    T1</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> T2 <span class="keyword">ON</span> join_predicate;</span><br></pre></td></tr></table></figure><p>在此语法中，从<code>T1</code>和<code>T2</code>表中查询检索数据：</p><ul><li>首先，在<code>FROM</code>子句中指定主表(<code>T1</code>)</li><li>其次，在<code>INNER JOIN</code>子句和连接谓词中指定第二个表(<code>T2</code>)。 只有连接谓词计算为<code>TRUE</code>的行才包含在结果集中。</li></ul><p><code>INNER JOIN</code>子句将表<code>T1</code>的每一行与表<code>T2</code>的行进行比较，以查找满足连接谓词的所有行对。 如果连接谓词的计算结果为<code>TRUE</code>，则匹配的<code>T1</code>和<code>T2</code>行的列值将合并为一个新行并包含在结果集中。</p><p>下表说明了两个表<code>T1(1,2,3)</code>和<code>T2(A，B，C)</code>的内部连接。 结果包括行：<code>(2，A)</code>和<code>(3，B)</code>，因为它们具有相同的模式。</p><p><strong>示例</strong></p><p><img src="https://lptexas.top/img/post/094133_35666.png"></p><h2 id="多表连接"><a href="#多表连接" class="headerlink" title="多表连接"></a>多表连接</h2><p>做法先对两个表进行连接，再将结果对第三个表进行连接</p><h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> Student.Sno,Sname,Cname.Grade</span><br><span class="line"><span class="keyword">FROM</span> Student,SC,Course</span><br><span class="line"><span class="keyword">WHERE</span> Student.sno<span class="operator">=</span>SC.sno <span class="keyword">AND</span> SC.cno<span class="operator">=</span>Course.cno</span><br></pre></td></tr></table></figure><h1 id="嵌套查询"><a href="#嵌套查询" class="headerlink" title="嵌套查询"></a><a href="https://www.cnblogs.com/libingql/p/4134298.html#:~:text=Sql%20Server%E7%B3%BB%E5%88%97%EF%BC%9A%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2%20-%20libingql%20-,%E5%8D%9A%E5%AE%A2%E5%9B%AD.%20%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2%E6%98%AF%E6%8C%87%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E5%B5%8C%E5%A5%97%E5%9C%A8%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E5%86%85%E9%83%A8%E7%9A%84%E6%9F%A5%E8%AF%A2%E3%80%82.%20%E5%B5%8C%E5%A5%97%E6%9F%A5%E8%AF%A2%E4%B9%9F%E5%B0%B1%E5%AD%90%E6%9F%A5%E8%AF%A2%EF%BC%8C%E5%9C%A8SELECT%E5%AD%90%E5%8F%A5%E4%B8%AD%E5%85%88%E8%AE%A1%E7%AE%97%E5%AD%90%E6%9F%A5%E8%AF%A2%EF%BC%8C%E5%AD%90%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C%E4%BD%9C%E4%B8%BA%E5%A4%96%E5%B1%82%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E8%BF%87%E6%BB%A4%E6%9D%A1%E4%BB%B6%EF%BC%8C%E6%9F%A5%E8%AF%A2%E5%8F%AF%E4%BB%A5%E5%9F%BA%E4%BA%8E%E4%B8%80%E4%B8%AA%E8%A1%A8%E6%88%96%E5%A4%9A%E4%B8%AA%E8%A1%A8%E3%80%82.%20%E5%AD%90%E6%9F%A5%E8%AF%A2%E4%B8%AD%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E6%AF%94%E8%BE%83%E8%BF%90%E7%AE%97%E7%AC%A6%EF%BC%8C%E5%A6%82%E2%80%9C%3C%E2%80%9D%E3%80%81%E2%80%9C%3C%3D%E2%80%9D%E3%80%81%E2%80%9C%3E%E2%80%9D%E3%80%81%E2%80%9C%3E%3D%E2%80%9D%E7%AD%89%E3%80%82.%20%E5%AD%90%E6%9F%A5%E8%AF%A2%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E6%93%8D%E4%BD%9C%E7%AC%A6%E6%9C%89ANY%20%28SOME%29%E3%80%81ALL%E3%80%81EXISTS%E3%80%82.">嵌套查询</a></h1><p>在SQL中，一个<code>SELECT-FROM-WHERE语句</code>称为一个<code>查询块</code>，将一个查询块嵌套在另一个查询块的<code>WHERE子句</code>或<code>HAVING子句</code>中的查询，称为<code>嵌套查询</code>。</p><p><strong>注意</strong></p><p>子查询的SELECT语句不能使用ORDER BY子句，ORDER BY子句只能为最终查询结果排序。</p><h2 id="使用比较运算符"><a href="#使用比较运算符" class="headerlink" title="使用比较运算符"></a>使用比较运算符</h2><h4 id="返回单个值的SELECT语句的嵌套查询"><a href="#返回单个值的SELECT语句的嵌套查询" class="headerlink" title="返回单个值的SELECT语句的嵌套查询"></a>返回单个值的SELECT语句的嵌套查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [dbo].[Product]</span><br><span class="line"><span class="keyword">WHERE</span> [UnitPrice] <span class="operator">=</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="built_in">MIN</span>([UnitPrice]) <span class="keyword">FROM</span> [dbo].[Product]</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [dbo].[Product]</span><br><span class="line"><span class="keyword">WHERE</span> [CategoryID] <span class="operator">=</span> </span><br><span class="line">( </span><br><span class="line">    <span class="keyword">SELECT</span> [CategoryID] <span class="keyword">FROM</span> [dbo].[Category] </span><br><span class="line">    <span class="keyword">WHERE</span> [CategoryName] <span class="operator">=</span> <span class="string">&#x27;LINQ to SQL&#x27;</span> </span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="使用IN关键字"><a href="#使用IN关键字" class="headerlink" title="使用IN关键字"></a>使用IN关键字</h2><p>子查询结果往往是一个集合，谓词IN是嵌套查询中最长使用的谓词。</p><h4 id="返回多个值的子查询的嵌套查询"><a href="#返回多个值的子查询的嵌套查询" class="headerlink" title="返回多个值的子查询的嵌套查询"></a>返回多个值的子查询的嵌套查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [dbo].[Product]</span><br><span class="line"><span class="keyword">WHERE</span> [CategoryID] <span class="keyword">IN</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> [CategoryID] <span class="keyword">FROM</span> [dbo].[Category] </span><br><span class="line">    <span class="keyword">WHERE</span> [CategoryID] <span class="operator">&lt;=</span> <span class="number">10</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>上例的子查询使用INNER JOIN方式（）：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> [dbo].[Product].<span class="operator">*</span> <span class="keyword">FROM</span> [dbo].[Product]</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> [dbo].[Category] <span class="keyword">ON</span> [dbo].[Product].[CategoryID] <span class="operator">=</span> [dbo].[Category].[CategoryID]</span><br><span class="line"><span class="keyword">WHERE</span> [dbo].[Category].[CategoryID] <span class="operator">&lt;=</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p><code>出于性能方面的考虑</code>，如果没有特别的理由要使用嵌套的SELECT，则还是应使用连接方式作为默认的解决方案。</p><h2 id="ANY-SOME-或ALL谓词"><a href="#ANY-SOME-或ALL谓词" class="headerlink" title="ANY(SOME)或ALL谓词"></a><a href="https://blog.csdn.net/qq_38157534/article/details/108527994">ANY(SOME)或ALL谓词</a></h2><p><img src="https://lptexas.top/img/post/image-20220813212046929.png" alt="image-20220813212046929"></p><h3 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a><strong>示例</strong></h3><h4 id="查询非计算机科学系中比计算机科学系任意一个学生年龄小的学生姓名和年龄"><a href="#查询非计算机科学系中比计算机科学系任意一个学生年龄小的学生姓名和年龄" class="headerlink" title="查询非计算机科学系中比计算机科学系任意一个学生年龄小的学生姓名和年龄"></a>查询非计算机科学系中比计算机科学系任意一个学生年龄小的学生姓名和年龄</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sname，Sage <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sage <span class="operator">&lt;</span> <span class="keyword">ANY</span>(<span class="keyword">select</span>  Sage <span class="keyword">from</span> student </span><br><span class="line">                 <span class="keyword">where</span> Sdept  <span class="operator">=</span> &quot;CS&quot;) </span><br><span class="line"><span class="keyword">AND</span> Sdept <span class="operator">&lt;&gt;</span> &quot;CS&quot;;</span><br></pre></td></tr></table></figure><p>在处理执行此查询的时候，首先处理子查询，找出CS系中所有学生的年龄，构成集合，然后处理父查询，找所有不是CS系且年龄小于20<strong>或</strong>19的学生。</p><h5 id="使用聚集函数来实现"><a href="#使用聚集函数来实现" class="headerlink" title="使用聚集函数来实现"></a>使用聚集函数来实现</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Select</span> Sage,Sname <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sage <span class="operator">&lt;</span> (<span class="keyword">select</span> <span class="built_in">MAX</span>(Sage) <span class="keyword">from</span> Student </span><br><span class="line">              <span class="keyword">where</span> Sdept<span class="operator">=</span> <span class="string">&#x27;CS&#x27;</span>) </span><br><span class="line"><span class="keyword">AND</span> Sdept <span class="operator">!=</span> <span class="string">&#x27;CS&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="查询非计算机科学系中比计算机科学系所有学生年龄都小的学生姓名和年龄"><a href="#查询非计算机科学系中比计算机科学系所有学生年龄都小的学生姓名和年龄" class="headerlink" title="查询非计算机科学系中比计算机科学系所有学生年龄都小的学生姓名和年龄"></a>查询非计算机科学系中比计算机科学系所有学生年龄都小的学生姓名和年龄</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> Sname，Sage <span class="keyword">from</span> student </span><br><span class="line"><span class="keyword">where</span> Sage <span class="operator">&lt;</span> <span class="keyword">ALL</span> (<span class="keyword">select</span>  Sage <span class="keyword">from</span> student </span><br><span class="line">                  <span class="keyword">where</span> Sdept  <span class="operator">=</span> &quot;CS&quot;) </span><br><span class="line"><span class="keyword">AND</span> Sdept <span class="operator">&lt;&gt;</span> &quot;CS&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">Select</span> Sage,Sname <span class="keyword">from</span> student</span><br><span class="line"> <span class="keyword">where</span> Sage <span class="operator">&lt;</span> (<span class="keyword">select</span> <span class="built_in">MIN</span>(Sage) <span class="keyword">from</span> Student </span><br><span class="line">               <span class="keyword">where</span> Sdept<span class="operator">=</span> <span class="string">&#x27;CS&#x27;</span>)  </span><br><span class="line"><span class="keyword">AND</span> Sdept <span class="operator">!=</span> <span class="string">&#x27;CS&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="EXISTS关键字"><a href="#EXISTS关键字" class="headerlink" title="EXISTS关键字"></a>EXISTS关键字</h2><p>EXISTS关键字后面的参数是一个任意的子查询，系统对子查询进行运算以判断它是否返回行，如果<code>至少返回一行</code>，则EXISTS的<code>结果为TRUE</code>，此时外层查询语句将进行查询；如果子查询<code>没有返回任何行</code>，那么EXISTS<code>返回</code>的结果是<code>FALSE</code>，此时外层语句将不进行查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [dbo].[Category]</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">EXISTS</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> [dbo].[Product]</span><br><span class="line">    <span class="keyword">WHERE</span> [CategoryID] <span class="operator">=</span> <span class="number">1</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> sql server </tag>
            
            <tag> T-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql server数据库操作part3</title>
      <link href="/posts/1111681048/"/>
      <url>/posts/1111681048/</url>
      
        <content type="html"><![CDATA[<h1 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a><a href="https://www.runoob.com/sql/sql-constraints.html">约束条件</a></h1><p><strong>在 SQL 中，我们有如下约束：</strong></p><ul><li><strong>NOT NULL</strong> - 指示某列不能存储 NULL 值。</li><li><strong>UNIQUE</strong> - 保证某列的每行必须有唯一的值。</li><li><strong>PRIMARY KEY</strong> - NOT NULL 和 UNIQUE 的结合。确保某列（或两个列多个列的结合）有唯一标识，有助于更容易更快速地找到表中的一个特定的记录。</li><li><strong>FOREIGN KEY</strong> - 保证一个表中的数据匹配另一个表中的值的参照完整性。</li><li><strong>CHECK</strong> - 保证列中的值符合指定的条件。</li><li><strong>DEFAULT</strong> - 规定没有给列赋值时的默认值。</li></ul><p><strong>使用约束的语法：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line">(</span><br><span class="line">column_name1 data_type(size) constraint_name,</span><br><span class="line">column_name2 data_type(size) constraint_name,</span><br><span class="line">column_name3 data_type(size) constraint_name,</span><br><span class="line">....</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="NOT-NULL"><a href="#NOT-NULL" class="headerlink" title="NOT NULL"></a>NOT NULL</h2><blockquote><p>某列<strong>不能</strong>存储<strong>空值</strong>，默认时为<strong>NULL</strong></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 实例</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons (</span><br><span class="line">    ID <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    FirstName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    Age <span class="type">int</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="UNIQUE"><a href="#UNIQUE" class="headerlink" title="UNIQUE"></a><a href="https://www.runoob.com/sql/sql-unique.html">UNIQUE</a></h2><blockquote><p>UNIQUE 约束唯一标识数据库表中的每条记录。</p><p>UNIQUE 和 PRIMARY KEY 约束均为列或列集合提供了唯一性的保证。</p><p>PRIMARY KEY 约束拥有自动定义的 UNIQUE 约束。</p></blockquote><ul><li>请注意，每个表可以有<strong>多个 UNIQUE</strong> 约束，但是每个表只能有一个 PRIMARY KEY 约束。</li></ul><h3 id="对各个列进行设置UNIQUE约束"><a href="#对各个列进行设置UNIQUE约束" class="headerlink" title="对各个列进行设置UNIQUE约束"></a>对各个列进行设置UNIQUE约束</h3><p><strong>SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><blockquote><p>添加多个UNIQUE可以实现多个列约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">UNIQUE</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>另一种写法<strong>MySQL：</strong></p><blockquote><p><code>UNIQUE ()</code>中的列使用英文逗号隔开可以实现多个列UNIQUE约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span> (P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="对多个列设置并重命名UNIQUE约束"><a href="#对多个列设置并重命名UNIQUE约束" class="headerlink" title="对多个列设置并重命名UNIQUE约束"></a>对多个列设置并重命名UNIQUE约束</h3><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><blockquote><p>如果不需要修改</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> uc_PersonID <span class="keyword">UNIQUE</span> (P_Id,LastName)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>说明</p><ul><li><a href="https://blog.csdn.net/weixin_40055077/article/details/81180985">uc_PersonID  为<code>约束名</code>，可以自行设置</a></li></ul><h2 id="PRIMARY-KEY"><a href="#PRIMARY-KEY" class="headerlink" title="PRIMARY KEY"></a>PRIMARY KEY</h2><blockquote><p>主键</p><ul><li>唯一</li><li>非空</li></ul></blockquote><h3 id="对各个列进行设置"><a href="#对各个列进行设置" class="headerlink" title="对各个列进行设置"></a>对各个列进行设置</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>另一种写法</p><blockquote><p><code>PRIMARY KEY ()</code>中的列使用英文逗号隔开可以实现多个列的组合主键约束</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="对多个列设置并重命名约束"><a href="#对多个列设置并重命名约束" class="headerlink" title="对多个列设置并重命名约束"></a>对多个列设置并重命名约束</h3><blockquote><p>使用了&#96;&#96;CONSTRAINT&#96;进行了重命名 </p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> pk_PersonID <span class="keyword">PRIMARY</span> KEY (P_Id,LastName)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>说明</p><ul><li>pk_PersonID为主键名可以自行设置。默认为PK_table_name，在此即：PK_Persons</li></ul><h2 id="FOREIGN-KEY"><a href="#FOREIGN-KEY" class="headerlink" title="FOREIGN KEY"></a><a href="https://www.runoob.com/sql/sql-foreignkey.html">FOREIGN KEY</a></h2><blockquote><p>一个表中的外键指向<code>另一个表</code>中的<code>UNIQUE KEY</code></p></blockquote><h3 id="演示表格"><a href="#演示表格" class="headerlink" title="演示表格"></a>演示表格</h3><h4 id="“Persons”-表："><a href="#“Persons”-表：" class="headerlink" title="“Persons” 表："></a>“Persons” 表：</h4><table><thead><tr><th align="left">P_Id</th><th align="left">LastName</th><th align="left">FirstName</th><th align="left">Address</th><th align="left">City</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Hansen</td><td align="left">Ola</td><td align="left">Timoteivn 10</td><td align="left">Sandnes</td></tr><tr><td align="left">2</td><td align="left">Svendson</td><td align="left">Tove</td><td align="left">Borgvn 23</td><td align="left">Sandnes</td></tr><tr><td align="left">3</td><td align="left">Pettersen</td><td align="left">Kari</td><td align="left">Storgt 20</td><td align="left">Stavanger</td></tr></tbody></table><h4 id="“Orders”-表："><a href="#“Orders”-表：" class="headerlink" title="“Orders” 表："></a>“Orders” 表：</h4><table><thead><tr><th align="left">O_Id</th><th align="left">OrderNo</th><th align="left">P_Id</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">77895</td><td align="left">3</td></tr><tr><td align="left">2</td><td align="left">44678</td><td align="left">3</td></tr><tr><td align="left">3</td><td align="left">22456</td><td align="left">2</td></tr><tr><td align="left">4</td><td align="left">24562</td><td align="left">1</td></tr></tbody></table><p>请注意</p><ul><li><p>“Persons” 表中的 “P_Id” 列是 “Persons” 表中的 PRIMARY KEY。</p></li><li><p>“Orders” 表中的 “P_Id” 列指向 “Persons” 表中的 “P_Id” 列。</p></li><li><p>“Orders” 表中的 “P_Id” 列是 “Orders” 表中的 FOREIGN KEY。</p></li><li><p>FOREIGN KEY 约束用于预防破坏表之间连接的行为。</p></li><li><p>FOREIGN KEY 约束也能防止非法数据插入外键列，因为它必须是它指向的那个表中的值之一。</p></li></ul><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p><strong>SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">PRIMARY</span> KEY,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">FOREIGN</span> KEY <span class="keyword">REFERENCES</span> Persons(P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>另一种写法</p><p><strong>MySQL：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (O_Id),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (P_Id) <span class="keyword">REFERENCES</span> Persons(P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>使用上面的写法默认约束名为：FK__Orders__P_Id__2F10007B （每个机器可能不一样）</p><p><strong>如需命名 FOREIGN KEY 约束，并定义多个列的 FOREIGN KEY 约束，请使用下面的 SQL 语法：</strong></p><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (O_Id),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> fk_PerOrders <span class="keyword">FOREIGN</span> KEY (P_Id)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><strong>只定义多个列而不需要重命名则，删除则&#96;&#96;CONSTRAINT fk_PerOrders&#96;</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">P_Id <span class="type">int</span>,</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY (O_Id),</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (P_Id) <span class="keyword">REFERENCES</span> Persons(P_Id)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="CHECK"><a href="#CHECK" class="headerlink" title="CHECK"></a>CHECK</h2><h3 id="对各个列进行设置-1"><a href="#对各个列进行设置-1" class="headerlink" title="对各个列进行设置"></a>对各个列进行设置</h3><p><strong>SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span>),</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>另一种写法</p><blockquote><p><code>CHECK()中</code>的列，用英文逗号隔开可以实现同时对多个列进行设置约束</p></blockquote><p><strong>MySQL：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>默认约束名格式：CK__Persons__36B12243（每台机器不一定相同）</p><h3 id="对多个列设置并重命名约束-1"><a href="#对多个列设置并重命名约束-1" class="headerlink" title="对多个列设置并重命名约束"></a>对多个列设置并重命名约束</h3><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">City <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"><span class="keyword">CONSTRAINT</span> chk_Person <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">AND</span> City<span class="operator">=</span><span class="string">&#x27;Sandnes&#x27;</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="DEFAUT"><a href="#DEFAUT" class="headerlink" title="DEFAUT"></a><a href="https://www.runoob.com/sql/sql-default.html">DEFAUT</a></h2><p><strong>My SQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">(</span><br><span class="line">    P_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    LastName <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    FirstName <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    Address <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line">    City <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;Sandnes&#x27;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/u010178308/article/details/97367471">使用系统内置函数</a></p><ul><li>GETDATE()  插入当前日期和时间</li><li>更多函数请查阅<a href="https://docs.microsoft.com/en-us/sql/t-sql/functions/parsename-transact-sql?view=sql-server-2017">sql server文档</a></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line">(</span><br><span class="line">    O_Id <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    OrderNo <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">    P_Id <span class="type">int</span>,</span><br><span class="line">    OrderDate <span class="type">date</span> <span class="keyword">DEFAULT</span> GETDATE()</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="WHERE子句"><a href="#WHERE子句" class="headerlink" title="WHERE子句"></a>WHERE子句</h1><h2 id="查询条件"><a href="#查询条件" class="headerlink" title="查询条件"></a>查询条件</h2><table><thead><tr><th>查询条件</th><th>谓词</th></tr></thead><tbody><tr><td>比较</td><td>&#x3D;，&lt;，&gt;，&gt;&#x3D;，&lt;&#x3D;，!&#x3D;，&lt;&gt;，!&gt;，!&lt;，NOT+上述比较运算符</td></tr><tr><td>确定范围</td><td>BETWEEN AND，NOT BETWEEN AND</td></tr><tr><td>确定集合</td><td>IN，NOT IN</td></tr><tr><td>字符匹配</td><td>LIKE，NOT LIKE</td></tr><tr><td>空值</td><td>IS NULL，IS NOT NULL</td></tr><tr><td>多重条件（逻辑运算）</td><td>AND，OR，NOT</td></tr></tbody></table><hr><h2 id="准备表数据"><a href="#准备表数据" class="headerlink" title="准备表数据"></a>准备表数据</h2><blockquote><p>数据来源：<a href="https://zhuanlan.zhihu.com/p/62011180">https://zhuanlan.zhihu.com/p/62011180</a></p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student(</span><br><span class="line">                  sno <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">                  sname <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">                  ssex <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">default</span><span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">                  sbirthday datetime,</span><br><span class="line">                  sclass <span class="type">varchar</span>(<span class="number">20</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(sno,sname,ssex,sbirthday,sclass)</span><br><span class="line">      <span class="keyword">values</span>(<span class="number">108</span>,<span class="string">&#x27;曾华&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1997-09-01&#x27;</span>,<span class="number">95033</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> student(sno,sname,ssex,sbirthday,sclass)</span><br><span class="line">      <span class="keyword">values</span>(<span class="number">105</span>,<span class="string">&#x27;匡明&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1975-10-02&#x27;</span>,<span class="number">95031</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> student(sno,sname,ssex,sbirthday,sclass)</span><br><span class="line">      <span class="keyword">values</span>(<span class="number">107</span>,<span class="string">&#x27;王丽&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1976-01-23&#x27;</span>,<span class="number">95033</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(sno,sname,ssex,sbirthday,sclass)</span><br><span class="line">     <span class="keyword">values</span>(<span class="number">101</span>,<span class="string">&#x27;李军&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1976-02-20&#x27;</span>,<span class="number">95033</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(sno,sname,ssex,sbirthday,sclass)</span><br><span class="line">     <span class="keyword">values</span>(<span class="number">109</span>,<span class="string">&#x27;王芳&#x27;</span>,<span class="string">&#x27;女&#x27;</span>,<span class="string">&#x27;1975-02-10&#x27;</span>,<span class="number">95031</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> student(sno,sname,ssex,sbirthday,sclass)</span><br><span class="line">     <span class="keyword">values</span>(<span class="number">103</span>,<span class="string">&#x27;陆君&#x27;</span>,<span class="string">&#x27;男&#x27;</span>,<span class="string">&#x27;1974-06-03&#x27;</span>,<span class="number">95031</span>);</span><br><span class="line"><span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> student;</span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> course(</span><br><span class="line">             cno <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">             cname <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">             tno <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course(cno,cname,tno)</span><br><span class="line">   <span class="keyword">values</span>(<span class="string">&#x27;3-105&#x27;</span>,<span class="string">&#x27;计算机导论&#x27;</span>,<span class="number">825</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course(cno,cname,tno)</span><br><span class="line">   <span class="keyword">values</span>(<span class="string">&#x27;3-245&#x27;</span>,<span class="string">&#x27;操作系统&#x27;</span>,<span class="number">804</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> course(cno,cname,tno)</span><br><span class="line">  <span class="keyword">values</span>(<span class="string">&#x27;6-166&#x27;</span>,<span class="string">&#x27;数据电路&#x27;</span>,<span class="number">856</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> course(cno,cname,tno)</span><br><span class="line">    <span class="keyword">values</span>(<span class="string">&#x27;19-888&#x27;</span>,<span class="string">&#x27;高等数学&#x27;</span>,<span class="number">831</span>);</span><br><span class="line">    <span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> course;</span><br><span class="line"><span class="comment">--</span></span><br><span class="line">   <span class="keyword">create</span> <span class="keyword">table</span> score(</span><br><span class="line">sno <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line">cno <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">              degree <span class="type">decimal</span>(<span class="number">4</span>,<span class="number">1</span>) );</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line"><span class="keyword">values</span>(<span class="number">103</span>,<span class="string">&#x27;3-245&#x27;</span>,<span class="number">86</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">105</span>,<span class="string">&#x27;3-245&#x27;</span>,<span class="number">75</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">109</span>,<span class="string">&#x27;3-245&#x27;</span>,<span class="number">68</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">103</span>,<span class="string">&#x27;3-105&#x27;</span>,<span class="number">92</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">105</span>,<span class="string">&#x27;3-105&#x27;</span>,<span class="number">88</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">109</span>,<span class="string">&#x27;3-105&#x27;</span>,<span class="number">76</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">101</span>,<span class="string">&#x27;3-105&#x27;</span>,<span class="number">64</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">107</span>,<span class="string">&#x27;3-105&#x27;</span>,<span class="number">91</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">108</span>,<span class="string">&#x27;3-105&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">101</span>,<span class="string">&#x27;6-166&#x27;</span>,<span class="number">85</span>);</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">107</span>,<span class="string">&#x27;6-166&#x27;</span>,<span class="number">79</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> score(sno,cno,degree)</span><br><span class="line">   <span class="keyword">values</span>(<span class="number">108</span>,<span class="string">&#x27;6-166&#x27;</span>,<span class="keyword">null</span>);</span><br><span class="line">   <span class="keyword">select</span><span class="operator">*</span><span class="keyword">from</span> score;</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812192025465.png" alt="image-20220812192025465"></p><p><img src="https://lptexas.top/img/post/image-20220812200937406.png" alt="image-20220812200937406"></p><h2 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h2><blockquote><p><code>NOT</code>表示取反</p></blockquote><h3 id="查询性别为“男”的学生"><a href="#查询性别为“男”的学生" class="headerlink" title="查询性别为“男”的学生"></a>查询性别为“男”的学生</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> ssex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> ssex<span class="operator">!=</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> ssex<span class="operator">&lt;&gt;</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> <span class="keyword">NOT</span> ssex <span class="operator">=</span><span class="string">&#x27;女&#x27;</span></span><br><span class="line"><span class="comment">-- 还有一些方法</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> ssex <span class="keyword">IN</span> (<span class="string">&#x27;男&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> ssex <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;女&#x27;</span>)</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> ssex <span class="keyword">LIKE</span> <span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> ssex <span class="keyword">NOT</span> <span class="keyword">LIKE</span> (<span class="string">&#x27;女&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812192413055.png" alt="image-20220812192413055"></p><h3 id="查询学号小于105的学生"><a href="#查询学号小于105的学生" class="headerlink" title="查询学号小于105的学生"></a>查询学号小于105的学生</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sno<span class="operator">&lt;</span><span class="number">105</span> </span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812192930939.png" alt="image-20220812192930939"></p><h2 id="确定范围"><a href="#确定范围" class="headerlink" title="确定范围"></a>确定范围</h2><blockquote><p><code>BETWEEN a AND b</code>表示在a和b之间，包括a和b</p><p><code>NOT</code>表示取反</p></blockquote><h3 id="查询学号在101到105之间的学生"><a href="#查询学号在101到105之间的学生" class="headerlink" title="查询学号在101到105之间的学生"></a>查询学号在101到105之间的学生</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sno <span class="keyword">BETWEEN</span> <span class="number">101</span> <span class="keyword">AND</span> <span class="number">105</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812193225329.png" alt="image-20220812193225329"></p><h2 id="确定集合"><a href="#确定集合" class="headerlink" title="确定集合"></a>确定集合</h2><blockquote><p><code>NOT</code>表示取反</p></blockquote><h3 id="查询学号为101、103、108的学生"><a href="#查询学号为101、103、108的学生" class="headerlink" title="查询学号为101、103、108的学生"></a>查询学号为101、103、108的学生</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sno <span class="keyword">IN</span> (<span class="number">101</span>,<span class="number">103</span>,<span class="number">108</span>)</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812193453931.png" alt="image-20220812193453931"></p><h3 id="查询不在95031、95034班的学生"><a href="#查询不在95031、95034班的学生" class="headerlink" title="查询不在95031、95034班的学生"></a>查询不在95031、95034班的学生</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM student WHERE sclass NOT IN (95031,95034)</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812193828770.png" alt="image-20220812193828770"></p><h2 id="字符匹配"><a href="#字符匹配" class="headerlink" title="字符匹配"></a><a href="https://www.yiibai.com/sqlserver/sql-server-like.html">字符匹配</a></h2><blockquote><p><code>NOT</code>表示取反</p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">NOT</span>] <span class="keyword">LIKE</span> <span class="keyword">pattern</span> [<span class="keyword">ESCAPE</span> escape_character] </span><br></pre></td></tr></table></figure><p><strong>pattern模式</strong></p><p>表示在列或表达式中搜索的字符序列。它可以包含以下有效通配符：</p><ul><li>通配符百分比(<code>%</code>)：任何零个或多个字符的字符串。</li><li>下划线(<code>_</code>)通配符：任何单个字符。</li><li><code>[list of characters]</code>通配符：指定集合中的任何单个字符。</li><li><code>[character-character]</code>：指定范围内的任何单个字符。</li><li><code>[^]</code>：不在列表或范围内的任何单个字符。</li></ul><p><strong><a href="https://blog.csdn.net/WuLex/article/details/90573454">ESCAPE的用法</a></strong></p><ul><li>使用<code>ESCAPE</code>关键字定义<a href="https://so.csdn.net/so/search?q=%E8%BD%AC%E4%B9%89%E7%AC%A6&spm=1001.2101.3001.7020">转义符</a></li></ul><h3 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h3><h4 id="查询所有姓王的同学"><a href="#查询所有姓王的同学" class="headerlink" title="查询所有姓王的同学"></a>查询所有姓王的同学</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> student <span class="keyword">WHERE</span> sname <span class="keyword">LIKE</span> <span class="string">&#x27;王%&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812200013735.png" alt="image-20220812200013735"></p><h2 id="涉及空值的查询"><a href="#涉及空值的查询" class="headerlink" title="涉及空值的查询"></a>涉及空值的查询</h2><h3 id="查询未参加考试的学生学号"><a href="#查询未参加考试的学生学号" class="headerlink" title="查询未参加考试的学生学号"></a>查询未参加考试的学生学号</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> sno <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> degree <span class="keyword">IS</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812201718424.png" alt="image-20220812201718424"></p><ul><li>DISTINCT 表示去除重复值</li></ul><h2 id="多重条件查询"><a href="#多重条件查询" class="headerlink" title="多重条件查询"></a>多重条件查询</h2><h3 id="查询3-105课程成绩高于80的学生学号"><a href="#查询3-105课程成绩高于80的学生学号" class="headerlink" title="查询3-105课程成绩高于80的学生学号"></a>查询3-105课程成绩高于80的学生学号</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> sno <span class="keyword">FROM</span> score <span class="keyword">WHERE</span> cno<span class="operator">=</span><span class="string">&#x27;3-105&#x27;</span> <span class="keyword">AND</span> degree<span class="operator">&gt;</span><span class="number">80</span></span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220812201949672.png" alt="image-20220812201949672"></p>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> sql server </tag>
            
            <tag> T-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql server数据库操作part1</title>
      <link href="/posts/2890697012/"/>
      <url>/posts/2890697012/</url>
      
        <content type="html"><![CDATA[<blockquote><p>数据库操作系列中，均使用<code>T-SQL语句</code>进行数据库操作，对<code>图形界面操作</code>不做详细介绍</p></blockquote><h1 id="sql-server-2014-简介"><a href="#sql-server-2014-简介" class="headerlink" title="sql server 2014 简介"></a><a href="https://www.yiibai.com/sqlserver/what-is-sql-server.html">sql server 2014 简介</a></h1><h1 id="sql-server-与-my-sql-的区别"><a href="#sql-server-与-my-sql-的区别" class="headerlink" title="sql server 与 my sql 的区别"></a>sql server 与 my sql 的区别</h1><blockquote><p>参考：<a href="https://www.php.cn/mysql-tutorials-414005.html">sqlserver和mysql区别有哪些</a></p></blockquote><p>根据经验，如果您正在开发中&#x2F;小型应用程序并主要使用<code>PHP</code>，请使用<code>MySQL</code>。然而，如果您对<code>构建大规模，安全，有弹性的企业应用程序</code>感兴趣，那么<code>SQL Server</code>应该就在您的“小巷”中。 </p><h1 id="sql-server-2014-安装"><a href="#sql-server-2014-安装" class="headerlink" title="sql server 2014 安装"></a>sql server 2014 安装</h1><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>执行<code>sql语句</code>前请打开<code>新建查询</code></p><p><img src="https://lptexas.top/img/post/image-20220811100736817.png" alt="image-20220811100736817"></p><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><h2 id="T-SQL"><a href="#T-SQL" class="headerlink" title="T-SQL"></a>T-SQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE db_name</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><hr><h3 id="插曲"><a href="#插曲" class="headerlink" title="插曲"></a><strong>插曲</strong></h3><p>在单个批处理中提交<code>多条语句</code>时，可以用关键字<code> GO 分隔</code>各语句。 </p><p>当批处理只包含一条语句时，GO 是可选的。</p><hr><p>执行完毕后，如果想在图形界面栏看到新建的数据库，请右键<code>数据库</code>后点击<code>刷新</code></p><p><img src="https://lptexas.top/img/post/image-20220811101304086.png" alt="image-20220811101304086"></p><hr><h3 id="插曲-1"><a href="#插曲-1" class="headerlink" title="插曲"></a><strong>插曲</strong></h3><p><strong><a href="https://blog.csdn.net/weixin_37539378/article/details/78356624">Sql语句为什么大写</a></strong></p><hr><h1 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE database_name</span><br></pre></td></tr></table></figure><h1 id="数据库备份与还原"><a href="#数据库备份与还原" class="headerlink" title="数据库备份与还原"></a>数据库备份与还原</h1><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><h2 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h2>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> sql server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql server数据库操作part2</title>
      <link href="/posts/893769870/"/>
      <url>/posts/893769870/</url>
      
        <content type="html"><![CDATA[<h1 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h1><h2 id="明确结构"><a href="#明确结构" class="headerlink" title="明确结构"></a>明确结构</h2><blockquote><p>明确你的<code>表名</code>、每列<code>列名</code>、每列<code>数据类型</code>，每列<code>是否允许控制</code></p></blockquote><p><img src="https://lptexas.top/img/post/image-20220811095344995.png" alt="image-20220811095344995"></p><p>大多数表斗具有<code>主键</code>，主键由表的<code>一列</code>或者<code>多列</code>组成，主键始终<code>唯一</code>不能重复。</p><p> <img src="https://lptexas.top/img/post/image-20220811095627100.png" alt="image-20220811095627100"></p><h2 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h2><p>若要创建表时，必须具有 <code>CREATE TABLE</code> 权限，以及对包含该表的架构的 <code>ALTER SCHEMA</code> 权限。 <a href="https://docs.microsoft.com/zh-cn/sql/relational-databases/security/authentication-access/database-level-roles?view=sql-server-ver16"><code>db_ddladmin</code></a> 固定数据库角色具有这些权限。</p><h2 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h2><p><img src="https://lptexas.top/img/post/image-20220811095917444.png" alt="image-20220811095917444"></p><h2 id="T-SQL"><a href="#T-SQL" class="headerlink" title="T-SQL"></a>T-SQL</h2><h3 id="首先切换到对应数据库中"><a href="#首先切换到对应数据库中" class="headerlink" title="首先切换到对应数据库中"></a>首先切换到对应数据库中</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USE db_name</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h3 id="创建表-1"><a href="#创建表-1" class="headerlink" title="创建表"></a>创建表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> dbo.Products  </span><br><span class="line">   (ProductID <span class="type">int</span> <span class="keyword">PRIMARY</span> KEY <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line">   ProductName <span class="type">varchar</span>(<span class="number">25</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span>,  </span><br><span class="line">   Price money <span class="keyword">NULL</span>,  </span><br><span class="line">   ProductDescription <span class="type">varchar</span>(max) <span class="keyword">NULL</span>)  </span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>创建一个了名为 <code>Products</code> 的表，包含了称为架构的可选元素 (<code>dbo.</code>)。 </li><li>架构是拥有表的数据库对象。 如果您是管理员，则 <code>dbo</code> 是默认架构。 <code>dbo</code> 代表数据库所有者。</li><li>该表中各<strong>列的名称</strong>为 <code>ProductID</code>、 <code>ProductName</code>、 <code>Price</code>和 <code>ProductDescription</code>。 <code>ProductID</code> 列是表的<strong>主键</strong>。</li><li><code>int</code> <code>varchar(25)</code>、 <code>money</code>和 <code>varchar(max)</code> 都是数据类型。 </li><li>当插入或更改行时，只有 <code>Price</code> 和<code>ProductionDescription</code> 列可以不包含数据（<strong>NULL</strong>）。</li></ul><h1 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h1><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><blockquote><p>我们可以通过<code>图形界面</code>和<code>INSERT语句</code>的方式，将下列表数据录入数据库表中</p></blockquote><table><thead><tr><th align="left">ProductID</th><th align="left">ProductName</th><th align="left">价格</th><th align="left">ProductDescription</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Clamp</td><td align="left">12.48</td><td align="left">Workbench clamp</td></tr><tr><td align="left">50</td><td align="left">Screwdriver</td><td align="left">3.17</td><td align="left">Flat head</td></tr><tr><td align="left">75</td><td align="left">Tire Bar</td><td align="left"></td><td align="left">Tool for changing tires.</td></tr><tr><td align="left">3000</td><td align="left">3 mm Bracket</td><td align="left">0.52</td><td align="left"></td></tr></tbody></table><h2 id="图形界面-1"><a href="#图形界面-1" class="headerlink" title="图形界面"></a>图形界面</h2><p><img src="https://lptexas.top/img/post/image-20220811144711616.png" alt="image-20220811144711616"></p><h2 id="T-SQL-1"><a href="#T-SQL-1" class="headerlink" title="T-SQL"></a>T-SQL</h2><h3 id="一行一行"><a href="#一行一行" class="headerlink" title="一行一行"></a><a href="https://www.yiibai.com/sqlserver/sql-server-insert.html">一行一行</a></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 标准语法 Standard syntax  </span></span><br><span class="line"><span class="keyword">INSERT</span> dbo.Products (ProductID, ProductName, Price, ProductDescription)  </span><br><span class="line">    <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">&#x27;Clamp&#x27;</span>, <span class="number">12.48</span>, <span class="string">&#x27;Workbench clamp&#x27;</span>)  </span><br><span class="line">GO   </span><br></pre></td></tr></table></figure><p>字符串类型需要使用<code>英文单引号</code>括起来，否则会出现语法错误。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 改变列名列表的顺序 Changing the order of the columns  </span></span><br><span class="line"><span class="keyword">INSERT</span> dbo.Products (ProductName, ProductID, Price, ProductDescription)  </span><br><span class="line">    <span class="keyword">VALUES</span> (<span class="string">&#x27;Screwdriver&#x27;</span>, <span class="number">50</span>, <span class="number">3.17</span>, <span class="string">&#x27;Flat head&#x27;</span>)  </span><br><span class="line">GO</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 跳过列名列表，但保持值和列名相互对应 Skipping the column list, but keeping the values in order  </span></span><br><span class="line"><span class="keyword">INSERT</span> dbo.Products  </span><br><span class="line">    <span class="keyword">VALUES</span> (<span class="number">75</span>, <span class="string">&#x27;Tire Bar&#x27;</span>, <span class="keyword">NULL</span>, <span class="string">&#x27;Tool for changing tires.&#x27;</span>)  </span><br><span class="line">GO </span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 忽略架构名称dbo，舍弃ProductDescription列的值（为空） Dropping the optional dbo and dropping the ProductDescription column  </span></span><br><span class="line"><span class="keyword">INSERT</span> Products (ProductID, ProductName, Price)  </span><br><span class="line">    <span class="keyword">VALUES</span> (<span class="number">3000</span>, <span class="string">&#x27;3 mm Bracket&#x27;</span>, <span class="number">0.52</span>)  </span><br><span class="line">GO  </span><br></pre></td></tr></table></figure><hr><h3 id="插曲"><a href="#插曲" class="headerlink" title="插曲"></a>插曲</h3><p>如果插入操作失败，则可能是因为 <code>Product</code> 表中已存在具有该产品 ID 的行。 若要继续，请删除表中的所有行并重复上一步。 <a href="https://docs.microsoft.com/zh-cn/sql/t-sql/statements/truncate-table-transact-sql?view=sql-server-ver16"><code>TRUNCATE TABLE</code></a> 删除表中的所有行。</p><p>运行以下命令来删除表中的所有行：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> TestData.dbo.Products;</span><br><span class="line">GO</span><br><span class="line"><span class="comment">-- 数据库名.架构名.表名 数据库名和架构名都可以忽略</span></span><br></pre></td></tr></table></figure><hr><h3 id="一次多行"><a href="#一次多行" class="headerlink" title="一次多行"></a><a href="https://www.yiibai.com/sqlserver/sql-server-insert-multiple-rows.html">一次多行</a></h3><blockquote><p>上面都是<code>一行一行</code>插入数据，下面演示一次性添加多行</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name (column_list)</span><br><span class="line"><span class="keyword">VALUES</span></span><br><span class="line">    (value_list_1),</span><br><span class="line">    (value_list_2),</span><br><span class="line">    ...</span><br><span class="line">    (value_list_n);</span><br></pre></td></tr></table></figure><p>在此语法中，不使用单个值列表，而是使用多个以逗号分隔的值列表进行插入。</p><p>使用此形式的<code>INSERT</code>语句，一次可以插入的行数为<code>1000</code>行。 如果要插入更多行，则应考虑使用多个<code>INSERT</code>语句，<code>BULK INSERT</code>或派生表。</p><p>请注意，此<code>INSERT</code>多行语法仅在SQL Server 2008或更高版本中受支持。</p><h3 id="插入查询结果"><a href="#插入查询结果" class="headerlink" title="插入查询结果"></a><a href="https://www.yiibai.com/sqlserver/sql-server-insert-into-select.html">插入查询结果</a></h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span>  [ TOP ( expression ) [ <span class="keyword">PERCENT</span> ] ] <span class="keyword">INTO</span> target_table (</span><br><span class="line">    column_list</span><br><span class="line">)</span><br><span class="line">select_query</span><br></pre></td></tr></table></figure><h4 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h4><ul><li>查询语句返回的行将插入<code>target_table</code>。</li><li>该查询是从任何其他表中检索数据的有效<code>SELECT</code>语句。 它必须返回与<code>column_list</code>中指定的列对应的值。</li><li><code>TOP</code>子句部分是可选的。 它用于指定要插入目标表(<code>target_table</code>)的查询返回的行数。 如果使用<code>PERCENT</code>选项，则语句将插入行的百分比。 </li><li>请注意，最好始终将<code>TOP</code>子句与<code>ORDER BY</code>子句一起使用。</li></ul><h1 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h1><h2 id="图形界面-2"><a href="#图形界面-2" class="headerlink" title="图形界面"></a>图形界面</h2><blockquote><p>同上</p></blockquote><h2 id="T-SQL-2"><a href="#T-SQL-2" class="headerlink" title="T-SQL"></a>T-SQL</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> table_name</span><br><span class="line"><span class="keyword">SET</span> c1 <span class="operator">=</span> v1, c2 <span class="operator">=</span> v2, ... cn <span class="operator">=</span> vn</span><br><span class="line">[<span class="keyword">WHERE</span> <span class="keyword">condition</span>]</span><br></pre></td></tr></table></figure><h3 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h3><ul><li>首先，指定要从中更新数据的表的名称。</li><li>其次，指定要更新的列<code>c1</code>，<code>c2</code>，<code>...</code>，<code>cn</code>和值<code>v1</code>，<code>v2</code>，<code>... vn</code>的列表。</li><li>第三，在<code>WHERE</code>子句中指定条件以选择更新的行。WHERE子句是可选的。 如果不指定<code>WHERE</code>子句，则表中的所有行都将更新。</li></ul><hr><p>键入并执行以下 <code>UPDATE</code> 语句，将第二种产品的 <code>ProductName</code> 从 <code>Screwdriver</code>更改为 <code>Flat Head Screwdriver</code>。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> Products </span><br><span class="line"><span class="keyword">set</span> ProductName <span class="operator">=</span> <span class="string">&#x27;Flat Head Screwdriver&#x27;</span> <span class="keyword">WHERE</span> ProductID <span class="operator">=</span> <span class="number">50</span></span><br><span class="line">GO</span><br></pre></td></tr></table></figure><p><img src="https://lptexas.top/img/post/image-20220811151743434.png" alt="更改前"></p><p><img src="https://lptexas.top/img/post/image-20220811151908533.png" alt="更改后"></p><h1 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h1><h2 id="T-SQL-3"><a href="#T-SQL-3" class="headerlink" title="T-SQL"></a>T-SQL</h2><h3 id="查询全体数据"><a href="#查询全体数据" class="headerlink" title="查询全体数据"></a>查询全体数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c1,c2,c3... <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="comment">-- 或者</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h3 id="返回需要的行"><a href="#返回需要的行" class="headerlink" title="返回需要的行"></a>返回需要的行</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> C1,C3,C7 <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><h3 id="对某列进行运算并提供别名"><a href="#对某列进行运算并提供别名" class="headerlink" title="对某列进行运算并提供别名"></a>对某列进行运算并提供别名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> c1<span class="operator">*</span><span class="number">9</span> <span class="keyword">AS</span> COL1,c2,c4... <span class="keyword">FROM</span> table_name</span><br></pre></td></tr></table></figure><p>计算还可以为<a href="https://docs.microsoft.com/zh-cn/sql/t-sql/lesson-1-creating-database-objects?view=sql-server-ver16#useful-functions-in-a-select-statement"><strong>函数</strong></a>。</p><h3 id="使用WHERE子句限制返回的行"><a href="#使用WHERE子句限制返回的行" class="headerlink" title="使用WHERE子句限制返回的行"></a>使用WHERE子句限制返回的行</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> table_name </span><br><span class="line"><span class="keyword">WHERE</span> (expression)</span><br></pre></td></tr></table></figure><h1 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h1><h2 id="T-SQL-4"><a href="#T-SQL-4" class="headerlink" title="T-SQL"></a>T-SQL</h2><h3 id="删除全部记录"><a href="#删除全部记录" class="headerlink" title="删除全部记录"></a>删除全部记录</h3><blockquote><p>危险操作！注意备份！删库跑路大法</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="comment">-- 或者</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> table_name;</span><br></pre></td></tr></table></figure><h3 id="删除指定记录"><a href="#删除指定记录" class="headerlink" title="删除指定记录"></a>删除指定记录</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name</span><br><span class="line"><span class="keyword">WHERE</span> (expression)</span><br></pre></td></tr></table></figure><h1 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> table_name</span><br></pre></td></tr></table></figure><h1 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h1><h2 id="修改数据类型"><a href="#修改数据类型" class="headerlink" title="修改数据类型"></a>修改数据类型</h2><blockquote><p>新数据类型需与旧数据类型相互兼容，否则会出现错误</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> column_name new_data_type(old_size)</span><br></pre></td></tr></table></figure><h2 id="修改列的大小"><a href="#修改列的大小" class="headerlink" title="修改列的大小"></a>修改列的大小</h2><blockquote><p>当减小列的大小时，要确保设置的值大于等于最小长度的列值</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> column_name old_data_type(new_size)</span><br></pre></td></tr></table></figure><h2 id="添加NOT-NULL约束"><a href="#添加NOT-NULL约束" class="headerlink" title="添加NOT NULL约束"></a>添加NOT NULL约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> column_name old_data_type(old_size) <span class="keyword">NOT</span> <span class="keyword">NULL</span></span><br></pre></td></tr></table></figure><h2 id="添加UNIQUE约束"><a href="#添加UNIQUE约束" class="headerlink" title="添加UNIQUE约束"></a>添加UNIQUE约束</h2><blockquote><p><a href="">关于UNIQUE约束请看part3</a></p></blockquote><h3 id="单个"><a href="#单个" class="headerlink" title="单个"></a>单个</h3><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">UNIQUE</span> (c1)</span><br></pre></td></tr></table></figure><h3 id="多个"><a href="#多个" class="headerlink" title="多个"></a>多个</h3><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> uc_PersonID <span class="keyword">UNIQUE</span> (P_Id,LastName)</span><br></pre></td></tr></table></figure><p>说明</p><ul><li>uc_PersonID为约束名可以自行设置。默认为PK__table_name__一串字母加数字，如：UQ__Persons__A3420A56B3CD2923</li></ul><h2 id="撤销UNIQUE约束"><a href="#撤销UNIQUE约束" class="headerlink" title="撤销UNIQUE约束"></a>撤销UNIQUE约束</h2><blockquote><p>此处<code>针对多个</code>，删除<code>单个</code>的UNIQUE约束，可以通过<code>ALTER COLUMN</code>不带UNIQUE约束重新定义列实现！</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> uc_PersonID</span><br></pre></td></tr></table></figure><h2 id="添加主键约束"><a href="#添加主键约束" class="headerlink" title="添加主键约束"></a>添加主键约束</h2><p>当表已被创建时，如需在 “P_Id” 列创建 PRIMARY KEY 约束，请使用下面的 SQL：</p><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">PRIMARY</span> KEY (P_Id)</span><br></pre></td></tr></table></figure><p>如需命名 PRIMARY KEY 约束，并定义多个列的 PRIMARY KEY 约束，请使用下面的 SQL 语法：</p><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> pk_PersonID <span class="keyword">PRIMARY</span> KEY (P_Id,LastName)</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>如果您使用 ALTER TABLE 语句添加主键，必须把主键列声明为不包含 NULL 值（在表首次创建时）。</li></ul><hr><h2 id="撤销-PRIMARY-KEY-约束"><a href="#撤销-PRIMARY-KEY-约束" class="headerlink" title="撤销 PRIMARY KEY 约束"></a>撤销 PRIMARY KEY 约束</h2><p><strong>MySQL：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">PRIMARY</span> KEY</span><br></pre></td></tr></table></figure><p><strong>SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> pk_PersonID</span><br></pre></td></tr></table></figure><h2 id="添加-FOREIGN-KEY-约束"><a href="#添加-FOREIGN-KEY-约束" class="headerlink" title="添加 FOREIGN KEY 约束"></a>添加 FOREIGN KEY 约束</h2><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> KEY (P_Id)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(P_Id)</span><br></pre></td></tr></table></figure><p>如需命名 FOREIGN KEY 约束，并定义多个列的 FOREIGN KEY 约束，请使用下面的 SQL 语法：</p><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_PerOrders</span><br><span class="line"><span class="keyword">FOREIGN</span> KEY (P_Id)</span><br><span class="line"><span class="keyword">REFERENCES</span> Persons(P_Id)</span><br></pre></td></tr></table></figure><p>重命名的约束名为：fk_PerOrders</p><h2 id="撤销FOREIGN-KEY约束"><a href="#撤销FOREIGN-KEY约束" class="headerlink" title="撤销FOREIGN KEY约束"></a>撤销FOREIGN KEY约束</h2><p><strong>MySQL：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> KEY fk_PerOrders</span><br></pre></td></tr></table></figure><p><strong>SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Orders</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> fk_PerOrders</span><br></pre></td></tr></table></figure><h2 id="添加-CHECK-约束"><a href="#添加-CHECK-约束" class="headerlink" title="添加 CHECK 约束"></a>添加 CHECK 约束</h2><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access:</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><strong>MySQL &#x2F; SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> chk_Person <span class="keyword">CHECK</span> (P_Id<span class="operator">&gt;</span><span class="number">0</span> <span class="keyword">AND</span> City<span class="operator">=</span><span class="string">&#x27;Sandnes&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="撤销-CHECK-约束"><a href="#撤销-CHECK-约束" class="headerlink" title="撤销 CHECK 约束"></a>撤销 CHECK 约束</h2><p><strong>SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CONSTRAINT</span> chk_Person</span><br></pre></td></tr></table></figure><p><strong>MySQL：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">CHECK</span> chk_Person</span><br></pre></td></tr></table></figure><ul><li>chk_Person为设置的约束名</li></ul><h2 id="添加-DEFAULT-约束"><a href="#添加-DEFAULT-约束" class="headerlink" title="添加 DEFAULT 约束"></a>添加 DEFAULT 约束</h2><p><strong>MySQL：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ALTER</span> City <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;SANDNES&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>SQL Server &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> ab_c <span class="keyword">DEFAULT</span> <span class="string">&#x27;SANDNES&#x27;</span> <span class="keyword">FOR</span> City</span><br></pre></td></tr></table></figure><p><strong>Oracle：</strong></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line">MODIFY City <span class="keyword">DEFAULT</span> <span class="string">&#x27;SANDNES&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="撤销-DEFAULT-约束"><a href="#撤销-DEFAULT-约束" class="headerlink" title="撤销 DEFAULT 约束"></a>撤销 DEFAULT 约束</h2><p><strong>MySQL：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ALTER</span> City <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure><p><strong>SQL Server &#x2F; Oracle &#x2F; MS Access：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> Persons</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> City <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> sql server </tag>
            
            <tag> T-SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linu网络基础part3</title>
      <link href="/posts/777800226/"/>
      <url>/posts/777800226/</url>
      
        <content type="html"><![CDATA[<h1 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h1><blockquote><p>Linux本地dns配置文件位置</p><p>类似windows的host文件？</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# cat /etc/resolv.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Generated by NetworkManager</span></span><br><span class="line">nameserver 114.114.114.114</span><br></pre></td></tr></table></figure><h1 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a><a href="https://linux.cmsblogs.cn/c/ping.html">ping命令</a></h1><blockquote><p>不作详解</p></blockquote><h1 id="telnet命令"><a href="#telnet命令" class="headerlink" title="telnet命令"></a><a href="https://linux.cmsblogs.cn/c/telnet.html">telnet命令</a></h1><blockquote><p>用于登录远程主机，对远程主机进行管理。telnet因为采用明文传送报文，<code>安全性不好</code>，很多Linux服务器都不开放telnet服务，而改用更安全的ssh方式了。但仍然有很多别的系统可能采用了telnet方式来提供远程登录，因此弄清楚telnet客户端的使用方式仍是很有必要的。</p></blockquote><h2 id="常用于检测服务器端口开放情况"><a href="#常用于检测服务器端口开放情况" class="headerlink" title="常用于检测服务器端口开放情况"></a>常用于检测服务器端口开放情况</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet &lt;ip&gt; &lt;port&gt;</span><br></pre></td></tr></table></figure><h1 id="ssh命令"><a href="#ssh命令" class="headerlink" title="ssh命令"></a><a href="https://linux.cmsblogs.cn/c/ssh.html">ssh命令</a></h1><blockquote><p><code>ssh</code>是<code>openssh软件包</code>中的一个套件命令</p></blockquote><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><blockquote><p><strong>ssh命令</strong> 是openssh套件中的客户端连接工具，可以给予ssh加密协议实现安全的远程登录服务器。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh &lt;用户名&gt;@&lt;ip&gt;</span><br></pre></td></tr></table></figure><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">-1：强制使用ssh协议版本1；</span><br><span class="line">-2：强制使用ssh协议版本2；</span><br><span class="line">-4：强制使用IPv4地址；</span><br><span class="line">-6：强制使用IPv6地址；</span><br><span class="line">-A：开启认证代理连接转发功能；</span><br><span class="line">-a：关闭认证代理连接转发功能；</span><br><span class="line">-b：使用本机指定地址作为对应连接的源ip地址；</span><br><span class="line">-C：请求压缩所有数据；</span><br><span class="line">-F：指定ssh指令的配置文件；</span><br><span class="line">-f：后台执行ssh指令；</span><br><span class="line">-g：允许远程主机连接主机的转发端口；</span><br><span class="line">-i：指定身份文件；</span><br><span class="line">-l：指定连接远程服务器登录用户名；</span><br><span class="line">-N：不执行远程指令；</span><br><span class="line">-o：指定配置选项；</span><br><span class="line">-p：指定远程服务器上的端口；</span><br><span class="line">-q：静默模式；</span><br><span class="line">-X：开启X11转发功能；</span><br><span class="line">-x：关闭X11转发功能；</span><br><span class="line">-y：开启信任X11转发功能。</span><br></pre></td></tr></table></figure><h1 id="wget命令"><a href="#wget命令" class="headerlink" title="wget命令"></a><a href="https://linux.cmsblogs.cn/c/wget.html">wget命令</a></h1><blockquote><p>用于下载互联网上的资源（url）</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install wget -y</span><br></pre></td></tr></table></figure><h2 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h2><ol><li><strong>支持断点下传功能</strong> 这一点，也是网络蚂蚁和FlashGet当年最大的卖点，现在，Wget也可以使用此功能，那些网络不是太好的用户可以放心了；</li><li><strong>同时支持FTP和HTTP下载方式</strong> 尽管现在大部分软件可以使用HTTP方式下载，但是，有些时候，仍然需要使用FTP方式下载软件；</li><li><strong>支持代理服务器</strong> 对安全强度很高的系统而言，一般不会将自己的系统直接暴露在互联网上，所以，支持代理是下载软件必须有的功能；</li><li><strong>设置方便简单</strong> 可能，习惯图形界面的用户已经不是太习惯命令行了，但是，命令行在设置上其实有更多的优点，最少，鼠标可以少点很多次，也不要担心是否错点鼠标；</li><li><strong>程序小，完全免费</strong> 程序小可以考虑不计，因为现在的硬盘实在太大了；完全免费就不得不考虑了，即使网络上有很多所谓的免费软件，但是，这些软件的广告却不是我们喜欢的。</li></ol><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">启动参数：</span><br><span class="line"></span><br><span class="line">-V, –-version 显示wget的版本后退出</span><br><span class="line">-h, –-help 打印语法帮助</span><br><span class="line">-b, –-background 启动后转入后台执行</span><br><span class="line">-e, –-execute=COMMAND 执行 `.wgetrc’格式的命令，wgetrc格式参见/etc/wgetrc或~/.wgetrc</span><br><span class="line"></span><br><span class="line">记录和输入文件参数：</span><br><span class="line"></span><br><span class="line">-o, –-output-file=FILE 把记录写到FILE文件中</span><br><span class="line">-a, –-append-output=FILE 把记录追加到FILE文件中</span><br><span class="line">-d, –-debug 打印调试输出</span><br><span class="line">-q, –-quiet 安静模式(没有输出)</span><br><span class="line">-v, –-verbose 冗长模式(这是缺省设置)</span><br><span class="line">-nv, –-non-verbose 关掉冗长模式，但不是安静模式</span><br><span class="line">-i, –-input-file=FILE 下载在FILE文件中出现的URLs</span><br><span class="line">-F, –-force-html 把输入文件当作HTML格式文件对待</span><br><span class="line">-B, –-base=URL 将URL作为在-F -i参数指定的文件中出现的相对链接的前缀</span><br><span class="line">–-sslcertfile=FILE 可选客户端证书</span><br><span class="line">–-sslcertkey=KEYFILE 可选客户端证书的KEYFILE</span><br><span class="line">–-egd-file=FILE 指定EGD socket的文件名</span><br><span class="line"></span><br><span class="line">下载参数：</span><br><span class="line"></span><br><span class="line">–-bind-address=ADDRESS 指定本地使用地址(主机名或IP，当本地有多个IP或名字时使用)</span><br><span class="line">-t, –-tries=NUMBER 设定最大尝试链接次数(0 表示无限制).</span><br><span class="line">-O –-output-document=FILE 把文档写到FILE文件中</span><br><span class="line">-nc, –-no-clobber 不要覆盖存在的文件或使用.#前缀</span><br><span class="line">-c, –-continue 接着下载没下载完的文件</span><br><span class="line">–progress=TYPE 设定进程条标记</span><br><span class="line">-N, –-timestamping 不要重新下载文件除非比本地文件新</span><br><span class="line">-S, –-server-response 打印服务器的回应</span><br><span class="line">–-spider 不下载任何东西</span><br><span class="line">-T, –-timeout=SECONDS 设定响应超时的秒数</span><br><span class="line">-w, –-wait=SECONDS 两次尝试之间间隔SECONDS秒</span><br><span class="line">–waitretry=SECONDS 在重新链接之间等待1…SECONDS秒</span><br><span class="line">–random-wait 在下载之间等待0…2*WAIT秒</span><br><span class="line">-Y, –-proxy=on/off 打开或关闭代理</span><br><span class="line">-Q, –-quota=NUMBER 设置下载的容量限制</span><br><span class="line">-–limit-rate=RATE 限定下载输率</span><br><span class="line"></span><br><span class="line">目录参数：</span><br><span class="line"></span><br><span class="line">-nd –-no-directories 不创建目录</span><br><span class="line">-x, –-force-directories 强制创建目录</span><br><span class="line">-nH, –-no-host-directories 不创建主机目录</span><br><span class="line">-P, –-directory-prefix=PREFIX 将文件保存到目录 PREFIX/…</span><br><span class="line">–cut-dirs=NUMBER 忽略 NUMBER层远程目录</span><br><span class="line"></span><br><span class="line">HTTP 选项参数：</span><br><span class="line"></span><br><span class="line">-–http-user=USER 设定HTTP用户名为 USER.</span><br><span class="line">-–http-passwd=PASS 设定http密码为 PASS</span><br><span class="line">-C, –-cache=on/off 允许/不允许服务器端的数据缓存 (一般情况下允许)</span><br><span class="line">-E, –-html-extension 将所有text/html文档以.html扩展名保存</span><br><span class="line">-–ignore-length 忽略 `Content-Length’头域</span><br><span class="line">-–header=STRING 在headers中插入字符串 STRING</span><br><span class="line">-–proxy-user=USER 设定代理的用户名为 USER</span><br><span class="line">-–proxy-passwd=PASS 设定代理的密码为 PASS</span><br><span class="line">-–referer=URL 在HTTP请求中包含 `Referer: URL’头</span><br><span class="line">-s, –-save-headers 保存HTTP头到文件</span><br><span class="line">-U, –-user-agent=AGENT 设定代理的名称为 AGENT而不是 Wget/VERSION</span><br><span class="line">-–no-http-keep-alive 关闭 HTTP活动链接 (永远链接)</span><br><span class="line">–-cookies=off 不使用 cookies</span><br><span class="line">–-load-cookies=FILE 在开始会话前从文件 FILE中加载cookie</span><br><span class="line">-–save-cookies=FILE 在会话结束后将 cookies保存到 FILE文件中</span><br><span class="line"></span><br><span class="line">FTP 选项参数：</span><br><span class="line"></span><br><span class="line">-nr, -–dont-remove-listing 不移走 `.listing’文件</span><br><span class="line">-g, -–glob=on/off 打开或关闭文件名的 globbing机制</span><br><span class="line">-–passive-ftp 使用被动传输模式 (缺省值).</span><br><span class="line">-–active-ftp 使用主动传输模式</span><br><span class="line">-–retr-symlinks 在递归的时候，将链接指向文件(而不是目录)</span><br><span class="line"></span><br><span class="line">递归下载参数：</span><br><span class="line"></span><br><span class="line">-r, -–recursive 递归下载－－慎用!</span><br><span class="line">-l, -–level=NUMBER 最大递归深度 (inf 或 0 代表无穷)</span><br><span class="line">–-delete-after 在现在完毕后局部删除文件</span><br><span class="line">-k, –-convert-links 转换非相对链接为相对链接</span><br><span class="line">-K, –-backup-converted 在转换文件X之前，将之备份为 X.orig</span><br><span class="line">-m, –-mirror 等价于 -r -N -l inf -nr</span><br><span class="line">-p, –-page-requisites 下载显示HTML文件的所有图片</span><br><span class="line"></span><br><span class="line">递归下载中的包含和不包含(accept/reject)：</span><br><span class="line"></span><br><span class="line">-A, –-accept=LIST 分号分隔的被接受扩展名的列表</span><br><span class="line">-R, –-reject=LIST 分号分隔的不被接受的扩展名的列表</span><br><span class="line">-D, –-domains=LIST 分号分隔的被接受域的列表</span><br><span class="line">–-exclude-domains=LIST 分号分隔的不被接受的域的列表</span><br><span class="line">–-follow-ftp 跟踪HTML文档中的FTP链接</span><br><span class="line">–-follow-tags=LIST 分号分隔的被跟踪的HTML标签的列表</span><br><span class="line">-G, –-ignore-tags=LIST 分号分隔的被忽略的HTML标签的列表</span><br><span class="line">-H, –-span-hosts 当递归时转到外部主机</span><br><span class="line">-L, –-relative 仅仅跟踪相对链接</span><br><span class="line">-I, –-include-directories=LIST 允许目录的列表</span><br><span class="line">-X, –-exclude-directories=LIST 不被包含目录的列表</span><br><span class="line">-np, –-no-parent 不要追溯到父目录</span><br><span class="line">wget -S –-spider url 不下载只显示过程</span><br></pre></td></tr></table></figure><h2 id="常用案例"><a href="#常用案例" class="headerlink" title="常用案例"></a>常用案例</h2><h3 id="下载文件后指定目录保存且修改目录名"><a href="#下载文件后指定目录保存且修改目录名" class="headerlink" title="下载文件后指定目录保存且修改目录名"></a>下载文件后指定目录保存且修改目录名</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O &lt;path&gt;/&lt;newname&gt; &lt;url&gt; </span><br></pre></td></tr></table></figure><h3 id="限制下载速度"><a href="#限制下载速度" class="headerlink" title="限制下载速度"></a>限制下载速度</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --limit-rate=&lt;nkb/mb/gb&gt; &lt;url&gt;</span><br></pre></td></tr></table></figure><h3 id="支持断点续传"><a href="#支持断点续传" class="headerlink" title="支持断点续传"></a>支持断点续传</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c &lt;url&gt;</span><br></pre></td></tr></table></figure><h3 id="隐藏下载任务（后台下载）"><a href="#隐藏下载任务（后台下载）" class="headerlink" title="隐藏下载任务（后台下载）"></a>隐藏下载任务（后台下载）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -b &lt;url&gt;</span><br></pre></td></tr></table></figure><h3 id="伪装客户端"><a href="#伪装客户端" class="headerlink" title="伪装客户端"></a>伪装客户端</h3><blockquote><p>PC、PE，一般用在下载网页</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--usr-agent=</span><br></pre></td></tr></table></figure><p>这个参数的值可以在浏览器开发者模式中，刷新，任意点击一个资源，查看头部信息（标头），往下滑就可以找到类似<code>user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.81 Safari/537.36 Edg/104.0.1293.47</code></p><p>的信息。</p><h3 id="默认为电脑"><a href="#默认为电脑" class="headerlink" title="默认为电脑"></a>默认为电脑</h3><h4 id="伪装成手机"><a href="#伪装成手机" class="headerlink" title="伪装成手机"></a>伪装成手机</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --user-agent=&quot; Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.81 Mobile Safari/537.36 Edg/104.0.1293.47&quot; &lt;url&gt;</span><br></pre></td></tr></table></figure><h3 id="利用wget检测网站是否存活"><a href="#利用wget检测网站是否存活" class="headerlink" title="利用wget检测网站是否存活"></a>利用wget检测网站是否存活</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -T 10 -t 5 --spider &lt;url&gt;|echo &quot;$?&quot;</span><br></pre></td></tr></table></figure><p>如果输出值为0则表示网站正常，否则不正常</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# wget -q -T 10 -t 5 --spider lptexas.top |echo &quot;$?&quot;</span><br><span class="line">0</span><br><span class="line">[root@localhost ~]# wget -q -T 10 -t 5 --spider ssda.s|echo &quot;$?&quot;</span><br><span class="line">1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linu网络基础part2</title>
      <link href="/posts/1499167412/"/>
      <url>/posts/1499167412/</url>
      
        <content type="html"><![CDATA[<h1 id="route命令"><a href="#route命令" class="headerlink" title="route命令"></a><a href="https://linux.cmsblogs.cn/c/route.html">route命令</a></h1><blockquote><p><a href="https://zhuanlan.zhihu.com/p/410628521">什么是路由?</a></p></blockquote><p>计算机之间的数据传输必须经过网络，网络可以直接连接两台计算机，也可以通过一个一个的节点去连接。路由可以理解为互联网的中转站，网络中的数据包就是通过哦一个一个的路由转发到目的地。</p><h2 id="路由分类"><a href="#路由分类" class="headerlink" title="路由分类"></a>路由分类</h2><blockquote><p><code>静态</code>和<code>动态</code>路由</p></blockquote><p>Linux机器上配置的都是静态路由，由运维人民通过route命令去管理。</p><p>动态路由无需人为干预，由路由器、交换机自动分配规则而来。</p><h2 id="route命令-1"><a href="#route命令-1" class="headerlink" title="route命令"></a>route命令</h2><blockquote><p><strong>route命令</strong>可以对路由表进行操作</p></blockquote><p>用来显示并设置Linux内核中的网络路由表，route命令设置的路由主要是静态路由。要实现两个不同的子网之间的通信，需要一台连接两个网络的路由器，或者同时位于两个网络的网关来实现。</p><p>在Linux系统中设置路由通常是为了解决以下问题：该Linux系统在一个局域网中，局域网中有一个网关，能够让机器访问Internet，那么就需要将这台机器的ip地址设置为Linux机器的默认路由。要注意的是，直接在命令行下执行route命令来添加路由，不会永久保存，当网卡重启或者机器重启之后，该路由就失效了；可以在<code>/etc/rc.local</code>中添加route命令来保证该路由设置永久有效。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route [option] [参数]</span><br></pre></td></tr></table></figure><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-A：设置地址类型；</span><br><span class="line">-C：打印将Linux核心的路由缓存；</span><br><span class="line">-v：详细信息模式；</span><br><span class="line">-n：不执行DNS反向查找，直接显示数字形式的IP地址；</span><br><span class="line">-e：netstat格式显示路由表；</span><br><span class="line">-net：到一个网络的路由表；</span><br><span class="line">-host：到一个主机的路由表。</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Add：增加指定的路由记录；</span><br><span class="line">Del：删除指定的路由记录；</span><br><span class="line">Target：目的网络或目的主机；</span><br><span class="line">gw：设置默认网关；</span><br><span class="line">mss：设置TCP的最大区块长度（MSS），单位MB；</span><br><span class="line">window：指定通过路由表的TCP连接的TCP窗口大小；</span><br><span class="line">dev：路由记录所表示的网络接口。</span><br></pre></td></tr></table></figure><hr><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# route --help</span><br><span class="line">Usage: route [-nNvee] [-FC] [&lt;AF&gt;]           List kernel routing tables</span><br><span class="line">       route [-v] [-FC] &#123;add|del|flush&#125; ...  Modify routing table for AF.</span><br><span class="line"></span><br><span class="line">       route &#123;-h|--help&#125; [&lt;AF&gt;]              Detailed usage syntax for specified AF.</span><br><span class="line">       route &#123;-V|--version&#125;                  Display version/author and exit.</span><br><span class="line"></span><br><span class="line">        -v, --verbose            be verbose</span><br><span class="line">        -n, --numeric            don&#x27;t resolve names</span><br><span class="line">        -e, --extend             display other/more information</span><br><span class="line">        -F, --fib                display Forwarding Information Base (default)</span><br><span class="line">        -C, --cache              display routing cache instead of FIB</span><br><span class="line"></span><br><span class="line">  &lt;AF&gt;=Use -4, -6, &#x27;-A &lt;af&gt;&#x27; or &#x27;--&lt;af&gt;&#x27;; default: inet</span><br><span class="line">  List of possible address families (which support routing):</span><br><span class="line">    inet (DARPA Internet) inet6 (IPv6) ax25 (AMPR AX.25)</span><br><span class="line">    netrom (AMPR NET/ROM) ipx (Novell IPX) ddp (Appletalk DDP)</span><br><span class="line">    x25 (CCITT X.25)</span><br></pre></td></tr></table></figure><h2 id="路由命令案例"><a href="#路由命令案例" class="headerlink" title="路由命令案例"></a>路由命令案例</h2><h3 id="查看路由表信息"><a href="#查看路由表信息" class="headerlink" title="查看路由表信息"></a>查看路由表信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# route</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">default         gateway         0.0.0.0         UG    100    0        0 ens33</span><br><span class="line">192.168.41.0    0.0.0.0         255.255.255.0   U     100    0        0 ens33</span><br></pre></td></tr></table></figure><p>加上<code>-n</code>参数，将<code>default</code>，<code>gateway</code>显示出具体的<code>值</code>。</p><p>（即不进行DNS解析的路由表查看）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route -n</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# route -n</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags Metric Ref    Use Iface</span><br><span class="line">0.0.0.0         192.168.41.2    0.0.0.0         UG    100    0        0 ens33</span><br><span class="line">192.168.41.0    0.0.0.0         255.255.255.0   U     100    0        0 ens33</span><br></pre></td></tr></table></figure><h4 id="参数解析"><a href="#参数解析" class="headerlink" title="参数解析"></a>参数解析</h4><ul><li>Destination：网络号，network；</li><li>Gateway：网关地址，网络是通过该IP出口，如果显示0.0.0.0的IP表示该路由信息，是从本机转发出去的；</li><li>Genmask：子网掩码地址的表示，IP地址配合子网掩码才是一个完整的网络信息；</li><li>Flags：路由标记，表当前的网络状态<ul><li>U：up运行状态</li><li>G：表示这是一个网关路由器</li><li>H：表示这个网关是一个主机</li><li>！：表示这个路由已经被禁止</li></ul></li></ul><h3 id="删除默认路由"><a href="#删除默认路由" class="headerlink" title="删除默认路由"></a>删除默认路由</h3><blockquote><p>default</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route del default</span><br></pre></td></tr></table></figure><h3 id="添加网关地址"><a href="#添加网关地址" class="headerlink" title="添加网关地址"></a>添加网关地址</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">route add default gw &lt;网关ip&gt;</span><br></pre></td></tr></table></figure><h1 id="IP命令"><a href="#IP命令" class="headerlink" title="IP命令"></a><a href="https://linux.cmsblogs.cn/c/ip.html">IP命令</a></h1><blockquote><p>ip命令是iproute软件包中的强大网络管理工具。</p></blockquote><h2 id="ip命令案例"><a href="#ip命令案例" class="headerlink" title="ip命令案例"></a>ip命令案例</h2><h3 id="查看网络设备信息"><a href="#查看网络设备信息" class="headerlink" title="查看网络设备信息"></a>查看网络设备信息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ip address show</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">简写</span></span><br><span class="line">ip a</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip address show</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:28:0f:b1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.41.100/24 brd 192.168.41.255 scope global noprefixroute ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::101b:ff83:d95:16/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h4 id="指定设备ens33"><a href="#指定设备ens33" class="headerlink" title="指定设备ens33"></a>指定设备<code>ens33</code></h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link show dev ens33</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip link show dev ens33</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:28:0f:b1 brd ff:ff:ff:ff:ff:ff</span><br></pre></td></tr></table></figure><h4 id="显示详细的数据包收发信息"><a href="#显示详细的数据包收发信息" class="headerlink" title="显示详细的数据包收发信息"></a>显示详细的数据包收发信息</h4><blockquote><p>加<code>-s</code>参数</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip -s link show dev ens33</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip -s link show dev ens33</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP mode DEFAULT group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:28:0f:b1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    RX: bytes  packets  errors  dropped overrun mcast</span><br><span class="line">    625634     8994     0       0       0       0</span><br><span class="line">    TX: bytes  packets  errors  dropped carrier collsns</span><br><span class="line">    5411590    16327    0       0       0       0</span><br></pre></td></tr></table></figure><h3 id="关闭-x2F-激活网络设备"><a href="#关闭-x2F-激活网络设备" class="headerlink" title="关闭&#x2F;激活网络设备"></a>关闭&#x2F;激活网络设备</h3><h4 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h4><blockquote><p>作用和使用<code>ifconfig &lt;网络设备&gt; down</code>相同</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link set &lt;网络设备&gt; down </span><br></pre></td></tr></table></figure><h4 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link set &lt;网络设备&gt; up</span><br></pre></td></tr></table></figure><h3 id="修改网卡MAC信息"><a href="#修改网卡MAC信息" class="headerlink" title="修改网卡MAC信息"></a>修改网卡MAC信息</h3><blockquote><p>都是类似<code>ifconfig</code>的</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip link set ens33 address &lt;MAC地址&gt;</span><br></pre></td></tr></table></figure><h3 id="添加-x2F-删除ip地址"><a href="#添加-x2F-删除ip地址" class="headerlink" title="添加&#x2F;删除ip地址"></a>添加&#x2F;删除ip地址</h3><blockquote><p>删除，将<code>add</code>改为<code>del</code>即可</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip address add &lt;ip&gt;/&lt;子网掩码位数&gt; dev &lt;网络设备&gt;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip address add 192.168.41.132/24 dev ens33</span><br><span class="line">您在 /var/spool/mail/root 中有新邮件</span><br><span class="line">[root@localhost ~]# ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:28:0f:b1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.41.100/24 brd 192.168.41.255 scope global noprefixroute ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.41.132/24 scope global secondary ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::101b:ff83:d95:16/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">[root@localhost ~]# ping 192.168.41.132</span><br><span class="line">PING 192.168.41.132 (192.168.41.132) 56(84) bytes of data.</span><br><span class="line">64 bytes from 192.168.41.132: icmp_seq=1 ttl=64 time=0.030 ms</span><br><span class="line">64 bytes from 192.168.41.132: icmp_seq=2 ttl=64 time=0.036 ms</span><br><span class="line">^C</span><br><span class="line">--- 192.168.41.132 ping statistics ---</span><br><span class="line">2 packets transmitted, 2 received, 0% packet loss, time 999ms</span><br><span class="line">rtt min/avg/max/mdev = 0.030/0.033/0.036/0.003 ms</span><br></pre></td></tr></table></figure><p><code>ping</code> 添加的ip发现可以ping通！</p><p>使用<code>label</code>参数还可以给添加的ip添加别名</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip address add 192.168.41.133/24 dev ens33 label ens33:1</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip address add 192.168.41.133/24 dev ens33 label ens33:1</span><br><span class="line">[root@localhost ~]# ip a</span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: ens33: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</span><br><span class="line">    link/ether 00:0c:29:28:0f:b1 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 192.168.41.100/24 brd 192.168.41.255 scope global noprefixroute ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.41.132/24 scope global secondary ens33</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 192.168.41.133/24 scope global secondary ens33:1</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::101b:ff83:d95:16/64 scope link noprefixroute</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h3 id="通过ip命令查看路由表"><a href="#通过ip命令查看路由表" class="headerlink" title="通过ip命令查看路由表"></a>通过ip命令查看路由表</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip route</span><br><span class="line">default via 192.168.41.2 dev ens33 proto static metric 100</span><br><span class="line">192.168.41.0/24 dev ens33 proto kernel scope link src 192.168.41.100 metric 100</span><br></pre></td></tr></table></figure><h4 id="ip检查arp缓存"><a href="#ip检查arp缓存" class="headerlink" title="ip检查arp缓存"></a>ip检查arp缓存</h4><blockquote><p>显示网络邻居信息</p><p>检查MAC地址信息</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip neighbour</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# ip neighbour</span><br><span class="line">192.168.41.2 dev ens33 lladdr 00:50:56:fb:e5:4c STALE</span><br><span class="line">192.168.41.1 dev ens33 lladdr 00:50:56:c0:00:08 REACHABLE</span><br></pre></td></tr></table></figure><p>还可以直接通过<code>arp命令</code>查看arp缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# arp</span><br><span class="line">Address                  HWtype  HWaddress           Flags Mask            Iface</span><br><span class="line">gateway                  ether   00:50:56:fb:e5:4c   C                     ens33</span><br><span class="line">192.168.41.1             ether   00:50:56:c0:00:08   C                     ens33</span><br></pre></td></tr></table></figure><p>取消主机名解析</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arp -n</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# arp -n</span><br><span class="line">Address                  HWtype  HWaddress           Flags Mask            Iface</span><br><span class="line">192.168.41.2             ether   00:50:56:fb:e5:4c   C                     ens33</span><br><span class="line">192.168.41.1             ether   00:50:56:c0:00:08   C                     ens33</span><br></pre></td></tr></table></figure><h1 id="netstat命令"><a href="#netstat命令" class="headerlink" title="netstat命令"></a><a href="https://linux.cmsblogs.cn/c/netstat.html">netstat命令</a></h1><blockquote><p>显示网络连接情况，路由表信息，端口状态等等信息</p></blockquote><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat [option]</span><br></pre></td></tr></table></figure><h2 id="选项-1"><a href="#选项-1" class="headerlink" title="选项"></a>选项</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">-a或--all：显示所有连线中的Socket；</span><br><span class="line">-A&lt;网络类型&gt;或--&lt;网络类型&gt;：列出该网络类型连线中的相关地址；</span><br><span class="line">-c或--continuous：持续列出网络状态；</span><br><span class="line">-C或--cache：显示路由器配置的快取信息；</span><br><span class="line">-e或--extend：显示网络其他相关信息；</span><br><span class="line">-F或--fib：显示FIB；</span><br><span class="line">-g或--groups：显示多重广播功能群组组员名单；</span><br><span class="line">-h或--help：在线帮助；</span><br><span class="line">-i或--interfaces：显示网络界面信息表单；</span><br><span class="line">-l或--listening：显示监控中的服务器的Socket；</span><br><span class="line">-M或--masquerade：显示伪装的网络连线；</span><br><span class="line">-n或--numeric：直接使用ip地址，而不通过域名服务器；</span><br><span class="line">-N或--netlink或--symbolic：显示网络硬件外围设备的符号连接名称；</span><br><span class="line">-o或--timers：显示计时器；</span><br><span class="line">-p或--programs：显示正在使用Socket的程序识别码和程序名称；</span><br><span class="line">-r或--route：显示Routing Table；</span><br><span class="line">-s或--statistice：显示网络工作信息统计表；</span><br><span class="line">-t或--tcp：显示TCP传输协议的连线状况；</span><br><span class="line">-u或--udp：显示UDP传输协议的连线状况；</span><br><span class="line">-v或--verbose：显示指令执行过程；</span><br><span class="line">-V或--version：显示版本信息；</span><br><span class="line">-w或--raw：显示RAW传输协议的连线状况；</span><br><span class="line">-x或--unix：此参数的效果和指定&quot;-A unix&quot;参数相同；</span><br><span class="line">--ip或--inet：此参数的效果和指定&quot;-A inet&quot;参数相同。</span><br></pre></td></tr></table></figure><h2 id="netstat命令案例"><a href="#netstat命令案例" class="headerlink" title="netstat命令案例"></a>netstat命令案例</h2><h3 id="查看所有的网络连接情况"><a href="#查看所有的网络连接情况" class="headerlink" title="查看所有的网络连接情况"></a>查看所有的网络连接情况</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -an</span><br></pre></td></tr></table></figure><p>由于显示结果过多，这里只展示一部分</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-8-centos ~]# netstat -an</span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 0.0.0.0:21              0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 10.0.4.8:39810          101.91.61.154:9988      ESTABLISHED</span><br><span class="line">tcp        0      0 10.0.4.8:38550          169.254.0.138:8086      ESTABLISHED</span><br><span class="line">tcp        0     64 10.0.4.8:22             60.255.73.42:15384      ESTABLISHE</span><br></pre></td></tr></table></figure><h4 id="常见字段解释"><a href="#常见字段解释" class="headerlink" title="常见字段解释"></a>常见字段解释</h4><ul><li>Proto ：嵌套字所用协议；</li><li>Recv-Q ：连接该嵌套字的用户，还未拷贝的字节数；</li><li>Send-Q ：远程主机还未确认的字节数；</li><li>Local Address：套接字本地地址和端口号；</li><li>Foreign Address  ：套接字的远程主机地址和端口号；       </li><li>State：套接字的运行情况，Listen表示监听中。（<a href="https://blog.csdn.net/weixin_44256848/article/details/120880433">12种状态详解</a>）<ul><li>常见状态即CONNECTED连接状态。在原模式中没有状态，在用户数据报协议中也经常没有状态，于是状态列可以空出来。若有状态，通常取值为：[4]</li><li>LISTEN侦听来自远方的TCP端口的连接请求[4]</li><li>SYN-SENT在发送连接请求后等待匹配的连接请求[4]</li><li>SYN-RECEIVED在收到和发送一个连接请求后等待对方对连接请求的确认[4]</li><li>ESTABLISHED代表一个打开的连接[4]</li><li>FIN-WAIT-1等待远程TCP连接中断请求，或先前的连接中断请求的确认[4]</li><li>FIN-WAIT-2从远程TCP等待连接中断请求[4]</li><li>CLOSE-WAIT等待从本地用户发来的连接中断请求[4]</li><li>CLOSING等待远程TCP对连接中断的确认[4]</li><li>LAST-ACK等待原来的发向远程TCP的连接中断请求的确认[4]</li><li>TIME-WAIT等待足够的时间以确保远程TCP接收到连接中断请求的确认[4]</li><li>CLOSED没有任何连接状态[4]</li><li>UNKNOWN套接字状态未知</li></ul></li></ul><h3 id="常用参数组合"><a href="#常用参数组合" class="headerlink" title="常用参数组合"></a>常用参数组合</h3><h4 id="查看正在运行的端口情况"><a href="#查看正在运行的端口情况" class="headerlink" title="查看正在运行的端口情况"></a>查看正在运行的端口情况</h4><blockquote><p>在<code>ss命令</code>中同样适用</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-tunlp</span><br></pre></td></tr></table></figure><p>-t，tcp连接情况</p><p>-u，udp连接情况</p><p>-n，不进行dns解析</p><p>-l，正在监听中的套接字情况</p><p>-p，显示进程和进程名情况</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunlp</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-8-centos ~]# netstat -tunlp</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      19760/nginx: master</span><br><span class="line">tcp        0      0 0.0.0.0:21              0.0.0.0:*               LISTEN      5709/pure-ftpd (SER</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1342/sshd</span><br></pre></td></tr></table></figure><h4 id="查看路由表信息-1"><a href="#查看路由表信息-1" class="headerlink" title="查看路由表信息"></a>查看路由表信息</h4><blockquote><p>等同于<code>route</code>&#x2F;<code>ip route</code></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -rn</span><br></pre></td></tr></table></figure><p>-r </p><p>-n</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-8-centos ~]# netstat -rn</span><br><span class="line">Kernel IP routing table</span><br><span class="line">Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface</span><br><span class="line">0.0.0.0         10.0.4.1        0.0.0.0         UG        0 0          0 eth0</span><br><span class="line">10.0.4.0        0.0.0.0         255.255.252.0   U         0 0          0 eth0</span><br><span class="line">169.254.0.0     0.0.0.0         255.255.0.0     U         0 0          0 eth0</span><br></pre></td></tr></table></figure><h4 id="显示网络的接口情况"><a href="#显示网络的接口情况" class="headerlink" title="显示网络的接口情况"></a>显示网络的接口情况</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -i</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@VM-4-8-centos ~]# netstat -i</span><br><span class="line">Kernel Interface table</span><br><span class="line">Iface             MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg</span><br><span class="line">eth0             1500 33714997      0      0 0      39153872      0      0      0 BMRU</span><br><span class="line">lo              65536    39481      0      0 0         39481      0      0      0 LRU</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="字段解释"><a href="#字段解释" class="headerlink" title="字段解释"></a>字段解释</h5><ul><li>Iface :网络接口名称</li><li>MTU:Maximum Trasmission Unit 最大传输单元</li><li>Met: Metric，度量值 , 供某些操作系统用，用于计算一条路由的成本</li><li>RX-OK :接收时，正确的数据包数。</li><li>RX-ERR :接收时，产生错误的数据包数。</li><li>RX-DRP :接收时，丢弃的数据包数。</li><li>RX-OVR :接收时，由于过速（在数据传输中，由于接收设备不能接收按照发送速率传送来的数据而使数据丢失）而丢失的数据包数。</li><li>TX-OK :发送时，正确的数据包数。</li><li>TX-ERR :发送时，产生错误的数据包数。</li><li>TX-DRP :发送时，丢弃的数据包数。</li><li>TX-OVR :发送时，由于过速而丢失的数据包数。</li><li>Flg ：标志。<ul><li>B 已经设置了一个广播地址。</li><li>L 该接口是一个回送设备。（回环地址）</li><li>M 接收所有数据包（混乱模式）。</li><li>N 避免跟踪。</li><li>O 在该接口上，禁用ARP。</li><li>P 这是一个点到点链接。</li><li>R 接口正在运行。</li><li>U 接口处于“活动”状态。</li></ul></li></ul><h4 id="查看服务器监听"><a href="#查看服务器监听" class="headerlink" title="查看服务器监听"></a>查看服务器监听</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">netstat -tunlp |grep 33066</span><br><span class="line">netstat -tunlp |grep 80</span><br><span class="line">netstat -tunlp |grep 443</span><br><span class="line">netstat -tunlp |grep &lt;常用端口&gt;</span><br></pre></td></tr></table></figure><h1 id="ss命令"><a href="#ss命令" class="headerlink" title="ss命令"></a><a href="https://linux.cmsblogs.cn/c/ss.html">ss命令</a></h1><blockquote><p>centos7出现的，可能需要安装iproute工具包。</p></blockquote><blockquote><p>和<code>netstat命令</code>用法相同</p><p>比 netstat 好用的socket统计信息，iproute2 包附带的另一个工具，允许你查询 socket 的有关统计信息</p></blockquote><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iproute -y</span><br></pre></td></tr></table></figure><h2 id="ss命令案例"><a href="#ss命令案例" class="headerlink" title="ss命令案例"></a>ss命令案例</h2><h3 id="查看服务器监听-1"><a href="#查看服务器监听-1" class="headerlink" title="查看服务器监听"></a>查看服务器监听</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ss -tunlp|grep &lt;常见端口&gt;</span><br></pre></td></tr></table></figure><p>…</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linu网络基础part1</title>
      <link href="/posts/3226610446/"/>
      <url>/posts/3226610446/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络协议"><a href="#计算机网络协议" class="headerlink" title="计算机网络协议"></a>计算机网络协议</h1><h2 id="TCP-x2F-IP网络协议标准"><a href="#TCP-x2F-IP网络协议标准" class="headerlink" title="TCP&#x2F;IP网络协议标准"></a>TCP&#x2F;IP网络协议标准</h2><h2 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a><a href="https://cloud.tencent.com/developer/article/2056452">OSI七层模型</a></h2><blockquote><p>国际标准化组织制定的用于计算机或通信系统间互联的标准体系。</p></blockquote><p><img src="https://lptexas.top/img/post/osi7m1.png" alt="七层模型1"></p><p><img src="https://lptexas.top/img/post/osi7m2.png" alt="七层模型2"></p><p><img src="https://lptexas.top/img/post/osi7m3.gif" alt="七层模型3"></p><p>（图片来源于网络）</p><h1 id="管理Linux网络"><a href="#管理Linux网络" class="headerlink" title="管理Linux网络"></a>管理Linux网络</h1><h2 id="ifconfig命令"><a href="#ifconfig命令" class="headerlink" title="ifconfig命令"></a>ifconfig命令</h2><blockquote><p>类似windows的ipconfig命令</p><p>可能需要单独安装！且只能由root用户执行。</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools -y</span><br></pre></td></tr></table></figure><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>用于配置网卡ip地址信息等参数；</li><li>查看网络接口信息，类似windows的ipconfig；</li><li>临时配置ip地址，子网掩码，广播地址，网关信息等。</li></ul><h3 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">man ifconfig</span><br><span class="line">ifconfig --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>可以通过手册或help了解使用方法。</p><h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a>使用案例</h3><h4 id="查看网络地址信息"><a href="#查看网络地址信息" class="headerlink" title="查看网络地址信息"></a>查看网络地址信息</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig &lt;网卡&gt;</span><br></pre></td></tr></table></figure><p>不指定网卡则显示所有网卡的信息</p><hr><p>指定<code>wlan0</code>网卡</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">~ $ ifconfig wlan0</span><br><span class="line">wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.31.172  netmask 255.255.255.0  broadcast 192.168.31.255</span><br><span class="line">        inet6 fe80::c938:ab63:36a7:9f8c  prefixlen 64  scopeid 0x20&lt;link&gt;</span><br><span class="line">        ether 9c:2e:a1:0f:ad:7e  txqueuelen 3000  (Ethernet)</span><br><span class="line">        RX packets 2664831  bytes 856467334 (816.7 MiB)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 2336319  bytes 608951986 (580.7 MiB)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br></pre></td></tr></table></figure><blockquote><p>不指定网卡</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig</span></span><br><span class="line">eth0      Link encap:Ethernet  HWaddr 00:16:3E:00:1E:51  </span><br><span class="line">          inet addr:10.160.7.81  Bcast:10.160.15.255  Mask:255.255.240.0</span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1</span><br><span class="line">          RX packets:61430830 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:88534 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:1000</span><br><span class="line">          RX bytes:3607197869 (3.3 GiB)  TX bytes:6115042 (5.8 MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:127.0.0.1  Mask:255.0.0.0</span><br><span class="line">          UP LOOPBACK RUNNING  MTU:16436  Metric:1</span><br><span class="line">          RX packets:56103 errors:0 dropped:0 overruns:0 frame:0</span><br><span class="line">          TX packets:56103 errors:0 dropped:0 overruns:0 carrier:0</span><br><span class="line">          collisions:0 txqueuelen:0</span><br><span class="line">          RX bytes:5079451 (4.8 MiB)  TX bytes:5079451 (4.8 MiB)</span><br></pre></td></tr></table></figure><hr><h6 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h6><p><strong>eth0</strong> 表示第一块网卡，其中<code>HWaddr</code>表示网卡的物理地址，可以看到目前这个网卡的物理地址(MAC地址）是<code>00:16:3E:00:1E:51</code>。</p><p><strong>inet addr</strong> 用来表示网卡的IP地址，此网卡的IP地址是<code>10.160.7.81</code>，广播地址<code>Bcast:10.160.15.255</code>，掩码地址<code>Mask:255.255.240.0</code>。</p><p><strong>lo</strong> 是表示主机的回坏地址，这个一般是用来测试一个网络程序，但又不想让局域网或外网的用户能够查看，只能在此台主机上运行和查看所用的网络接口。比如把 httpd服务器的指定到回坏地址，在浏览器输入127.0.0.1就能看到你所架WEB网站了。但只是您能看得到，局域网的其它主机或用户无从知道。</p><ul><li>第一行：连接类型：Ethernet（以太网）HWaddr（硬件mac地址）。</li><li>第二行：网卡的IP地址、子网、掩码。</li><li>第三行：UP（代表网卡开启状态）RUNNING（代表网卡的网线被接上）MULTICAST（支持组播）MTU:1500（最大传输单元）：1500字节。</li><li>第四、五行：接收、发送数据包情况统计。</li><li>第七行：接收、发送数据字节数统计信息。</li></ul><p>第一张网卡的配置文件路径为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure><h4 id="开启-x2F-关闭网卡"><a href="#开启-x2F-关闭网卡" class="headerlink" title="开启&#x2F;关闭网卡"></a>开启&#x2F;关闭网卡</h4><blockquote><p>请不要在自己的云服务器上测试！</p></blockquote><h6 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig &lt;网卡&gt; up</span><br></pre></td></tr></table></figure><h6 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h6><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig &lt;网卡&gt; down</span><br></pre></td></tr></table></figure><h4 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h4><h6 id="添加一个新IP"><a href="#添加一个新IP" class="headerlink" title="添加一个新IP"></a>添加一个新IP</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig &lt;网卡&gt;:0 &lt;ip&gt; netmask &lt;子网掩码&gt; up</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig &lt;网卡&gt;:0 &lt;ip&gt;/&lt;子网掩码位数&gt; up</span><br></pre></td></tr></table></figure><p>24表示255.255.255.0</p><p>24&#x2F;8&#x3D;3，表示前三个都是255，一个255占8位。</p><h6 id="修改当前网卡IP"><a href="#修改当前网卡IP" class="headerlink" title="修改当前网卡IP"></a>修改当前网卡IP</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig &lt;网卡&gt; &lt;ip&gt; netmask &lt;子网掩码&gt; up</span><br></pre></td></tr></table></figure><h4 id="修改MAC地址"><a href="#修改MAC地址" class="headerlink" title="修改MAC地址"></a>修改MAC地址</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig &lt;网卡&gt; hw ether &lt;MAC地址&gt;</span><br></pre></td></tr></table></figure><h4 id="永久修改网络设备信息"><a href="#永久修改网络设备信息" class="headerlink" title="永久修改网络设备信息"></a>永久修改网络设备信息</h4><blockquote><p>使用ifconfig修改网络信息只能临时生效！</p><p>要永久生效还是要修改配置文件！</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-设备名</span><br></pre></td></tr></table></figure><p>或者使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmtui</span><br></pre></td></tr></table></figure><p>根据指引进行修改！</p><p><strong>但最终需要确认配置文件中的</strong></p><p><strong><code>onboot</code>开机自启是否为<code>true</code></strong></p><p><strong>否则不会生效！</strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux进程管理part2</title>
      <link href="/posts/3381118551/"/>
      <url>/posts/3381118551/</url>
      
        <content type="html"><![CDATA[<h1 id="top资源管理器"><a href="#top资源管理器" class="headerlink" title="top资源管理器"></a><strong><a href="https://zhuanlan.zhihu.com/p/36995443">top资源管理器</a></strong></h1><blockquote><p>好比windows的任务管理器</p></blockquote><h2 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a><a href="https://linux.cmsblogs.cn/c/top.html">top命令</a></h2><blockquote><p>用于<code>实时监控</code>系统处理器状态，以及其他硬件负载信息还有动态的进程信息等等，还有按照排名，先后显示某个进程CPU，内存的使用情况排名</p></blockquote><h2 id="top交互命令"><a href="#top交互命令" class="headerlink" title="top交互命令"></a>top交互命令</h2><p><code>z指令</code>打开、关闭颜色</p><p><code>x指令</code>某一列高亮</p><p><code>b指令</code>某一列加粗</p><p><code>&lt;&gt;</code>大于小于号左右移动</p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> [root@localhost ~]<span class="comment"># top</span></span><br><span class="line">top - 09:16:03 up 2 min,  1 user,  load average: 0.03, 0.05, 0.03</span><br><span class="line">Tasks: 130 total,   1 running, 129 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.0 us,  0.6 sy,  0.0 ni, 99.4 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  1862996 total,  1524408 free,   198404 used,   140184 buff/cache</span><br><span class="line">KiB Swap:  2097148 total,  2097148 free,        0 used.  1514864 avail Mem</span><br><span class="line"></span><br><span class="line"> PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br></pre></td></tr></table></figure><p>之前介绍过的就不再重复</p><ul><li>09:16:03 up<ul><li>当前的系统时间，date命令查询时间</li></ul></li><li>2 min<ul><li>当前系统运行了多久</li></ul></li><li>1 user<ul><li>当前正在使用机器的用户数</li></ul></li><li>load average: 0.03<ul><li>显示系统的平均负载情况，分别<code>1分钟</code>、<code>5分钟</code>、<code>15分钟</code>显示的平均值（值越小、系统负载越低）</li></ul></li><li>Tasks: 130 total,   1 running, 129 sleeping,   0 stopped,   0 zombie<ul><li>总任务数、正在运行数、休眠任务数、停止任务数、僵尸进程数</li></ul></li><li>%Cpu(s):  0.0 us,  0.6 sy,  0.0 ni, 99.4 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st <ul><li>CPU使用百分比情况，</li><li>us：用户占用CPU百分比情况、</li><li>sy：系统内核空间占用CPU百分比、</li><li>ni：用户进程空间占用的CPU百分比、</li><li>id：空间的CPU百分比情况、</li><li>wa等待输入输出的CPU百分比</li></ul></li><li>KiB Mem :  1862996 total,  1524408 free,   198404 used,   140184 buff&#x2F;cache <ul><li>内存状态：总内存空间、空闲内存总量、已使用内存量、缓存使用量情况</li></ul></li><li>KiB Swap:  2097148 total,  2097148 free,  0 used.  1514864 avail Mem<ul><li>交换空间状态</li></ul></li><li>USER</li><li>PR：进程优先级高低</li><li>NI：nice值，值越高优先级越高</li><li>VIRT：进程使用的虚拟内存总量、VIRT&#x3D;swap +RES</li><li>RES：进程使用的物理内存大小</li><li>SHR：共享内存大小，单位是kb</li><li>S：表示进程的状态</li></ul><h2 id="top实际使用"><a href="#top实际使用" class="headerlink" title="top实际使用"></a>top实际使用</h2><h3 id="显示进程的绝对路径"><a href="#显示进程的绝对路径" class="headerlink" title="显示进程的绝对路径"></a>显示进程的绝对路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -c</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># top -c</span></span><br><span class="line">top - 10:16:05 up  1:02,  1 user,  load average: 0.01, 0.03, 0.05</span><br><span class="line">Tasks: 126 total,   1 running, 125 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.0 us,  0.2 sy,  0.0 ni, 99.8 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  1862996 total,  1522684 free,   199488 used,   140824 buff/cache</span><br><span class="line">KiB Swap:  2097148 total,  2097148 free,        0 used.  1513444 avail Mem</span><br><span class="line"></span><br><span class="line">   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">  1568 root      20   0  158988   5820   4412 S   0.3  0.3   0:04.16 sshd: root@pts/0</span><br><span class="line">  5025 root      20   0       0      0      0 S   0.3  0.0   0:01.24 [kworker/0:2]</span><br><span class="line"> 15431 root      20   0  162116   2352   1680 R   0.3  0.1   0:01.57 top -c</span><br><span class="line">     1 root      20   0  128008   6628   4160 S   0.0  0.4   0:01.77 /usr/lib/systemd/syste+</span><br><span class="line">     2 root      20   0       0      0      0 S   0.0  0.0   0:00.01 [kthreadd]</span><br><span class="line">     4 root       0 -20       0      0      0 S   0.0  0.0   0:00.00 [kworker/0:0H]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="设置top进程刷新的时间"><a href="#设置top进程刷新的时间" class="headerlink" title="设置top进程刷新的时间"></a>设置top进程刷新的时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -d &lt;second&gt;</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># top -d 5</span></span><br><span class="line">top - 10:22:26 up  1:09,  1 user,  load average: 0.01, 0.02, 0.05</span><br><span class="line">Tasks: 126 total,   1 running, 125 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.0 us,  0.0 sy,  0.0 ni,100.0 <span class="built_in">id</span>,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line">KiB Mem :  1862996 total,  1522828 free,   199320 used,   140848 buff/cache</span><br><span class="line">KiB Swap:  2097148 total,  2097148 free,        0 used.  1513600 avail Mem</span><br><span class="line"></span><br><span class="line">   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">     1 root      20   0  128008   6628   4160 S   0.0  0.4   0:01.80 systemd</span><br><span class="line">     2 root      20   0       0      0      0 S   0.0  0.0   0:00.01 kthreadd</span><br><span class="line">     4 root       0 -20       0      0      0 S   0.0  0.0   0:00.00 kworker/0:0H</span><br><span class="line">     6 root      20   0       0      0      0 S   0.0  0.0   0:00.04 ksoftirqd/0</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="指定查看一个进程信息"><a href="#指定查看一个进程信息" class="headerlink" title="指定查看一个进程信息"></a>指定查看一个进程信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -p &lt;pid&gt;</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># top -p 1</span></span><br><span class="line">top - 10:24:02 up  1:10,  1 user,  load average: 0.00, 0.01, 0.05</span><br><span class="line">Tasks:   1 total,   0 running,   1 sleeping,   0 stopped,   0 zombie</span><br><span class="line">%Cpu(s):  0.1 us,  0.4 sy,  0.0 ni, 99.3 <span class="built_in">id</span>,  0.1 wa,  0.0 hi,  0.1 si,  0.0 st</span><br><span class="line">KiB Mem :  1862996 total,  1522624 free,   199512 used,   140860 buff/cache</span><br><span class="line">KiB Swap:  2097148 total,  2097148 free,        0 used.  1513400 avail Mem</span><br><span class="line"></span><br><span class="line">   PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND</span><br><span class="line">     1 root      20   0  128008   6628   4160 S   0.0  0.4   0:01.81 systemd</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><blockquote><p>详情参见 <a href="https://linux.cmsblogs.cn/c/top.html#%E9%80%89%E9%A1%B9">top参数</a></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">-b：以批处理模式操作；</span><br><span class="line">-c：显示完整的治命令；</span><br><span class="line">-d：屏幕刷新间隔时间；</span><br><span class="line">-I：忽略失效过程；</span><br><span class="line">-s：保密模式；</span><br><span class="line">-S：累积模式；</span><br><span class="line">-i&lt;时间&gt;：设置间隔时间；</span><br><span class="line">-u&lt;用户名&gt;：指定用户名；</span><br><span class="line">-p&lt;进程号&gt;：指定进程；</span><br><span class="line">-n&lt;次数&gt;：循环显示的次数。</span><br></pre></td></tr></table></figure><h1 id="nohup后台运行"><a href="#nohup后台运行" class="headerlink" title="nohup后台运行"></a>nohup后台运行</h1><blockquote><p>nohup命令，希望程序在后台运行，输出的结果不打印到终端，不占用终端，不影响其它操作进行。</p></blockquote><p>无论是否将nohup命令的输出定向到终端，nohup命令执行的输出结果<code>都会</code>写入<code>当前目录</code>的<code>nohup.out</code>文件。</p><p>若当前目录<code>nohup.out</code>文件被<code>禁止写入</code>，nohup命令结果会自动输出到<code>$HOME/nohup.out</code>文件。</p><h2 id="nohup实践"><a href="#nohup实践" class="headerlink" title="nohup实践"></a>nohup实践</h2><blockquote><p>以<code>ping baidu.com</code>为例</p></blockquote><h3 id="用法一"><a href="#用法一" class="headerlink" title="用法一"></a>用法一</h3><blockquote><p>输入nohup执行后需要重新开启会谈才能执行其它操作，一般不会这么用哈</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> &lt;<span class="built_in">command</span>&gt;</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ping baidu.com</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nohup ping baidu.com</span></span><br><span class="line"><span class="built_in">nohup</span>: 忽略输入并把输出追加到<span class="string">&quot;nohup.out&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>虽然能够实现后台运行，但这么使用并不方便，执行完后还是不能进行其它操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps aux |grep ping</span></span><br><span class="line">root      39133  0.0  0.1 150088  2008 pts/0    S+   10:57   0:00 ping baidu.com</span><br><span class="line">root      50300  0.0  0.1 150088  2008 pts/1    S    11:27   0:00 ping baidu.com</span><br><span class="line">您在 /var/spool/mail/root 中有新邮件</span><br></pre></td></tr></table></figure><h3 id="用法二"><a href="#用法二" class="headerlink" title="用法二"></a>用法二</h3><blockquote><p>不需要退出当前会谈以执行其它操作</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> &lt;<span class="built_in">command</span>&gt; &amp;</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ping baidu.com &amp;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nohup ping baidu.com &amp;</span></span><br><span class="line">[1] 50300</span><br><span class="line">您在 /var/spool/mail/root 中有新邮件</span><br><span class="line">[root@localhost ~]<span class="comment"># nohup: 忽略输入并把输出追加到&quot;nohup.out&quot;</span></span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>回车一下</code>，我们可以进行其它操作，并且<code>ping命令</code>在后台正常执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps aux |grep ping</span></span><br><span class="line">root      39133  0.0  0.1 150088  2008 pts/0    S+   10:57   0:00 ping baidu.com</span><br><span class="line">root      50300  0.0  0.1 150088  2008 pts/1    S    11:27   0:00 ping baidu.com</span><br><span class="line">root      50712  0.0  0.0 112824   988 pts/1    S+   11:28   0:00 grep --color=auto ping</span><br><span class="line">您在 /var/spool/mail/root 中有新邮件</span><br></pre></td></tr></table></figure><h3 id="用法三"><a href="#用法三" class="headerlink" title="用法三"></a>用法三</h3><blockquote><p>不显示命令执行结果，并重定向到<code>黑洞文件</code></p></blockquote><p><strong>这里补充一些关于黑洞文件的知识</strong></p><p>请参阅Tinywan大佬的文章：</p><p><a href="https://www.cnblogs.com/tinywan/p/6025468.html">Shell脚本———— &#x2F;dev&#x2F;null 2&gt;&amp;1详解</a></p><ul><li>1 为标准错误输出（第一个尖括号一般可以省略不写1）</li><li>2 为标准输出</li><li>&amp;1 表示与处理1的方式相同来处理2</li></ul><hr><h4 id="重新定向输出结果到指定文件"><a href="#重新定向输出结果到指定文件" class="headerlink" title="重新定向输出结果到指定文件"></a>重新定向输出结果到指定文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> &lt;<span class="built_in">command</span>&gt; 1&gt; targetfile 2&gt; targetfile &amp;</span><br><span class="line"><span class="comment">#简写</span></span><br><span class="line"><span class="built_in">nohup</span> &lt;<span class="built_in">command</span>&gt; &gt; targetfile 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nohup ping baidu.com &gt; targetfile 2&gt;&amp;1 &amp;</span></span><br><span class="line">[4] 73284</span><br><span class="line">[root@localhost ~]<span class="comment"># nohup ping baidu.com 1&gt; targetfile 2&gt; targetfile &amp;</span></span><br><span class="line">[5] 73375</span><br></pre></td></tr></table></figure><p>我们可以在<code>targetfile</code>中看到输出结果。</p><h4 id="完全不保留结果的写法"><a href="#完全不保留结果的写法" class="headerlink" title="完全不保留结果的写法"></a>完全不保留结果的写法</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> &lt;<span class="built_in">command</span>&gt; 1&gt;/dev/null 2&gt;/dev/null &amp;</span><br><span class="line"><span class="comment">#简写</span></span><br><span class="line"><span class="built_in">nohup</span> &lt;<span class="built_in">command</span>&gt; &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line"><span class="comment">#最简</span></span><br><span class="line"><span class="built_in">nohup</span> &lt;<span class="built_in">command</span>&gt; &amp;&gt;/dev/null</span><br></pre></td></tr></table></figure><p>执行演示</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># nohup ping baidu.com 1&gt;/dev/null 2&gt;/dev/null &amp;</span></span><br><span class="line">[2] 58900</span><br><span class="line">您在 /var/spool/mail/root 中有新邮件</span><br><span class="line">[root@localhost ~]<span class="comment"># nohup ping baidu.com 1&gt;/dev/null 2&gt;&amp;1 &amp;</span></span><br><span class="line">[3] 59489</span><br><span class="line">您在 /var/spool/mail/root 中有新邮件</span><br></pre></td></tr></table></figure><p>我们发现执行后，会返回一个PID:<code>58900</code></p><p><code>59489</code></p><h1 id="bg后台运行"><a href="#bg后台运行" class="headerlink" title="bg后台运行"></a>bg后台运行</h1><blockquote><p>类似<code>nohup</code>命令</p><p>将进程放入后台运行，使得前台运行其它命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">bg</span>命令等同与 &lt;<span class="built_in">command</span>&gt; &amp;</span><br></pre></td></tr></table></figure><hr><p>回顾一下，快捷键的作用</p><p>CTRL+Z</p><hr><p>我们输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping baidu.com</span><br></pre></td></tr></table></figure><p>然后执行快捷键</p><h2 id="jobs命令"><a href="#jobs命令" class="headerlink" title="jobs命令"></a><a href="https://linux.cmsblogs.cn/c/jobs.html">jobs命令</a></h2><blockquote><p>可以检查暂停放入后台的进程</p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">jobs</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># jobs</span></span><br><span class="line">[6]+  已停止               ping baidu.com</span><br></pre></td></tr></table></figure><h2 id="fg命令"><a href="#fg命令" class="headerlink" title="fg命令"></a><a href="https://linux.cmsblogs.cn/c/fg.html">fg命令</a></h2><blockquote><p>将后台作业移动到前台终端运行</p></blockquote><ul><li>用于将后台作业（在后台运行的或者在后台挂起的作业）放到前台终端运行。</li><li>若后台任务中只有一个，则使用该命令时可以省略任务号。</li></ul><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">fg</span> [job_spec ...]</span><br></pre></td></tr></table></figure><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><p>job_spec（可选）：指定要移动到前台执行的作业标识符，可以是一到多个。</p><h3 id="执行演示"><a href="#执行演示" class="headerlink" title="执行演示"></a>执行演示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># jobs</span></span><br><span class="line">[6]+  已停止               ping baidu.com</span><br><span class="line">[root@localhost ~]<span class="comment"># fg 6</span></span><br><span class="line">ping baidu.com</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=2 ttl=128 time=49.3 ms</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=3 ttl=128 time=48.4 ms</span><br></pre></td></tr></table></figure><h2 id="bg命令"><a href="#bg命令" class="headerlink" title="bg命令"></a><a href="https://linux.cmsblogs.cn/c/bg.html">bg命令</a></h2><blockquote><p>将前台终端作业移动到后台运行，<strong>但是输出的结果会在前台打印，不影响其它操作</strong></p></blockquote><ul><li>用于将作业放到后台运行，使前台可以执行其他任务。该命令的运行效果与在指令后面添加符号<code>&amp;</code>的效果是相同的，都是将其放到系统后台执行。</li><li>若后台任务中只有一个，则使用该命令时可以省略任务号。</li></ul><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bg [job_spec ...]</span><br></pre></td></tr></table></figure><h3 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h3><p>job_spec（可选）：指定要移动到后台执行的作业标识符，可以是一到多个。</p><h3 id="执行演示-1"><a href="#执行演示-1" class="headerlink" title="执行演示"></a>执行演示</h3><blockquote><p>可以使用fg命令将进程移到前台再ctrl+z暂停</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ping baidu.com</span></span><br><span class="line">PING baidu.com (110.242.68.66) 56(84) bytes of data.</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=1 ttl=128 time=48.8 ms</span><br><span class="line"><span class="built_in">bg</span> 1</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=6 ttl=128 time=48.2 ms</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=7 ttl=128 time=48.2 ms</span><br><span class="line">^Z</span><br><span class="line">[2]+  已停止               ping baidu.com</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h1 id="linux系统运行级别"><a href="#linux系统运行级别" class="headerlink" title="linux系统运行级别"></a>linux系统运行级别</h1><h2 id="常见级别"><a href="#常见级别" class="headerlink" title="常见级别"></a>常见级别</h2><ul><li>0 关机</li><li>1 单用户模式</li><li>2 多用户模式，无网络模式</li><li>3 完全多用户模式，有网模式</li><li>4 用户自定义级别</li><li>5 图形化界面多用户模式</li><li>6 重启机器</li></ul><h2 id="查看当前系统运行级别"><a href="#查看当前系统运行级别" class="headerlink" title="查看当前系统运行级别"></a>查看当前系统运行级别</h2><h3 id="runlevel命令"><a href="#runlevel命令" class="headerlink" title="runlevel命令"></a><a href="https://linux.cmsblogs.cn/c/runlevel.html">runlevel命令</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># runlevel</span></span><br><span class="line">N 3</span><br></pre></td></tr></table></figure><h3 id="查看-var-run-utmp文件"><a href="#查看-var-run-utmp文件" class="headerlink" title="查看/var/run/utmp文件"></a>查看<code>/var/run/utmp</code>文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /var/run/utmp</span></span><br><span class="line">3~~~runlevel3.10.0-1160.71.1.el7.x86_64▒n▒b�▒tty1tty1LOGIN▒▒n▒bڰ(pts/0ts/0root192.168.41.1▒n▒b▒▒▒o▒pts/1ts/1▒▒▒b]▒)</span><br></pre></td></tr></table></figure><h2 id="init命令"><a href="#init命令" class="headerlink" title="init命令"></a><a href="https://linux.cmsblogs.cn/c/init.html">init命令</a></h2><blockquote><p>init进程是所有Linux进程的父进程，进程号为1。</p><p>init是linux进程的初始化工具。</p><p>init命令是Linux操作系统中不可缺少的程序之一，init进程是Linux内核引导运行的，是系统中的第一个进程</p></blockquote><h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>可以使用init加上级别，直接操作系统运行级别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">init 6 <span class="comment">#直接重启机器了</span></span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# init 6</span><br><span class="line"></span><br><span class="line">Remote side unexpectedly closed network connection</span><br><span class="line"></span><br><span class="line">qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq</span><br><span class="line"></span><br><span class="line">Session stopped</span><br><span class="line">    - Press &lt;return&gt; to exit tab</span><br><span class="line">    - Press R to restart session</span><br><span class="line">    - Press S to save terminal output to file</span><br></pre></td></tr></table></figure><h1 id="htop命令检测"><a href="#htop命令检测" class="headerlink" title="htop命令检测"></a><a href="https://linux.cmsblogs.cn/c/htop.html">htop命令检测</a></h1><blockquote><p>相当于linux的任务管理器，<code>非内部命令</code>，需要另外安装。</p></blockquote><p>与top的区别就是，它更好看xD</p><h2 id="安装htop"><a href="#安装htop" class="headerlink" title="安装htop"></a>安装htop</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install htop -y</span><br></pre></td></tr></table></figure><h2 id="使用htop"><a href="#使用htop" class="headerlink" title="使用htop"></a>使用htop</h2><h3 id="进入htop"><a href="#进入htop" class="headerlink" title="进入htop"></a>进入htop</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">htop</span><br></pre></td></tr></table></figure><h3 id="设置界面"><a href="#设置界面" class="headerlink" title="设置界面"></a>设置界面</h3><blockquote><p>F2</p></blockquote><p>可以使用上下左右小键盘，空格回车进行操作。</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220805133333609.png" alt="image-20220805133333609"></p><h3 id="进程查找"><a href="#进程查找" class="headerlink" title="进程查找"></a>进程查找</h3><blockquote><p>F3</p></blockquote><h3 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h3><blockquote><p>建议结合F3使用，F9杀死，且输入ENTER回车，给进程发送终止信号。</p></blockquote><h3 id="显示层级关系"><a href="#显示层级关系" class="headerlink" title="显示层级关系"></a>显示层级关系</h3><blockquote><p>F5</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20220805133609123.png" alt="image-20220805133609123"></p><h3 id="支持一些快捷键"><a href="#支持一些快捷键" class="headerlink" title="支持一些快捷键"></a>支持一些快捷键</h3><p>输入大写</p><ul><li><code>M</code>，会以<code>MEM%大小</code>排序</li><li><code>P</code> 以<code>CPU</code>使用量排序</li><li><code>T</code> 以<code>进程运行时间</code>排序</li><li><code>/</code>进入<code>搜索模式</code>，查找指定进程</li></ul><p>…</p><h1 id="glances工具"><a href="#glances工具" class="headerlink" title="glances工具"></a><a href="https://zhuanlan.zhihu.com/p/85935725">glances工具</a></h1><blockquote><p>系统资源检测工具，类似top、htop</p></blockquote><p>glances工具由<code>python语言</code>编写，使用<code>psutil模块</code>来采集系统的硬件资源等等。</p><p>glances可以为unix和linux系统提供专家级别的新能检测。</p><ul><li>cpu使用率</li><li>内存使用情况</li><li>内核统计信息</li><li>磁盘io转速</li><li>文件系统的剩余空间</li><li>网络io速度</li><li>缓存空间的使用情况 swap空间</li><li>动态进程信息</li><li>系统负载信息</li><li>…</li></ul><p>glances还能将采集的数据输出到一个文件中，便于数据分析人员对服务器性能报表进行分析以及图标绘制。</p><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><blockquote><p>使用python的安装工具pip</p></blockquote><p>安装python3</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install python3 -y</span><br></pre></td></tr></table></figure><p>安装glances工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install glances</span><br></pre></td></tr></table></figure><blockquote><p>直接使用yum安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install glances -y</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote><p>相关介绍</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20220805135612083.png" alt="image-20220805135612083"></p><h3 id="帮助界面"><a href="#帮助界面" class="headerlink" title="帮助界面"></a>帮助界面</h3><blockquote><p>输入h，进入帮助界面</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Glances 2.5.1 with PSutil 5.6.7</span><br><span class="line"></span><br><span class="line">Configuration file: None</span><br><span class="line"></span><br><span class="line"> a  Sort processes automatically          b  Bytes or bits for network I/O</span><br><span class="line"> c  Sort processes by CPU%                l  Show/hide alert logs</span><br><span class="line"> m  Sort processes by MEM%                w  Delete warning alerts</span><br><span class="line"> u  Sort processes by USER                x  Delete warning and critical alerts</span><br><span class="line"> p  Sort processes by name                1  Global CPU or per-CPU stats</span><br><span class="line"> i  Sort processes by I/O rate            I  Show/hide IP module</span><br><span class="line"> t  Sort processes by TIME                D  Enable/disable Docker stats</span><br><span class="line"> d  Show/hide disk I/O stats              T  View network I/O as combination</span><br><span class="line"> f  Show/hide filesystem stats            U  View cumulative network I/O</span><br><span class="line"> n  Show/hide network stats               F  Show filesystem free space</span><br><span class="line"> s  Show/hide sensors stats               g  Generate graphs for current history</span><br><span class="line"> 2  Show/hide left sidebar                r  Reset history</span><br><span class="line"> z  Enable/disable processes stats        h  Show/hide this help screen</span><br><span class="line"> 3  Enable/disable quick look plugin      q  Quit (Esc and Ctrl-C also work)</span><br><span class="line"> e  Enable/disable top extended stats</span><br><span class="line"> /  Enable/disable short processes name</span><br><span class="line"> 0  Enable/disable Irix process CPU</span><br><span class="line"></span><br><span class="line">ENTER: Edit the process filter pattern</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">h ： 显示帮助信息</span><br><span class="line">q ： 离开程序退出</span><br><span class="line">c ：按照 CPU 实时负载对系统进程进行排序</span><br><span class="line">m ：按照内存使用状况对系统进程排序</span><br><span class="line">i：按照 I/O 使用状况对系统进程排序</span><br><span class="line">p： 按照进程名称排序</span><br><span class="line">d ： 显示磁盘读写状况 </span><br><span class="line">w ： 删除日志文件</span><br><span class="line">l ：显示日志</span><br><span class="line">s： 显示传感器信息</span><br><span class="line">f ： 显示系统信息</span><br><span class="line">1 ：轮流显示每个 CPU 内核的使用情况（次选项仅仅使用在多核 CPU 系统）</span><br></pre></td></tr></table></figure><h2 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h2><blockquote><p>glances 是一个命令行工具包括如下命令选项</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-b：显示网络连接速度 Byte/ 秒</span><br><span class="line">-B @IP|host ：绑定服务器端 IP 地址或者主机名称</span><br><span class="line">-c @IP|host：连接 glances 服务器端</span><br><span class="line">-C file：设置配置文件默认是 /etc/glances/glances.conf </span><br><span class="line">-d：关闭磁盘 I/O 模块</span><br><span class="line">-e：显示传感器温度</span><br><span class="line">-f file：设置输出文件（格式是 HTML 或者 CSV）</span><br><span class="line">-m：关闭挂载的磁盘模块</span><br><span class="line">-n：关闭网络模块</span><br><span class="line">-p PORT：设置运行端口默认是 61209 </span><br><span class="line">-P password：设置客户端 / 服务器密码</span><br><span class="line">-s：设置 glances 运行模式为服务器</span><br><span class="line">-t sec：设置屏幕刷新的时间间隔，单位为秒，默认值为 2 秒，数值许可范围：1~32767 </span><br><span class="line">-h : 显示帮助信息</span><br><span class="line">-v : 显示版本信息</span><br></pre></td></tr></table></figure><h2 id="glances开启web服务功能"><a href="#glances开启web服务功能" class="headerlink" title="glances开启web服务功能"></a>glances开启web服务功能</h2><blockquote><p>安装相关web工具包</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install bottle</span><br></pre></td></tr></table></figure><blockquote><p>启动服务（注意关闭防火墙或者开放61208端口，不然网页打不开）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># glances -w</span></span><br><span class="line">Glances web server started on http://0.0.0.0:61208/</span><br></pre></td></tr></table></figure><p>其中的<code>0.0.0.0</code>表示绑定到机器上的所有网卡上！</p><p><img src="https://lptexas-cub.github.io/img/post/image-20220805142205042.png" alt="image-20220805142205042"></p><h2 id="glances支持C-S模式"><a href="#glances支持C-S模式" class="headerlink" title="glances支持C-S模式"></a>glances支持C-S模式</h2><blockquote><p>一台机器运行服务端，一台机器运行客户端</p></blockquote><p>具体参数请使用<code>man glances</code>查询</p><h3 id="开启服务端"><a href="#开启服务端" class="headerlink" title="开启服务端"></a>开启服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glances -s -B &lt;ip&gt; -p &lt;port&gt;</span><br></pre></td></tr></table></figure><h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">glances -c &lt;ip&gt;:&lt;port&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> 进程管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux进程管理part1</title>
      <link href="/posts/3381118550/"/>
      <url>/posts/3381118550/</url>
      
        <content type="html"><![CDATA[<h1 id="进程和线程？"><a href="#进程和线程？" class="headerlink" title="进程和线程？"></a><a href="https://zhuanlan.zhihu.com/p/403313422">进程和线程？</a></h1><blockquote><p>linux下存在process和thread这两种操作系统基本的概念</p></blockquote><p>process是进程；</p><p>thread是线程。</p><p><a href="https://zhuanlan.zhihu.com/p/403313422">@小牛肉</a>这篇文章介绍的非常清楚~</p><p>以工厂为例：</p><p><code>进程</code>就像是工厂的一个<code>车间</code>，一个工厂可能有多个车间，每个车间代表<code>CPU正在处理的任务</code>，某一时刻，CPU总在运行一个进程，其它进程处于非运行状态。</p><p>车间内要想完成任务，必须得有很多个<code>工人</code>，多个工人协同完成某个任务，每个工人就像系统进程中的工作<code>线程</code>。</p><p><code>车间</code>内是有一定<code>空间</code>的，也就是说<code>进程</code>是占<code>内存空间</code>的，而<code>工人</code>们<code>共享</code>车间的空间，工作等等都是在同一个车间中，<code>线程</code>也是如此被<code>共享</code>着。</p><p>车间内有很多<code>小房间</code>，但空间<code>大小各不相同</code>，有的能容下<code>很多工人</code>（某块<code>内存数据</code>可以被<code>多个线程同时使用</code>），有的只能容下<code>一个工人</code>（某块<code>内存数据</code>只能给<code>一个线程使用</code>），好比进程中有一个线程正在使用一块内存数据，其它线程必须等待这个线程处理完毕，其它线程才能够使用。（车间内某个<code>厕所</code>被人占用了，其他人需要在外面等待，空出来才能使用）</p><p>如果出现厕所已经<code>有人在用</code>，<code>另一个人</code>不想等待而去<code>抢夺</code>厕所<code>空间</code>，这时就会产生冲突。（<code>线程1占用</code>内存资源，<code>线程2</code>不等待而去<code>抢夺</code>，出现混乱，造成数据冲突，<code>崩溃</code>！）我们可以通过加锁的方式，让另一个人无法抢夺！（进程1将内存主句加锁！）。</p><p>如上的锁就是<code>互斥锁</code>的概念（mutex），用于防止线程对内存数据抢夺，防止多个线程同时读写。</p><hr><p>多进程：工厂内，多个车间在工作。</p><p>多线程：车间内，多个工人在工作。</p><p>单线程：车间内，一个工人在干活。</p><h1 id="linux进程管理"><a href="#linux进程管理" class="headerlink" title="linux进程管理"></a>linux进程管理</h1><h2 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a><a href="https://linux.cmsblogs.cn/c/ps.html">ps命令</a></h2><blockquote><p>用于报告当前系统进程状态的命令</p></blockquote><p>ps命令主要用于查询进程信息，主要和kill命令搭配，进行对进程的管理和杀死。</p><ol><li><p>使用ps找出进程号</p></li><li><p>kill+进程号杀死进程</p></li><li><p>重启进程</p></li></ol><p>ps命令可以查询哪些进程正在进行，以及哪些进程已经停止，以及错误的进程（没有正确停止的进程），以及查看进程使用的资源情况。</p><p><strong>我们常常结合<code>grep</code>命令用来过滤我们想要的结果！</strong></p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps [option] [object]</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><blockquote><p>ps的参数有两种类型</p></blockquote><p>第一种<code>带-</code>的参数，第二种<code>不带-</code>的参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-e：列出所有进程的环境变量，所有信息。</span><br><span class="line">e：列出程序时，显示每个程序所使用的环境变量。</span><br><span class="line">-f：显示UID,PPIP,C与STIME栏位。</span><br><span class="line">f：用ASCII字符显示树状结构，表达程序间的相互关系。</span><br><span class="line">-a：显示所有终端机下执行的程序，除了阶段作业领导者之外。</span><br><span class="line">a：显示现行终端机下的所有程序，包括其他用户的程序。</span><br><span class="line">-u：&lt;用户识别码&gt;：此选项的效果和指定<span class="string">&quot;-U&quot;</span>选项相同。</span><br><span class="line">u：以用户为主的格式来显示程序状况。</span><br><span class="line">x：显示所有程序，不以终端机来区分。</span><br></pre></td></tr></table></figure><h3 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps</span></span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line">  1859 pts/0    00:00:00 bash</span><br><span class="line">  1993 pts/0    00:00:00 ps</span><br></pre></td></tr></table></figure><p>PID ，代表进程对应的id号码；</p><p>CMD，正在执行的系统命令行；</p><p>TTY，表示进程所属的控制台号码；</p><p>TIME，表示进程所使用的的CPU总时间。</p><h3 id="ps组合命令"><a href="#ps组合命令" class="headerlink" title="ps组合命令"></a>ps组合命令</h3><blockquote><p>常用的组合命令，常常与<code>grep</code>结合使用</p></blockquote><h4 id="ps-ef"><a href="#ps-ef" class="headerlink" title="ps -ef"></a>ps -ef</h4><blockquote><p>显示机器所有详细的进程信息</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -ef</span></span><br><span class="line">UID         PID   PPID  C STIME TTY          TIME CMD</span><br><span class="line">root          1      0  0 13:49 ?        00:00:01 /usr/lib/systemd/systemd --switched-root --</span><br><span class="line">root          2      0  0 13:49 ?        00:00:00 [kthreadd]</span><br><span class="line">root          4      2  0 13:49 ?        00:00:00 [kworker/0:0H]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>UID，表示实行该命令的用户；</p><p>PID，进程的标识号，用于启停进程；</p><p>PPID，进程的父进程标识号；</p><p>C，表示CPU使用的资源百分比；</p><p>STIME，表示进程是在那个终端上执行的；</p><p>TIME，表示该进程所使用的CPU总时长；</p><p>CMD，正在执行的系统命令行。</p><h4 id="ps-aux"><a href="#ps-aux" class="headerlink" title="ps aux"></a>ps aux</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~ $ ps aux</span><br><span class="line">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND</span><br><span class="line">u0_a194   9024  0.0  0.0  15112  2076 ?        S&lt;s   1970   0:00 sshd</span><br></pre></td></tr></table></figure><p>%CPU，表示CPU使用情况百分比；</p><p>%MEN，表示内存使用进程百分比；</p><p>VSZ，该进程使用的swap内存单位；</p><p>RSS，表示进程所占用的内存量；</p><p>STAT，表示进程此时的状态</p><ul><li>S：表示终端睡眠中，可以被唤醒；</li><li>s：进程含有子进程；</li><li>R：进程正在运行中；</li><li>D：进程不可中断的睡眠；</li><li>T：表示进程已终止</li><li>Z：进程为僵尸进程，即该进程父进程异常；</li><li>+：前台进程</li><li>N：低优先级进程</li><li>&lt;：高优先级进程</li><li>L：该进程已被锁定</li></ul><h4 id="ps-u"><a href="#ps-u" class="headerlink" title="ps -u"></a>ps -u</h4><blockquote><p>显示指定用户的进程</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -u &lt;usr&gt;</span><br></pre></td></tr></table></figure><p>执行演示</p><blockquote><p>创建一个新用户，执行vi命令，开启另一个会谈并输出新用户的进程</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># useradd usr0</span></span><br><span class="line">[root@localhost ~]<span class="comment"># su - usr0</span></span><br><span class="line">[usr0@localhost lappland]$ vi 1.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -u usr0</span></span><br><span class="line">   PID TTY          TIME CMD</span><br><span class="line"> 14784 pts/0    00:00:00 bash</span><br><span class="line"> 14830 pts/0    00:00:00 vim</span><br></pre></td></tr></table></figure><h4 id="ps-eH"><a href="#ps-eH" class="headerlink" title="ps -eH"></a>ps -eH</h4><blockquote><p>显示父进程，子进程目录结构信息</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -eH</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -eH</span></span><br><span class="line">...</span><br><span class="line">14873 ?        00:00:00     sshd</span><br><span class="line"> 14892 pts/1    00:00:00       bash</span><br><span class="line"> 15898 pts/1    00:00:00         bash</span><br><span class="line"> 15933 pts/1    00:00:00           ps</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure><h4 id="ps-eo"><a href="#ps-eo" class="headerlink" title="ps -eo"></a>ps -eo</h4><blockquote><p>自定义进程查看的格式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pid args psr 等等</span><br></pre></td></tr></table></figure><p>只查看pid和执行的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -eo pid,cmd</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ps -eo pid,cmd</span></span><br><span class="line">   PID CMD</span><br><span class="line">     1 /usr/lib/systemd/systemd --switched-root --system --deserialize 22</span><br><span class="line">     2 [kthreadd]</span><br><span class="line">     4 [kworker/0:0H]</span><br><span class="line">     6 [ksoftirqd/0]</span><br><span class="line">     7 [migration/0]</span><br><span class="line">     8 [rcu_bh]</span><br></pre></td></tr></table></figure><h2 id="pstree命令"><a href="#pstree命令" class="headerlink" title="pstree命令"></a><a href="https://linux.cmsblogs.cn/c/pstree.html">pstree命令</a></h2><blockquote><p>查看进程树</p></blockquote><p>首次运行可能需要安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install psmisc -y</span><br></pre></td></tr></table></figure><hr><p><a href="https://lptexas.top/posts/188891481/#pstree%E6%A3%80%E6%9F%A5%E8%BF%9B%E7%A8%8B%E6%A0%91">pstree可以结合之前的shell编程来了解</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># pstree    </span></span><br><span class="line">...</span><br><span class="line">├─sshd─┬─sshd───bash───bash───pstree</span><br><span class="line">        │      ├─sshd───sftp-server</span><br><span class="line">        │      └─sshd───bash───<span class="built_in">sleep</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h2 id="pgrep命令"><a href="#pgrep命令" class="headerlink" title="pgrep命令"></a><a href="https://linux.cmsblogs.cn/c/pgrep.html">pgrep命令</a></h2><blockquote><p>过滤程序名字查询相关进程，一般用判断程序是否存活</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pgrep &lt;程序名&gt;</span><br></pre></td></tr></table></figure><p>案例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pgrep ssh</span><br><span class="line">pgrep ssh -l <span class="comment">#显示进程名和id号</span></span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># pgrep ssh</span></span><br><span class="line">1038</span><br><span class="line">14873</span><br><span class="line">14877</span><br><span class="line">15849</span><br><span class="line">[root@localhost ~]<span class="comment"># pgrep ssh -l</span></span><br><span class="line">1038 sshd</span><br><span class="line">14873 sshd</span><br><span class="line">14877 sshd</span><br><span class="line">15849 sshd</span><br></pre></td></tr></table></figure><h2 id="kill命令"><a href="#kill命令" class="headerlink" title="kill命令"></a><a href="https://linux.cmsblogs.cn/c/kill.html">kill命令</a></h2><blockquote><p>发送相关信号给进程，达到不同的停止效果。</p></blockquote><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-l：列出信号名称。如果在该选项后提供了数字那么假设它是信号名称对应的数字。</span><br></pre></td></tr></table></figure><h3 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有信号名称：</span></span><br><span class="line">[user2@pc] <span class="built_in">kill</span> -l</span><br><span class="line"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL</span><br><span class="line"> 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE</span><br><span class="line"> 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2</span><br><span class="line">13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT</span><br><span class="line">17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class="line">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU</span><br><span class="line">25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH</span><br><span class="line">29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN</span><br><span class="line">35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4</span><br><span class="line">39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class="line">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12</span><br><span class="line">47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14</span><br><span class="line">51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10</span><br><span class="line">55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6</span><br><span class="line">59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class="line">63) SIGRTMAX-1  64) SIGRTMAX</span><br></pre></td></tr></table></figure><h4 id="常用信号"><a href="#常用信号" class="headerlink" title="常用信号"></a>常用信号</h4><p>只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">HUP     1    终端挂断</span><br><span class="line">INT     2    中断（同 Ctrl + C）</span><br><span class="line">QUIT    3    退出（同 Ctrl + \）</span><br><span class="line">KILL    9    强制终止</span><br><span class="line">TERM   15    终止</span><br><span class="line">CONT   18    继续（与STOP相反，fg/bg命令）</span><br><span class="line">STOP   19    暂停（同 Ctrl + Z）</span><br></pre></td></tr></table></figure><h3 id="信号使用实例"><a href="#信号使用实例" class="headerlink" title="信号使用实例"></a>信号使用实例</h3><h4 id="终止进程（发送15信号）"><a href="#终止进程（发送15信号）" class="headerlink" title="终止进程（发送15信号）"></a>终止进程（发送15信号）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span>  &lt;pid&gt;</span><br><span class="line"><span class="built_in">kill</span> -15 &lt;pid&gt;</span><br></pre></td></tr></table></figure><h5 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h5><blockquote><p><code>usr0</code>用户运行&#96;&#96;vi 1.txt&#96;进程</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20220804154414240.png" alt="image-20220804154414240"></p><p><img src="https://lptexas-cub.github.io/img/post/image-20220804154558590.png" alt="image-20220804154558590"></p><h4 id="立即停止进程"><a href="#立即停止进程" class="headerlink" title="立即停止进程"></a>立即停止进程</h4><blockquote><p>危险命令，可以杀死所有进程，如僵尸进程</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 &lt;pid&gt;</span><br></pre></td></tr></table></figure><h4 id="检查进程情况"><a href="#检查进程情况" class="headerlink" title="检查进程情况"></a>检查进程情况</h4><blockquote><p>0信号，常用在脚本中，如果进程正常则正常返回<code>$?</code>值为0，否则为1</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -0 &lt;pid&gt;</span><br></pre></td></tr></table></figure><h5 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h5><blockquote><p><code>usr0</code>执行<code>ping命令</code>，使用0信号检查</p></blockquote><p><img src="https://lptexas-cub.github.io/img/post/image-20220804155304846.png" alt="image-20220804155304846"></p><h2 id="killall命令"><a href="#killall命令" class="headerlink" title="killall命令"></a><a href="https://linux.cmsblogs.cn/c/killall.html">killall命令</a></h2><blockquote><p>使用进程的名称来杀死一组进程</p></blockquote><h2 id="pkill命令"><a href="#pkill命令" class="headerlink" title="pkill命令"></a><a href="https://linux.cmsblogs.cn/c/pkill.html">pkill命令</a></h2><blockquote><p>可以按照进程名杀死进程</p></blockquote><p>killall不能删除子进程而pkill可以（killall需要杀死多次才可以）。</p><h3 id="pkill-t-lt-tty-gt"><a href="#pkill-t-lt-tty-gt" class="headerlink" title="pkill -t &lt;tty&gt;"></a>pkill -t &lt;tty&gt;</h3><blockquote><p>通过终端号杀死该终端中的所有进程</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> 进程管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘管理part5</title>
      <link href="/posts/2872410232/"/>
      <url>/posts/2872410232/</url>
      
        <content type="html"><![CDATA[<h1 id="硬raid与软raid"><a href="#硬raid与软raid" class="headerlink" title="硬raid与软raid"></a><a href="https://www.ileiming.com/linux%E6%8A%80%E6%9C%AF/%E7%A1%ACraid%E3%80%81%E8%BD%AFraid%E7%9A%84%E5%8C%BA%E5%88%AB%E8%AF%A6%E8%A7%A3.html#:~:text=%E7%A1%ACRAID%EF%BC%9A%E9%80%9A%E8%BF%87%E7%94%A8%E7%A1%AC%E4%BB%B6%E6%9D%A5%E5%AE%9E%E7%8E%B0RAID%E5%8A%9F%E8%83%BD%E7%9A%84%E5%B0%B1%E6%98%AF%E7%A1%ACRAID%EF%BC%8C%E6%AF%94%E5%A6%82%EF%BC%9A%E5%90%84%E7%A7%8DRAID%E5%8D%A1%EF%BC%8C%E8%BF%98%E6%9C%89%E4%B8%BB%E6%9D%BF%E9%9B%86%E6%88%90%E8%83%BD%E5%A4%9F%E5%81%9A%E7%9A%84RAID%E9%83%BD%E6%98%AF%E7%A1%ACRAID%E3%80%82,%E8%BD%AFRAID%EF%BC%9A%E9%80%9A%E8%BF%87%E7%94%A8%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E6%9D%A5%E5%AE%8C%E6%88%90RAID%E5%8A%9F%E8%83%BD%E7%9A%84%E5%B0%B1%E6%98%AF%E8%BD%AFRAID%EF%BC%8C%E6%AF%94%E5%A6%82%EF%BC%9A%E5%9C%A8Linux%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%B8%8B%EF%BC%8C%E7%94%A83%E5%9D%97%E7%A1%AC%E7%9B%98%E5%81%9A%E7%9A%84RAID5%E3%80%82">硬raid与软raid</a></h1><blockquote><p>磁盘阵列冗余技术</p></blockquote><h2 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h2><p><code>硬RAID</code>：通过用<code>硬件</code>来实现RAID功能的就是硬RAID，比如：各种RAID卡，还有主板集成能够做的RAID都是硬RAID。</p><p><code>软RAID</code>：通过用<code>操作系统</code>来完成RAID功能的就是软RAID，比如：在Linux操作系统下，用3块硬盘做的RAID5。</p><hr><ul><li>软raid会额外消耗cpu资源，造成服务器压力，影响<code>性能</code>；</li><li>硬raid更加<code>稳定</code>且软raid可能造成磁盘发热超量，造成损坏；</li><li>硬raid<code>兼容</code>性更好，软raid兼容性依赖于操作系统，可能出问题；</li><li>软raid<code>安全</code>性不好，当硬盘损坏它不能实现重构，而硬raid可以，且当raid卡损坏，可以通过更换实现不丢失数据。</li></ul><hr><h1 id="软raid搭建"><a href="#软raid搭建" class="headerlink" title="软raid搭建"></a>软raid搭建</h1><blockquote><p>搭建raid10（1+0），4块硬盘。</p></blockquote><h2 id="创建4块虚拟硬盘"><a href="#创建4块虚拟硬盘" class="headerlink" title="创建4块虚拟硬盘"></a>创建4块虚拟硬盘</h2><p><img src="http://lptexas-cub.github.io/img/post/image-20220803154255127.png"></p><h2 id="检查磁盘信息"><a href="#检查磁盘信息" class="headerlink" title="检查磁盘信息"></a>检查磁盘信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><h2 id="搭建raid10"><a href="#搭建raid10" class="headerlink" title="搭建raid10"></a>搭建raid10</h2><blockquote><p>使用mdadm命令，用于建设、管理和监控raid技术的命令</p></blockquote><h3 id="mdadm命令"><a href="#mdadm命令" class="headerlink" title="mdadm命令"></a>mdadm命令</h3><blockquote><p>需要先安装该命令</p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> mdadm -y</span><br></pre></td></tr></table></figure><h3 id="创建raid10"><a href="#创建raid10" class="headerlink" title="创建raid10"></a>创建raid10</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -Cv /dev/md0 -a <span class="built_in">yes</span> -n</span><br></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-C 表示创建Raid阵列</span><br><span class="line">-v 表示显示创建过程</span><br><span class="line">/dev/md0 表示raid阵列的名字</span><br><span class="line">-a <span class="built_in">yes</span> 自动创建阵列设备文件</span><br><span class="line">-n 4 表示用四块硬盘创建阵列</span><br><span class="line">-l 10 表示raid级别</span><br><span class="line">最后加上四块硬盘的名字</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -Cv /dev/md0 -a yes -n 4 -l 10 /dev/sdb /dev/sdc /dev/sdd /dev/sde</span></span><br><span class="line">mdadm: layout defaults to n2</span><br><span class="line">mdadm: layout defaults to n2</span><br><span class="line">mdadm: chunk size defaults to 512K</span><br><span class="line">mdadm: size <span class="built_in">set</span> to 10476544K</span><br><span class="line">mdadm: Defaulting to version 1.2 metadata</span><br><span class="line">mdadm: array /dev/md0 started.</span><br></pre></td></tr></table></figure><h2 id="针对磁盘阵列设备，进行文件系统格式化"><a href="#针对磁盘阵列设备，进行文件系统格式化" class="headerlink" title="针对磁盘阵列设备，进行文件系统格式化"></a>针对磁盘阵列设备，进行文件系统格式化</h2><blockquote><p>格式化&#x2F;dev&#x2F;md0为xfs文件系统</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs /dev/md0</span></span><br><span class="line">meta-data=/dev/md0               isize=512    agcount=16, agsize=327296 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=5236736, imaxpct=25</span><br><span class="line">         =                       sunit=128    swidth=256 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=8 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0d</span><br></pre></td></tr></table></figure><h2 id="针对分区进行挂载"><a href="#针对分区进行挂载" class="headerlink" title="针对分区进行挂载"></a>针对分区进行挂载</h2><blockquote><p>创建挂载文件夹</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /mnt1</span><br></pre></td></tr></table></figure><blockquote><p>挂载</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/md0 /mnt1</span><br></pre></td></tr></table></figure><h2 id="检查挂载情况"><a href="#检查挂载情况" class="headerlink" title="检查挂载情况"></a>检查挂载情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -l</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">/dev/md0 on /mnt1 <span class="built_in">type</span> xfs (rw,relatime,seclabel,attr2,inode64,sunit=1024,swidth=2048,noquota)</span><br></pre></td></tr></table></figure><p>最后显示设备md0已挂载！</p><hr><blockquote><p>使用<code>df命令</code>，检查挂载空间使用情况</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># df -hT</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  899M     0  899M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  2.6G   15G   15% /</span><br><span class="line">/dev/sda1               xfs      1014M  189M  826M   19% /boot</span><br><span class="line">tmpfs                   tmpfs     182M     0  182M    0% /run/user/0</span><br><span class="line">/dev/md0                xfs        20G   33M   20G    1% /mnt1</span><br></pre></td></tr></table></figure><p>为什么<code>size</code>为<code>20G</code>呢?</p><p>查询raid情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -D /dev/md0 </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Wed Aug  3 15:52:10 2022</span><br><span class="line">        Raid Level : raid10</span><br><span class="line">        Array Size : 20953088 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10476544 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Aug  3 17:59:25 2022</span><br><span class="line">             State : clean</span><br><span class="line">    Active Devices : 4</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : near=2</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : localhost.localdomain:0  (<span class="built_in">local</span> to host localhost.localdomain)</span><br><span class="line">              UUID : 9db711f3:9c55a474:2a7846c3:7f74896e</span><br><span class="line">            Events : 19</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0       8       16        0      active <span class="built_in">sync</span> set-A   /dev/sdb</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span> set-B   /dev/sdc</span><br><span class="line">       2       8       48        2      active <span class="built_in">sync</span> set-A   /dev/sdd</span><br><span class="line">       3       8       64        3      active <span class="built_in">sync</span> set-B   /dev/sde</span><br></pre></td></tr></table></figure><p>因为raid10采用了raid0和raid1的技术，raid1技术使用了备份盘，4个盘中一半用作备份。</p><p>检查的方法可以生成多个文件，观察文件大小和占用空间！</p><h2 id="开机自动挂载至-mnt下"><a href="#开机自动挂载至-mnt下" class="headerlink" title="开机自动挂载至/mnt下"></a>开机自动挂载至<code>/mnt</code>下</h2><blockquote><p>编辑<code>/etc/fstab</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># vi /etc/fstab</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># tail -1 /etc/fstab</span></span><br><span class="line">/dev/md0        /mnt    xfs     defaults        0       0</span><br></pre></td></tr></table></figure><h1 id="模拟raid故障"><a href="#模拟raid故障" class="headerlink" title="模拟raid故障"></a>模拟raid故障</h1><blockquote><p>从raid硬盘组中剔除一块硬盘</p></blockquote><h2 id="剔除命令"><a href="#剔除命令" class="headerlink" title="剔除命令"></a>剔除命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm /dev/md0 -f /dev/sdd</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># mdadm /dev/md0 -f /dev/sdd</span></span><br><span class="line">mdadm: <span class="built_in">set</span> /dev/sdd faulty <span class="keyword">in</span> /dev/md0</span><br></pre></td></tr></table></figure><p>检查raid</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -D /dev/md0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Wed Aug  3 15:52:10 2022</span><br><span class="line">        Raid Level : raid10</span><br><span class="line">        Array Size : 20953088 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10476544 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Aug  3 18:28:03 2022</span><br><span class="line">             State : clean, degraded</span><br><span class="line">    Active Devices : 3</span><br><span class="line">   Working Devices : 3</span><br><span class="line">    Failed Devices : 1</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : near=2</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : localhost.localdomain:0  (<span class="built_in">local</span> to host localhost.localdomain)</span><br><span class="line">              UUID : 9db711f3:9c55a474:2a7846c3:7f74896e</span><br><span class="line">            Events : 21</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0       8       16        0      active <span class="built_in">sync</span> set-A   /dev/sdb</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span> set-B   /dev/sdc</span><br><span class="line">       -       0        0        2      removed</span><br><span class="line">       3       8       64        3      active <span class="built_in">sync</span> set-B   /dev/sde</span><br><span class="line"></span><br><span class="line">       2       8       48        -      faulty   /dev/sdd</span><br></pre></td></tr></table></figure><p>我们看到<code>Failded Devices:1</code>正在运行的设备为<code>3</code>个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># cd /mnt</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># ls</span></span><br><span class="line">test1.txt  test2.txt  test3.txt  test4.txt  test5.txt  test6.txt</span><br></pre></td></tr></table></figure><p>我们可以发现，即使挂掉一个硬盘，也不会影响整个raid10的使用</p><h2 id="添加硬盘"><a href="#添加硬盘" class="headerlink" title="添加硬盘"></a>添加硬盘</h2><p>我们再将剔除的硬盘添加回设备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm /dev/md0 -a /dev/sdd</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mdadm /dev/md0 -a /dev/sdd</span></span><br><span class="line">mdadm: Cannot open /dev/sdd: Device or resource busy</span><br></pre></td></tr></table></figure><p>这时报错，需要我们重启机器<code>reboot</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">Last login: Wed Aug  3 18:11:08 2022 from 192.168.41.1</span><br><span class="line">[root@localhost ~]<span class="comment"># mdadm /dev/md0 -a /dev/sdd</span></span><br><span class="line">mdadm: added /dev/sdd</span><br><span class="line">[root@localhost ~]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Wed Aug  3 15:52:10 2022</span><br><span class="line">        Raid Level : raid10</span><br><span class="line">        Array Size : 20953088 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10476544 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Aug  3 18:37:59 2022</span><br><span class="line">             State : clean</span><br><span class="line">    Active Devices : 4</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : near=2</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : localhost.localdomain:0  (<span class="built_in">local</span> to host localhost.localdomain)</span><br><span class="line">              UUID : 9db711f3:9c55a474:2a7846c3:7f74896e</span><br><span class="line">            Events : 44</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0       8       16        0      active <span class="built_in">sync</span> set-A   /dev/sdb</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span> set-B   /dev/sdc</span><br><span class="line">       4       8       48        2      active <span class="built_in">sync</span> set-A   /dev/sdd</span><br><span class="line">       3       8       64        3      active <span class="built_in">sync</span> set-B   /dev/sde</span><br></pre></td></tr></table></figure><p>重启，添加硬盘后等待raid10故障修复完毕。</p><h1 id="raid10的重启"><a href="#raid10的重启" class="headerlink" title="raid10的重启"></a>raid10的重启</h1><h2 id="创建raid配置文件"><a href="#创建raid配置文件" class="headerlink" title="创建raid配置文件"></a>创建raid配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> DEVICE /dev/sd[b-e] &gt; /etc/mdadm.conf</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo DEVICE /dev/sd[b-e] &gt; /etc/mdadm.conf</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/mdadm.conf</span></span><br><span class="line">DEVICE /dev/sdb /dev/sdc /dev/sdd /dev/sde</span><br></pre></td></tr></table></figure><h2 id="扫描磁盘阵列信息，追加到配置文件中"><a href="#扫描磁盘阵列信息，追加到配置文件中" class="headerlink" title="扫描磁盘阵列信息，追加到配置文件中"></a>扫描磁盘阵列信息，追加到配置文件中</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -Ds &gt;&gt; /etc/mdadm.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -Ds &gt;&gt; /etc/mdadm.conf</span></span><br><span class="line">[root@localhost ~]<span class="comment"># cat /etc/mdadm.conf</span></span><br><span class="line">DEVICE /dev/sdb /dev/sdc /dev/sdd /dev/sde</span><br><span class="line">ARRAY /dev/md/0 metadata=1.2 name=localhost.localdomain:0 UUID=9db711f3:9c55a474:2a7846c3:7f74896e</span><br></pre></td></tr></table></figure><h2 id="取消挂载"><a href="#取消挂载" class="headerlink" title="取消挂载"></a>取消挂载</h2><blockquote><p><code>md0</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/md0</span><br></pre></td></tr></table></figure><h2 id="停止raid10"><a href="#停止raid10" class="headerlink" title="停止raid10"></a>停止raid10</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -S /dev/md0</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -S /dev/md0</span></span><br><span class="line">mdadm: stopped /dev/md0</span><br></pre></td></tr></table></figure><h2 id="检查一下磁盘阵列的信息"><a href="#检查一下磁盘阵列的信息" class="headerlink" title="检查一下磁盘阵列的信息"></a>检查一下磁盘阵列的信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -D /dev/md0 </span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">mdadm: cannot open /dev/md0: No such file or directory</span><br></pre></td></tr></table></figure><p>我们发现停止raid后，已经找不到设备文件的了！</p><h2 id="启动raid10"><a href="#启动raid10" class="headerlink" title="启动raid10"></a>启动raid10</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -A /dev/md0</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -A /dev/md0</span></span><br><span class="line">mdadm: /dev/md0 has been started with 4 drives.</span><br></pre></td></tr></table></figure><h2 id="再次检查"><a href="#再次检查" class="headerlink" title="再次检查"></a>再次检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Wed Aug  3 15:52:10 2022</span><br><span class="line">        Raid Level : raid10</span><br><span class="line">        Array Size : 20953088 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10476544 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 4</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Aug  3 18:55:10 2022</span><br><span class="line">             State : clean</span><br><span class="line">    Active Devices : 4</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 0</span><br><span class="line"></span><br><span class="line">            Layout : near=2</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : localhost.localdomain:0  (<span class="built_in">local</span> to host localhost.localdomain)</span><br><span class="line">              UUID : 9db711f3:9c55a474:2a7846c3:7f74896e</span><br><span class="line">            Events : 44</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0       8       16        0      active <span class="built_in">sync</span> set-A   /dev/sdb</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span> set-B   /dev/sdc</span><br><span class="line">       4       8       48        2      active <span class="built_in">sync</span> set-A   /dev/sdd</span><br><span class="line">       3       8       64        3      active <span class="built_in">sync</span> set-B   /dev/sde</span><br></pre></td></tr></table></figure><p>raid10信息正常！</p><h1 id="raid10的删除"><a href="#raid10的删除" class="headerlink" title="raid10的删除"></a>raid10的删除</h1><h2 id="取消挂载-1"><a href="#取消挂载-1" class="headerlink" title="取消挂载"></a>取消挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /dev/md0</span><br></pre></td></tr></table></figure><h2 id="停止raid服务"><a href="#停止raid服务" class="headerlink" title="停止raid服务"></a>停止raid服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -S /dev/md0</span><br></pre></td></tr></table></figure><h2 id="卸载raid10中所有的磁盘信息"><a href="#卸载raid10中所有的磁盘信息" class="headerlink" title="卸载raid10中所有的磁盘信息"></a>卸载raid10中所有的磁盘信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mdadm --misc --zero-superblock /dev/sdb</span><br><span class="line">mdadm --misc --zero-superblock /dev/sdc</span><br><span class="line">mdadm --misc --zero-superblock /dev/sdd</span><br><span class="line">mdadm --misc --zero-superblock /dev/sde</span><br></pre></td></tr></table></figure><h2 id="删除raid配置文件"><a href="#删除raid配置文件" class="headerlink" title="删除raid配置文件"></a>删除raid配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> /etc/mdadm.conf</span><br></pre></td></tr></table></figure><h2 id="清除开机自动挂载"><a href="#清除开机自动挂载" class="headerlink" title="清除开机自动挂载"></a>清除开机自动挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/fstab</span><br><span class="line"><span class="comment">#删除raid相关行，保存</span></span><br></pre></td></tr></table></figure><h1 id="raid与备份盘"><a href="#raid与备份盘" class="headerlink" title="raid与备份盘"></a>raid与备份盘</h1><blockquote><p>使用3个硬盘搭建raid5，剩下的一个搭建备份盘</p></blockquote><h2 id="搭建raid5"><a href="#搭建raid5" class="headerlink" title="搭建raid5"></a>搭建raid5</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -Cv /dev/md0 -n 3 -l 5 -x 1 /dev/sdb /dev/sdc /dev/sdd /dev/sde</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -Cv /dev/md0 -n 3 -l 5 -x 1 /dev/sdb /dev/sdc /dev/sdd /dev/sde</span></span><br><span class="line">mdadm: layout defaults to left-symmetric</span><br><span class="line">mdadm: layout defaults to left-symmetric</span><br><span class="line">mdadm: chunk size defaults to 512K</span><br><span class="line">mdadm: size <span class="built_in">set</span> to 10476544K</span><br><span class="line">mdadm: Defaulting to version 1.2 metadata</span><br><span class="line">mdadm: array /dev/md0 started.</span><br></pre></td></tr></table></figure><h2 id="检查阵列组信息"><a href="#检查阵列组信息" class="headerlink" title="检查阵列组信息"></a>检查阵列组信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -D /dev/md0</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mdadm -D /dev/md0</span></span><br><span class="line">/dev/md0:</span><br><span class="line">           Version : 1.2</span><br><span class="line">     Creation Time : Wed Aug  3 19:28:17 2022</span><br><span class="line">        Raid Level : raid5</span><br><span class="line">        Array Size : 20953088 (19.98 GiB 21.46 GB)</span><br><span class="line">     Used Dev Size : 10476544 (9.99 GiB 10.73 GB)</span><br><span class="line">      Raid Devices : 3</span><br><span class="line">     Total Devices : 4</span><br><span class="line">       Persistence : Superblock is persistent</span><br><span class="line"></span><br><span class="line">       Update Time : Wed Aug  3 19:29:10 2022</span><br><span class="line">             State : clean</span><br><span class="line">    Active Devices : 3</span><br><span class="line">   Working Devices : 4</span><br><span class="line">    Failed Devices : 0</span><br><span class="line">     Spare Devices : 1</span><br><span class="line"></span><br><span class="line">            Layout : left-symmetric</span><br><span class="line">        Chunk Size : 512K</span><br><span class="line"></span><br><span class="line">Consistency Policy : resync</span><br><span class="line"></span><br><span class="line">              Name : localhost.localdomain:0  (<span class="built_in">local</span> to host localhost.localdomain)</span><br><span class="line">              UUID : bd00f14c:fdca48d0:461d34c0:f2eca4a3</span><br><span class="line">            Events : 18</span><br><span class="line"></span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       0       8       16        0      active <span class="built_in">sync</span>   /dev/sdb</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span>   /dev/sdc</span><br><span class="line">       4       8       48        2      active <span class="built_in">sync</span>   /dev/sdd</span><br><span class="line"></span><br><span class="line">       3       8       64        -      spare   /dev/sde</span><br></pre></td></tr></table></figure><h2 id="针对阵列组进行格式化文件系统"><a href="#针对阵列组进行格式化文件系统" class="headerlink" title="针对阵列组进行格式化文件系统"></a>针对阵列组进行格式化文件系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/md0</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs /dev/md0</span></span><br><span class="line">mkfs.xfs: /dev/md0 appears to contain an existing filesystem (xfs).</span><br><span class="line">mkfs.xfs: Use the -f option to force overwrite.</span><br><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs /dev/md0 -f</span></span><br><span class="line">meta-data=/dev/md0               isize=512    agcount=16, agsize=327296 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=5236736, imaxpct=25</span><br><span class="line">         =                       sunit=128    swidth=256 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=8 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /mnt</span><br></pre></td></tr></table></figure><h2 id="写入数据文件检查raid状况"><a href="#写入数据文件检查raid状况" class="headerlink" title="写入数据文件检查raid状况"></a>写入数据文件检查raid状况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt</span><br><span class="line"><span class="built_in">echo</span> &#123;1..1000000&#125; &gt; test1.txt</span><br><span class="line"><span class="built_in">echo</span> &#123;1..1000000&#125; &gt;&gt; test1.txt</span><br><span class="line"><span class="built_in">echo</span> &#123;1..1000000&#125; &gt;&gt; test1.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test2.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test3.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test4.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test5.txt</span><br></pre></td></tr></table></figure><p>检查</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># du -h</span></span><br><span class="line">110M    .</span><br><span class="line">[root@localhost mnt]<span class="comment"># df -hT</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  899M     0  899M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  2.6G   15G   15% /</span><br><span class="line">/dev/sda1               xfs      1014M  189M  826M   19% /boot</span><br><span class="line">tmpfs                   tmpfs     182M     0  182M    0% /run/user/0</span><br><span class="line">/dev/md0                xfs        20G  143M   20G    1% /mnt</span><br></pre></td></tr></table></figure><h2 id="备份磁盘的作用体现"><a href="#备份磁盘的作用体现" class="headerlink" title="备份磁盘的作用体现"></a>备份磁盘的作用体现</h2><blockquote><p>我们从第一次检查阵列信息可知，sde为备份盘</p></blockquote><h3 id="剔除一块磁盘sdb"><a href="#剔除一块磁盘sdb" class="headerlink" title="剔除一块磁盘sdb"></a>剔除一块磁盘sdb</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm /dev/md0 -f /dev/sdb</span><br></pre></td></tr></table></figure><h3 id="检查raid状态"><a href="#检查raid状态" class="headerlink" title="检查raid状态"></a>检查raid状态</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mdadm -D /dev/md0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"> Rebuild Status : 72% complete</span><br><span class="line">...</span><br><span class="line">    Number   Major   Minor   RaidDevice State</span><br><span class="line">       3       8       64        0      spare rebuilding   /dev/sde</span><br><span class="line">       1       8       32        1      active <span class="built_in">sync</span>   /dev/sdc</span><br><span class="line">       4       8       48        2      active <span class="built_in">sync</span>   /dev/sdd</span><br><span class="line"></span><br><span class="line">       0       8       16        -      faulty   /dev/sdb</span><br></pre></td></tr></table></figure><blockquote><p>Rebuild Status : n% complete</p></blockquote><p>备份盘自动加入阵列组</p><hr><h1 id="lvm逻辑卷技术"><a href="#lvm逻辑卷技术" class="headerlink" title="lvm逻辑卷技术"></a>lvm逻辑卷技术</h1><blockquote><p>raid磁盘阵列技术，提高磁盘读写效率以及数据安全；</p></blockquote><h3 id="raid的缺点"><a href="#raid的缺点" class="headerlink" title="raid的缺点"></a>raid的缺点</h3><p>当配置好raid后，<code>容量大小被限定</code>，如果存储服务非常多，就会出现磁盘空间不够用需要<code>扩容</code>，这将会非常<code>麻烦</code>！不同磁盘分区相对独立没有任何联系，可能<code>空间利用率低</code>。</p><p>如果某个分区满了，默认磁盘管理<code>无法直接扩容</code>，只能重新分区，分配容量大小，创建文件系统，非常麻烦！</p><p>如果需要<code>合并分区</code>，还是需要<code>重新格式化分区</code>，还需要进行数据备份。</p><h2 id="LVM技术"><a href="#LVM技术" class="headerlink" title="LVM技术"></a>LVM技术</h2><blockquote><p>logical volume manager 逻辑卷管理技术</p></blockquote><p>lvm技术是一个或多个磁盘在逻辑上进行合并，相当于用一个大的磁盘去使用。</p><p>当磁盘空间不足，可以直接去其他磁盘拿取空间。</p><p><img src="http://lptexas-cub.github.io/img/post/image-20220803201152709.png" alt="image-20220803201152709"></p><h3 id="lvm优点"><a href="#lvm优点" class="headerlink" title="lvm优点"></a>lvm优点</h3><p>文件系统可以跨越多个磁盘，分区大小不受容量限制；</p><p>可以在系统运行中，直接动态扩容文件系统大小；</p><p>可以直接增加新的硬盘，到vg卷组中。</p><h2 id="lvm使用方式"><a href="#lvm使用方式" class="headerlink" title="lvm使用方式"></a><a href="https://www.cnblogs.com/zhaojiedi1992/p/zhaojiedi_linux_042_lvm.html">lvm使用方式</a></h2><blockquote><p>基于分区形式创建lvm</p></blockquote><p>硬盘多个分区，由lvm统一进行管理为卷组，可以弹性调整卷组大小，加入新硬盘，可以充分的利用磁盘容量；</p><p>文件系统是创建在逻辑卷上，逻辑卷可以根据需求改变大小（总容量控制在卷组中）。</p><blockquote><p>基于硬盘创建lvm</p></blockquote><p>多块硬盘做成逻辑卷，将整个逻辑卷统一管理，对分区进行动态扩容。</p><h2 id="lvm常见名词"><a href="#lvm常见名词" class="headerlink" title="lvm常见名词"></a>lvm常见名词</h2><h3 id="PP（physical-partition）物理分区"><a href="#PP（physical-partition）物理分区" class="headerlink" title="PP（physical partition）物理分区"></a>PP（physical partition）物理分区</h3><p>lvm直接创建在物理分区之上</p><h3 id="PV（physical-volume）物理卷"><a href="#PV（physical-volume）物理卷" class="headerlink" title="PV（physical volume）物理卷"></a>PV（physical volume）物理卷</h3><p>处于lvm最底层，一般一个pv对应一个pp。</p><h3 id="PE（physical-extends）物理区域"><a href="#PE（physical-extends）物理区域" class="headerlink" title="PE（physical extends）物理区域"></a>PE（physical extends）物理区域</h3><p>pv中可以用于分配的最小存储单位，同一个vg所有的pv中的pe大小相同，例如：1M，2M。</p><h3 id="VG（volume-group）卷组"><a href="#VG（volume-group）卷组" class="headerlink" title="VG（volume group）卷组"></a>VG（volume group）卷组</h3><p>卷组创建在pv之上，可以划分多个pv</p><h3 id="LE（logical-extends）逻辑拓展单元"><a href="#LE（logical-extends）逻辑拓展单元" class="headerlink" title="LE（logical extends）逻辑拓展单元"></a>LE（logical extends）逻辑拓展单元</h3><p>le是组成lv的基本单元，一个le对应一个pe</p><h3 id="LV（logical-volume）逻辑卷"><a href="#LV（logical-volume）逻辑卷" class="headerlink" title="LV（logical volume）逻辑卷"></a>LV（logical volume）逻辑卷</h3><p>创建在vg之上，是一个可以动态拓容的分区概念</p><h3 id="图解"><a href="#图解" class="headerlink" title="图解"></a><a href="https://www.cnblogs.com/zhaojiedi1992/p/zhaojiedi_linux_042_lvm.html">图解</a></h3><p><img src="https://img.linux.net.cn/data/attachment/album/201406/18/134408sa12dauefffyszfg.jpg" alt="img"><img src="http://lptexas-cub.github.io/img/post/image-20220803202454933.png" alt="image-20220803202454933"></p><h2 id="lvm原理"><a href="#lvm原理" class="headerlink" title="lvm原理"></a>lvm原理</h2><p>LVM动态扩容大熊，其实就是通过互相交换PE的构成，达到弹性扩容分区大小；</p><p>想要减少空间容量，就是减少PE；</p><p>想要增加空间容量，需要增加PE;</p><p>PE默认大小一般都是4M，LVM最多可以创建65534个PE，因此LVM最大的VG卷组单位是256G；</p><p>LV逻辑卷的概念相当于普通分区的概念（&#x2F;dev&#x2F;sda，&#x2F;dev&#x2F;sdb）</p><h1 id="lvm创建流程"><a href="#lvm创建流程" class="headerlink" title="lvm创建流程"></a>lvm创建流程</h1><h2 id="物理分区阶段"><a href="#物理分区阶段" class="headerlink" title="物理分区阶段"></a>物理分区阶段</h2><blockquote><p>针对物理磁盘或者分区，进行fdisk格式化，修改系统的id，默认是83，改为8e类型，是lvm类型</p></blockquote><p>fdisk，修改磁盘的系统id</p><h2 id="创建PV的阶段"><a href="#创建PV的阶段" class="headerlink" title="创建PV的阶段"></a>创建PV的阶段</h2><blockquote><p>通过pvcreate,pvdisplay将linux分区改为物理卷pv</p></blockquote><p>pvcreate，创建pv</p><p>pvdisplay，显示pv信息</p><h2 id="创建VG的阶段"><a href="#创建VG的阶段" class="headerlink" title="创建VG的阶段"></a>创建VG的阶段</h2><blockquote><p>通过vgcreate,vgdisplay将创建好的物理卷pv改为物理卷组vg</p></blockquote><p>vgcreate，创建vg</p><p>vgdisplay，显示卷组信息</p><h2 id="创建LV的阶段"><a href="#创建LV的阶段" class="headerlink" title="创建LV的阶段"></a>创建LV的阶段</h2><blockquote><p>通过lvcreate,lvdisplay将卷组分为若干个逻辑卷</p></blockquote><p>lvcreate，创建lv</p><p>lvdisplay，显示lv信息</p><h2 id="格式化文件系统"><a href="#格式化文件系统" class="headerlink" title="格式化文件系统"></a>格式化文件系统</h2><blockquote><p>开始使用lv分区</p></blockquote><h1 id="lvm的管理命令"><a href="#lvm的管理命令" class="headerlink" title="lvm的管理命令"></a>lvm的管理命令</h1><h2 id="创建物理卷"><a href="#创建物理卷" class="headerlink" title="创建物理卷"></a><a href="https://linux.cmsblogs.cn/c/pvcreate.html">创建物理卷</a></h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate [option] &lt;设备名&gt;</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-f：强制创建物理卷，不需要用户确认；</span><br><span class="line">-u：指定设备的UUID；</span><br><span class="line">-y：所有的问题都回答“<span class="built_in">yes</span>”；</span><br><span class="line">-Z：是否利用前4个扇区。</span><br></pre></td></tr></table></figure><h2 id="扫描物理卷信息"><a href="#扫描物理卷信息" class="headerlink" title="扫描物理卷信息"></a><a href="https://linux.cmsblogs.cn/c/pvscan.html">扫描物理卷信息</a></h2><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvscan [options]</span><br></pre></td></tr></table></figure><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-d：调试模式；</span><br><span class="line">-e：仅显示属于输出卷组的物理卷；</span><br><span class="line">-n：仅显示不属于任何卷组的物理卷；</span><br><span class="line">-s：短格式输出；</span><br><span class="line">-u：显示UUID。</span><br></pre></td></tr></table></figure><h2 id="显示各个物理卷信息"><a href="#显示各个物理卷信息" class="headerlink" title="显示各个物理卷信息"></a><a href="https://linux.cmsblogs.cn/c/pvdisplay.html">显示各个物理卷信息</a></h2><h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvdisplay [option] &lt;设备名&gt;</span><br></pre></td></tr></table></figure><h3 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-s：以短格式输出；</span><br><span class="line">-m：显示PE到LE的映射。</span><br></pre></td></tr></table></figure><h2 id="删除物理卷"><a href="#删除物理卷" class="headerlink" title="删除物理卷"></a><a href="https://linux.cmsblogs.cn/c/pvremove.html">删除物理卷</a></h2><h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvremove [option] &lt;设备名&gt;</span><br></pre></td></tr></table></figure><h3 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-d <span class="comment"># 调试模式；</span></span><br><span class="line">-f <span class="comment"># 强制删除；</span></span><br><span class="line">-y <span class="comment"># 对提问回答“yes”。</span></span><br></pre></td></tr></table></figure><h2 id="其它命令都类似（lv，vg）"><a href="#其它命令都类似（lv，vg）" class="headerlink" title="其它命令都类似（lv，vg）"></a>其它命令都类似（lv，vg）</h2><h2 id="缩小卷组"><a href="#缩小卷组" class="headerlink" title="缩小卷组"></a><a href="https://linux.cmsblogs.cn/c/vgreduce.html">缩小卷组</a></h2><h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgreduce [option] &lt;设备名&gt;</span><br></pre></td></tr></table></figure><h3 id="参数-4"><a href="#参数-4" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-a：如果命令行中没有指定要删除的物理卷，则删除所有的空物理卷；</span><br><span class="line">--removemissing：删除卷组中丢失的物理卷，使卷组恢复正常状态。</span><br></pre></td></tr></table></figure><h2 id="扩大卷组"><a href="#扩大卷组" class="headerlink" title="扩大卷组"></a><a href="https://linux.cmsblogs.cn/c/vgextend.html">扩大卷组</a></h2><h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend [option] &lt;设备名&gt; </span><br></pre></td></tr></table></figure><h3 id="参数-5"><a href="#参数-5" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-d：调试模式；</span><br><span class="line">-t：仅测试。</span><br></pre></td></tr></table></figure><h1 id="lvm创建实践"><a href="#lvm创建实践" class="headerlink" title="lvm创建实践"></a>lvm创建实践</h1><h2 id="创建pv"><a href="#创建pv" class="headerlink" title="创建pv"></a>创建pv</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvcreate /dev/sdb /dev/sdc</span></span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb&quot;</span> successfully created.</span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdc&quot;</span> successfully created.</span><br></pre></td></tr></table></figure><h2 id="创建卷组"><a href="#创建卷组" class="headerlink" title="创建卷组"></a>创建卷组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># vgcreate vg1 /dev/sdb /dev/sdc</span></span><br><span class="line">  Volume group <span class="string">&quot;vg1&quot;</span> successfully created</span><br></pre></td></tr></table></figure><p>创建一个叫做<code>vg1</code>的卷组，卷组的<code>成员</code>为sdb、sdc，也就是说<code>vg1</code>的总容量为<code>sdb+sdc</code>的<code>总和</code>。</p><h2 id="扫描一下物理卷并显示详细信息"><a href="#扫描一下物理卷并显示详细信息" class="headerlink" title="扫描一下物理卷并显示详细信息"></a>扫描一下物理卷并显示详细信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sda2  centos lvm2 a--  &lt;19.00g      0</span><br><span class="line">  /dev/sdb   vg1    lvm2 a--  &lt;10.00g &lt;10.00g</span><br><span class="line">  /dev/sdc   vg1    lvm2 a--  &lt;10.00g &lt;10.00g</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvdisplay</span></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sdb</span><br><span class="line">  VG Name               vg1</span><br><span class="line">  PV Size               10.00 GiB / not usable 4.00 MiB</span><br><span class="line">  Allocatable           <span class="built_in">yes</span></span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              2559</span><br><span class="line">  Free PE               2559</span><br><span class="line">  Allocated PE          0</span><br><span class="line">  PV UUID               saQbwU-1cnv-uVVx-j32n-7y6U-v88e-hA5eXr</span><br><span class="line"></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sdc</span><br><span class="line">  VG Name               vg1</span><br><span class="line">  PV Size               10.00 GiB / not usable 4.00 MiB</span><br><span class="line">  Allocatable           <span class="built_in">yes</span></span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              2559</span><br><span class="line">  Free PE               2559</span><br><span class="line">  Allocated PE          0</span><br><span class="line">  PV UUID               o27ac2-2uPj-XuV8-6lMc-c5Ds-86Zc-AC3RcD</span><br><span class="line"></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sda2</span><br><span class="line">  VG Name               centos</span><br><span class="line">  PV Size               &lt;19.00 GiB / not usable 3.00 MiB</span><br><span class="line">  Allocatable           <span class="built_in">yes</span> (but full)</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              4863</span><br><span class="line">  Free PE               0</span><br><span class="line">  Allocated PE          4863</span><br><span class="line">  PV UUID               LYVzwm-oAOF-Uxwx-m6tO-Ocrx-D64J-wvpb3G</span><br></pre></td></tr></table></figure><h2 id="扫描一下卷组并显示详细信息"><a href="#扫描一下卷组并显示详细信息" class="headerlink" title="扫描一下卷组并显示详细信息"></a>扫描一下卷组并显示详细信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sda2  centos lvm2 a--  &lt;19.00g      0</span><br><span class="line">  /dev/sdb   vg1    lvm2 a--  &lt;10.00g &lt;10.00g</span><br><span class="line">  /dev/sdc   vg1    lvm2 a--  &lt;10.00g &lt;10.00g</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  centos   1   2   0 wz--n- &lt;19.00g     0</span><br><span class="line">  vg1      2   0   0 wz--n-  19.99g 19.99g</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               vg1</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        2</span><br><span class="line">  Metadata Sequence No  1</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                0</span><br><span class="line">  Open LV               0</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                2</span><br><span class="line">  Act PV                2</span><br><span class="line">  VG Size               19.99 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              5118</span><br><span class="line">  Alloc PE / Size       0 / 0</span><br><span class="line">  Free  PE / Size       5118 / 19.99 GiB</span><br><span class="line">  VG UUID               ccw34M-26uf-aL32-YgUj-X88K-5LtL-9RDhJN</span><br><span class="line"></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  3</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                2</span><br><span class="line">  Open LV               2</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               &lt;19.00 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              4863</span><br><span class="line">  Alloc PE / Size       4863 / &lt;19.00 GiB</span><br><span class="line">  Free  PE / Size       0 / 0</span><br><span class="line">  VG UUID               1yoKAw-PbS4-y8er-9cpG-28Pw-5wve-wIRRBO</span><br></pre></td></tr></table></figure><h2 id="尝试扩容"><a href="#尝试扩容" class="headerlink" title="尝试扩容"></a>尝试扩容</h2><blockquote><p>先利用sdd创建一个物理卷</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvcreate /dev/sdd</span></span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdd&quot;</span> successfully created.</span><br></pre></td></tr></table></figure><blockquote><p>扩容vg</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend vg1 /dev/sdd</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># vgextend vg1 /dev/sdd</span></span><br><span class="line">  Volume group <span class="string">&quot;vg1&quot;</span> successfully extended</span><br></pre></td></tr></table></figure><h2 id="尝试缩小卷组大小"><a href="#尝试缩小卷组大小" class="headerlink" title="尝试缩小卷组大小"></a>尝试缩小卷组大小</h2><blockquote><p>剔除sdd</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgreduce vg1 /dev/sdd</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># vgreduce vg1 /dev/sdd</span></span><br><span class="line">  Removed <span class="string">&quot;/dev/sdd&quot;</span> from volume group <span class="string">&quot;vg1&quot;</span></span><br></pre></td></tr></table></figure><hr><p>最后最好把物理卷也删除！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvremove /dev/sdd</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvremove /dev/sdd</span></span><br><span class="line">  Labels on physical volume <span class="string">&quot;/dev/sdd&quot;</span> successfully wiped.</span><br></pre></td></tr></table></figure><h2 id="创建逻辑卷"><a href="#创建逻辑卷" class="headerlink" title="创建逻辑卷"></a>创建逻辑卷</h2><blockquote><p>创建一个叫作lv1的逻辑卷，大小500M，从vg1中创建</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -n lv1 -L +500M vg1</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># lvcreate -n lv1 -L +500M vg1</span></span><br><span class="line">  Logical volume <span class="string">&quot;lv1&quot;</span> created.</span><br></pre></td></tr></table></figure><h2 id="对lv1进行格式化文件系统"><a href="#对lv1进行格式化文件系统" class="headerlink" title="对lv1进行格式化文件系统"></a>对lv1进行格式化文件系统</h2><blockquote><p>相当于买来一个磁盘进行格式化系统</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/vg1/lv1</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mkfs.xfs /dev/vg1/lv1</span></span><br><span class="line">meta-data=/dev/vg1/lv1           isize=512    agcount=4, agsize=32000 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=128000, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=855, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure><h2 id="查看一下文件系统情况"><a href="#查看一下文件系统情况" class="headerlink" title="查看一下文件系统情况"></a>查看一下文件系统情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk -f </span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">sdb             LVM2_member                 saQbwU-1cnv-uVVx-j32n-7y6U-v88e-hA5eXr</span><br><span class="line">└─vg1-lv1       xfs </span><br></pre></td></tr></table></figure><h2 id="挂载到-mnt2"><a href="#挂载到-mnt2" class="headerlink" title="挂载到/mnt2"></a>挂载到<code>/mnt2</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/vg1/lv1 /mnt2</span><br></pre></td></tr></table></figure><h2 id="写入数据文件并查看容量"><a href="#写入数据文件并查看容量" class="headerlink" title="写入数据文件并查看容量"></a>写入数据文件并查看容量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt2</span><br><span class="line"><span class="built_in">echo</span> &#123;1..1000000&#125; &gt; test1.txt</span><br><span class="line"><span class="built_in">echo</span> &#123;1..1000000&#125; &gt;&gt; test1.txt</span><br><span class="line"><span class="built_in">echo</span> &#123;1..1000000&#125; &gt;&gt; test1.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test2.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test3.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test4.txt</span><br><span class="line"><span class="built_in">cp</span> test1.txt test5.txt</span><br></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost m<span class="symbol">nt2</span>]<span class="attr"># df -hT|grep lv1</span></span><br><span class="line">/dev/mapper/v<span class="name">g1</span>-lv<span class="number">1</span>     xfs       <span class="number">497</span>M  <span class="number">124</span>M  <span class="number">373</span>M   <span class="number">25</span><span class="meta">%</span> /m<span class="symbol">nt2</span></span><br></pre></td></tr></table></figure><h2 id="开机自动挂载"><a href="#开机自动挂载" class="headerlink" title="开机自动挂载"></a>开机自动挂载</h2><blockquote><p>写入<code>/etc/fstab</code>文件</p></blockquote><p>追加一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/vg1/lv1 /mnt2 xfs defaults 0 0</span><br></pre></td></tr></table></figure><h3 id="手动读取-etc-fstab"><a href="#手动读取-etc-fstab" class="headerlink" title="手动读取/etc/fstab"></a>手动读取<code>/etc/fstab</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br><span class="line"><span class="comment"># -a, --all               挂载 fstab 中的所有文件系统</span></span><br></pre></td></tr></table></figure><h2 id="针对lv逻辑卷的扩容操作"><a href="#针对lv逻辑卷的扩容操作" class="headerlink" title="针对lv逻辑卷的扩容操作"></a>针对lv逻辑卷的扩容操作</h2><blockquote><p>500M不够用了 ！只要卷组中的容量够，那么就可以给逻辑卷扩容！</p></blockquote><h3 id="先取消挂载"><a href="#先取消挂载" class="headerlink" title="先取消挂载"></a>先取消挂载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt2</span><br></pre></td></tr></table></figure><h3 id="拓展10G"><a href="#拓展10G" class="headerlink" title="拓展10G"></a>拓展10G</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvextend -L +10G /dev/vg1/lv1</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt2]<span class="comment"># lvextend -L +10G /dev/vg1/lv1</span></span><br><span class="line">  Size of logical volume vg1/lv1 changed from 500.00 MiB (125 extents) to &lt;10.49 GiB (2685 extents).</span><br><span class="line">  Logical volume vg1/lv1 successfully resized.</span><br></pre></td></tr></table></figure><h3 id="检查效果"><a href="#检查效果" class="headerlink" title="检查效果"></a>检查效果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos -wi-ao---- &lt;17.00g</span><br><span class="line">  swap centos -wi-ao----   2.00g</span><br><span class="line">  lv1  vg1    -wi-ao---- &lt;10.49g</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">--- Logical volume ---</span><br><span class="line">LV Path                /dev/vg1/lv1</span><br><span class="line">LV Name                lv1</span><br><span class="line">VG Name                vg1</span><br><span class="line">LV UUID                9WNut4-1KvY-LdnV-flQ9-Dk26-UGJw-RscNUw</span><br><span class="line">LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">LV Creation host, time localhost.localdomain, 2022-08-03 21:25:28 +0800</span><br><span class="line">LV Status              available</span><br><span class="line"><span class="comment"># open                 1</span></span><br><span class="line">LV Size                &lt;10.49 GiB</span><br><span class="line">Current LE             2685</span><br><span class="line">Segments               2</span><br><span class="line">Allocation             inherit</span><br><span class="line">Read ahead sectors     auto</span><br><span class="line">- currently <span class="built_in">set</span> to     8192</span><br><span class="line">Block device           253:2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># df -hT|grep lv</span></span><br><span class="line">/dev/mapper/vg1-lv1     xfs       497M  124M  373M   25% /mnt2</span><br></pre></td></tr></table></figure><p>我们发现使用<code>df -hT</code>命令查询文件系统情况时，容量大小并为发生变化，此时需要调整<code>xfs文件系统大小</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xfs_growfs /dev/vg1/lv1</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># xfs_growfs /dev/vg1/lv1</span></span><br><span class="line">meta-data=/dev/mapper/vg1-lv1    isize=512    agcount=4, agsize=32000 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=128000, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=855, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 128000 to 2749440</span><br></pre></td></tr></table></figure><p>再次使用<code>df -hT</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># df -hT|grep lv</span></span><br><span class="line">/dev/mapper/vg1-lv1     xfs        11G  128M   11G    2% /mnt2</span><br></pre></td></tr></table></figure><p>改变！</p><h2 id="再次挂载"><a href="#再次挂载" class="headerlink" title="再次挂载"></a>再次挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/vg1/lv1 /mnt2</span><br></pre></td></tr></table></figure><h1 id="lvm卸载"><a href="#lvm卸载" class="headerlink" title="lvm卸载"></a>lvm卸载</h1><h2 id="注意数据备份"><a href="#注意数据备份" class="headerlink" title="注意数据备份"></a>注意数据备份</h2><h2 id="取消挂载-2"><a href="#取消挂载-2" class="headerlink" title="取消挂载"></a>取消挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt2</span><br></pre></td></tr></table></figure><h2 id="卸载lv"><a href="#卸载lv" class="headerlink" title="卸载lv"></a>卸载lv</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lvremove /dev/vg1/lv1</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># lvremove /dev/vg1/lv1 -y</span></span><br><span class="line">  Logical volume <span class="string">&quot;lv1&quot;</span> successfully removed</span><br></pre></td></tr></table></figure><h2 id="卸载vg"><a href="#卸载vg" class="headerlink" title="卸载vg"></a>卸载vg</h2><blockquote><p>可以直接加-y参数，同意删除</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgremove vg1</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># lvremove /dev/vg1/lv1 -y</span></span><br><span class="line">  Logical volume <span class="string">&quot;lv1&quot;</span> successfully removed</span><br><span class="line">[root@localhost /]<span class="comment"># vgremove vg1</span></span><br><span class="line">  Volume group <span class="string">&quot;vg1&quot;</span> successfully removed</span><br></pre></td></tr></table></figure><h2 id="卸载pv"><a href="#卸载pv" class="headerlink" title="卸载pv"></a>卸载pv</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvremove /dev/sdb /dev/sdc</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvremove /dev/sdb /dev/sdc</span></span><br><span class="line">  Labels on physical volume <span class="string">&quot;/dev/sdb&quot;</span> successfully wiped.</span><br><span class="line">  Labels on physical volume <span class="string">&quot;/dev/sdc&quot;</span> successfully wiped.</span><br></pre></td></tr></table></figure><h2 id="检查是否全部卸载"><a href="#检查是否全部卸载" class="headerlink" title="检查是否全部卸载"></a>检查是否全部卸载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pvs</span><br><span class="line">vgs</span><br><span class="line">lvs</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># pvs</span></span><br><span class="line">  PV         VG     Fmt  Attr PSize   PFree</span><br><span class="line">  /dev/sda2  centos lvm2 a--  &lt;19.00g    0</span><br><span class="line">[root@localhost /]<span class="comment"># vgs</span></span><br><span class="line">  VG     <span class="comment">#PV #LV #SN Attr   VSize   VFree</span></span><br><span class="line">  centos   1   2   0 wz--n- &lt;19.00g    0</span><br><span class="line">[root@localhost /]<span class="comment"># lvs</span></span><br><span class="line">  LV   VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert</span><br><span class="line">  root centos -wi-ao---- &lt;17.00g</span><br><span class="line">  swap centos -wi-ao----   2.00g</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> 磁盘管理 </tag>
            
            <tag> raid </tag>
            
            <tag> lvm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘管理part3</title>
      <link href="/posts/3694309614/"/>
      <url>/posts/3694309614/</url>
      
        <content type="html"><![CDATA[<h1 id="buffers"><a href="#buffers" class="headerlink" title="buffers"></a>buffers</h1><blockquote><p><code>缓冲区</code>，用于加速<code>写入</code>速度</p></blockquote><p>buffers表示在写入数据的时候，把分散的操作临时存放在内存中，达到一定数量之后再集中写入磁盘，减少磁盘碎片，加速数据查找，减少磁头的反复寻道时间。</p><h1 id="cached"><a href="#cached" class="headerlink" title="cached"></a>cached</h1><blockquote><p><code>缓存</code>，用于加速<code>读取</code>速度</p></blockquote><p>cached表示把数据从磁盘读取出来，保存在内存中，再次读取的时候，不再去硬盘，直接从内存中读取，加速查找。</p><h1 id="buffers和cached的作用总结"><a href="#buffers和cached的作用总结" class="headerlink" title="buffers和cached的作用总结"></a>buffers和cached的作用总结</h1><blockquote><p>buffers和cached都是基于内存的存储中间层</p></blockquote><p>cached解决时间问题，加速读取的过程；buffers解决空间存储问题，给数据一个临时存放的区域。</p><p>cached利用内存高速读写的特性；</p><p>buffers利用内存的存储空间特性。</p><h1 id="swap交换分区"><a href="#swap交换分区" class="headerlink" title="swap交换分区"></a><a href="https://www.php.cn/linux-489222.html#:~:text=linux,swap%E6%8C%87%E7%9A%84%E6%98%AFlinux%E4%BA%A4%E6%8D%A2%E5%88%86%E5%8C%BA%EF%BC%8C%E6%98%AF%E7%A3%81%E7%9B%98%E4%B8%8A%E7%9A%84%E4%B8%80%E5%9D%97%E5%8C%BA%E5%9F%9F%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%98%AF%E4%B8%80%E4%B8%AA%E5%88%86%E5%8C%BA%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E6%98%AF%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%EF%BC%8C%E6%88%96%E8%80%85%E6%98%AF%E4%B8%A4%E8%80%85%E7%9A%84%E7%BB%84%E5%90%88%EF%BC%9Bswap%E7%B1%BB%E4%BC%BC%E4%BA%8EWindows%E7%9A%84%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98%EF%BC%8C%E5%B0%B1%E6%98%AF%E5%BD%93%E5%86%85%E5%AD%98%E4%B8%8D%E8%B6%B3%E6%97%B6%EF%BC%8C%E6%8A%8A%E4%B8%80%E9%83%A8%E5%88%86%E7%A1%AC%E7%9B%98%E7%A9%BA%E9%97%B4%E8%99%9A%E6%8B%9F%E6%88%90%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%EF%BC%8C%E4%BB%8E%E8%80%8C%E8%A7%A3%E5%86%B3%E5%86%85%E5%AD%98%E5%AE%B9%E9%87%8F%E4%B8%8D%E8%B6%B3%E7%9A%84%E6%83%85%E5%86%B5%E3%80%82">swap交换分区</a></h1><blockquote><p>swap是Linux系统磁盘管理的一块特殊的分区，以实际的物理内存不足的时候，操作系统会从磁盘空间中，取出一部分暂时没在使用的部分，拿出来放到交换分区（在磁盘上，可以是一块区域、分区、或者文件或者两者的组合），从而提供给当前正在使用的程序，从而获得更多的内存。（相当于windows的虚拟化内存）</p></blockquote><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><blockquote><p>能够通过操作系统的调取，程序可以用到的实际内存会远大于物理内存。</p></blockquote><h2 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h2><blockquote><p>swap分区大小，必须根据物理内存和硬盘容量来计算</p></blockquote><p>当物理内存小于1G，必须使用swap提升内存使用量；</p><p>内存使用过多的应用程序，必须使用swap分区防止物理内存不足，造成软件崩溃；</p><p>当电脑休眠时，内存中的数据会放入swap交换分区中，当你电脑恢复后，再从swap中读取数据，恢复软件工作。</p><h2 id="创建swap分区"><a href="#创建swap分区" class="headerlink" title="创建swap分区"></a>创建swap分区</h2><blockquote><p>centos7系统，计算swap分区规则如下：</p></blockquote><ul><li>内存小于2G，swap分配和内存同样大小的空间；</li><li>内存大于2G，swap也分配2G的空间。</li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>先为磁盘分区，且指定swap分区类型，<code>fdisk /dev/sdb1</code></li></ol><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">依此输入：</span><br><span class="line"><span class="built_in">t</span></span><br><span class="line"><span class="number">82</span></span><br></pre></td></tr></table></figure><ol start="2"><li>格式化磁盘分区</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mkswap /dev/sdb1</span></span><br><span class="line">mkswap: /dev/sdb1: warning: wiping old swap signature.</span><br><span class="line">正在设置交换空间版本 1，大小 = 488260 KiB</span><br><span class="line">无标签，UUID=5e98cd11-aee4-4c2c-94e4-41c26d52406c</span><br></pre></td></tr></table></figure><ol start="3"><li>使用swap分区，swapon开启交换空间，swapoff关闭交换空间</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /dev/sdb1</span><br></pre></td></tr></table></figure><h1 id="释放cached的命令"><a href="#释放cached的命令" class="headerlink" title="释放cached的命令"></a>释放cached的命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><p>效果等同于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.drop_caches=1</span><br></pre></td></tr></table></figure><h1 id="清除目录缓存和inodes"><a href="#清除目录缓存和inodes" class="headerlink" title="清除目录缓存和inodes"></a>清除目录缓存和inodes</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><p>效果等同于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.drop_caches=2</span><br></pre></td></tr></table></figure><h1 id="清除内存页的缓存"><a href="#清除内存页的缓存" class="headerlink" title="清除内存页的缓存"></a>清除内存页的缓存</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><p>效果等同于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -w vm.drop_caches=3</span><br></pre></td></tr></table></figure><hr><p>以上三种都是<code>临时</code>释放缓存的命令</p><p>除了以上3个命令，还可以清理文件系统缓存；</p><p>使用<code>sync命令</code>，还可以用于清理僵尸进程</p><hr><h2 id="sync的作用"><a href="#sync的作用" class="headerlink" title="sync的作用"></a>sync的作用</h2><p>将内存缓冲区的数据，写入到磁盘中</p><h1 id="开机自动挂载"><a href="#开机自动挂载" class="headerlink" title="开机自动挂载"></a>开机自动挂载</h1><blockquote><p>由于<code>mount命令</code>直接输入是<code>临时生效</code>，下次重启，挂载的设备分区就无法使用了<code>/etc/fstab</code>文件，存放系统一些静态文件的地方，主要是系统启动的时候，系统默认的读取这个文件的信息，将指定的挂载点，运行挂载。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br></pre></td></tr></table></figure><blockquote><p>第一列：设备名</p></blockquote><p>可以为文件系统，也可以为设备名称，NFS远程网络文件系统</p><blockquote><p>第二列：挂载点</p></blockquote><p>为自己创建的一个目录，是一个已经存在的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/sdbn /mnt <span class="comment">#第一种写法</span></span><br><span class="line">mount 192.168.11.15:/home/nfs /mnt/ -o nolock <span class="comment">#把本地的/mnt文件夹挂载到nfs文件系统上，且不加锁</span></span><br></pre></td></tr></table></figure><blockquote><p>第三列</p></blockquote><p>Linux能够支持的文件系统类型。</p><p>ext3 ext4 nfs swap，nfs</p><blockquote><p>第四列</p></blockquote><p>挂载的功能选项，有很多，默认是用 defaults。</p><blockquote><p>第五列：dump</p></blockquote><p>表示将整个文件夹内从备份，一般不对挂载点备份，默认都是0。</p><blockquote><p>第六列：fsck 磁盘检查</p></blockquote><p>默认都是0，不对磁盘检查，根文件系统，默认是检查的。</p><hr><h2 id="df命令"><a href="#df命令" class="headerlink" title="df命令"></a>df命令</h2><blockquote><p>检查挂载点的使用情况</p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> [options]</span><br></pre></td></tr></table></figure><h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><blockquote><p>常用</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-h <span class="comment">#显示kb，mb单位大小</span></span><br><span class="line">-i <span class="comment">#显示每个挂载点可使用的inode数量</span></span><br></pre></td></tr></table></figure><h2 id="du命令"><a href="#du命令" class="headerlink" title="du命令"></a>du命令</h2><blockquote><p>显示磁盘空间大小，文件大小的命令</p></blockquote><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">用法：<span class="built_in">du</span> [选项]... [文件]...</span><br><span class="line">　或：<span class="built_in">du</span> [选项]... --files0-from=F</span><br></pre></td></tr></table></figure><h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-h <span class="comment">#显示文件大小，以kb，mb显示单位</span></span><br><span class="line">-h * <span class="comment">#显示当前目录所有文件的大小</span></span><br><span class="line">-a <span class="comment">#显示出目录汇总所有文件的大小</span></span><br><span class="line">-d，--max-depth=n /目录/ <span class="comment">#可以设置输出文件大小的深度</span></span><br><span class="line"> -X, --exclude-from=FILE  指定排除文件名可以使用匹配符</span><br></pre></td></tr></table></figure><h1 id="raid技术"><a href="#raid技术" class="headerlink" title="raid技术"></a><a href="https://post.smzdm.com/p/a830lnd6/">raid技术</a></h1><blockquote><p>raid 全称 Redundant Arrays Of Independent Drivers,即磁盘冗余阵列。</p></blockquote><p>raid 技术是将多块独立的此岸，组成了一个磁盘组。</p><p>raid技术的意图是将多个独立的硬盘设备，组成一个容量更大，安全性更高的磁盘阵列组，将数据切为多个区段之后存储在不同的物理硬盘上。利用分散读写技术提升磁盘整体性能，数据同步在了多个硬盘上，数据也得到了冗余备份的作用。</p><h1 id="raid特性"><a href="#raid特性" class="headerlink" title="raid特性"></a>raid特性</h1><blockquote><p>能够保证数据安全性，但是也增加了磁盘的成本。 raid除了能够保障数据丢失造成的严重损失，提升硬盘读写效率，因此广泛的被企业使用。</p></blockquote><p><img src="/img/post/image-20220802161914232.png" alt="饮水机和水桶图解RAID方式"></p><h1 id="独立模式"><a href="#独立模式" class="headerlink" title="独立模式"></a>独立模式</h1><blockquote><p>standalone </p></blockquote><p>一块硬盘单独的工作，读写数据；</p><p>一台饮水机，一桶水，提供服务。</p><h2 id="热备份模式"><a href="#热备份模式" class="headerlink" title="热备份模式"></a>热备份模式</h2><blockquote><p>hot swap</p></blockquote><p>一桶水可能会喝完，水桶可能被污染，损坏，旁边放一个水桶，随时等待阶梯的工作，为了防止单独的一块硬盘损坏，随时准备好另一块硬盘准备阶梯工作。</p><h2 id="集群模式"><a href="#集群模式" class="headerlink" title="集群模式"></a>集群模式</h2><blockquote><p>cluster</p></blockquote><p>一对饮水机提供服务，就算单独坏了一台机器，一台机器，无所谓，还有其它机器等待工作，一堆硬盘共同提供服务，提高读写效率。</p><hr><p>raid技术分为多个级别，不同级别，由于技术角度，还有公司运营成本的考虑，不同的企业选择不同版本的raid技术。</p><p><a href="https://new.qq.com/omn/20191003/20191003A02R0000.html">RAID 0、RAID 1、RAID 5以及RAID 0+1</a></p><hr><h2 id="raid-0"><a href="#raid-0" class="headerlink" title="raid 0"></a>raid 0</h2><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>数据一次写入到物理硬盘，在理想的状态下，写入速度是翻倍的；但凡任意一块硬盘损坏，数据都将被破坏。数据写入到两块硬盘中，没有备份功能。</p><p><img src="/img/post/5eae9f182f4e4775.jpg" alt="raid0"></p><p><img src="/img/post/5eaea0c9afe524899.jpg" alt="raid0"></p><h3 id="应用场景-1"><a href="#应用场景-1" class="headerlink" title="应用场景"></a>应用场景</h3><p>适用于追求极致性能的场景，而不关注于数据安全性的场景。</p><h2 id="raid-1"><a href="#raid-1" class="headerlink" title="raid 1"></a>raid 1</h2><h3 id="特点-1"><a href="#特点-1" class="headerlink" title="特点"></a>特点</h3><p>由于raid 0的特性，数据一次写入多块硬盘中，数据分开存储的，因此坏了任意一个，数据都将被破坏，对于企业非常重要的数据来说，肯定是不允许使用的。</p><p>将两块以上的硬盘绑定关系，数据写入的时候，同时写入多块硬盘，因此即使硬盘故障损坏，也不惧怕，因为我有备份。</p><p>raid 1 极大地降低了磁盘的利用率。假如你有2块硬盘一共4T大容量，你使用了raid 1，你可使用的容量只有2T了，利用率只有50%。</p><p>如果是三块硬盘组成raid 1，利用率更低，只有33%</p><p><img src="/img/post/5eaea54d3972a7632.jpg" alt="raid1"></p><p><img src="/img/post/5eaea6b99e1094743.jpg" alt="raid1"></p><h2 id="raid-3"><a href="#raid-3" class="headerlink" title="raid 3"></a>raid 3</h2><blockquote><p>计算机的异或运算概念：</p><p>数字相同则为0，数字不同则为1</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+-*/^异或运算</span><br></pre></td></tr></table></figure><h3 id="磁盘的异或运算"><a href="#磁盘的异或运算" class="headerlink" title="磁盘的异或运算"></a>磁盘的异或运算</h3><p>AxorBxorCA异或B异或C</p><p>多个值的异或计算概念是;</p><p>1的个数是奇数，结果则为1；</p><p>1的个数是偶数，结果则为0。</p><p>raid 3必须3块以上的硬盘</p><hr><p><strong>磁盘1：0101</strong></p><p><strong>磁盘2：1011</strong></p><p><strong>异或结果：1110</strong></p><p>如果突然磁盘1的数据挂了，目前知道磁盘2的数据是：1011</p><p>异或值是：1110</p><p>那么，反推可知，磁盘1的数据为：0101</p><hr><h3 id="特点-2"><a href="#特点-2" class="headerlink" title="特点"></a>特点</h3><p>存储着异或值的磁盘不得损坏！</p><h2 id="raid-5"><a href="#raid-5" class="headerlink" title="raid 5"></a><a href="https://www.cnblogs.com/Yogile/p/12625058.html#3780243458">raid 5</a></h2><blockquote><p>更加强大的raid 3系列</p></blockquote><p>校验码均匀的放在每一块磁盘中，因此，即使任意一块硬盘损坏，都能够反推出原本的数据。</p><p>RAID 5 被称为 “分布式奇偶校验的独立磁盘结构” ，需最低 3 块硬盘组成。</p><hr><p>每在 RAID 5 中存入一个文件，3 块硬盘中：</p><ul><li>1 块用于存储该文件；</li><li>2 块用于生成奇偶校验信息。</li></ul><p>只要 RAID 5 中只有 1 块硬盘损坏，就可以替换该硬盘并恢复数据。</p><ul><li>会损失 1 块硬盘容量。</li></ul><h2 id="raid-10-（1-0）"><a href="#raid-10-（1-0）" class="headerlink" title="raid 10 （1+0）"></a>raid 10 （1+0）</h2><blockquote><p>企业目前再用的是raid 10版本</p></blockquote><p>raid10是raid 1加上raid 0的意思，既吸收了raid0的特点，提升了数据的写入，提高效率，又吸收了raid 1的安全性，因此至少需要4块硬盘完成。</p><ol><li><p>通过了raid 1技术，实现了磁盘两两备份，数据安全性较高；</p></li><li><p>针对2个raid1的部署，又部署了raid0，提高了磁盘的读写效率；</p></li><li><p>只要不是同一个磁盘组全部损坏，那么即使你挂掉了一个硬盘也无所谓。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> 磁盘管理 </tag>
            
            <tag> buffers </tag>
            
            <tag> cached </tag>
            
            <tag> swap </tag>
            
            <tag> raid </tag>
            
            <tag> 开机自动挂载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘管理part4</title>
      <link href="/posts/1112941901/"/>
      <url>/posts/1112941901/</url>
      
        <content type="html"><![CDATA[<h1 id="文件系统挂载原理"><a href="#文件系统挂载原理" class="headerlink" title="文件系统挂载原理"></a>文件系统挂载原理</h1><p><code> 挂载</code>通常是将一个存储设备挂载到另一个已经存在的文件夹中，访问这个文件夹，就是访问该存储设备的内容了。</p><p>在Linux下，设备未挂载前无法使用，未挂在时设备文件无法写入和读取，我们需要在Linux打开一个“入口”，即挂载点（Linux上的一个文件夹），用于对接该设备，实现挂载。</p><hr><p>一个新的磁盘插入到机器后，分区，格式化文件系统（ntfs,ext3,ext4,xfs…），此时还未挂载分区，分区还仅仅是一个封闭空间，无法读写，针对分区和Linux文件夹，合并，关联，挂载，即可通过访问被挂载文件夹看到磁盘内的数据了。</p><h1 id="mount命令"><a href="#mount命令" class="headerlink" title="mount命令"></a>mount命令</h1><blockquote><p>mount命令能够将指定的文件系统挂载到特定的目录上</p></blockquote><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mount [-lhV]</span><br><span class="line">mount -a [选项]</span><br><span class="line">mount [选项] [--<span class="built_in">source</span>] &lt;源&gt; | [--target] &lt;目录&gt;</span><br><span class="line">mount [选项] &lt;源&gt; &lt;目录&gt;</span><br><span class="line">mount &lt;操作&gt; &lt;挂载点&gt; [&lt;目标&gt;]</span><br></pre></td></tr></table></figure><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">-a, --all               挂载 fstab 中的所有文件系统</span><br><span class="line">-c, --no-canonicalize   不对路径规范化</span><br><span class="line">-f, --fake              空运行；跳过 mount(2) 系统调用</span><br><span class="line">-F, --fork              对每个设备禁用 fork(和 -a 选项一起使用)</span><br><span class="line">-T, --fstab &lt;路径&gt;      /etc/fstab 的替代文件</span><br><span class="line">-h, --<span class="built_in">help</span>              显示此帮助并退出</span><br><span class="line">-i, --internal-only     不调用 mount.&lt;类型&gt; 助手程序</span><br><span class="line">-l, --show-labels       列出所有带有指定标签的挂载</span><br><span class="line">-n, --no-mtab           不写 /etc/mtab</span><br><span class="line">-o, --options &lt;列表&gt;    挂载选项列表，以英文逗号分隔</span><br><span class="line">-O, --test-opts &lt;列表&gt;  限制文件系统集合(和 -a 选项一起使用)</span><br><span class="line">-r, --read-only         以只读方式挂载文件系统(同 -o ro)</span><br><span class="line">-t, --types &lt;列表&gt;      限制文件系统类型集合</span><br><span class="line">    --<span class="built_in">source</span> &lt;源&gt;       指明源(路径、标签、uuid)</span><br><span class="line">    --target &lt;目标&gt;     指明挂载点</span><br><span class="line">-v, --verbose           打印当前进行的操作</span><br><span class="line">-V, --version           显示版本信息并退出</span><br><span class="line">-w, --rw, --read-write  以读写方式挂载文件系统(默认)</span><br><span class="line"></span><br><span class="line">-h, --<span class="built_in">help</span>     显示此帮助并退出</span><br><span class="line">-V, --version  输出版本信息并退出</span><br></pre></td></tr></table></figure><h3 id="mount-o参数详解"><a href="#mount-o参数详解" class="headerlink" title="mount -o参数详解"></a>mount -o参数详解</h3><ul><li>async 以异步的方式处理文件系统IO，加速希尔，数据不会同步写入磁盘，而是写入一个缓冲区，提高系统新能，损失数据安全性</li><li>sync 所有IO操作同步处理，数据同步写入到磁盘，性能较弱，提高数据读写的安全性</li><li>atime&#x2F;noatime 文件访问时，是否修改时间戳，能够提升磁盘IO石压速度</li><li>auto&#x2F;noauto 可以通过-a参数自动挂载，不自动挂载</li><li>defaults 这个默认参数，涵盖rw,suid,dev,exec,auto,nousr,async等等参数</li><li>exec&#x2F;noexec 是否允许挂载点内的可执行命令，使用noexec提升磁盘安全性</li><li>ro 只读</li><li>rw 读写</li></ul><hr><p>对于centos7新出现的mount选项有</p><ul><li>att2 磁盘上存储内联拓展属性，提升磁盘性能</li><li>inode64 允许在文件系统的任意位置创建inode</li><li>noquota 强制关闭文件系统的限额功能</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/dev/sda1 on /boot <span class="built_in">type</span> xfs (rw,relatime,seclabel,attr2,inode64,noquota)</span><br></pre></td></tr></table></figure><h1 id="mount实操"><a href="#mount实操" class="headerlink" title="mount实操"></a>mount实操</h1><h2 id="查看挂载情况"><a href="#查看挂载情况" class="headerlink" title="查看挂载情况"></a>查看挂载情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -hT</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  899M     0  899M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  2.6G   15G   15% /</span><br><span class="line">/dev/sda1               xfs      1014M  189M  826M   19% /boot</span><br><span class="line">tmpfs                   tmpfs     182M     0  182M    0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="将-dev-sdb3挂载到-mnt"><a href="#将-dev-sdb3挂载到-mnt" class="headerlink" title="将/dev/sdb3挂载到/mnt"></a>将<code>/dev/sdb3</code>挂载到<code>/mnt</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lsblk -f</span></span><br><span class="line">NAME   FSTYPE   LABEL          UUID                                   MOUNTPOINT</span><br><span class="line">sda</span><br><span class="line">├─sda1 xfs                     7fdc921b-f892-4c21-8f87-97f26f936673   /boot</span><br><span class="line">└─sda2 LVM2_mem                LYVzwm-oAOF-Uxwx-m6tO-Ocrx-D64J-wvpb3G</span><br><span class="line">  ├─centos-root</span><br><span class="line">       xfs                     745e580c-314d-4419-b634-97ea40c4ee49   /</span><br><span class="line">  └─centos-swap</span><br><span class="line">       swap                    dbb971fd-25ea-43d9-b515-87fd10cba0de   [SWAP]</span><br><span class="line">sdb</span><br><span class="line">├─sdb1 ext4                    2ddcc1b2-2acf-4011-8c1b-1ee2858775d7</span><br><span class="line">├─sdb2 xfs                     af6080aa-49e9-4319-a1a7-d0da302cdd01</span><br><span class="line">└─sdb3</span><br><span class="line">sr0    iso9660  CentOS 7 x86_64</span><br><span class="line">                               2018-11-25-21-21-31-00</span><br></pre></td></tr></table></figure><p>通过查看分区文件系统类型发现，sdb3并未进行格式化系统类型！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mount /dev/sdb3 /mnt</span></span><br><span class="line">mount: /dev/sdb3 写保护，将以只读方式挂载</span><br><span class="line">mount: 未知的文件系统类型“(null)”</span><br></pre></td></tr></table></figure><hr><h2 id="将-dev-sdb3进行格式化文件系统类型为xfs"><a href="#将-dev-sdb3进行格式化文件系统类型为xfs" class="headerlink" title="将/dev/sdb3进行格式化文件系统类型为xfs"></a>将<code>/dev/sdb3</code>进行格式化文件系统类型为<code>xfs</code></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs /dev/sdb3</span></span><br><span class="line">meta-data=/dev/sdb3              isize=512    agcount=4, agsize=700351 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=2801403, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">[root@localhost ~]<span class="comment"># lsblk -f</span></span><br><span class="line">NAME   FSTYPE   LABEL          UUID                                   MOUNTPOINT</span><br><span class="line">sda</span><br><span class="line">├─sda1 xfs                     7fdc921b-f892-4c21-8f87-97f26f936673   /boot</span><br><span class="line">└─sda2 LVM2_mem                LYVzwm-oAOF-Uxwx-m6tO-Ocrx-D64J-wvpb3G</span><br><span class="line">  ├─centos-root</span><br><span class="line">       xfs                     745e580c-314d-4419-b634-97ea40c4ee49   /</span><br><span class="line">  └─centos-swap</span><br><span class="line">       swap                    dbb971fd-25ea-43d9-b515-87fd10cba0de   [SWAP]</span><br><span class="line">sdb</span><br><span class="line">├─sdb1 ext4                    2ddcc1b2-2acf-4011-8c1b-1ee2858775d7</span><br><span class="line">├─sdb2 xfs                     af6080aa-49e9-4319-a1a7-d0da302cdd01</span><br><span class="line">└─sdb3 xfs                     a2c0eae1-c538-4213-a97e-2f7e50153a19</span><br><span class="line">sr0    iso9660  CentOS 7 x86_64</span><br><span class="line">                               2018-11-25-21-21-31-00</span><br></pre></td></tr></table></figure><p>成功格式化！</p><hr><h2 id="再次挂载"><a href="#再次挂载" class="headerlink" title="再次挂载"></a>再次挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mount /dev/sdb3 /mnt</span></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>无提示是最好的提示！</p><hr><h2 id="查看挂载情况-1"><a href="#查看挂载情况-1" class="headerlink" title="查看挂载情况"></a>查看挂载情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -hT</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  899M     0  899M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  2.6G   15G   15% /</span><br><span class="line">/dev/sda1               xfs      1014M  189M  826M   19% /boot</span><br><span class="line">tmpfs                   tmpfs     182M     0  182M    0% /run/user/0</span><br><span class="line">/dev/sdb3               xfs        11G   33M   11G    1% /mnt</span><br></pre></td></tr></table></figure><p>第10行我们发现成功将磁盘挂载！</p><hr><h2 id="使用挂载后的磁盘"><a href="#使用挂载后的磁盘" class="headerlink" title="使用挂载后的磁盘"></a>使用挂载后的磁盘</h2><p>切换至<code>/mnt</code>目录下，生成一个大文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt</span><br><span class="line"><span class="built_in">echo</span> &#123;1..99999&#125; &gt; big.txt</span><br><span class="line"><span class="built_in">echo</span> &#123;1..99999&#125; &gt;&gt; big.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cd /mnt</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># echo &#123;1..99999&#125; &gt; big.txt</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># echo &#123;1..99999&#125; &gt;&gt; big.txt</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># du -h *</span></span><br><span class="line">1.6M    big.txt</span><br></pre></td></tr></table></figure><h2 id="取消挂载"><a href="#取消挂载" class="headerlink" title="取消挂载"></a>取消挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount &lt;挂载点&gt;或者&lt;设备&gt;</span><br></pre></td></tr></table></figure><blockquote><p>注意！</p><p>取消挂载前必须没有人正在使用！</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment">#  umount /mnt</span></span><br><span class="line">umount: /mnt：目标忙。</span><br><span class="line">        (有些情况下通过 lsof(8) 或 fuser(1) 可以</span><br><span class="line">         找到有关使用该设备的进程的有用信息)</span><br></pre></td></tr></table></figure><p>上面取消挂载失败，是因为我们正处在&#x2F;mnt目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># cd /</span></span><br><span class="line">[root@localhost /]<span class="comment">#  umount /mnt</span></span><br></pre></td></tr></table></figure><p>取消成功！</p><h2 id="以只读形式挂载-x2F-dev-x2F-sdb3"><a href="#以只读形式挂载-x2F-dev-x2F-sdb3" class="headerlink" title="以只读形式挂载&#x2F;dev&#x2F;sdb3"></a>以只读形式挂载&#x2F;dev&#x2F;sdb3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># mount -o ro /dev/sdb3 /mnt</span></span><br><span class="line">[root@localhost /]<span class="comment"># cd /mnt/</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># ls</span></span><br><span class="line">big.txt</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;big.txt&quot;</span> [<span class="built_in">readonly</span>] 2L, 1177776C</span><br></pre></td></tr></table></figure><p>挂载成功且能够读取big.txt但不能修改！</p><h2 id="尝试创建新文件"><a href="#尝试创建新文件" class="headerlink" title="尝试创建新文件"></a>尝试创建新文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># touch test</span></span><br><span class="line"><span class="built_in">touch</span>: 无法创建<span class="string">&quot;test&quot;</span>: 只读文件系统</span><br></pre></td></tr></table></figure><h2 id="禁止挂载的设备执行二进制文件"><a href="#禁止挂载的设备执行二进制文件" class="headerlink" title="禁止挂载的设备执行二进制文件"></a>禁止挂载的设备执行二进制文件</h2><blockquote><p>先将sdb3取消挂载</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">umount /mnt</span><br></pre></td></tr></table></figure><blockquote><p>再执行挂载</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -o noexec /dev/sdb3 /mnt</span><br></pre></td></tr></table></figure><blockquote><p>创建一个简单脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># vi test.sh</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># cat test.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Test&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>执行脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost mnt]<span class="comment"># . test.sh</span></span><br><span class="line">Test</span><br><span class="line">[root@localhost mnt]<span class="comment"># bash test.sh</span></span><br><span class="line">Test</span><br><span class="line"><span class="comment">#######</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># ./test.sh</span></span><br><span class="line">-bash: ./test.sh: 权限不够</span><br><span class="line">[root@localhost mnt]<span class="comment"># chmod +x test.sh</span></span><br><span class="line">[root@localhost mnt]<span class="comment"># ls -l</span></span><br><span class="line">总用量 1156</span><br><span class="line">-rw-r--r--. 1 root root 1177776 8月   2 11:18 big.txt</span><br><span class="line">-rwxr-xr-x. 1 root root      24 8月   2 12:08 test.sh</span><br><span class="line">[root@localhost mnt]<span class="comment"># ./test.sh</span></span><br><span class="line">-bash: ./test.sh: 权限不够</span><br></pre></td></tr></table></figure><p>我们发现使用 <code>.</code>或<code>bash</code> 方式能够成功执行<code>test.sh</code>，但无法直接<code>./test.sh</code>执行文件，就算赋予了执行权限也不能执行！这就是<code>noexec</code>的作用！</p>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> 磁盘管理 </tag>
            
            <tag> mount </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘管理part2</title>
      <link href="/posts/894506459/"/>
      <url>/posts/894506459/</url>
      
        <content type="html"><![CDATA[<p><a href="https://lptexas.top/posts/2891465825/">续Linux磁盘管理part1</a></p><h1 id="软链接"><a href="#软链接" class="headerlink" title="软链接"></a>软链接</h1><blockquote><p>作用就类似windows的快捷方式；</p><p>可以快捷的指向另一个文件的特殊文件。</p><p>源文件如果删除，快捷方式也就失效了！</p></blockquote><h2 id="ln命令"><a href="#ln命令" class="headerlink" title="ln命令"></a>ln命令</h2><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> [options] [目标文件] [快捷方式]</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-s 创建符号链接，软链接、快捷方式</span><br><span class="line"><span class="comment">#ln -s 目标文件绝对路径 快捷方式绝对路径</span></span><br></pre></td></tr></table></figure><h2 id="查询软链接文件本身"><a href="#查询软链接文件本身" class="headerlink" title="查询软链接文件本身"></a>查询软链接文件本身</h2><blockquote><p>我们执行软链接文件时，其实就是执行软链接文件所指的文件，那么软链接文件本身又有什么内容呢？</p></blockquote><h3 id="readlink命令"><a href="#readlink命令" class="headerlink" title="readlink命令"></a>readlink命令</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readlink <span class="tag">&lt;<span class="name">软链接文件</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用这条命令我们发现，软链接文件内容就是源文件的路径。</p><h1 id="硬链接"><a href="#硬链接" class="headerlink" title="硬链接"></a>硬链接</h1><blockquote><p>先复习一下，什么是块？</p><p>1个块是8个连续扇区，大小4kb，块是读写最小单位。</p></blockquote><h2 id="创建硬链接"><a href="#创建硬链接" class="headerlink" title="创建硬链接"></a>创建硬链接</h2><p><strong>硬链接</strong></p><p>一般情况下，文件名和inode号是一一对应的。</p><p>软链接的inode号码，是不一样的，代表软链接文件，是两个单个的文件，硬链接的inode号是一样的。</p><p><strong>创建命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> 目标文件 硬链接文件路径</span><br></pre></td></tr></table></figure><p>使用此命令创建的硬链接，inode号相同！</p><h2 id="inode"><a href="#inode" class="headerlink" title="inode"></a>inode</h2><blockquote><p>操作系统中专门用于管理和存储文件的信息软件，称之为文件系统。</p><p>文件是以文件数据+文件元信息组成的，文件的inode号+文件的数据内容，代表一个单个文件。</p><p>信息系统又称文件元信息（源信息，存放文件的创建信息，修改信息，文件大小，等等）。</p><p>文件系统将文件的源信息等等存储在了一个称之为inode区域的地方，中文叫做“索引节点”。</p></blockquote><h2 id="inode大小关系"><a href="#inode大小关系" class="headerlink" title="inode大小关系"></a>inode大小关系</h2><p>磁盘在格式化的时候，系统自动的分为两部分，一部分是元数据区域，存放文件的inode信息，另一个是文件数据的内容区域。</p><p>每个inode的大小，都是在格式化分区的时候决定的，默认是128字节或者256字节。</p><h3 id="如何验证大小"><a href="#如何验证大小" class="headerlink" title="如何验证大小?"></a><a href="https://blog.csdn.net/qq_34412985/article/details/77802964#:~:text=%E6%9F%A5%E7%9C%8BInode%E5%A4%A7%E5%B0%8F%20dumpe2fs%20%2Fdev%2Fsda1%7Cgrep,-i%20%22Inode%20size%22%20linux%E7%9A%84centos5.8%E6%98%AF128%E5%AD%97%E8%8A%82%2C6.4%E6%98%AF256%E5%AD%97%E8%8A%82">如何验证大小?</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dumpe2fs -h /dev/vda1|grep -i <span class="string">&#x27;inode size&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><blockquote><p>使用ls -l &lt;任意文件&gt;查看文件详细内容</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-rw-r--r--.  1 root root    6788 7月  24 19:10 access.log</span><br><span class="line">-rw-------.  1 root root    1257 7月  12 21:15 anaconda-ks.cfg</span><br></pre></td></tr></table></figure><p>第二列的数字<code>1</code>代表该文件为硬链接</p><h3 id="查看inode号"><a href="#查看inode号" class="headerlink" title="查看inode号"></a>查看inode号</h3><blockquote><p>使用ls -li &lt;任意文件&gt;在详细内容前再加上inode号</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">33574991 -rw-r--r--.  1 root root    6788 7月  24 19:10 access.log</span><br><span class="line">33574979 -rw-------.  1 root root    1257 7月  12 21:15 anaconda-ks.cfg</span><br></pre></td></tr></table></figure><p>通过ls -l 查看到的数据，只有文件名不属于inode存储的元信息。</p><p>inode元数据区保存：</p><ul><li>文件大小</li><li>属主信息</li><li>文件权限数字</li><li>文件修改时间</li><li>文件的实体指针（指向block位置）</li></ul><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -hT</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># df -hT</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">devtmpfs                devtmpfs  899M     0  899M    0% /dev</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     910M  9.6M  901M    2% /run</span><br><span class="line">tmpfs                   tmpfs     910M     0  910M    0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/centos-root xfs        17G  2.6G   15G   15% /</span><br><span class="line">/dev/sda1               xfs      1014M  189M  826M   19% /boot</span><br><span class="line">tmpfs                   tmpfs     182M     0  182M    0% /run/user/0</span><br></pre></td></tr></table></figure><h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><ol><li>用户通过查询文件名，打开文件；</li><li>系统找到文件inode号；</li><li>根据inode号找到文件所在磁盘block，然后读取。</li></ol><h1 id="软链接与硬链接"><a href="#软链接与硬链接" class="headerlink" title="软链接与硬链接"></a>软链接与硬链接</h1><h2 id="软链接特点"><a href="#软链接特点" class="headerlink" title="软链接特点"></a>软链接特点</h2><ol><li>inode号码不同</li><li>软链接可以针对文件夹</li></ol><h2 id="硬链接特点"><a href="#硬链接特点" class="headerlink" title="硬链接特点"></a>硬链接特点</h2><ol><li>一般情况，文件名和inode一一对应</li><li>目录文件夹不支持硬链接</li><li>硬链接数量增加，会增加inode号的计数</li></ol><h2 id="综合比较"><a href="#综合比较" class="headerlink" title="综合比较"></a>综合比较</h2><ol><li>删除软链接对源文件和硬链接无影响；</li><li>删除硬链接，对软链接、源文件也是无影响；</li><li>删除源文件，对硬链接是无影响的，但是影响软链接（我的理解是：当我们删文件时，只是把指针干掉，磁盘上的数据还是在的，而硬链接inode指向了数据所在位置，所以硬链接还是可以读取）；</li><li>只有删除所有的原文件和硬链接，文件的连接数就为0了，此时文件数据丢失；</li><li>源文件和硬链接具有相同的inode号；</li><li>软链接和源文件的inode号码不同，因此是两个单独的文件！</li></ol><h1 id="文件系统格式化"><a href="#文件系统格式化" class="headerlink" title="文件系统格式化"></a>文件系统格式化</h1><h2 id="vfs文件系统"><a href="#vfs文件系统" class="headerlink" title="vfs文件系统"></a>vfs文件系统</h2><blockquote><p>virtualenv File System</p><p>虚拟文件系统</p></blockquote><p>Linux系统的文件系统格式有ext2、ext3、ext4等，vfs处于应用程序与具体文件系统之间，能够实现对多种不同类型的文件进行统一管理。</p><h2 id="不同平台的文件系统"><a href="#不同平台的文件系统" class="headerlink" title="不同平台的文件系统"></a>不同平台的文件系统</h2><h3 id="windows-98平台"><a href="#windows-98平台" class="headerlink" title="windows 98平台"></a>windows 98平台</h3><p>FAT FAT16 FAT32</p><h3 id="windows-2000"><a href="#windows-2000" class="headerlink" title="windows 2000"></a>windows 2000</h3><p>NTFS</p><h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>ext2 ext3(centos5) ext4(centos6) xfs(centos7)</p><h3 id="网络共享文件系统"><a href="#网络共享文件系统" class="headerlink" title="网络共享文件系统"></a>网络共享文件系统</h3><p>nfs,network file system</p><p>smb,server message block 服务消息块</p><h3 id="集群文件系统"><a href="#集群文件系统" class="headerlink" title="集群文件系统"></a>集群文件系统</h3><p>gfs,google file system #谷歌公司为了存储海量数据而开发的文件系统</p><p>ocfs,oracle cluster file system #甲骨文公司为了数据库研发平台而定制的文件系统</p><h3 id="分布式文件系统"><a href="#分布式文件系统" class="headerlink" title="分布式文件系统"></a>分布式文件系统</h3><p>ceph 为了存储的可靠性和拓展性的分布式文件系统</p><h3 id="交换文件系统"><a href="#交换文件系统" class="headerlink" title="交换文件系统"></a>交换文件系统</h3><p>swap</p><h3 id="区别在于"><a href="#区别在于" class="headerlink" title="区别在于"></a><strong>区别在于</strong></h3><blockquote><p><strong>是否日志型文件系统</strong></p></blockquote><p>日志型文件系统原理：</p><p>磁盘是有个区域用于保存日志</p><ol><li>数据写入日志区域</li><li>再应用到文件系统</li><li>能通过读取日志进行数据恢复</li></ol><h1 id="文件系统创建工具"><a href="#文件系统创建工具" class="headerlink" title="文件系统创建工具"></a>文件系统创建工具</h1><h2 id="创建文件系统"><a href="#创建文件系统" class="headerlink" title="创建文件系统"></a>创建文件系统</h2><h3 id="mkfs命令"><a href="#mkfs命令" class="headerlink" title="mkfs命令"></a>mkfs命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs</span></span><br><span class="line">mkfs         mkfs.cramfs  mkfs.ext3    mkfs.minix</span><br><span class="line">mkfs.btrfs   mkfs.ext2    mkfs.ext4    mkfs.xfs</span><br></pre></td></tr></table></figure><p>使用特定的命令，可以创建不同的文件系统。</p><h3 id="fsck命令"><a href="#fsck命令" class="headerlink" title="fsck命令"></a>fsck命令</h3><blockquote><p>修复文件系统的命令</p></blockquote><p>开机时，默认读取<code>/etc/fstab</code>即开机挂载文件</p><h2 id="查看文件系统属性"><a href="#查看文件系统属性" class="headerlink" title="查看文件系统属性"></a>查看文件系统属性</h2><h3 id="dumpe2f命令"><a href="#dumpe2f命令" class="headerlink" title="dumpe2f命令"></a>dumpe2f命令</h3><blockquote><p>用于centos7之前的系统</p></blockquote><p>打印系统文件的块组信息，使用与ext2~4</p><h3 id="tune2fs命令"><a href="#tune2fs命令" class="headerlink" title="tune2fs命令"></a>tune2fs命令</h3><blockquote><p>centos7以后的系统</p></blockquote><p>设置linux是否开机自启检查文件系统正常与否</p><h3 id="lsblk命令"><a href="#lsblk命令" class="headerlink" title="lsblk命令"></a>lsblk命令</h3><p>列出所有设备以及文件系统信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk -f <span class="comment">#列出分区的文件系统类型</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lsblk -f</span></span><br><span class="line">NAME   FSTYPE   LABEL          UUID                                   MOUNTPOINT</span><br><span class="line">sda</span><br><span class="line">├─sda1 xfs                     7fdc921b-f892-4c21-8f87-97f26f936673   /boot</span><br><span class="line">└─sda2 LVM2_mem                LYVzwm-oAOF-Uxwx-m6tO-Ocrx-D64J-wvpb3G</span><br><span class="line">  ├─centos-root</span><br><span class="line">       xfs                     745e580c-314d-4419-b634-97ea40c4ee49   /</span><br><span class="line">  └─centos-swap</span><br><span class="line">       swap                    dbb971fd-25ea-43d9-b515-87fd10cba0de   [SWAP]</span><br><span class="line">sdb</span><br><span class="line">├─sdb1</span><br><span class="line">└─sdb2</span><br><span class="line">sr0    iso9660  CentOS 7 x86_64</span><br><span class="line">                               2018-11-25-21-21-31-00</span><br></pre></td></tr></table></figure><h2 id="实践格式化文件系统"><a href="#实践格式化文件系统" class="headerlink" title="实践格式化文件系统"></a>实践格式化文件系统</h2><p>我们从上面可以看到sdb的两个分区并没有文件系统</p><h3 id="为sdb1设置ext4文件系统"><a href="#为sdb1设置ext4文件系统" class="headerlink" title="为sdb1设置ext4文件系统"></a>为sdb1设置ext4文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sdb1</span><br></pre></td></tr></table></figure><p>提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.ext4 /dev/sdb1</span></span><br><span class="line">mke2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">文件系统标签=</span><br><span class="line">OS <span class="built_in">type</span>: Linux</span><br><span class="line">块大小=1024 (<span class="built_in">log</span>=0)</span><br><span class="line">分块大小=1024 (<span class="built_in">log</span>=0)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">122400 inodes, 488264 blocks</span><br><span class="line">24413 blocks (5.00%) reserved <span class="keyword">for</span> the super user</span><br><span class="line">第一个数据块=1</span><br><span class="line">Maximum filesystem blocks=34078720</span><br><span class="line">60 block <span class="built_in">groups</span></span><br><span class="line">8192 blocks per group, 8192 fragments per group</span><br><span class="line">2040 inodes per group</span><br><span class="line">Superblock backups stored on blocks:</span><br><span class="line">        8193, 24577, 40961, 57345, 73729, 204801, 221185, 401409</span><br><span class="line"></span><br><span class="line">Allocating group tables: 完成</span><br><span class="line">正在写入inode表: 完成</span><br><span class="line">Creating journal (8192 blocks): 完成</span><br><span class="line">Writing superblocks and filesystem accounting information: 完成</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="为sdb2设置xfs文件系统"><a href="#为sdb2设置xfs文件系统" class="headerlink" title="为sdb2设置xfs文件系统"></a>为sdb2设置xfs文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/sdb2</span><br></pre></td></tr></table></figure><p>提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># mkfs.xfs /dev/sdb2</span></span><br><span class="line">meta-data=/dev/sdb2              isize=512    agcount=4, agsize=579776 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=1        finobt=0, sparse=0</span><br><span class="line">data     =                       bsize=4096   blocks=2319104, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=1</span><br><span class="line"><span class="built_in">log</span>      =internal <span class="built_in">log</span>           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="查看一下结果"><a href="#查看一下结果" class="headerlink" title="查看一下结果"></a>查看一下结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># lsblk -f</span></span><br><span class="line">NAME   FSTYPE   LABEL          UUID                                   MOUNTPOINT</span><br><span class="line">sda</span><br><span class="line">├─sda1 xfs                     7fdc921b-f892-4c21-8f87-97f26f936673   /boot</span><br><span class="line">└─sda2 LVM2_mem                LYVzwm-oAOF-Uxwx-m6tO-Ocrx-D64J-wvpb3G</span><br><span class="line">  ├─centos-root</span><br><span class="line">       xfs                     745e580c-314d-4419-b634-97ea40c4ee49   /</span><br><span class="line">  └─centos-swap</span><br><span class="line">       swap                    dbb971fd-25ea-43d9-b515-87fd10cba0de   [SWAP]</span><br><span class="line">sdb</span><br><span class="line">├─sdb1 ext4                    2ddcc1b2-2acf-4011-8c1b-1ee2858775d7</span><br><span class="line">└─sdb2 xfs                     af6080aa-49e9-4319-a1a7-d0da302cdd01</span><br><span class="line">sr0    iso9660  CentOS 7 x86_64</span><br><span class="line">                               2018-11-25-21-21-31-00</span><br></pre></td></tr></table></figure><h2 id="关闭文件系统自检"><a href="#关闭文件系统自检" class="headerlink" title="关闭文件系统自检"></a>关闭文件系统自检</h2><blockquote><p>开机自检一般会占用很多时间，我们一般会把它关闭。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># tune2fs -c -1 /dev/sdb1</span></span><br><span class="line">tune2fs 1.42.9 (28-Dec-2013)</span><br><span class="line">Setting maximal mount count to -1</span><br></pre></td></tr></table></figure><h2 id="禁止文件系统开机修复错误"><a href="#禁止文件系统开机修复错误" class="headerlink" title="禁止文件系统开机修复错误"></a>禁止文件系统开机修复错误</h2><blockquote><p>修改<code>/etc/fstab</code>文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line"><span class="comment">#这一行的数据</span></span><br></pre></td></tr></table></figure><p>结尾数字为0表示不检查，1表示检查错误</p><h2 id="针对磁盘进行修复检查"><a href="#针对磁盘进行修复检查" class="headerlink" title="针对磁盘进行修复检查"></a>针对磁盘进行修复检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsck -t 文件系统类型 设备名</span><br></pre></td></tr></table></figure><h3 id="修复sdb2"><a href="#修复sdb2" class="headerlink" title="修复sdb2"></a>修复sdb2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsck -t xfs /dev/sdb2</span><br></pre></td></tr></table></figure><p>我们输入以上内容后，报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fsck -t xfs /dev/sdb2</span></span><br><span class="line">fsck，来自 util-linux 2.23.2</span><br><span class="line">If you wish to check the consistency of an XFS filesystem or</span><br><span class="line">repair a damaged filesystem, see xfs_repair(8).</span><br></pre></td></tr></table></figure><p>意思是fsck 对于xfs系统来说已经不支持了，需要换成<code>xfs_repair</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># xfs_repair /dev/sdb2</span></span><br><span class="line">Phase 1 - find and verify superblock...</span><br><span class="line">Phase 2 - using internal <span class="built_in">log</span></span><br><span class="line">        - zero <span class="built_in">log</span>...</span><br><span class="line">        - scan filesystem freespace and inode maps...</span><br><span class="line">        - found root inode chunk</span><br><span class="line">Phase 3 - <span class="keyword">for</span> each AG...</span><br><span class="line">        - scan and clear agi unlinked lists...</span><br><span class="line">        - process known inodes and perform inode discovery...</span><br><span class="line">        - agno = 0</span><br><span class="line">        - agno = 1</span><br><span class="line">        - agno = 2</span><br><span class="line">        - agno = 3</span><br><span class="line">        - process newly discovered inodes...</span><br><span class="line">Phase 4 - check <span class="keyword">for</span> duplicate blocks...</span><br><span class="line">        - setting up duplicate extent list...</span><br><span class="line">        - check <span class="keyword">for</span> inodes claiming duplicate blocks...</span><br><span class="line">        - agno = 0</span><br><span class="line">        - agno = 1</span><br><span class="line">        - agno = 2</span><br><span class="line">        - agno = 3</span><br><span class="line">Phase 5 - rebuild AG headers and trees...</span><br><span class="line">        - reset superblock...</span><br><span class="line">Phase 6 - check inode connectivity...</span><br><span class="line">        - resetting contents of realtime bitmap and summary inodes</span><br><span class="line">        - traversing filesystem ...</span><br><span class="line">        - traversal finished ...</span><br><span class="line">        - moving disconnected inodes to lost+found ...</span><br><span class="line">Phase 7 - verify and correct <span class="built_in">link</span> counts...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="修复sdb1"><a href="#修复sdb1" class="headerlink" title="修复sdb1"></a>修复sdb1</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fsck -t ext4 /dev/sdb1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fsck -t ext4 /dev/sdb1</span></span><br><span class="line">fsck，来自 util-linux 2.23.2</span><br><span class="line">e2fsck 1.42.9 (28-Dec-2013)</span><br><span class="line">/dev/sdb1: clean, 11/122400 files, 25976/488264 blocks</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> 磁盘管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>废物利用让你的旧手机变成一台服务器</title>
      <link href="/posts/3920477481/"/>
      <url>/posts/3920477481/</url>
      
        <content type="html"><![CDATA[<p>文章涉及到Termux开启ssh、安装Java、使用spigot自行构建服务端、使用frp内网穿透开放服务器。</p><h1 id="下载termux"><a href="#下载termux" class="headerlink" title="下载termux"></a>下载termux</h1><h2 id="APP下载"><a href="#APP下载" class="headerlink" title="APP下载"></a>APP下载</h2><p>Termux 官网</p><p><a href="https://termux.com/">https://termux.com/</a></p><p>GitHub</p><p><a href="https://github.com/termux/termux-app">https://github.com/termux/termux-app</a></p><p>F-Droid</p><p><a href="https://f-droid.org/zh_Hant/packages/com.termux">https://f-droid.org/zh_Hant/packages/com.termux</a></p><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><blockquote><p>清华源</p></blockquote><p>中间卡住了就多回车几次！（Y&#x2F;N）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*stable main\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/termux-packages-24 stable main@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*games stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/game-packages-24 games stable@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list.d/game.list</span><br><span class="line"></span><br><span class="line">sed -i <span class="string">&#x27;s@^\(deb.*science stable\)$@#\1\ndeb https://mirrors.tuna.tsinghua.edu.cn/termux/science-packages-24 science stable@&#x27;</span> <span class="variable">$PREFIX</span>/etc/apt/sources.list.d/science.list</span><br><span class="line"></span><br><span class="line">pkg up</span><br></pre></td></tr></table></figure><h2 id="安装openssh"><a href="#安装openssh" class="headerlink" title="安装openssh"></a>安装openssh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install openssh</span><br></pre></td></tr></table></figure><h2 id="运行SSH-Server"><a href="#运行SSH-Server" class="headerlink" title="运行SSH Server"></a>运行SSH Server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sshd</span><br></pre></td></tr></table></figure><h2 id="配置密码"><a href="#配置密码" class="headerlink" title="配置密码"></a>配置密码</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">passwd</span></span><br></pre></td></tr></table></figure><h2 id="获取IP和当前用户名"><a href="#获取IP和当前用户名" class="headerlink" title="获取IP和当前用户名"></a>获取IP和当前用户名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br><span class="line"><span class="built_in">whoami</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">~ $ ifconfig</span><br><span class="line">lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536</span><br><span class="line">        inet 127.0.0.1  netmask 255.0.0.0</span><br><span class="line">        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 1000  (UNSPEC)</span><br><span class="line"></span><br><span class="line">wlan0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.31.90  netmask 255.255.255.0  broadcast 192.168.31.255</span><br><span class="line">        unspec 00-00-00-00-00-00-00-00-00-00-00-00-00-00-00-00  txqueuelen 3000  (UNSPEC)</span><br><span class="line">~ $ <span class="built_in">whoami</span></span><br><span class="line">u0_a479</span><br></pre></td></tr></table></figure><p>wlan0网卡下的ip才是我们需要的ip！（inet后的ip地址 192.168.31.90 每台设备可能不一样）</p><h1 id="使用ssh连接"><a href="#使用ssh连接" class="headerlink" title="使用ssh连接"></a>使用ssh连接</h1><p>首先确保在同一个网络下（同一个WiFi下）。</p><p>远程连接客户端我这里使用<a href="https://mobaxterm.mobatek.net/">mobaxterm工具</a>，创建ssh主要是想利用电脑进行操作，而且还能用moba传文件十分方便。</p><p><a href="http://jingyan.baidu.com/article/375c8e1905ab9c25f2a229bd.html">moba连接ssh的方法</a>，这里不做详解。</p><p><img src="/img/post/image-20220731101607802.png" alt="image-20220731101607802"></p><h1 id="配置Java环境"><a href="#配置Java环境" class="headerlink" title="配置Java环境"></a>配置Java环境</h1><p>由于termux目前只提供openjdk17，其它版本的Java需要经过termux编译才能安装（安装方法还在研究中），所以我们这次使用的minecraft服务端为1.17.1以上的版本，其它版本的服务端由于Java17版本过高而不支持！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install openjdk-17</span><br><span class="line">java --version <span class="comment">#查看版本</span></span><br></pre></td></tr></table></figure><h1 id="构建并启用mc服务端"><a href="#构建并启用mc服务端" class="headerlink" title="构建并启用mc服务端"></a>构建并启用mc服务端</h1><h2 id="在家目录"><a href="#在家目录" class="headerlink" title="在家目录"></a>在家目录</h2><blockquote><p>&#x2F;data&#x2F;data&#x2F;com.termux&#x2F;files&#x2F;home下新建&#x2F;mcserv&#x2F;目录，后面的操作均在mcserv目录中进行！</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> mcserv/</span><br></pre></td></tr></table></figure><h2 id="下载-buildtools-for-spigot"><a href="#下载-buildtools-for-spigot" class="headerlink" title="下载 buildtools for spigot"></a>下载 buildtools for spigot</h2><p><a href="https://hub.spigotmc.org/jenkins/job/BuildTools/">spigotmc官网</a></p><p>下载好后直接拖入scp窗口，即可</p><h2 id="安装git工具"><a href="#安装git工具" class="headerlink" title="安装git工具"></a>安装git工具</h2><blockquote><p>这是为了配合下一步的构建</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install git</span><br></pre></td></tr></table></figure><h2 id="构建服务端"><a href="#构建服务端" class="headerlink" title="构建服务端"></a>构建服务端</h2><blockquote><p>秉持着授人以鱼不如授人以渔的观念，这里讲一下如何构建spigot服务端<del>（虽然官网有教xD）</del></p></blockquote><p><a href="https://www.spigotmc.org/wiki/buildtools/#1-19">1.19</a></p><p><a href="https://www.spigotmc.org/wiki/buildtools/#1-18-2">1.18.2</a></p><hr><p>这里以<code>1.18.2</code>作为演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar BuildTools.jar --rev 1.18.2</span><br></pre></td></tr></table></figure><p>这个过程有亿点漫长…….请耐心</p><p>特别是在下载<a href="https://launcher.mojang.com/v1/objects/c8f83c5655308435b3dcf03c06d9fe8740a77469/server.jar">server.jar</a>的时候。<strong>建议手机挂一个梯子</strong>，这样会快一点！</p><p>~~看着代码刷刷刷的，还是很爽的 嘻嘻嘻~~~~~</p><p>如果不想等待的同学，可以直接用我后面发的构建好的项目！</p><p>构建完毕后，目录中就会出现服务端文件</p><p><code>spigot-1.18.2.jar</code></p><p><img src="/img/post/image-20220731112225625.png" alt="image-20220731112225625"></p><h2 id="启用服务端"><a href="#启用服务端" class="headerlink" title="启用服务端"></a>启用服务端</h2><blockquote><p>我们需要的只有服务端文件，其它的文件可以清理掉~~</p></blockquote><p>在当前目录下执行如下命令就可以启用服务端了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Xms<span class="comment">#G -Xmx#G -XX:+UseG1GC -jar spigot.jar nogui</span></span><br></pre></td></tr></table></figure><ul><li><code>#G</code>处设置运行内存大小，<code>Xms</code>表示最小，<code>Xmx</code>表示最大</li><li><code>spigot.jar</code>处设置运行的服务端名，此处设置为<code>spigot-1.18.2.jar</code></li><li><code>nogui</code>表示无图形化启动，启用可以节省内存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Xms2G -Xmx2G -XX:+UseG1GC -jar spigot-1.18.2.jar nogui</span><br></pre></td></tr></table></figure><p>服务端需要启动两次，第一次会生成<code>eula.txt</code>文件，需要修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eula=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>再次启动，服务器就开始正式加载了！</p><ul><li><p>默认线上模式（online-mode）：true（与朋友联机请关闭）</p></li><li><p>服务器默认端口为（port）:25565</p></li></ul><p>我们可以通过对<code>server.properties</code>文件编辑进行修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">online-mode=<span class="literal">false</span></span><br><span class="line">server-port=25565</span><br></pre></td></tr></table></figure><p>其它更多设置，请参阅<a href="https://www.spigotmc.org/wiki/spigot-configuration-server-properties/">mcwiki</a></p><h1 id="内网穿透"><a href="#内网穿透" class="headerlink" title="内网穿透"></a>内网穿透</h1><blockquote><p>这里我列出一些免费的内网穿透工具，使用方法也很简单，我就暂时不做详细的介绍了</p></blockquote><h2 id="免费服务"><a href="#免费服务" class="headerlink" title="免费服务"></a>免费服务</h2><p><a href="https://natapp.cn/">NATAPP</a></p><p>提供Linux客户端，不知道能不能装上Termux。</p><p><a href="https://www.ngrok.cc/download.html">Sunny-ngrok</a></p><p>ngrok以前很火的，现在不知道怎么样了，还有个叫“<a href="">魔法隧道</a>”的网站也是用ngrok实现穿透的，现在好像停止运行了</p><p><a href="https://www.natfrp.com/?page=register">Sakura-frp</a></p><p>一款利用frp技术实现内网穿透的工具，提供免费的服务~</p><p><em>更多待补充~</em>~~</p><h2 id="frp配置"><a href="#frp配置" class="headerlink" title="frp配置"></a>frp配置</h2><p>到这一步需要有<code>外网主机</code>并且<code>搭建了frp服务端</code>的同学继续往下看</p><blockquote><p>首先把vim文档编辑工具装一下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install vim -y</span><br></pre></td></tr></table></figure><blockquote><p>Termux提供frp工具包，我们可以直接使用pkg命令安装</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install frpc</span><br></pre></td></tr></table></figure><p>查看一下执行文件装在哪个路径了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis frpc</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc: /data/data/com.termux/files/usr/bin/frpc</span><br></pre></td></tr></table></figure><p>保存一下路径</p><p>回到mcserv目录下，新建frpc.ini文件，编辑，写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">token = 密钥（与公网服务器配置frps.ini一致）</span><br><span class="line">admin_addr = 127.0.0.1</span><br><span class="line">admin_port = 7400</span><br><span class="line">admin_user = root</span><br><span class="line">admin_pwd = 管理面板密码</span><br><span class="line">server_addr = 公网服务器IP</span><br><span class="line">server_port = 服务器监听端口</span><br><span class="line">authentication_method = token</span><br><span class="line">authenticate_new_work_conns = <span class="literal">true</span></span><br><span class="line">tls_enable = <span class="literal">true</span></span><br><span class="line">[mc]</span><br><span class="line"><span class="built_in">type</span>=tcp</span><br><span class="line">local_ip=127.0.0.1</span><br><span class="line">local_port=25565</span><br><span class="line">remote_port=25565</span><br></pre></td></tr></table></figure><p>在mcserv目录下运行frp</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/data/</span>data<span class="regexp">/com.termux/</span>files<span class="regexp">/usr/</span>bin/frpc -c frpc.ini</span><br></pre></td></tr></table></figure><p>这样我们就实现了转发本地服务器到公网IP:25565（进入游戏添加服务器时，25565可以省略不写，因为是默认的）</p><p>联机时，可以直接输入公网地址IP:25565就可以一起快乐游玩了~~</p><p>如何使用frp可以看之前的文章，<a href="https://lptexas.top/posts/2082847749/">#在Linux服务器下搭建frp内网穿透服务</a></p><p>如果有哪些不足，还请多多指教~~</p><h2 id="服务端资源"><a href="#服务端资源" class="headerlink" title="服务端资源"></a>服务端资源</h2><blockquote><p>不定期更新哈~~</p><p>如有密码统一为：mchx</p></blockquote><h3 id="spigot"><a href="#spigot" class="headerlink" title="spigot"></a>spigot</h3><p><a href="https://pan.baidu.com/s/1YlvKkQGN89milp-XRPyQnQ?pwd=mchx">1.19</a></p><p><a href="https://pan.baidu.com/s/1E0Jo99J0-urt4MgtxYaO5g?pwd=mchx">1.18.2</a></p><p><a href="https://pan.baidu.com/s/1P0H7imm0Qs06LZvKXaTuXg?pwd=mchx">1.11前</a></p><hr><p><a href="https://pan.baidu.com/s/1kLt6SED69aXu-wrONfZpsQ?pwd=mchx">服务端核心整合（旧版本）</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> 服务器搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
            <tag> Linux </tag>
            
            <tag> Java </tag>
            
            <tag> frp </tag>
            
            <tag> Minecraft </tag>
            
            <tag> ssh </tag>
            
            <tag> Spigot </tag>
            
            <tag> Mobaxterm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo访问速度优化</title>
      <link href="/posts/1947245734/"/>
      <url>/posts/1947245734/</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用gulp优化css、js、html</p><p>使用ImageMagick优化图片</p><p>实现静态资源的优化！</p></blockquote><h1 id="Part-1-Gulp"><a href="#Part-1-Gulp" class="headerlink" title="Part 1 Gulp"></a>Part 1 Gulp</h1><h2 id="安装gulp"><a href="#安装gulp" class="headerlink" title="安装gulp"></a>安装gulp</h2><blockquote><p>gulp，建议全局</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp -g</span><br></pre></td></tr></table></figure><h2 id="安装gulp依赖"><a href="#安装gulp依赖" class="headerlink" title="安装gulp依赖"></a>安装gulp依赖</h2><blockquote><p>不建议使用gulp提供的gulp-imagemin插件，压缩图片</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install gulp-htmlclean gulp-htmlmin gulp-minify-css gulp-uglify --save</span><br></pre></td></tr></table></figure><h2 id="新建gulpfile-js文件"><a href="#新建gulpfile-js文件" class="headerlink" title="新建gulpfile.js文件"></a>新建gulpfile.js文件</h2><blockquote><p>在根目录下，即<code>public</code>文件所在目录</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">// 引入需要的模块</span><br><span class="line">var gulp = require(<span class="string">&#x27;gulp&#x27;</span>);</span><br><span class="line">var minifycss = require(<span class="string">&#x27;gulp-minify-css&#x27;</span>);</span><br><span class="line">var uglify = require(<span class="string">&#x27;gulp-uglify&#x27;</span>);</span><br><span class="line">var htmlmin = require(<span class="string">&#x27;gulp-htmlmin&#x27;</span>);</span><br><span class="line">var htmlclean = require(<span class="string">&#x27;gulp-htmlclean&#x27;</span>);</span><br><span class="line"></span><br><span class="line">// 压缩public目录下所有html文件, minify-html是任务名, 设置为default，启动gulp压缩的时候可以省去任务名</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-html&#x27;</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src(<span class="string">&#x27;./public/**/*.html&#x27;</span>) // 压缩文件所在的目录</span><br><span class="line">        .pipe(htmlclean())</span><br><span class="line">        .pipe(htmlmin(&#123;</span><br><span class="line">            removeComments: <span class="literal">true</span>,</span><br><span class="line">            minifyJS: <span class="literal">true</span>,</span><br><span class="line">            minifyCSS: <span class="literal">true</span>,</span><br><span class="line">            minifyURLs: <span class="literal">true</span>,</span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>)) // 输出的目录</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">// 压缩css</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-css&#x27;</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src(<span class="string">&#x27;./public/**/*.css&#x27;</span>)</span><br><span class="line">        .pipe(minifycss(&#123;</span><br><span class="line">            compatibility: <span class="string">&#x27;ie8&#x27;</span></span><br><span class="line">        &#125;))</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">// 压缩js</span><br><span class="line">gulp.task(<span class="string">&#x27;minify-js&#x27;</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">    <span class="built_in">return</span> gulp.src([<span class="string">&#x27;./public/**/.js&#x27;</span>,<span class="string">&#x27;!./public/js/**/*min.js&#x27;</span>])</span><br><span class="line">        .pipe(uglify())</span><br><span class="line">        .pipe(gulp.dest(<span class="string">&#x27;./public&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line">// 默认任务</span><br><span class="line">/*</span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, [</span><br><span class="line">    <span class="string">&#x27;minify-html&#x27;</span>,<span class="string">&#x27;minify-html1&#x27;</span>,<span class="string">&#x27;minify-css&#x27;</span>,<span class="string">&#x27;minify-js&#x27;</span></span><br><span class="line">]);</span><br><span class="line">*/</span><br><span class="line">// gulp 4.0 适用的方式</span><br><span class="line">gulp.task(<span class="string">&#x27;default&#x27;</span>, gulp.parallel(<span class="string">&#x27;minify-html&#x27;</span>,<span class="string">&#x27;minify-css&#x27;</span>,<span class="string">&#x27;minify-js&#x27;</span></span><br><span class="line"> //build the website</span><br><span class="line">));</span><br></pre></td></tr></table></figure><h2 id="完成，执行"><a href="#完成，执行" class="headerlink" title="完成，执行"></a>完成，执行</h2><blockquote><p>使用gulp命令，即可执行优化</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp</span><br></pre></td></tr></table></figure><h1 id="Part-2-ImageMagick"><a href="#Part-2-ImageMagick" class="headerlink" title="Part 2 ImageMagick "></a>Part 2 <a href="https://imagemagick.org/">ImageMagick </a></h1><blockquote><p>用来批量压缩图片</p></blockquote><h2 id="安装ImageMagick"><a href="#安装ImageMagick" class="headerlink" title="安装ImageMagick"></a>安装ImageMagick</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install ImageMagick -y</span><br></pre></td></tr></table></figure><h2 id="批量压缩"><a href="#批量压缩" class="headerlink" title="批量压缩"></a>批量压缩</h2><blockquote><p>仅供参考，你可以执行添加其它参数和其它im支持的图片格式</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find ./public/img/ -regex <span class="string">&#x27;.*\(jpg\|JPG\|png\|PNG\|jpeg\)&#x27;</span> -size +200k -<span class="built_in">print</span> -<span class="built_in">exec</span> convert -quality 85 &#123;&#125; &#123;&#125; \;</span><br></pre></td></tr></table></figure><h3 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h3><p>find命令在 .&#x2F;public&#x2F;img&#x2F;目录下用 正则表达式查找所有jpg…结尾的 大小超过200kb的文件 一一打印（相当于显示输出）然后 exec执行 convert命令（ImageMagick）参数是quality 85，即质量压缩到原来的85%。</p><p><a href="https://www.cnblogs.com/ITtangtang/p/3951240.html">更多参数</a></p><h1 id="Part-3-如何一条命令实现优化和部署？"><a href="#Part-3-如何一条命令实现优化和部署？" class="headerlink" title="Part 3 如何一条命令实现优化和部署？"></a>Part 3 如何一条命令实现优化和部署？</h1><blockquote><p>详情请看之前发布的快捷脚本，<a href="https://lptexas.top/posts/4116585224/#%E8%84%9A%E6%9C%AC2-0%E7%89%88%E6%9C%AC">#脚本2.0版本</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 网站开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Hexo </tag>
            
            <tag> Shell </tag>
            
            <tag> ImageMagick </tag>
            
            <tag> gulp </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux磁盘管理part1</title>
      <link href="/posts/2891465825/"/>
      <url>/posts/2891465825/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux磁盘存储的经典描述"><a href="#Linux磁盘存储的经典描述" class="headerlink" title="Linux磁盘存储的经典描述"></a>Linux磁盘存储的经典描述</h1><blockquote><p>磁盘要放入计算机且被Linux系统识别，到可以使用磁盘存储数据，过程如下： </p></blockquote><ol><li><p>磁盘要存数据，相当于人盖房子 </p></li><li><p>磁盘要分区后才能够存储数据，相当于房子改好了，需要隔断分出卧室，厨房，卫生间等区域 </p></li><li><p>磁盘分区完成后，还得格式化后才能使用，且创建文件系统后才可以存储数据，相当于家里得装修后才能开始住人，不同的文件系统相当于不同的装修风格 </p></li><li><p>磁盘分区，格式化，创建文件系统后，还得进行挂载到不同的文件夹，才能存放数据，相当于房子还得安装门、窗，才能和外界通信，进出</p></li></ol><p><img src="https://lptexas.top/img/post/image-20220730075146306.png" alt="image-20220730075146306"></p><h1 id="机械硬盘内部原理"><a href="#机械硬盘内部原理" class="headerlink" title="机械硬盘内部原理"></a><a href="https://blog.csdn.net/coslay/article/details/42215409">机械硬盘内部原理</a></h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p><code>扇区</code>（sector）是硬盘的最小单位0.5kb&#x3D;512Bytes；</p><p>多个连续的扇区称为<code>块</code>（block）8个扇区，4kb大小（Linux）；</p><p>将物理相邻的若干个扇区称为了一个<code>簇</code>（windows）。</p><hr><p>在Linux系统中，<code>规定</code>：</p><p>一个block只能存放一个文件的内容，因此文件占用的空间大小，只能是block的整数倍。</p><hr><h1 id="计算机单位"><a href="#计算机单位" class="headerlink" title="计算机单位"></a><a href="https://blog.csdn.net/niguang09/article/details/6673465">计算机单位</a></h1><h2 id="容量单位"><a href="#容量单位" class="headerlink" title="容量单位"></a>容量单位</h2><blockquote><p>对于计算机而言，只认识二进制</p></blockquote><p>1 byte（字节） &#x3D; 8 bit（位）</p><p>……</p><h2 id="查询大小的命令"><a href="#查询大小的命令" class="headerlink" title="查询大小的命令"></a>查询大小的命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h ./*</span><br><span class="line"><span class="built_in">ls</span> -hl </span><br></pre></td></tr></table></figure><h1 id="常见的文件系统"><a href="#常见的文件系统" class="headerlink" title="常见的文件系统"></a>常见的文件系统</h1><h2 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h2><p>fat16 fat32 最早的Windows系统文件系统，缺点是单个文件不能超过2GB；</p><p>NTFS文件系统，支持文件加密，采用日志形式的文件系统，详细的记录磁盘读写的系统；</p><p>exfat 文件系统，新式的文件系统，单个文件支持16GB大小，能够在Windows和linux、macos中同时识别</p><h1 id="磁盘转速与平均寻道时间"><a href="#磁盘转速与平均寻道时间" class="headerlink" title="磁盘转速与平均寻道时间"></a>磁盘转速与平均寻道时间</h1><blockquote><p>磁盘RPM，硬盘盘片在一分钟内能够完成的最大旋转数。</p></blockquote><p><strong><a href="https://zhuanlan.zhihu.com/p/38847308">5400和7200是哪里来的？</a></strong></p><p><strong>5400转一定比7200转慢吗？</strong></p><p>以送报为例：</p><ol><li>相同密度的小区</li></ol><p><img src="https://pic2.zhimg.com/80/v2-3c99df6ad491f7fbfd2b53519d8b2a4d_720w.jpg"></p><p>电动车比自行车快</p><ol start="2"><li>住宅十分稀疏与紧凑</li></ol><p><img src="https://pic1.zhimg.com/80/v2-6e3dc3860d9d7c421f5cad4705353680_720w.jpg"></p><p><img src="https://pic2.zhimg.com/80/v2-c2e842b224b84f21eb1af94439fec8bd_720w.jpg"></p><p>自行车虽慢但容易配送，效率更高</p><h1 id="磁盘分区"><a href="#磁盘分区" class="headerlink" title="磁盘分区"></a>磁盘分区</h1><h2 id="分区编辑器"><a href="#分区编辑器" class="headerlink" title="分区编辑器"></a>分区编辑器</h2><blockquote><p>partion editor</p></blockquote><p>在Linux中，使用<code>fdisk</code>命令对硬盘进行分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">用法：</span><br><span class="line"> fdisk [选项] &lt;磁盘&gt;    更改分区表</span><br><span class="line"> fdisk [选项] -l &lt;磁盘&gt; 列出分区表</span><br><span class="line"> fdisk -s &lt;分区&gt;        给出分区大小(块数)</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line"> -b &lt;大小&gt;             扇区大小(512、1024、2048或4096)</span><br><span class="line"> -c[=&lt;模式&gt;]           兼容模式：“dos”或“nondos”(默认)</span><br><span class="line"> -h                    打印此帮助文本</span><br><span class="line"> -u[=&lt;单位&gt;]           显示单位：“cylinders”(柱面)或“sectors”(扇区，默认)</span><br><span class="line"> -v                    打印程序版本</span><br><span class="line"> -C &lt;数字&gt;             指定柱面数</span><br><span class="line"> -H &lt;数字&gt;             指定磁头数</span><br><span class="line"> -S &lt;数字&gt;             指定每个磁道的扇区数</span><br></pre></td></tr></table></figure><h2 id="mbr分区"><a href="#mbr分区" class="headerlink" title="mbr分区"></a><a href="https://blog.csdn.net/zt_xcyk/article/details/53669383">mbr分区</a></h2><blockquote><p>master  boot record，主分区引导记录</p></blockquote><p>关注：硬盘容量受限制，最大2T</p><h2 id="gbt分区"><a href="#gbt分区" class="headerlink" title="gbt分区"></a><a href="https://blog.csdn.net/dzhongjie/article/details/112325468">gbt分区</a></h2><blockquote><p>现在大多的硬盘分区表都是gpt分区表</p></blockquote><p>优点：容量不受限制、分区个数没有限制、自带磁盘保护机制</p><h2 id="分区流程"><a href="#分区流程" class="headerlink" title="分区流程"></a>分区流程</h2><p><img src="/img/post/image-20220730092002511.png" alt="image-20220730092002511"></p><ul><li>主分区，primary partition</li><li>拓展分区，extended partition<ul><li>逻辑分区</li></ul></li></ul><p> <strong>Linux一切皆文件，磁盘设备在系统中也以文件形式展现</strong></p><p><strong><a href="https://www.initroot.com/tutorial/linuxbasic/1_install/linuxdevicefile.html#:~:text=%E5%9C%A8%E5%AE%9E%E4%BD%93%E7%89%A9%E7%90%86linux%E4%B8%BB%E6%9C%BA%E4%B8%ADSATA%E6%8E%A5%E5%8F%A3%E7%A1%AC%E7%9B%98%E8%AE%BE%E5%A4%87%E7%9A%84%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BA%2Fdev%2Fsd%20%5Ba-d%5D%E3%80%82,%E5%A6%82%E6%9E%9C%E6%98%AFlinux%E4%B8%BB%E6%9C%BA%E4%B8%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8C%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BD%BF%E7%94%A8%E7%9A%84%E8%99%9A%E6%8B%9F%E6%8E%A5%E5%8F%A3VirtIO%E7%A3%81%E7%9B%98%E8%AE%BE%E5%A4%87%EF%BC%8C%20%E8%99%9A%E6%8B%9F%E7%A3%81%E7%9B%98%E8%AE%BE%E5%A4%87%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%BA%2Fdev%2Fvd%20%5Ba-p%5D%21">linux常见设备文件名</a></strong></p><table><thead><tr><th>设备</th><th>文件名</th></tr></thead><tbody><tr><td>SCSI&#x2F;SATA&#x2F;USB接口硬盘驱动器或U盘</td><td>&#x2F;dev&#x2F;sd[a-p]</td></tr><tr><td>IDE接口硬盘驱动器(已逐步被SATA接口取代)</td><td>&#x2F;dev&#x2F;hd[a-d]</td></tr><tr><td>虚拟机内的Virt I&#x2F;O设备</td><td>&#x2F;dev&#x2F;vd[a-p]</td></tr><tr><td>软盘驱动器</td><td>&#x2F;dev&#x2F;fd[0-7]</td></tr><tr><td>打印机</td><td>&#x2F;dev&#x2F;lp[0-2] (25针串口) &#x2F;dev&#x2F;usb&#x2F;lp[0-15] (USB接口)</td></tr><tr><td>鼠标</td><td>&#x2F;dev&#x2F;input&#x2F;mouse[0-15] (通用) &#x2F;dev&#x2F;psaux (PS&#x2F;2接口) &#x2F;dev&#x2F;mouse (当前鼠标)</td></tr><tr><td>CDROM&#x2F;DVDROM</td><td>&#x2F;dev&#x2F;scd[0-1] (通用) &#x2F;dev&#x2F;sr[0-1] (通用,CentOS较常见) &#x2F;dev&#x2F;cdrom (当前CDROM)</td></tr><tr><td>磁带机</td><td>&#x2F;dev&#x2F;ht0 (IDE接口) &#x2F;dev&#x2F;st0 (SATA&#x2F;SCSI接口) &#x2F;dev&#x2F;tape (当前磁带)</td></tr></tbody></table><h2 id="分区类型"><a href="#分区类型" class="headerlink" title="分区类型"></a>分区类型</h2><blockquote><p>硬盘设备，在Linux中会被识别为</p></blockquote><p>&#x2F;dev&#x2F;sda 第一块硬盘名</p><p>​格式化分区</p><p>​主分区&#x2F;dev&#x2F;sda1</p><p>​拓展分区&#x2F;dev&#x2F;sda2</p><p>​逻辑分区&#x2F;dev&#x2F;sda5或者&#x2F;dev&#x2F;sda6 …</p><p>&#x2F;dev&#x2F;sdb 第二块硬盘名</p><blockquote><p>系统默认将1~4留给主分区和拓展分区</p></blockquote><ul><li>主分区1*（星号代表引导分区）</li><li>主分区2</li><li>主分区3</li><li>主分区4（extended）<ul><li>逻辑分区n</li></ul></li></ul><h2 id="分区命令"><a href="#分区命令" class="headerlink" title="分区命令"></a>分区命令</h2><h3 id="fdisk命令"><a href="#fdisk命令" class="headerlink" title="fdisk命令"></a>fdisk命令</h3><blockquote><p>针对小于2TB的磁盘分区</p></blockquote><p>这里跳过了新加入一块硬盘，我使用的是vware虚拟机，大家可以自行添加，我就不做演示了。</p><h4 id="查看分区信息"><a href="#查看分区信息" class="headerlink" title="查看分区信息"></a>查看分区信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><p><img src="/img/post/image-20220730094413174.png" alt="image-20220730094413174"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0009d23b</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br></pre></td></tr></table></figure><p><strong>以下是对新加入的硬盘&#x2F;dev&#x2F;sdb进行操作</strong></p><h4 id="开始分区"><a href="#开始分区" class="headerlink" title="开始分区"></a>开始分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br></pre></td></tr></table></figure><h4 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# fdisk /dev/sdb</span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">使用磁盘标识符 0x2ad371ed 创建新的 DOS 磁盘标签。</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：</span><br></pre></td></tr></table></figure><blockquote><p>从上发现，使用的是DOS磁盘标签，说明是采用mbr分区</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：m</span><br><span class="line">命令操作</span><br><span class="line">   a   toggle a bootable flag</span><br><span class="line">   b   edit bsd disklabel</span><br><span class="line">   c   toggle the dos compatibility flag</span><br><span class="line">   d   delete a partition</span><br><span class="line">   g   create a new empty GPT partition table</span><br><span class="line">   G   create an IRIX (SGI) partition table</span><br><span class="line">   l   list known partition types</span><br><span class="line">   m   <span class="built_in">print</span> this menu</span><br><span class="line">   n   add a new partition</span><br><span class="line">   o   create a new empty DOS partition table</span><br><span class="line">   p   <span class="built_in">print</span> the partition table</span><br><span class="line">   q   quit without saving changes</span><br><span class="line">   s   create a new empty Sun disklabel</span><br><span class="line">   t   change a partition<span class="string">&#x27;s system id</span></span><br><span class="line"><span class="string">   u   change display/entry units</span></span><br><span class="line"><span class="string">   v   verify the partition table</span></span><br><span class="line"><span class="string">   w   write table to disk and exit</span></span><br><span class="line"><span class="string">   x   extra functionality (experts only)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：</span></span><br></pre></td></tr></table></figure><h4 id="p-打印现有分区表"><a href="#p-打印现有分区表" class="headerlink" title="p 打印现有分区表"></a>p 打印现有分区表</h4><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line">磁盘 /dev/sdb：21.5 GB,<span class="number"> 21474836480 </span>字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of<span class="number"> 1 </span>*<span class="number"> 512 </span>=<span class="number"> 512 </span>bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 /<span class="number"> 512 </span>字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 /<span class="number"> 512 </span>字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x2ad371ed</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：</span><br></pre></td></tr></table></figure><blockquote><p>n 添加新的分区，分区类型：</p><p>p  主分区</p><p>e  拓展分区</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Select (default p): p</span><br><span class="line">分区号 (1-4，默认 1)：</span><br><span class="line">起始 扇区 (2048-41943039，默认为 2048)：</span><br><span class="line">将使用默认值 2048</span><br></pre></td></tr></table></figure><h4 id="设置分区大小"><a href="#设置分区大小" class="headerlink" title="设置分区大小"></a>设置分区大小</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-41943039，默认为 41943039)：+256M</span><br><span class="line">分区 1 已设置为 Linux 类型，大小设为 256 MiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：</span><br></pre></td></tr></table></figure><h4 id="查询分区表1"><a href="#查询分区表1" class="headerlink" title="查询分区表1"></a>查询分区表1</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x2ad371ed</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      526335      262144   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：</span><br></pre></td></tr></table></figure><h4 id="创建一个拓展分区"><a href="#创建一个拓展分区" class="headerlink" title="创建一个拓展分区"></a>创建一个拓展分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      526335      262144   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (1 primary, 0 extended, 3 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): e</span><br><span class="line">分区号 (2-4，默认 2)：</span><br><span class="line">起始 扇区 (526336-41943039，默认为 526336)：</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (526336-41943039，默认为 41943039)：</span><br><span class="line">将使用默认值 41943039</span><br><span class="line">分区 2 已设置为 Extended 类型，大小设为 19.8 GiB</span><br></pre></td></tr></table></figure><p>我们可以看到创建拓展分区时，默认的起始分区是526336，和第一个分区是相邻的。</p><h4 id="再次打印"><a href="#再次打印" class="headerlink" title="再次打印"></a>再次打印</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x2ad371ed</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      526335      262144   83  Linux</span><br><span class="line">/dev/sdb2          526336    41943039    20708352    5  Extended</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：</span><br></pre></td></tr></table></figure><h4 id="再输入n"><a href="#再输入n" class="headerlink" title="再输入n"></a>再输入n</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (1 primary, 1 extended, 2 free)</span><br><span class="line">   l   logical (numbered from 5)</span><br><span class="line">Select (default p):</span><br></pre></td></tr></table></figure><p>我们可以看到，free（空闲分区）还剩下2个。</p><h4 id="在拓展分区中，创建逻辑分区"><a href="#在拓展分区中，创建逻辑分区" class="headerlink" title="在拓展分区中，创建逻辑分区"></a>在拓展分区中，创建逻辑分区</h4><blockquote><p>l</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Select (default p): l</span><br><span class="line">添加逻辑分区 5</span><br><span class="line">起始 扇区 (528384-41943039，默认为 528384)：</span><br><span class="line">将使用默认值 528384</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (528384-41943039，默认为 41943039)：+10GB</span><br><span class="line">分区 5 已设置为 Linux 类型，大小设为 9.3 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：p</span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x2ad371ed</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      526335      262144   83  Linux</span><br><span class="line">/dev/sdb2          526336    41943039    20708352    5  Extended</span><br><span class="line">/dev/sdb5          528384    20060159     9765888   83  Linux</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：</span><br></pre></td></tr></table></figure><h4 id="继续创建逻辑分区"><a href="#继续创建逻辑分区" class="headerlink" title="继续创建逻辑分区"></a>继续创建逻辑分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：n</span><br><span class="line">Partition <span class="built_in">type</span>:</span><br><span class="line">   p   primary (1 primary, 1 extended, 2 free)</span><br><span class="line">   l   logical (numbered from 5)</span><br><span class="line">Select (default p): l</span><br><span class="line">添加逻辑分区 6</span><br><span class="line">起始 扇区 (20062208-41943039，默认为 20062208)：</span><br><span class="line">将使用默认值 20062208</span><br><span class="line">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (20062208-41943039，默认为 41943039)：</span><br><span class="line">将使用默认值 41943039</span><br><span class="line">分区 6 已设置为 Linux 类型，大小设为 10.4 GiB</span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：</span><br></pre></td></tr></table></figure><h4 id="最后，正式写入"><a href="#最后，正式写入" class="headerlink" title="最后，正式写入"></a>最后，正式写入</h4><blockquote><p>w</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">正在同步磁盘。</span><br></pre></td></tr></table></figure><p>在为输入w正式写入之前，分区表是写在内存中的。</p><h4 id="查询分区表2"><a href="#查询分区表2" class="headerlink" title="查询分区表2"></a>查询分区表2</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk -l</span></span><br><span class="line"></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x0009d23b</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x2ad371ed</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048      526335      262144   83  Linux</span><br><span class="line">/dev/sdb2          526336    41943039    20708352    5  Extended</span><br><span class="line">/dev/sdb5          528384    20060159     9765888   83  Linux</span><br><span class="line">/dev/sdb6        20062208    41943039    10940416   83  Linux</span><br></pre></td></tr></table></figure><h4 id="删除分区，并确认写入"><a href="#删除分区，并确认写入" class="headerlink" title="删除分区，并确认写入"></a>删除分区，并确认写入</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：d</span><br><span class="line">分区号 (1,2,5,6，默认 6)：</span><br></pre></td></tr></table></figure><p>直接回车，在输入d，直至删除所有分区。</p><p>默认是从后往前删。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">分区号 (1,2,5,6，默认 6)：</span><br><span class="line">分区 6 已删除</span><br><span class="line">分区号 (1,2,5，默认 5)：</span><br><span class="line">分区 5 已删除</span><br><span class="line">分区号 (1,2，默认 2)：</span><br><span class="line">分区 2 已删除</span><br><span class="line">已选择分区 1</span><br><span class="line">分区 1 已删除</span><br><span class="line">命令(输入 m 获取帮助)：d</span><br><span class="line">No partition is defined yet!</span><br><span class="line">命令(输入 m 获取帮助)：w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">正在同步磁盘。</span><br></pre></td></tr></table></figure><h4 id="查询分区表3"><a href="#查询分区表3" class="headerlink" title="查询分区表3"></a>查询分区表3</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x2ad371ed</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">[root@localhost ~]<span class="comment"># fdisk -l|grep sd</span></span><br><span class="line">磁盘 /dev/sda：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">/dev/sda1   *        2048     2099199     1048576   83  Linux</span><br><span class="line">/dev/sda2         2099200    41943039    19921920   8e  Linux LVM</span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br></pre></td></tr></table></figure><h3 id="parted命令"><a href="#parted命令" class="headerlink" title="parted命令"></a>parted命令</h3><blockquote><p>针对超过2TB的磁盘分区</p></blockquote><h4 id="开始分区-1"><a href="#开始分区-1" class="headerlink" title="开始分区"></a>开始分区</h4><blockquote><p>parted &lt;磁盘&gt;</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># parted /dev/sdb</span></span><br><span class="line">GNU Parted 3.1</span><br><span class="line">使用 /dev/sdb</span><br><span class="line">Welcome to GNU Parted! Type <span class="string">&#x27;help&#x27;</span> to view a list of commands.</span><br><span class="line">(parted)</span><br></pre></td></tr></table></figure><h4 id="查看命令列表"><a href="#查看命令列表" class="headerlink" title="查看命令列表"></a>查看命令列表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(parted) <span class="built_in">help</span></span><br><span class="line">  align-check TYPE N                        check partition N <span class="keyword">for</span> TYPE(min|opt)</span><br><span class="line">        alignment</span><br><span class="line">  <span class="built_in">help</span> [COMMAND]                           <span class="built_in">print</span> general <span class="built_in">help</span>, or <span class="built_in">help</span> on</span><br><span class="line">        COMMAND</span><br><span class="line">  mklabel,mktable LABEL-TYPE               create a new disklabel (partition</span><br><span class="line">        table)</span><br><span class="line">  mkpart PART-TYPE [FS-TYPE] START END     make a partition</span><br><span class="line">  name NUMBER NAME                         name partition NUMBER as NAME</span><br><span class="line">  <span class="built_in">print</span> [devices|free|list,all|NUMBER]     display the partition table,</span><br><span class="line">        available devices, free space, all found partitions, or a particular</span><br><span class="line">        partition</span><br><span class="line">  quit                                     <span class="built_in">exit</span> program</span><br><span class="line">  rescue START END                         rescue a lost partition near START</span><br><span class="line">        and END</span><br><span class="line"></span><br><span class="line">  resizepart NUMBER END                    resize partition NUMBER</span><br><span class="line">  <span class="built_in">rm</span> NUMBER                                delete partition NUMBER</span><br><span class="line">  <span class="keyword">select</span> DEVICE                            choose the device to edit</span><br><span class="line">  disk_set FLAG STATE                      change the FLAG on selected device</span><br><span class="line">  disk_toggle [FLAG]                       toggle the state of FLAG on selected</span><br><span class="line">        device</span><br><span class="line">  <span class="built_in">set</span> NUMBER FLAG STATE                    change the FLAG on partition NUMBER</span><br><span class="line">  toggle [NUMBER [FLAG]]                   toggle the state of FLAG on partition</span><br><span class="line">        NUMBER</span><br><span class="line">  unit UNIT                                <span class="built_in">set</span> the default unit to UNIT</span><br><span class="line">  version                                  display the version number and</span><br><span class="line">        copyright information of GNU Parted</span><br><span class="line">(parted)</span><br></pre></td></tr></table></figure><h4 id="更改磁盘分区表类型"><a href="#更改磁盘分区表类型" class="headerlink" title="更改磁盘分区表类型"></a>更改磁盘分区表类型</h4><blockquote><p>mkabel gpt</p></blockquote><p>我们从上文知道，sdb硬盘是<code>mbr</code>分区类型的，这里我们就改为<code>gbt</code>分区类型。</p><blockquote><p>这条命令很危险，只能对新的硬盘操作！！</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(parted) mklabel gpt</span><br><span class="line">警告: The existing disk label on /dev/sdb will be destroyed and all data on this</span><br><span class="line">disk will be lost. Do you want to <span class="built_in">continue</span>?</span><br><span class="line">是/Yes/否/No? <span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h4 id="查询分区表4"><a href="#查询分区表4" class="headerlink" title="查询分区表4"></a>查询分区表4</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">(parted) p</span><br><span class="line">Model: VMware, VMware Virtual S (scsi)</span><br><span class="line">Disk /dev/sdb: 21.5GB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: gpt</span><br><span class="line">Disk Flags:</span><br><span class="line"></span><br><span class="line">Number  Start  End  Size  File system  Name  标志</span><br><span class="line"></span><br><span class="line">(parted)</span><br></pre></td></tr></table></figure><p>我们看到，分区类型成功改为gpt</p><h4 id="创建主分区"><a href="#创建主分区" class="headerlink" title="创建主分区"></a>创建主分区</h4><blockquote><p>gpt分区类型是没有拓展分区的！</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">(parted) mkpart primary 0 500</span><br><span class="line">警告: The resulting partition is not properly aligned <span class="keyword">for</span> best performance.</span><br><span class="line">忽略/Ignore/放弃/Cancel? Ignore</span><br><span class="line">(parted) p</span><br><span class="line">Model: VMware, VMware Virtual S (scsi)</span><br><span class="line">Disk /dev/sdb: 21.5GB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: gpt</span><br><span class="line">Disk Flags:</span><br><span class="line"></span><br><span class="line">Number  Start   End    Size   File system  Name     标志</span><br><span class="line"> 1      17.4kB  500MB  500MB               primary</span><br><span class="line"></span><br><span class="line">(parted)</span><br></pre></td></tr></table></figure><p>0 表示从0开始</p><p>500 表示500MB</p><h4 id="创建逻辑分区"><a href="#创建逻辑分区" class="headerlink" title="创建逻辑分区"></a>创建逻辑分区</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(parted) mkpart logical 501 10000</span><br><span class="line">(parted) p</span><br><span class="line">Model: VMware, VMware Virtual S (scsi)</span><br><span class="line">Disk /dev/sdb: 21.5GB</span><br><span class="line">Sector size (logical/physical): 512B/512B</span><br><span class="line">Partition Table: gpt</span><br><span class="line">Disk Flags:</span><br><span class="line"></span><br><span class="line">Number  Start   End     Size    File system  Name     标志</span><br><span class="line"> 1      17.4kB  500MB   500MB                primary</span><br><span class="line"> 2      501MB   10.0GB  9499MB               logical</span><br><span class="line"></span><br><span class="line">(parted)</span><br></pre></td></tr></table></figure><h4 id="输入q退出，并查询分区情况"><a href="#输入q退出，并查询分区情况" class="headerlink" title="输入q退出，并查询分区情况"></a>输入q退出，并查询分区情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(parted) q</span><br><span class="line">信息: You may need to update /etc/fstab.</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># ls /dev/sdb*</span></span><br><span class="line">/dev/sdb  /dev/sdb1  /dev/sdb2</span><br></pre></td></tr></table></figure><p>我们可以看见，以及成功分出两个分区</p><h4 id="使用fdisk查询看看"><a href="#使用fdisk查询看看" class="headerlink" title="使用fdisk查询看看"></a>使用fdisk查询看看</h4><blockquote><p>fdisk -l</p><p>这里截取部分信息</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">WARNING: fdisk GPT support is currently new, and therefore <span class="keyword">in</span> an experimental phase. Use at your own discretion.</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：21.5 GB, 21474836480 字节，41943040 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">Disk identifier: 05387D9B-5B59-469F-BBEC-BD5FC44CC203</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#         Start          End    Size  Type            Name</span></span><br><span class="line"> 1           34       976562  476.8M  Microsoft basic primary</span><br><span class="line"> 2       978944     19531775    8.9G  Microsoft basic logical</span><br></pre></td></tr></table></figure><h3 id="重读分区表"><a href="#重读分区表" class="headerlink" title="重读分区表"></a>重读分区表</h3><blockquote><p>partprobe命令也可以通过重启机器实现</p></blockquote><p>centos5或者以前可以使用此命令，用于重读分区表。</p><p>当删除文件后，仍然占用磁盘空间，是应为磁盘分区表米有更新，需要重启分区表。</p><h3 id="刷新内核认知"><a href="#刷新内核认知" class="headerlink" title="刷新内核认知"></a>刷新内核认知</h3><blockquote><p>partx -a命令</p><p>在我们格式化磁盘后，习惯性执行</p></blockquote><p>这时内核就会新地认识这个分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># partx -a /dev/sdb</span></span><br><span class="line">partx: /dev/sdb: error adding partitions 1-2</span><br><span class="line">partx: /dev/sdb: error adding partitions 5-6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> 磁盘管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>禁止右键及F12等事件</title>
      <link href="/posts/24401782/"/>
      <url>/posts/24401782/</url>
      
        <content type="html"><![CDATA[<h1 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h1><h2 id="bancsl-js"><a href="#bancsl-js" class="headerlink" title="bancsl.js"></a>bancsl.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">forbidden_control</span></span>() &#123;</span><br><span class="line">//通过判断窗口大小变化控制，不可靠(可以通过返回或者先开启控制台再打开网页的方式破解)</span><br><span class="line">//手机端访问会出现问题，暂时不建议开启，等我先想想怎么解决</span><br><span class="line">   /* </span><br><span class="line">    <span class="built_in">let</span> h = window.innerHeight;</span><br><span class="line">    <span class="built_in">let</span> w = window.innerWidth;</span><br><span class="line">    window.onresize = <span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">        <span class="keyword">if</span> (h != window.innerHeight || w != window.innerWidth) &#123;</span><br><span class="line">          window.close();</span><br><span class="line">          //此处可以自己定义跳转</span><br><span class="line">          //window.location = <span class="string">&quot;/error/403.html&quot;</span>;</span><br><span class="line">          window.location = <span class="string">&quot;about:blank&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  */</span><br><span class="line">//唐志远dalao no solutions以解决F12、右键事件</span><br><span class="line">    $.extend(&#123;</span><br><span class="line">        message: <span class="keyword">function</span>(a) &#123;</span><br><span class="line">            var b = &#123;</span><br><span class="line">                title: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                message: <span class="string">&quot;操作成功&quot;</span>,</span><br><span class="line">                time: <span class="string">&quot;3000&quot;</span>,</span><br><span class="line">                <span class="built_in">type</span>: <span class="string">&quot;success&quot;</span>,</span><br><span class="line">                showClose: !0,</span><br><span class="line">                autoClose: !0,</span><br><span class="line">                onClose: <span class="function"><span class="title">function</span></span>() &#123;&#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="string">&quot;string&quot;</span> == typeof a &amp;&amp; (b.message = a), <span class="string">&quot;object&quot;</span> == typeof a &amp;&amp; (b = $.extend(&#123;&#125;, b, a));</span><br><span class="line">            var c, d, e, f = b.showClose ? <span class="string">&#x27;&lt;div class=&quot;c-message--close&quot;&gt;×&lt;/div&gt;&#x27;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">                g = <span class="string">&quot;&quot;</span> !== b.title ? <span class="string">&#x27;&lt;h2 class=&quot;c-message__title&quot;&gt;&#x27;</span> + b.title + <span class="string">&quot;&lt;/h2&gt;&quot;</span> : <span class="string">&quot;&quot;</span>,</span><br><span class="line">                h = <span class="string">&#x27;&lt;div class=&quot;c-message animated animated-lento slideInRight&quot;&gt;&lt;i class=&quot; c-message--icon c-message--&#x27;</span> + b.type + <span class="string">&#x27;&quot;&gt;&lt;/i&gt;&lt;div class=&quot;el-notification__group&quot;&gt;&#x27;</span> + g + <span class="string">&#x27;&lt;div class=&quot;el-notification__content&quot;&gt;&#x27;</span> + b.message + <span class="string">&quot;&lt;/div&gt;&quot;</span> + f + <span class="string">&quot;&lt;/div&gt;&lt;/div&gt;&quot;</span>,</span><br><span class="line">                i = $(<span class="string">&quot;body&quot;</span>),</span><br><span class="line">                j = $(h);</span><br><span class="line">            d = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                j.addClass(<span class="string">&quot;slideOutRight&quot;</span>), j.one(<span class="string">&quot;webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend&quot;</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                    e()</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;, e = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                j.remove(), b.onClose(b), clearTimeout(c)</span><br><span class="line">            &#125;, $(<span class="string">&quot;.c-message&quot;</span>).remove(), i.append(j), j.one(<span class="string">&quot;webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend&quot;</span>, <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                j.removeClass(<span class="string">&quot;messageFadeInDown&quot;</span>)</span><br><span class="line">            &#125;), i.on(<span class="string">&quot;click&quot;</span>, <span class="string">&quot;.c-message--close&quot;</span>, <span class="keyword">function</span>(a) &#123;</span><br><span class="line">                d()</span><br><span class="line">            &#125;), b.autoClose &amp;&amp; (c = setTimeout(<span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">                d()</span><br><span class="line">            &#125;, b.time))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;),</span><br><span class="line">    document.onkeydown = <span class="keyword">function</span>(e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (123 == e.keyCode || e.ctrlKey &amp;&amp; e.shiftKey &amp;&amp; (74 === e.keyCode || 73 === e.keyCode || 67 === e.keyCode) || (e.ctrlKey &amp;&amp; 85 === e.keyCode)) <span class="built_in">return</span> $.message(&#123;</span><br><span class="line">            message: <span class="string">&quot;采用本站js及css请注明来源，禁止商业使用！&quot;</span>,</span><br><span class="line">            title: <span class="string">&quot;不能使用shift+ctrl+i/f12打开控制台喔!&quot;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            autoHide: !1,</span><br><span class="line">            time: <span class="string">&quot;3000&quot;</span></span><br><span class="line">        &#125;), event.keyCode = 0, event.returnValue = !1, !1</span><br><span class="line">    &#125;, document.oncontextmenu = <span class="function"><span class="title">function</span></span>() &#123;</span><br><span class="line">        <span class="built_in">return</span> $.message(&#123;</span><br><span class="line">            message: <span class="string">&quot;采用本站js及css请注明来源，禁止商业使用！&quot;</span>,</span><br><span class="line">            title: <span class="string">&quot;不能使用右键哦！&quot;</span>,</span><br><span class="line">            <span class="built_in">type</span>: <span class="string">&quot;error&quot;</span>,</span><br><span class="line">            autoHide: !1,</span><br><span class="line">            time: <span class="string">&quot;3000&quot;</span></span><br><span class="line">        &#125;), !1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//执行函数</span><br><span class="line">forbidden_control()</span><br><span class="line">//监控window.visualViewport的高度与宽度变化并无限debugger</span><br><span class="line">var width = window.visualViewport.width;</span><br><span class="line">var height = window.visualViewport.height;</span><br><span class="line">setInterval(<span class="function"><span class="title">function</span></span> () &#123;</span><br><span class="line">    var new_width = window.visualViewport.width;</span><br><span class="line">    var new_height = window.visualViewport.height;</span><br><span class="line">    <span class="keyword">if</span>(new_width&lt;width||new_height&lt;height)&#123;</span><br><span class="line">       <span class="built_in">eval</span>(<span class="string">&#x27;!function()&#123;debugger&#125;()&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;,800)</span><br></pre></td></tr></table></figure><h2 id="jquery-min-js"><a href="#jquery-min-js" class="headerlink" title="jquery.min.js"></a>jquery.min.js</h2><p><a href="https://www.jq22.com/jquery-info122">下载站</a></p><blockquote><p>可以url引用，也可以直接下载本地使用</p></blockquote><h2 id="function-min-css"><a href="#function-min-css" class="headerlink" title="function.min.css"></a>function.min.css</h2><p><a href="https://fastly.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/css/function.min.css">下载链接</a></p><p>也可以直接在head中写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;https://fastly.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/css/function.min.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><blockquote><p>将上一步下载好的js、cs文件在head中引用，此处我是使用本地文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;/js/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/bancsl.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;<span class="built_in">link</span> rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;/css/function.min.css&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h1><blockquote><p><strong>还是那句话，会的人防不住，不会的人不用防。</strong></p></blockquote><p>在志远兄的原文中未为提到具体的使用方法，本文在此基础上对使用方法进行了补充并添加了其它的一些功能。<br>所有的代码和资源均来源网络，本文仅仅是一个小小的整合。如果大家有什么更好的建议，<a href="mailto:asucanyh@qq.com">@欢迎交流学习</a>~</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><blockquote><p><a href="https://cloud.tencent.com/developer/user/2624059">JS禁止右键和F12查看 by AlexTao</a></p><p><a href="https://tzy1997.com/articles/hexo1606/#%E7%A6%81%E6%AD%A2%E5%8F%B3%E9%94%AE%E5%8F%8AF12%E7%AD%89%E4%BA%8B%E4%BB%B6">禁止右键及F12等事件 by 唐志远</a></p><p><a href="https://www.cnblogs.com/5h4d0w/p/14451765.html">浏览器F12(开发者工具DevTools)的屏蔽调用与绕过屏蔽 by Sh4d0w_小白</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Javascript </tag>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
            <tag> JQuery </tag>
            
            <tag> 浏览器开发者工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm包管理工具</title>
      <link href="/posts/2268169620/"/>
      <url>/posts/2268169620/</url>
      
        <content type="html"><![CDATA[<h1 id="npm版本控制"><a href="#npm版本控制" class="headerlink" title="npm版本控制"></a>npm版本控制</h1><p>包的语义化版本规范，点分十进制形式定义，总共个3位数字。如：1.14.51。</p><p>第一位数字：大版本</p><p>第二位数字：功能版本</p><p>第三位数字：Bug修复版本</p><p>版本号提升规则：当前一位版本号增加，后面位数都归零。</p><h1 id="包管理配置文件"><a href="#包管理配置文件" class="headerlink" title="包管理配置文件"></a>包管理配置文件</h1><p>package.json配置文件，位于项目根目录。</p><p>记录项目名称、版本号、描述。</p><p>记录项目中使用了哪些包。</p><p>记录哪些包只在开发期间使用。</p><p>记录哪些包在开发和部署时都需要用到。</p><h2 id="快速新建包配置文件"><a href="#快速新建包配置文件" class="headerlink" title="快速新建包配置文件"></a>快速新建包配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init -y</span><br></pre></td></tr></table></figure><div class="admonition note"><p class="admonition-title">根目录注意事项</p><p>目录文件夹避免使用中文和空格。</p></div><h2 id="dependencies节点"><a href="#dependencies节点" class="headerlink" title="dependencies节点"></a>dependencies节点</h2><p>用于记录使用<code>npm i</code>命令安装的包的信息。</p><h2 id="使用包配置文件恢复包"><a href="#使用包配置文件恢复包" class="headerlink" title="使用包配置文件恢复包"></a>使用包配置文件恢复包</h2><p>直接执行<code>npm i</code></p><h2 id="devDependencies节点"><a href="#devDependencies节点" class="headerlink" title="devDependencies节点"></a>devDependencies节点</h2><blockquote><p>安装的包仅在开发阶段使用</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i --save-dev 包名</span><br><span class="line">npm i -D 包名</span><br></pre></td></tr></table></figure><h1 id="卸载第三方包"><a href="#卸载第三方包" class="headerlink" title="卸载第三方包"></a>卸载第三方包</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall 包名</span><br></pre></td></tr></table></figure><h1 id="npm换源（淘宝源）"><a href="#npm换源（淘宝源）" class="headerlink" title="npm换源（淘宝源）"></a><a href="https://blog.csdn.net/lychee_xiahua/article/details/108592483">npm换源</a>（淘宝源）</h1><p>检查当前下包镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><p>设置镜像源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>检查镜像源是否下载成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure><h2 id="使用nrm小工具"><a href="#使用nrm小工具" class="headerlink" title="使用nrm小工具"></a>使用nrm小工具</h2><p>nrm可以快速查看和更换下载源。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装nrm</span></span><br><span class="line">npm i nrm -g</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">列出所有可用镜像源</span></span><br><span class="line">nrm ls</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">切换镜像源</span></span><br><span class="line">nrm use taobao </span><br></pre></td></tr></table></figure><h1 id="全局包"><a href="#全局包" class="headerlink" title="全局包"></a>全局包</h1><p>使用<code>-g</code>参数，进行安装。</p><p>一般会被安装在<code>C:\Users\ 用户目录 \AppData\Roaming\npm\node_modules</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i 包名 -g</span><br></pre></td></tr></table></figure><p>如果要卸载全局包，也需要添加<code>-g</code>参数。</p><h1 id="规范的包结构"><a href="#规范的包结构" class="headerlink" title="规范的包结构"></a>规范的包结构</h1><ol><li>包必须以单独的目录存在。</li><li>包的顶级目录下必须要包含package.json文件。</li><li>包配置文件中必须包含main、name、version这三个属性，分别代表包的入口、包名、版本号。</li></ol><h1 id="创建自己的包"><a href="#创建自己的包" class="headerlink" title="创建自己的包"></a>创建自己的包</h1><ol><li><p>新建包文件夹</p></li><li><p>新建包配置文件<code>package.json</code>、包的入口文件<code>index.js</code>、包的说明文件<code>README.md</code></p></li><li><p>初始化package.json</p><p>包含<code>name</code>、<code>verson</code>、<code>main</code>、<code>description</code>、<code>keywords</code>、<code>license</code>等属性。</p><p>name属性唯一。</p><p>license为提供的开源协议，推荐<code>ISC</code>。</p><p>如下例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;moment&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.29.4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Parse, validate, manipulate, and display dates&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;homepage&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://momentjs.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Iskren Ivov Chernev &lt;iskren.chernev@gmail.com&gt; (https://github.com/ichernev)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;contributors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;Tim Wood &lt;washwithcare@gmail.com&gt; (http://timwoodcreates.com/)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        ...</span><br><span class="line">        <span class="string">&quot;Andre Polykanine &lt;andre@oire.org&gt; (https://github.com/oire)&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;moment&quot;</span><span class="punctuation">,</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./moment.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">    ...</span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>注册npm账号</p></li><li><p>登录账号</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">注意要切换到官方镜像</span></span><br><span class="line">npm login</span><br></pre></td></tr></table></figure><ol start="6"><li>切换到自己的包的根目录，发布包</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm publish</span><br></pre></td></tr></table></figure><ol start="7"><li>删除已发布的包</li></ol><p>只能删除72小时内的包。</p><p>删除包后，24小时内不能再发布新的包。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm unpublish 包名 --force </span><br></pre></td></tr></table></figure><h1 id="设置全局安装的默认目录"><a href="#设置全局安装的默认目录" class="headerlink" title="设置全局安装的默认目录"></a><a href="https://blog.csdn.net/qq_26239917/article/details/90109676">设置全局安装的默认目录</a></h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix <span class="string">&quot;nodejs的安装目录&quot;</span></span><br></pre></td></tr></table></figure><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><blockquote><p><a href="https://blog.csdn.net/qq_19331985/article/details/115586806">npm WARN deprecated 14 packages are looking for funding run <code>npm fund</code> for details URL using bad&#x2F;illegal format or missing URL</a> </p></blockquote><p>可以直接去项目的.git目录，查看config文件中url路径是不是写错了</p>]]></content>
      
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>程序软件和rpm、yum</title>
      <link href="/posts/2508337333/"/>
      <url>/posts/2508337333/</url>
      
        <content type="html"><![CDATA[<h1 id="程序包管理器"><a href="#程序包管理器" class="headerlink" title="程序包管理器"></a>程序包管理器</h1><p><a href="https://blog.csdn.net/a870336645/article/details/101571541">在未发布RPM（红帽软件包管理器）之前，想在Linux安装软件只能通过获取源码包的方式安装，相当麻烦费心。</a></p><h1 id="获取程序包的途径"><a href="#获取程序包的途径" class="headerlink" title="获取程序包的途径"></a>获取程序包的途径</h1><p><i class="fa fa-exclamation-triangle" aria-hidden="true"></i>互联网上提供的软件，可能存在后门，存在安全隐患，插件</p><p><i class="fa fa-check" aria-hidden="true"></i>正确的途径</p><ul><li>操作系统发行版本光盘</li><li>文件服务器</li></ul><p>支持多个协议并且能够自动识别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ftp://</span><br><span class="line">http://</span><br><span class="line">nfs://</span><br><span class="line">file://</span><br></pre></td></tr></table></figure><ul><li>镜像站点</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://mirrors.aliyun.com</span><br><span class="line">http://mirrors.163.com</span><br></pre></td></tr></table></figure><ul><li>epel，提供centos众多额外的第三方包，可信任的第三方软件包组织</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://mirrors.aliyun.com/epel/7/x86_64/Packages/m</span><br></pre></td></tr></table></figure><ul><li>搜索引擎</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.rpmfind.net/linux/mageia/distrib/7/x86_64/media/core/release</span><br></pre></td></tr></table></figure><h1 id="软件依赖关系"><a href="#软件依赖关系" class="headerlink" title="软件依赖关系"></a>软件依赖关系</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>必须解决依赖关系软件才能正常工作。</p><p>软件包管理可以将管理员从无休止的兼容问题中释放。</p><ul><li>rpm软件包在安装时，由作者定义依赖关系。</li><li>yum工具可以自动搜索依赖关系，并执行安装。</li></ul><h2 id="查询方式"><a href="#查询方式" class="headerlink" title="查询方式"></a><a href="https://cloud.tencent.com/developer/article/1691635">查询方式</a></h2><h1 id="rpm命令"><a href="#rpm命令" class="headerlink" title="rpm命令"></a>rpm命令</h1><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm [options] [package_file]</span><br></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-i 表示安装</span><br><span class="line">-v 显示详细过程</span><br><span class="line">-h 以进度条显示，每个井号表示2%的进度</span><br><span class="line">-U 升级软件包</span><br><span class="line">-e, --erase=&lt;package&gt;+  清除 (卸载) 软件包</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#其它参数可以通过查询</span></span><br><span class="line">rpm --<span class="built_in">help</span> </span><br></pre></td></tr></table></figure><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>还是需要用户手动解决<code>软件依赖关系</code></p><h1 id="自动解决依赖关系软件包管理器"><a href="#自动解决依赖关系软件包管理器" class="headerlink" title="自动解决依赖关系软件包管理器"></a>自动解决依赖关系软件包管理器</h1><ul><li><a href="https://www.runoob.com/linux/linux-yum.html">yum，红毛系列rpm包管理工具</a></li></ul><h2 id="Yum工具"><a href="#Yum工具" class="headerlink" title="Yum工具"></a>Yum工具</h2><p><code>yum</code>（ Yellow dog Updater, Modified）是一个在 Fedora 和 RedHat 以及 SUSE 中的 Shell 前端软件包管理器。</p><p>基于 RPM 包管理，能够从指定的服务器自动下载 RPM 包并且安装，可以自动处理依赖性关系，并且一次安装所有依赖的软件包，无须繁琐地一次次下载、安装。</p><p>yum 提供了查找、安装、删除某一个、一组甚至全部软件包的命令，而且命令简洁而又好记。</p><p>yum是采用C-S架构的。</p><h2 id="Yum仓库"><a href="#Yum仓库" class="headerlink" title="Yum仓库"></a>Yum仓库</h2><p><a href="https://www.cnblogs.com/yuyafeng/p/12912318.html#:~:text=Yum%E8%BD%AF%E4%BB%B6%E4%BB%93%E5%BA%93%E5%8F%AF,%E5%8C%85%E5%B9%B6%E5%AE%89%E8%A3%85%E5%88%B0%E7%B3%BB%E7%BB%9F%E3%80%82"><code>yum软件仓库</code></a>可以根据用户的要求分析出所需软件包及其相关的依赖关系，然后自动从服务器下载软件包并安装到系统。</p><p>yum仓库，存储了众多软件包，以及相关的元数据文件。</p><p>yum仓库可以存在多个，自动选择软件最新的，以及有限选择离我们最近的。</p><p><img src="https://img2020.cnblogs.com/blog/1635134/202005/1635134-20200518183436467-2053086226.png" alt="Yum软件仓库的技术拓扑"></p><p><code>如何写一个仓库文件</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[base]                                 </span><br><span class="line">name=        <span class="comment">#此为描述信息，可以看情况填写</span></span><br><span class="line">baseurl=file:///media/                     <span class="comment">#此项为yum软件仓库位置，指向光盘挂载点</span></span><br><span class="line">enabled=1    <span class="comment">#此项为是否开启，1为开启, 0为不开启</span></span><br><span class="line"></span><br><span class="line">gpgcheck=1    <span class="comment">#此项为是否检查签名，1为检测, 0为不检测</span></span><br><span class="line">gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release  <span class="comment">#签名认证信息的路径</span></span><br></pre></td></tr></table></figure><h2 id="Yum客户端"><a href="#Yum客户端" class="headerlink" title="Yum客户端"></a>Yum客户端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/yum.conf <span class="comment">#为所有仓库提供公共配置</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/yum.conf</span></span><br><span class="line">[main]</span><br><span class="line">cachedir=/var/cache/yum/<span class="variable">$basearch</span>/<span class="variable">$releasever</span></span><br><span class="line">keepcache=0 <span class="comment">#本地缓存是否保留，0否，1是</span></span><br><span class="line">debuglevel=2 <span class="comment">#调试日志级别</span></span><br><span class="line">logfile=/var/log/yum.log <span class="comment">#日志路径</span></span><br><span class="line">exactarch=1 <span class="comment">#精确系统平台版本匹配</span></span><br><span class="line">obsoletes=1 </span><br><span class="line">gpgcheck=1 <span class="comment">#检查软件包合法新</span></span><br><span class="line">plugins=1</span><br><span class="line">installonly_limit=5 <span class="comment">#同时安装几个工具包</span></span><br><span class="line">bugtracker_url=http://bugs.centos.org/set_project.php?project_id=23&amp;ref=http://bugs.centos.org/bug_report_page.php?category=yum</span><br><span class="line">distroverpkg=centos-release</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#  This is the default, if you make this bigger yum won&#x27;t see if the metadata</span></span><br><span class="line"><span class="comment"># is newer on the remote and so you&#x27;ll &quot;gain&quot; the bandwidth of not having to</span></span><br><span class="line"><span class="comment"># download the new metadata and &quot;pay&quot; for it by yum not having correct</span></span><br><span class="line"><span class="comment"># information.</span></span><br><span class="line"><span class="comment">#  It is esp. important, to have correct metadata, for distributions like</span></span><br><span class="line"><span class="comment"># Fedora which don&#x27;t keep old packages around. If you don&#x27;t like this checking</span></span><br><span class="line"><span class="comment"># interupting your command line usage, it&#x27;s much better to have something</span></span><br><span class="line"><span class="comment"># manually check the metadata once an hour (yum-updatesd will do this).</span></span><br><span class="line"><span class="comment"># metadata_expire=90m</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PUT YOUR REPOS HERE OR IN separate files named file.repo</span></span><br><span class="line"><span class="comment"># in /etc/yum.repos.d</span></span><br></pre></td></tr></table></figure><ul><li><a href="https://www.cnblogs.com/wangwust/p/9767892.html">apt-get，deb包管理工具</a></li><li><a href="https://www.cnblogs.com/linuxprobe/p/5340013.html">zypper，suse的rpm管理工具</a></li></ul><h1 id="yum命令"><a href="#yum命令" class="headerlink" title="yum命令"></a>yum命令</h1><blockquote><p>通过配置文件指定仓库地址</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/yum.repos.d/*.repo</span><br></pre></td></tr></table></figure><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum [options] COMMAND</span><br></pre></td></tr></table></figure><h2 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h2><blockquote><p>man yum  #可以查看更详细的手册</p><p>yum –help #常用参数等</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">install        向系统中安装一个或多个软件包</span><br><span class="line">update         更新系统中的一个或多个软件包</span><br><span class="line">reinstall      覆盖安装软件包</span><br><span class="line">list           列出一个或一组软件包</span><br><span class="line">version        显示机器和/或可用的源版本。</span><br><span class="line">info           显示关于软件包或组的详细信息</span><br><span class="line">grouplist/groups list 列出可安装的组     </span><br><span class="line">groupinstall   安装组（中文也可以）</span><br></pre></td></tr></table></figure><h1 id="源代码编译安装"><a href="#源代码编译安装" class="headerlink" title="源代码编译安装"></a>源代码编译安装</h1><p>无论是rpm命令或者yum命令，都是安装二进制格式的程序包，是别人编译好的。</p><p>可能存在的问题：别人编译好的rpm包，可能版本过低，不适合当前需求。</p><h2 id="yum和编译安装的区别"><a href="#yum和编译安装的区别" class="headerlink" title="yum和编译安装的区别"></a>yum和编译安装的区别</h2><h3 id="yum的优缺点"><a href="#yum的优缺点" class="headerlink" title="yum的优缺点"></a>yum的优缺点</h3><p>yum是自动取yum源中寻找rpm包下载且安装自动解决依赖，自动指定安装路径，无需人为干预；</p><p>适合初学者，不需要考虑依赖关系即可安装使用大部分软件；</p><p>功能由rpm包控制，这个rpm包是别人编译好的，版本可能较低，功能受限，存在漏洞；</p><p>yum自动安装的软件不能自定义软件的路径、功能，机器数量较多，与后期维护成本较大</p><h3 id="编译安装优缺点"><a href="#编译安装优缺点" class="headerlink" title="编译安装优缺点"></a>编译安装优缺点</h3><p>可以手动下载最新源代码，按照指定需求设置参数、指定安装路径，拓展第三方工功能，更加灵活；</p><p>无法自行解决依赖关系，对新手不友好</p><h3 id="建议方法"><a href="#建议方法" class="headerlink" title="建议方法"></a>建议方法</h3><p>yum和编译安装结合使用，能够最大程度解决问题</p><h2 id="编译三部曲"><a href="#编译三部曲" class="headerlink" title="编译三部曲"></a>编译三部曲</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#gcc、make开发工具</span></span><br><span class="line">yum groupinstall <span class="string">&quot;Development Tools&quot;</span> -y</span><br><span class="line"><span class="comment">#yum groupinstall &quot;Server Platform Development&quot; -y</span></span><br></pre></td></tr></table></figure><p>Centos7安装Server Platform Development可能会报不存在！可以先跳过不安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Warning: group Server does not exist.</span><br><span class="line">Warning: group Platform does not exist.</span><br><span class="line">Maybe run: yum <span class="built_in">groups</span> mark install (see man yum)</span><br><span class="line">指定组中没有可安装或升级的软件包</span><br></pre></td></tr></table></figure><h3 id="演示源文件准备（以nginx为例）"><a href="#演示源文件准备（以nginx为例）" class="headerlink" title="演示源文件准备（以nginx为例）"></a>演示源文件准备（以nginx为例）</h3><p>Nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://nginx.org/download/nginx-1.23.1.tar.gz</span><br></pre></td></tr></table></figure><p>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://nginx.org/download/nginx-1.23.1.tar.gz</span><br></pre></td></tr></table></figure><p>解压缩</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.23.1.tar.gz</span><br></pre></td></tr></table></figure><p>查看文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls nginx-1.23.1</span></span><br><span class="line">auto     CHANGES.ru  configure  html     man     src</span><br><span class="line">CHANGES  conf        contrib    LICENSE  README</span><br></pre></td></tr></table></figure><h3 id="第一曲"><a href="#第一曲" class="headerlink" title="第一曲"></a>第一曲</h3><blockquote><p>执行脚本<code>configure</code>文件</p><p>cd &#x2F;nginx-1.23.1 切换到解压文件夹下运行</p></blockquote><p>此处演示放在&#x2F;root&#x2F;nginx目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/root/nginx</span><br></pre></td></tr></table></figure><p>针对C、C++代码，进行编译安装，需要指定配置文件<code>Makefile</code>，需要通过<code>configure</code>脚本生成；</p><p>通过选项传递参数，指定启用特性，安装路径等，执行时会生成Makefile；</p><p>整个过程会检查依赖的外部环境</p><h4 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h4><p>如果出现<code>pcre</code>报错，请执行命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install pcre-devel -y</span><br></pre></td></tr></table></figure><p>解决后，又出现<code>zlib</code>报错，请执行命令安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install zlib zlib-devel -y</span><br></pre></td></tr></table></figure><h3 id="第二曲"><a href="#第二曲" class="headerlink" title="第二曲"></a>第二曲</h3><blockquote><p><a href="https://www.php.cn/linux-419198.html">执行make命令</a></p></blockquote><p>参阅文献</p><p><a href="https://blog.csdn.net/qq_40603010/article/details/107630509">Linux中make， make install命令分别是什么，用法？</a></p><p><strong>linux中make是用来编译的，它从Makefile中读取指令，然后编译。</strong></p><p>make的作用是开始进行源代码编译，以及一些功能的提供，这些功能由他的 Makefile 设置文件提供相关的功能。</p><p>make是 Linux 开发套件里面自动化编译的一个控制程序，他通过借助 Makefile 里面编写的编译规范进行自动化的调用 gcc 、ld 以及运行某些需要的程序进行编译的程序。</p><h3 id="第三曲"><a href="#第三曲" class="headerlink" title="第三曲"></a>第三曲</h3><blockquote><p>执行make install</p></blockquote><p>开始安装软件到.&#x2F;configure &lt;目录&gt; 指定的安装路径</p><p>此时，我们已经完成了nginx软件的安装，我们可以在<code>指定的安装目录下</code>找到<code>sbin</code>文件夹，里面即是nginx的启动文件。</p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/root/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>我们可以将启动命令直接写入PATH中，这样就可以直接使用nginx执行</p><p><strong>在全局配置文件夹中写入nginx.sh文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile.d/nginx.sh</span><br></pre></td></tr></table></figure><p><strong>内容为命令所在目录与PATH的拼接</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PATH=/root/nginx/sbin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p><strong>重新登录后生效，可以直接使用nginx执行</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">logout</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> rpm </tag>
            
            <tag> yum </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux计划任务</title>
      <link href="/posts/150515841/"/>
      <url>/posts/150515841/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是计划任务？"><a href="#什么是计划任务？" class="headerlink" title="什么是计划任务？"></a>什么是计划任务？</h1><blockquote><p>后台运行，在预定时间自动执行预设任务。</p></blockquote><h2 id="检查crond服务相关软件包"><a href="#检查crond服务相关软件包" class="headerlink" title="检查crond服务相关软件包"></a>检查crond服务相关软件包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># rpm -qa cron*</span></span><br><span class="line">crontabs-1.11-6.20121102git.el7.noarch</span><br><span class="line">cronie-anacron-1.4.11-24.el7_9.x86_64</span><br><span class="line">cronie-1.4.11-24.el7_9.x86_64</span><br></pre></td></tr></table></figure><p>出现如上信息说明已安装！</p><h2 id="检查crond服务是否运行"><a href="#检查crond服务是否运行" class="headerlink" title="检查crond服务是否运行"></a>检查crond服务是否运行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status crond</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># systemctl status crond</span></span><br><span class="line">● crond.service - Command Scheduler</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/crond.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since 三 2022-07-27 08:20:21 CST; 4min 9s ago</span><br><span class="line"> Main PID: 705 (crond)</span><br><span class="line">   CGroup: /system.slice/crond.service</span><br><span class="line">           └─705 /usr/sbin/crond -n</span><br><span class="line"></span><br><span class="line">7月 27 08:20:21 localhost.localdomain systemd[1]: Started Command Scheduler.</span><br><span class="line">7月 27 08:20:21 localhost.localdomain crond[705]: (CRON) INFO (RANDOM_DELAY ...</span><br><span class="line">7月 27 08:20:21 localhost.localdomain crond[705]: (CRON) INFO (running with ...</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show <span class="keyword">in</span> full.</span><br></pre></td></tr></table></figure><p><code>running</code>说明正在运行</p><h1 id="crond定时任务服务应用"><a href="#crond定时任务服务应用" class="headerlink" title="crond定时任务服务应用"></a>crond定时任务服务应用</h1><p>Cron是Linux系统中以<code>后台</code>进程模式<code>周期性</code>执行命令或指定程序任务的服务软件名。</p><p>Linux系统启动后，cron软件便会启动，对应进程名为crond。</p><p>默认定期（每分钟）检查系统是否有需要执行的任务计划，如果有，则按计划执行。</p><blockquote><p><code>cron</code>定时任务的名字</p><p><code>crond</code>定时任务进程名</p><p><code>crontab</code>管理定会任务命令</p></blockquote><h1 id="为什么要使用定时任务？"><a href="#为什么要使用定时任务？" class="headerlink" title="为什么要使用定时任务？"></a>为什么要使用定时任务？</h1><ul><li>数据库定时备份</li><li>夜间网站数据（用户上传、文件、图片、程序）备份</li><li>备份时间等待长</li><li>任务重复性高</li></ul><p>利用Linux的定时任务cron工具可以解决重复性、周期性、自动备份等运维工作。</p><h1 id="Linux下定时任务软件"><a href="#Linux下定时任务软件" class="headerlink" title="Linux下定时任务软件"></a>Linux下定时任务软件</h1><ol><li><code>at</code>轻量定时任务工具，依赖于<code>atd服务</code>，临时</li><li><code>crond</code>定时任务工具</li></ol><h2 id="at"><a href="#at" class="headerlink" title="at"></a>at</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">at [Time] [Commend]</span><br></pre></td></tr></table></figure><p><code>Ctrl+D</code>提交任务</p><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">HH:MM</span><br><span class="line">YYYY-mm-dd</span><br><span class="line">noon 正午十二点</span><br><span class="line">midnight 夜间十二点</span><br><span class="line">teatime 下午茶时间、四点</span><br><span class="line">tomorrow 明天</span><br><span class="line">now+1min 一分钟后</span><br><span class="line">now+1minutes/hours/days/weeks</span><br></pre></td></tr></table></figure><h2 id="cron"><a href="#cron" class="headerlink" title="cron"></a>cron</h2><blockquote><p>crond进程提交任务方式与at不同，crond需要读取配置文件，且有固定的文件格式，通过crontab命令管理文件</p></blockquote><h3 id="cron任务分为两类"><a href="#cron任务分为两类" class="headerlink" title="cron任务分为两类"></a>cron任务分为两类</h3><h4 id="系统定时任务"><a href="#系统定时任务" class="headerlink" title="系统定时任务"></a>系统定时任务</h4><p>操作系统自带的。crond服务除了会在工作时查看<code>/var/spool/cron</code>文件夹下的定时任务文件以外，还会看<code>/etc/cron.d</code>目录以及<code>/etc/anacrontab</code>下面的文件内容，里面存放着<code>每天</code>、<code>每周</code>、<code>每月</code>需要执行的系统任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls /etc/ -l|grep cron*</span></span><br><span class="line">-rw-------.  1 root root      541 1月  14 2022 anacrontab</span><br><span class="line">drwxr-xr-x.  2 root root       21 7月  13 12:25 cron.d</span><br><span class="line">drwxr-xr-x.  2 root root       42 7月  13 12:25 cron.daily</span><br><span class="line">-rw-------.  1 root root        0 1月  14 2022 cron.deny</span><br><span class="line">drwxr-xr-x.  2 root root       22 7月  13 12:25 cron.hourly</span><br><span class="line">drwxr-xr-x.  2 root root        6 6月  10 2014 cron.monthly</span><br><span class="line">-rw-r--r--.  1 root root      451 6月  10 2014 crontab</span><br><span class="line">drwxr-xr-x.  2 root root        6 6月  10 2014 cron.weekly</span><br></pre></td></tr></table></figure><h3 id="用户定时任务"><a href="#用户定时任务" class="headerlink" title="用户定时任务"></a>用户定时任务</h3><p>当系统管理员或普通用户创建了需要定期执行的任务，可以使用<code>crontab</code>命令配置，当crond服务在启动时，每分钟查看<code>/var/spool/cron</code>路径下以<code>系统用户名</code>命名的<code>定时任务文件</code>，以确定是否有需要执行的任务。</p><h3 id="crontab命令"><a href="#crontab命令" class="headerlink" title="crontab命令"></a>crontab命令</h3><h4 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-l 查看定时任务</span><br><span class="line">-e 编辑定时任务，建议手动编辑</span><br><span class="line">-i 删除定时任务，提示用户确认删除，避免出错</span><br><span class="line">-r 删除定时任务，移除/var/spool/cron/&lt;username&gt;文件</span><br><span class="line">-u &lt;user&gt; 指定用户执行任务，root可以管理普通用户计划任务</span><br></pre></td></tr></table></figure><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><blockquote><p>* * * * * &lt;命令绝对路径&gt;</p><p>口诀：什么时间做什么事</p></blockquote><p><strong>编写时注意书写规范</strong></p><blockquote><ul><li>加上注释：what who why when</li><li>不要求输出定向到 <a href="https://www.cnblogs.com/tinywan/p/6025468.html">&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1</a></li><li>在指定用户下执行相关定时任务，而不是什么都交给root，可以使用-u <usr></li><li>推荐使用crontab -e编辑，有语法检查</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">* * * * * 开头五颗星用于设置时间</span><br><span class="line">第二部分是执行的命令</span><br></pre></td></tr></table></figure><p><strong>五颗星分别对应：</strong></p><ul><li>分（0-59）</li><li>时（0-23）</li><li>日（1-31）</li><li>月（1-12 or jan、feb…..）</li><li>周（0-6、sunday&#x3D;0&#x2F;7 or sun、mon……）</li></ul><p>注意：每天和每周不能同时使用</p><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*每</span><br><span class="line">-范围，1-12表示1到12</span><br><span class="line">,分割时段，17,20表示17和20</span><br><span class="line">/nn表示可以整除的数字，每隔n的单位时间，如每隔10分钟表示/10</span><br></pre></td></tr></table></figure><h3 id="管理命令"><a href="#管理命令" class="headerlink" title="管理命令"></a>管理命令</h3><h4 id="查看cron运行状态"><a href="#查看cron运行状态" class="headerlink" title="查看cron运行状态"></a>查看cron运行状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl is-active crond</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status crond</span><br></pre></td></tr></table></figure><h1 id="定时任务与邮件服务"><a href="#定时任务与邮件服务" class="headerlink" title="定时任务与邮件服务"></a>定时任务与邮件服务</h1><blockquote><p>计划任务触发执行后，会通过邮件发送给用户（并非互联网中的邮件那样，仅仅是系统内部的邮件服务）</p></blockquote><h2 id="检查服务端口"><a href="#检查服务端口" class="headerlink" title="检查服务端口"></a>检查服务端口</h2><blockquote><p>邮件端口号为<code>25</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ss -tnl | grep 25</span><br><span class="line">netstat -tnl | grep 25</span><br></pre></td></tr></table></figure><h2 id="若未开启服务"><a href="#若未开启服务" class="headerlink" title="若未开启服务"></a>若未开启服务</h2><blockquote><p>需要启动postfix服务，用于发送邮件</p></blockquote><p>首先，编辑文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/postfix/main.cf</span><br></pre></td></tr></table></figure><p>然后，修改参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">inet_interface = all</span><br><span class="line">inet_protocols = all</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>最后，启动postfix服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start postfix</span><br></pre></td></tr></table></figure><h2 id="本地化电子邮件服务"><a href="#本地化电子邮件服务" class="headerlink" title="本地化电子邮件服务"></a>本地化电子邮件服务</h2><h3 id="邮件协议解释"><a href="#邮件协议解释" class="headerlink" title="邮件协议解释"></a><a href="http://help.163.com/09/1223/14/5R7P6CJ600753VB8.html">邮件协议解释</a></h3><blockquote><ul><li>pop3</li><li>smtp</li><li>imap</li></ul></blockquote><h3 id="mailx命令"><a href="#mailx命令" class="headerlink" title="mailx命令"></a>mailx命令</h3><blockquote><p>三个概念</p></blockquote><p>MTA：Mail Transport Agent，邮件传送代理，也就是<code>postfix</code>服务</p><p>MUA：Mail User Agent，收发邮件的客户端</p><p>Centos7通过<code>mailx</code>发送邮件，通过<code>mail</code>收邮件（mail也可以用来发邮件）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mailx -s <span class="string">&quot;This is title.&quot;</span> usr</span><br><span class="line"><span class="comment">#-s 表示添加主题</span></span><br><span class="line"><span class="comment">#usr 为发送邮件的对象</span></span><br><span class="line"><span class="comment">#回车后，输入文章内容</span></span><br><span class="line"><span class="comment">#输入.号，退出邮件</span></span><br><span class="line"><span class="comment">#EOT 为结束符号end out</span></span><br></pre></td></tr></table></figure><p>使用文件中的内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mail -s <span class="string">&quot;This is title.&quot;</span> usr &lt;mailtosb.txt</span><br></pre></td></tr></table></figure><p>可以将文件中的内容当作邮件发给对应用户</p><h3 id="mail命令"><a href="#mail命令" class="headerlink" title="mail命令"></a>mail命令</h3><blockquote><p>用于接收邮件</p></blockquote><h4 id="查看邮件"><a href="#查看邮件" class="headerlink" title="查看邮件"></a>查看邮件</h4><p>如果有多封邮件，<code>&amp;+第一列对应的数字</code>即可打开对应邮件。</p><h4 id="q退出"><a href="#q退出" class="headerlink" title="q退出"></a><code>q</code>退出</h4><h1 id="cron定时任务实践"><a href="#cron定时任务实践" class="headerlink" title="cron定时任务实践"></a>cron定时任务实践</h1>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> crond </tag>
            
            <tag> email </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式与Linux文本三剑客Day4</title>
      <link href="/posts/1209705612/"/>
      <url>/posts/1209705612/</url>
      
        <content type="html"><![CDATA[<p><a href="https://lptexas-cub.github.io/posts/">续正则表达式与Linux文本三剑客Day3</a></p><h1 id="sed练习"><a href="#sed练习" class="headerlink" title="sed练习"></a>sed练习</h1><h2 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h2><h3 id="sed1-txt"><a href="#sed1-txt" class="headerlink" title="sed1.txt"></a>sed1.txt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="sed2-txt"><a href="#sed2-txt" class="headerlink" title="sed2.txt"></a>sed2.txt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> I like my lover.</span><br><span class="line">I love my lover.</span><br><span class="line">He likes his lovers.</span><br><span class="line"> He loves his lovers.</span><br><span class="line"><span class="comment">#she loves her cat.</span></span><br><span class="line">i want ride my bike.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="替换文件中root为commen-只替换一次，与替换所有"><a href="#替换文件中root为commen-只替换一次，与替换所有" class="headerlink" title="替换文件中root为commen,只替换一次，与替换所有"></a>替换文件中root为commen,只替换一次，与替换所有</h3><blockquote><p>只替换一次（每一行第一次出现的root）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;root&quot; sed1.txt</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"><span class="comment">######</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -n &#x27;s/root/commen/p&#x27; sed1.txt</span></span><br><span class="line">commen:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/commen:/sbin/nologin</span><br><span class="line"><span class="comment">######写入文件，不演示结果了，和上面一样的</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i &#x27;s/root/commen/&#x27; sed1.txt</span></span><br></pre></td></tr></table></figure><blockquote><p>替换所有</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;root&quot; sed1.txt</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line"><span class="comment">#######</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -n &#x27;s/root/commen/gp&#x27; sed1.txt</span></span><br><span class="line">commen:x:0:0:commen:/commen:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/commen:/sbin/nologin</span><br><span class="line"><span class="comment">########</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -i &#x27;s/root/commen/g&#x27; sed1.txt</span></span><br></pre></td></tr></table></figure><h3 id="替换文件所有的commen为root，且仅仅打印替换的结果"><a href="#替换文件所有的commen为root，且仅仅打印替换的结果" class="headerlink" title="替换文件所有的commen为root，且仅仅打印替换的结果"></a>替换文件所有的commen为root，且仅仅打印替换的结果</h3><blockquote><p>上一题中间过程已经演示了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed -n &#x27;s/root/commen/p&#x27; sed1.txt</span></span><br><span class="line">commen:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/commen:/sbin/nologin</span><br><span class="line"><span class="comment">#######</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -n &#x27;s/root/commen/gp&#x27; sed1.txt</span></span><br><span class="line">commen:x:0:0:commen:/commen:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/commen:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="替换前10行b开头的用户，改为c，且仅显示替换的结果"><a href="#替换前10行b开头的用户，改为c，且仅显示替换的结果" class="headerlink" title="替换前10行b开头的用户，改为c，且仅显示替换的结果"></a>替换前10行b开头的用户，改为c，且仅显示替换的结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;^b&quot; sed1.txt</span></span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">[root@localhost ~]<span class="comment"># sed -n &#x27;1,10s/^bin/c/p&#x27; sed1.txt</span></span><br><span class="line">c:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="替换前10行b开头的用户，改为c，且将m开头的行，改为M，且仅仅显示替换的结果"><a href="#替换前10行b开头的用户，改为c，且将m开头的行，改为M，且仅仅显示替换的结果" class="headerlink" title="替换前10行b开头的用户，改为c，且将m开头的行，改为M，且仅仅显示替换的结果"></a>替换前10行b开头的用户，改为c，且将m开头的行，改为M，且仅仅显示替换的结果</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#  sed -n -e &#x27;1,10s/^bin/c/p&#x27; -e &#x27;1,10s/^m/M/p&#x27;  sed1.txt</span></span><br><span class="line">c:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">Mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="删除四行后面的所有行"><a href="#删除四行后面的所有行" class="headerlink" title="删除四行后面的所有行"></a>删除四行后面的所有行</h3><blockquote><p>使用d内置命令符时，删除行时，不需要加-n参数</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed &#x27;5,$d&#x27; sed1.txt</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br></pre></td></tr></table></figure><h3 id="删除从root开始到ftp之间的行"><a href="#删除从root开始到ftp之间的行" class="headerlink" title="删除从root开始到ftp之间的行"></a>删除从root开始到ftp之间的行</h3><blockquote><p>知道行号可以直接用n,m匹配，下面为不知道时的写法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed &#x27;/^root/,/^ftp/d&#x27; sed1.txt</span></span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="将文件中空白字符开头的行，添加注释符"><a href="#将文件中空白字符开头的行，添加注释符" class="headerlink" title="将文件中空白字符开头的行，添加注释符"></a>将文件中空白字符开头的行，添加注释符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed -e &#x27;s/^[[:space:]]/#/g&#x27; -e &#x27;s/^$/#/g&#x27; sed2.txt</span></span><br><span class="line"><span class="comment">#I like my lover.</span></span><br><span class="line">I love my lover.</span><br><span class="line">He likes his lovers.</span><br><span class="line"><span class="comment">#He loves his lovers.</span></span><br><span class="line"><span class="comment">#she loves her cat.</span></span><br><span class="line">i want ride my bike.</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="删除文件的空白和注释行"><a href="#删除文件的空白和注释行" class="headerlink" title="删除文件的空白和注释行"></a>删除文件的空白和注释行</h3><blockquote><p>执行多个匹配</p><ul><li><p>参数-e</p></li><li><p>分号;</p></li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">###使用参数-e</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -e &#x27;/^[[:space:]]/d&#x27; -e &#x27;/^$/d&#x27; -e &#x27;/^#/d&#x27; sed2.txt</span></span><br><span class="line">I love my lover.</span><br><span class="line">He likes his lovers.</span><br><span class="line">i want ride my bike.</span><br><span class="line"><span class="comment">###使用分号;</span></span><br><span class="line">[root@localhost ~]<span class="comment"># sed -e &#x27;/^[[:space:]]/d;/^$/d;/^#/d&#x27; sed2.txt</span></span><br><span class="line">I love my lover.</span><br><span class="line">He likes his lovers.</span><br><span class="line">i want ride my bike.</span><br></pre></td></tr></table></figure><h3 id="给文件前三行，添加-符号"><a href="#给文件前三行，添加-符号" class="headerlink" title="给文件前三行，添加@符号"></a>给文件前三行，添加@符号</h3><blockquote><p>思路：匹配第一个字符，把第一个字符替换成@符号后，引用匹配到的第一个字符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed -r &#x27;1,3s/(^.)/@\1/&#x27; sed2.txt</span></span><br><span class="line">@ I like my lover.</span><br><span class="line">@I love my lover.</span><br><span class="line">@He likes his lovers.</span><br><span class="line"> He loves his lovers.</span><br><span class="line"><span class="comment">#she loves her cat.</span></span><br><span class="line">i want ride my bike.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="取出IP地址"><a href="#取出IP地址" class="headerlink" title="取出IP地址"></a>取出IP地址</h3><blockquote><p>思路：取出IP地址所在行，删除前后不需要的内容</p></blockquote><p><a href="https://blog.csdn.net/qq_25123887/article/details/117219926">ifconfig命令找不到如何解决？</a></p><p>每个人的配置不一样，请先使用ifconfig看一下自己用的是哪张网卡，然后ifconfig &lt;网卡名&gt;就可以只打印该网卡的信息。</p><p>我还可以用ip a的方式查到IP信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ifconfig ens33|sed &#x27;2p&#x27; -n|sed &#x27;s/^.*inet[[:space:]]//;s/netmask.*//&#x27;</span></span><br><span class="line">192.168.41.100</span><br><span class="line"><span class="comment">####减少使用管道符</span></span><br><span class="line">[root@localhost ~]<span class="comment"># ifconfig ens33|sed &#x27;2s/^.*inet[[:space:]]//;s/netmask.*//p&#x27; -n</span></span><br><span class="line">192.168.41.100</span><br><span class="line"><span class="comment">####还可以用参数-e这里就不再写了，大家可以自己试试</span></span><br></pre></td></tr></table></figure><h3 id="找出系统版本"><a href="#找出系统版本" class="headerlink" title="找出系统版本"></a>找出系统版本</h3><blockquote><p>只想要版本号如：12</p><p>(原本是7.9.2009，这里我是修改文件)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat /etc/centos-release</span></span><br><span class="line">CentOS Linux release 12.9.2009 (Core)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># sed -r &#x27;s/^.*release[[:space:]]*([^.]+).*/\1/p&#x27; /etc/centos-release -n</span></span><br><span class="line">12</span><br><span class="line"><span class="comment">###如果不使用([^.])+那么结果会只匹配到1</span></span><br></pre></td></tr></table></figure><h1 id="awk练习"><a href="#awk练习" class="headerlink" title="awk练习"></a>awk练习</h1><h2 id="准备文件-1"><a href="#准备文件-1" class="headerlink" title="准备文件"></a>准备文件</h2><h3 id="awk1-txt"><a href="#awk1-txt" class="headerlink" title="awk1.txt"></a><a href="https://lptexas.top/posts/2709062073/#%E5%87%86%E5%A4%87%E6%96%87%E4%BB%B6awk1-txt">awk1.txt</a></h3><h3 id="awk3-txt"><a href="#awk3-txt" class="headerlink" title="awk3.txt"></a>awk3.txt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Xiao Yang:[86] 675-161-111:10:20</span><br><span class="line"></span><br><span class="line">John Mai:[1] 123-321-111:16:55</span><br><span class="line"></span><br><span class="line">Tom Catty:[2] 444-555-444:45:12</span><br><span class="line"></span><br><span class="line">Maiky Savage:[5] 221-125-011:11:87</span><br><span class="line"></span><br><span class="line">Mati Mada:[7] 484-540-001:454:44</span><br><span class="line"></span><br><span class="line">Chet Main:[86] 655-144-111:20:10</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="x2F-etc-x2F-passwd"><a href="#x2F-etc-x2F-passwd" class="headerlink" title="&#x2F;etc&#x2F;passwd"></a>&#x2F;etc&#x2F;passwd</h3><p><a href="https://www.sohu.com/a/320177323_505901">介绍一下passwd文件的结构</a></p><p><img src="http://5b0988e595225.cdn.sohucs.com/images/20190613/4b27211904a247f5b42fcb706ddbfb12.jpeg" alt="各字段含义"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">chrony:x:998:996::/var/lib/chrony:/sbin/nologin</span><br><span class="line">commen:x:1000:1000::/home/commen:/bin/bash</span><br></pre></td></tr></table></figure><h2 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h2><h3 id="在当前系统中打印所有普通用户的用户名和主目录"><a href="#在当前系统中打印所有普通用户的用户名和主目录" class="headerlink" title="在当前系统中打印所有普通用户的用户名和主目录"></a>在当前系统中打印所有普通用户的用户名和主目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;:&quot; &#x27;&#123;print $1,$(NF-1)&#125;&#x27; /etc/passwd</span></span><br><span class="line">root /root</span><br><span class="line">bin /bin</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="comment">#省略了哈</span></span><br></pre></td></tr></table></figure><h3 id="打印UID大于500的用户和其UID以及默认shell解释器"><a href="#打印UID大于500的用户和其UID以及默认shell解释器" class="headerlink" title="打印UID大于500的用户和其UID以及默认shell解释器"></a>打印UID大于500的用户和其UID以及默认shell解释器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat -n /etc/passwd|awk -F &quot;:&quot; &#x27;$3&gt;500&#123;print $1,$NF&#125;&#x27;</span></span><br><span class="line">    16  polkitd /sbin/nologin</span><br><span class="line">    19  chrony /sbin/nologin</span><br><span class="line">    20  commen /bin/bash</span><br></pre></td></tr></table></figure><h3 id="给awk1-txt前两行添加-号"><a href="#给awk1-txt前两行添加-号" class="headerlink" title="给awk1.txt前两行添加#号"></a>给awk1.txt前两行添加#号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;NR&lt;3&#123;print &quot;#&quot;$0&#125;&#x27; awk1.txt</span></span><br><span class="line"><span class="comment">#a1 a2 a3 a4</span></span><br><span class="line"><span class="comment">#b1 b2 b3 b4</span></span><br><span class="line"><span class="comment">######</span></span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;NR&lt;=2&#123;print &quot;#&quot;$0&#125;&#x27; awk1.txt</span></span><br><span class="line"><span class="comment">#a1 a2 a3 a4</span></span><br><span class="line"><span class="comment">#b1 b2 b3 b4</span></span><br></pre></td></tr></table></figure><h3 id="统计所有电话号码不带区号，不显示空行"><a href="#统计所有电话号码不带区号，不显示空行" class="headerlink" title="统计所有电话号码不带区号，不显示空行"></a>统计所有电话号码不带区号，不显示空行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;[ :]&quot; &#x27;!/^$/&#123;print $4&#125;&#x27; awk3.txt</span></span><br><span class="line">675-161-111</span><br><span class="line">123-321-111</span><br><span class="line">444-555-444</span><br><span class="line">221-125-011</span><br><span class="line">484-540-001</span><br><span class="line">655-144-111</span><br></pre></td></tr></table></figure><p><code>[ :]</code>表示以空格或冒号分隔</p><p><code>!/^$/</code>表示不匹配空行，<code>!</code>的作用是取反</p><h3 id="显示Tom的电话"><a href="#显示Tom的电话" class="headerlink" title="显示Tom的电话"></a>显示Tom的电话</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#  awk -F &quot;[ :]&quot; &#x27;/^Tom/&#123;print $1,$4&#125;&#x27; awk3.txt</span></span><br><span class="line">Tom 444-555-444</span><br></pre></td></tr></table></figure><h3 id="显示所有M开头的姓和手机号带区号"><a href="#显示所有M开头的姓和手机号带区号" class="headerlink" title="显示所有M开头的姓和手机号带区号"></a>显示所有M开头的姓和手机号带区号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;[: ]&quot; &#x27;$2~/^M/&#123;print $2,$3$4&#125;&#x27; awk3.txt</span></span><br><span class="line">Mai [1]123-321-111</span><br><span class="line">Mada [7]484-540-001</span><br><span class="line">Main [86]655-144-111</span><br></pre></td></tr></table></figure><p><code>$2~</code>表示针对第二列使用模式匹配</p><h3 id="显示所有区号为86的人名"><a href="#显示所有区号为86的人名" class="headerlink" title="显示所有区号为86的人名"></a>显示所有区号为86的人名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;[: ]&quot; &#x27;$3~/\[86\]/&#123;print $1&#125;&#x27; awk3.txt</span></span><br><span class="line">Xiao</span><br><span class="line">Chet</span><br></pre></td></tr></table></figure><p><code>\[86\]</code>使用了反斜杠转义</p><h3 id="显示Main除了电话号码的其它信息，并在信息前加-符"><a href="#显示Main除了电话号码的其它信息，并在信息前加-符" class="headerlink" title="显示Main除了电话号码的其它信息，并在信息前加$符"></a>显示Main除了电话号码的其它信息，并在信息前加$符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;[: ]&quot; &#x27;/Main/&#123;print &quot;$&quot;$(NF-1),&quot;$&quot;$NF&#125;&#x27; awk3.txt</span></span><br><span class="line"><span class="variable">$20</span> <span class="variable">$10</span></span><br></pre></td></tr></table></figure><h3 id="显示所有人的“姓-，-名”"><a href="#显示所有人的“姓-，-名”" class="headerlink" title="显示所有人的“姓+，+名”"></a>显示所有人的“姓+，+名”</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;[: ]&quot; -v OFS=&quot;,&quot; &#x27;!/^$/&#123;print $2,$1&#125;&#x27; awk3.txt</span></span><br><span class="line">Yang,Xiao</span><br><span class="line">Mai,John</span><br><span class="line">Catty,Tom</span><br><span class="line">Savage,Maiky</span><br><span class="line">Mada,Mati</span><br><span class="line">Main,Chet</span><br></pre></td></tr></table></figure><p><code>-v OFS=&quot;,&quot;</code>效果等同于<code>$2&quot;,&quot;$1</code></p><h3 id="删除空白行"><a href="#删除空白行" class="headerlink" title="删除空白行"></a>删除空白行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;!/^$/&#x27; awk3.txt</span></span><br><span class="line">Xiao Yang:[86] 675-161-111:10:20</span><br><span class="line">John Mai:[1] 123-321-111:16:55</span><br><span class="line">Tom Catty:[2] 444-555-444:45:12</span><br><span class="line">Maiky Savage:[5] 221-125-011:11:87</span><br><span class="line">Mati Mada:[7] 484-540-001:454:44</span><br><span class="line">Chet Main:[86] 655-144-111:20:10</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> awk </tag>
            
            <tag> grep </tag>
            
            <tag> sed </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式与Linux文本三剑客Day3</title>
      <link href="/posts/3598594351/"/>
      <url>/posts/3598594351/</url>
      
        <content type="html"><![CDATA[<p><a href="https://asucanyh-cn.github.io/posts/2709062073/">续正则表达式与Linux文本三剑客Day2</a></p><h1 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h1><h2 id="模式"><a href="#模式" class="headerlink" title="模式"></a>模式</h2><blockquote><p><code>BEGIN</code>与<code>END</code>与<code>其它条件</code></p><ul><li>BEGIN模式是处理文本之前需要执行的操作</li><li>END模式是处理文本之后需要执行的操作</li><li>其它条件可以自己定义，如：NR&#x3D;&#x3D;2显示第二行，NR&lt;4显示小于4的行</li></ul></blockquote><h3 id="BEGIN"><a href="#BEGIN" class="headerlink" title="BEGIN"></a>BEGIN</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;我会先被打印！&quot;&#125;&#123;print $0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;print &quot;我会先被打印！&quot;&#125;&#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">我会先被打印！</span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br></pre></td></tr></table></figure><h3 id="END"><a href="#END" class="headerlink" title="END"></a>END</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;我是BEGIN先执行的内容！&quot;&#125;&#123;print $0&#125;END&#123;print &quot;我是END后执行的内容！&quot;&#125;&#x27;</span> awk2.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;print &quot;我是BEGIN先执行的内容！&quot;&#125;&#123;print $0&#125;END&#123;print &quot;我是END后执行的内容！&quot;&#125;&#x27; awk2.txt</span></span><br><span class="line">我是BEGIN先执行的内容！</span><br><span class="line">a:b:c:d</span><br><span class="line">1:2:3:4</span><br><span class="line">x:x:x:x</span><br><span class="line">我是END后执行的内容！</span><br></pre></td></tr></table></figure><h3 id="其它条件"><a href="#其它条件" class="headerlink" title="其它条件"></a>其它条件</h3><h4 id="awk模式关系运算符"><a href="#awk模式关系运算符" class="headerlink" title="awk模式关系运算符"></a>awk模式关系运算符</h4><table><thead><tr><th>关系运算符</th><th>解释</th><th>示例</th></tr></thead><tbody><tr><td>&lt;</td><td>小于</td><td>NR&lt;2</td></tr><tr><td>&lt;&#x3D;</td><td>小于等于</td><td>NR&lt;&#x3D;3</td></tr><tr><td>&#x3D;&#x3D;</td><td>等于</td><td>NR&#x3D;&#x3D;1</td></tr><tr><td>!&#x3D;</td><td>不等于</td><td>NR!&#x3D;1</td></tr><tr><td>&gt;&#x3D;</td><td>大于等于</td><td>NR&gt;&#x3D;1</td></tr><tr><td>&gt;</td><td>大于</td><td>NR&gt;1</td></tr><tr><td>~</td><td>匹配正则</td><td>x~&#x2F;正则表达式&#x2F;</td></tr><tr><td>!~</td><td>不匹配正则</td><td>x!~&#x2F;正则表达式&#x2F;</td></tr></tbody></table><h5 id="x3D"><a href="#x3D" class="headerlink" title="!&#x3D;"></a>!&#x3D;</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;NR!=1&#123;print NR,$0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;NR!=1&#123;print NR,$0&#125;&#x27; awk1.txt</span></span><br><span class="line">2 b1 b2 b3 b4</span><br><span class="line">3 c1 c2 c3 c4</span><br><span class="line">4 d1 d2 d3 d4</span><br></pre></td></tr></table></figure><h2 id="正则实践"><a href="#正则实践" class="headerlink" title="正则实践"></a>正则实践</h2><blockquote><p>使用正则的语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;正则表达式&#x27;</span> 文件</span><br><span class="line">awk  <span class="string">&#x27;/正则表达式/动作&#x27;</span> 文件</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat awk2.txt</span></span><br><span class="line">a:b:c:d</span><br><span class="line">1:2:3:4</span><br><span class="line">x:x:x:x</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;/d$/&#123;print $0&#125;&#x27; awk2.txt</span></span><br><span class="line">a:b:c:d</span><br><span class="line">[root@localhost ~]<span class="comment"># grep &quot;d$&quot; awk2.txt</span></span><br><span class="line">a:b:c:d</span><br></pre></td></tr></table></figure><h2 id="awk-nginx企业实战"><a href="#awk-nginx企业实战" class="headerlink" title="awk nginx企业实战"></a>awk nginx企业实战</h2><h3 id="日志文件"><a href="#日志文件" class="headerlink" title="日志文件"></a>日志文件</h3><p>access.log</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">60.255.73.42 - - [24/Jul/2022:18:55:11 +0800] <span class="string">&quot;GET /js/schedule_index.js HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;https://lptexas.top/images/&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span></span><br><span class="line">60.255.73.42 - - [24/Jul/2022:18:55:11 +0800] <span class="string">&quot;GET /js/canvas-nest.js HTTP/1.1&quot;</span> 304 0 <span class="string">&quot;https://lptexas.top/images/&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span></span><br><span class="line">60.255.73.42 - - [24/Jul/2022:18:55:11 +0800] <span class="string">&quot;GET /img/post/gawr_gura1.jpg HTTP/1.1&quot;</span> 304 0 <span class="string">&quot;https://lptexas.top/images/&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span></span><br><span class="line">60.255.73.42 - - [24/Jul/2022:18:55:12 +0800] <span class="string">&quot;GET /img/post/gawr_gura2.jpg HTTP/1.1&quot;</span> 304 0 <span class="string">&quot;https://lptexas.top/images/&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span></span><br><span class="line">60.255.73.42 - - [24/Jul/2022:18:55:12 +0800] <span class="string">&quot;GET /img/web-info/avator.jpg HTTP/1.1&quot;</span> 304 0 <span class="string">&quot;https://lptexas.top/images/&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span></span><br><span class="line">60.255.73.42 - - [24/Jul/2022:18:55:12 +0800] <span class="string">&quot;GET /css/schedule_style.css HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;https://lptexas.top/images/&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span></span><br><span class="line">60.255.73.42 - - [24/Jul/2022:18:55:13 +0800] <span class="string">&quot;GET /js/schedule_index.js HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;https://lptexas.top/images/&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36 Edg/103.0.1264.71&quot;</span></span><br><span class="line">184.105.247.195 - - [24/Jul/2022:18:55:37 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 301 169 <span class="string">&quot;-&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:48 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 301 169 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:48 +0800] <span class="string">&quot;&quot;</span> 400 0 <span class="string">&quot;-&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:49 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 47180 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:49 +0800] <span class="string">&quot;GET //wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:50 +0800] <span class="string">&quot;GET //xmlrpc.php?rsd HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:50 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 47180 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:50 +0800] <span class="string">&quot;GET //blog/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:50 +0800] <span class="string">&quot;GET //web/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:50 +0800] <span class="string">&quot;GET //wordpress/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:51 +0800] <span class="string">&quot;GET //website/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:51 +0800] <span class="string">&quot;GET //wp/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:51 +0800] <span class="string">&quot;GET //news/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:51 +0800] <span class="string">&quot;GET //2018/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:51 +0800] <span class="string">&quot;GET //2019/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:52 +0800] <span class="string">&quot;GET //shop/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:52 +0800] <span class="string">&quot;GET //wp1/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:52 +0800] <span class="string">&quot;GET //test/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:52 +0800] <span class="string">&quot;GET //media/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:52 +0800] <span class="string">&quot;GET //wp2/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:53 +0800] <span class="string">&quot;GET //site/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:53 +0800] <span class="string">&quot;GET //cms/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:53 +0800] <span class="string">&quot;GET //sito/wp-includes/wlwmanifest.xml HTTP/1.1&quot;</span> 404 555 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&quot;</span></span><br><span class="line">156.96.154.202 - - [24/Jul/2022:18:55:53 +0800] <span class="string">&quot;&quot;</span> 400 0 <span class="string">&quot;-&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line">111.30.182.61 - - [24/Jul/2022:18:56:25 +0800] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 301 169 <span class="string">&quot;-&quot;</span> <span class="string">&quot;DNSPod-Monitor/2.0&quot;</span></span><br></pre></td></tr></table></figure><h3 id="统计访客ip数量"><a href="#统计访客ip数量" class="headerlink" title="统计访客ip数量"></a>统计访客ip数量</h3><blockquote><p>使用的辅助命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sort</span> -n 数字从大到小排序</span><br><span class="line"><span class="built_in">wc</span> -l 统计行数，也就是ip总条目数</span><br><span class="line"><span class="built_in">uniq</span> 去除重复结果</span><br></pre></td></tr></table></figure><blockquote><p>通过观察access.log文件，我们发现文件分隔符为空格，且第一列为我们所需要的ip</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> 30access.<span class="built_in">log</span>|<span class="built_in">sort</span> -n</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print $1&#125;&#x27; access.log|sort -n</span></span><br><span class="line">60.255.73.42</span><br><span class="line">60.255.73.42</span><br><span class="line">60.255.73.42</span><br><span class="line">60.255.73.42</span><br><span class="line">60.255.73.42</span><br><span class="line">60.255.73.42</span><br><span class="line">60.255.73.42</span><br><span class="line">111.30.182.61</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">156.96.154.202</span><br><span class="line">184.105.247.195</span><br></pre></td></tr></table></figure><blockquote><p>对ip去重</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uniq</span> </span><br><span class="line">-c 显示行号</span><br></pre></td></tr></table></figure><p>再次执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print $1&#125;&#x27; access.log|sort -n|uniq</span></span><br><span class="line">60.255.73.42</span><br><span class="line">111.30.182.61</span><br><span class="line">156.96.154.202</span><br><span class="line">184.105.247.195</span><br><span class="line"><span class="comment">#######</span></span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print $1&#125;&#x27; access.log|sort -n|uniq -c</span></span><br><span class="line">      7 60.255.73.42</span><br><span class="line">      1 111.30.182.61</span><br><span class="line">     23 156.96.154.202</span><br><span class="line">      1 184.105.247.195</span><br></pre></td></tr></table></figure><h1 id="文本三剑客练习"><a href="#文本三剑客练习" class="headerlink" title="文本三剑客练习"></a>文本三剑客练习</h1><h2 id="准备文件"><a href="#准备文件" class="headerlink" title="准备文件"></a>准备文件</h2><p>REg2.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> I am studying REg.</span><br><span class="line">I like grep.</span><br><span class="line"></span><br><span class="line"> My phone number is +86 123456789000</span><br><span class="line"></span><br><span class="line"><span class="comment">#我是注释</span></span><br><span class="line">aoooz</span><br><span class="line">  aooz</span><br><span class="line"> aoz</span><br><span class="line">az</span><br></pre></td></tr></table></figure><p>grep.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line"><span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">games:x:12:100:games:/usr/games:/sbin/nologin</span><br><span class="line">ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">systemd-network:x:192:192:systemd Network Management:/:/sbin/nologin</span><br><span class="line">dbus:x:81:81:System message bus:/:/sbin/nologin</span><br><span class="line">polkitd:x:999:998:User <span class="keyword">for</span> polkitd:/:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">sshd1:x:4:4:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">sshd2:x:14:14:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">postfix:x:89:89::/var/spool/postfix:/sbin/nologin</span><br><span class="line">chrony:x:998:996::/var/lib/chrony:/sbin/nologin</span><br><span class="line">commen:x:1000:1000::/home/commen:/bin/bash</span><br></pre></td></tr></table></figure><p>grep1.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure><p>grep2.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><h3 id="匹配以root、sshd开头的行"><a href="#匹配以root、sshd开头的行" class="headerlink" title="匹配以root、sshd开头的行"></a>匹配以root、sshd开头的行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;^(root|sshd)&quot; grep.txt -E</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">sshd1:x:4:4:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">sshd2:x:14:14:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="匹配root、sshd的行（不出现sshd1、sshd2）"><a href="#匹配root、sshd的行（不出现sshd1、sshd2）" class="headerlink" title="匹配root、sshd的行（不出现sshd1、sshd2）"></a>匹配root、sshd的行（不出现sshd1、sshd2）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;^(root|sshd)\&gt;&quot; grep.txt -E</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="过滤出bin开头的行并显示行号"><a href="#过滤出bin开头的行并显示行号" class="headerlink" title="过滤出bin开头的行并显示行号"></a>过滤出bin开头的行并显示行号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -n &quot;^bin&quot; grep.txt</span></span><br><span class="line">2:bin:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="统计sshd开头的行出现的次数"><a href="#统计sshd开头的行出现的次数" class="headerlink" title="统计sshd开头的行出现的次数"></a>统计sshd开头的行出现的次数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -c &quot;^sshd&quot; grep.txt</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="匹配sshd开头的行最多出现两次"><a href="#匹配sshd开头的行最多出现两次" class="headerlink" title="匹配sshd开头的行最多出现两次"></a>匹配sshd开头的行最多出现两次</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -m 2 &quot;^sshd&quot; grep.txt</span></span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br><span class="line">sshd1:x:4:4:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="匹配多个文件，列出存在匹配信息的文件名字"><a href="#匹配多个文件，列出存在匹配信息的文件名字" class="headerlink" title="匹配多个文件，列出存在匹配信息的文件名字"></a>匹配多个文件，列出存在匹配信息的文件名字</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;^bin&quot; grep.txt grep1.txt grep2.txt</span></span><br><span class="line">grep.txt:bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">grep1.txt:bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line"><span class="comment">##############</span></span><br><span class="line">[root@localhost ~]<span class="comment"># grep -l &quot;^bin&quot; grep.txt grep1.txt grep2.txt</span></span><br><span class="line">grep.txt</span><br><span class="line">grep1.txt</span><br></pre></td></tr></table></figure><h3 id="过滤除了root开头的行"><a href="#过滤除了root开头的行" class="headerlink" title="过滤除了root开头的行"></a>过滤除了root开头的行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -v &quot;^root&quot; grep1.txt</span></span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="显示不以-x2F-bin-x2F-bash结尾的行"><a href="#显示不以-x2F-bin-x2F-bash结尾的行" class="headerlink" title="显示不以&#x2F;bin&#x2F;bash结尾的行"></a>显示不以&#x2F;bin&#x2F;bash结尾的行</h3><blockquote><p>减少点字数，这里就直接写命令了</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="string">&quot;/bin/bash$&quot;</span> grep.txt -n</span><br></pre></td></tr></table></figure><h3 id="找出有两位数或三位数的行"><a href="#找出有两位数或三位数的行" class="headerlink" title="找出有两位数或三位数的行"></a>找出有两位数或三位数的行</h3><blockquote><p>用到拓展正则</p><ul><li><p>[abc]或[a-c]、[012]或[0-2]</p></li><li><p>a{n,m}</p></li><li><p>\&gt;</p></li><li><p>\&lt;</p></li></ul></blockquote><p><strong>此题将作为Day1正则符号的案例其一</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;[0-9]&#123;2,3&#125;&quot;</span> grep.txt -E</span><br><span class="line">grep <span class="string">&quot;[0-9]&#123;2,3&#125;\&gt;&quot;</span> grep.txt -E</span><br><span class="line">grep <span class="string">&quot;\&lt;[0-9]&#123;2,3&#125;\&gt;&quot;</span> grep.txt -E</span><br></pre></td></tr></table></figure><h3 id="找出文件中以至少n个空白字符开头，后面是非空字符的行"><a href="#找出文件中以至少n个空白字符开头，后面是非空字符的行" class="headerlink" title="找出文件中以至少n个空白字符开头，后面是非空字符的行"></a>找出文件中以至少n个空白字符开头，后面是非空字符的行</h3><blockquote><p>单独的空格表示方法(正则的知识)</p><p><code>[[:space:]]</code></p></blockquote><p>方法一</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;^[[:space:]].*&quot; REg2.txt -n</span></span><br><span class="line">1: I am studying REg.</span><br><span class="line">4: My phone number is +86 123456789000</span><br><span class="line">8:  aooz</span><br><span class="line">9: aoz</span><br></pre></td></tr></table></figure><p>方法二 </p><blockquote><p>拓展正则</p></blockquote><blockquote><p>[^[:space:]] </p><p>空格取反，表示取其它字符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;^[[:space:]]+[^[:space:]]&quot; REg2.txt -n -E</span></span><br><span class="line">1: I am studying REg.</span><br><span class="line">4: My phone number is +86 123456789000</span><br><span class="line">8:  aooz</span><br><span class="line">9: aoz</span><br></pre></td></tr></table></figure><h3 id="不区分大小写找出所有含i的行"><a href="#不区分大小写找出所有含i的行" class="headerlink" title="不区分大小写找出所有含i的行"></a>不区分大小写找出所有含i的行</h3><p>方法一 </p><blockquote><p>-i参数</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -i &quot;i&quot; REg2.txt -n</span></span><br><span class="line">1: I am studying REg.</span><br><span class="line">2:I like grep.</span><br><span class="line">4: My phone number is +86 123456789000</span><br></pre></td></tr></table></figure><p>方法二</p><blockquote><p>拓展正则</p><p>^(i|I)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -E &quot;(i|I)&quot; REg2.txt -n</span></span><br><span class="line">1: I am studying REg.</span><br><span class="line">2:I like grep.</span><br><span class="line">4: My phone number is +86 123456789000</span><br></pre></td></tr></table></figure><p>方法三</p><blockquote><p>[]</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep &quot;[i|I]&quot; REg2.txt -n</span></span><br><span class="line">1: I am studying REg.</span><br><span class="line">2:I like grep.</span><br><span class="line">4: My phone number is +86 123456789000</span><br></pre></td></tr></table></figure><h3 id="找出root，sshd，nobody的信息"><a href="#找出root，sshd，nobody的信息" class="headerlink" title="找出root，sshd，nobody的信息"></a>找出root，sshd，nobody的信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -E &quot;^(root|sshd|nobody)\&gt;&quot; grep.txt</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin</span><br></pre></td></tr></table></figure><h3 id="找出-x2F-etc-x2F-init-d-x2F-functions文件中的所有函数名"><a href="#找出-x2F-etc-x2F-init-d-x2F-functions文件中的所有函数名" class="headerlink" title="找出&#x2F;etc&#x2F;init.d&#x2F;functions文件中的所有函数名"></a>找出&#x2F;etc&#x2F;init.d&#x2F;functions文件中的所有函数名</h3><blockquote><p>注意转义符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&quot;[a-zA-Z]+\(\)&quot;</span> /etc/init.d/functions</span><br></pre></td></tr></table></figure><h3 id="找出用户名和shell相同的用户"><a href="#找出用户名和shell相同的用户" class="headerlink" title="找出用户名和shell相同的用户"></a>找出用户名和shell相同的用户</h3><blockquote><p>即，用户名和使用的解释器同名</p><p>如：sync:x:5:0:sync:&#x2F;sbin:&#x2F;bin&#x2F;sync</p></blockquote><p>补充拓展正则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\1 表示引用前面分组的内容，且为第一个分组，分组指用（）括起来的内容</span><br><span class="line">\2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">grep -E <span class="string">&quot;^([^:])\&gt;+.*\1$&quot;</span> grep.txt -n</span><br><span class="line"><span class="comment">#解释正则的部分：</span></span><br><span class="line"><span class="comment">#匹配以非冒号开头的任意字符，到冒号前匹配结束，然后匹配前一个字符一次或者多次，以引用（）分组的结果为结尾</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># grep -E &quot;^([^:]+\&gt;).*\1$&quot; grep.txt -n</span></span><br><span class="line">6:<span class="built_in">sync</span>:x:5:0:<span class="built_in">sync</span>:/sbin:/bin/sync</span><br><span class="line">7:shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">8:halt:x:7:0:halt:/sbin:/sbin/halt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> awk </tag>
            
            <tag> grep </tag>
            
            <tag> sed </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式与Linux文本三剑客Day2</title>
      <link href="/posts/2709062073/"/>
      <url>/posts/2709062073/</url>
      
        <content type="html"><![CDATA[<blockquote><p><a href="https://lptexas-cub.github.io/posts/946884611/">续正则表达式与Linux文本三剑客Day1</a></p></blockquote><h1 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h1><h2 id="sed的工作流"><a href="#sed的工作流" class="headerlink" title="sed的工作流"></a>sed的工作流</h2><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed [option] [sed内置命令字符] [file]</span><br></pre></td></tr></table></figure><h2 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-n 取消默认sed的输出，常与sed内置命令p一起使用</span><br><span class="line"></span><br><span class="line">-i 直接修改结果写入文件，不用-i，sed修改的是内存数据</span><br><span class="line"></span><br><span class="line">-e 多次编辑，不需要管道符了</span><br><span class="line"></span><br><span class="line">-r 支持拓展正则，sed默认支持基本正则</span><br></pre></td></tr></table></figure><h2 id="sed内置命令字符"><a href="#sed内置命令字符" class="headerlink" title="sed内置命令字符"></a>sed内置命令字符</h2><p>sed的内置命令字符用于对文件进行不同的操作功能，如对文件增删改查</p><table><thead><tr><th>sed的内置命令字符</th><th>解释</th></tr></thead><tbody><tr><td>a</td><td>append，对文本追加，在指定行后面添加一行&#x2F;多行文本</td></tr><tr><td>d</td><td>Delete，删除匹配行</td></tr><tr><td>i</td><td>insert，插入文本，在指定行前添加一行&#x2F;多行文本</td></tr><tr><td>p</td><td>print，打印匹配行的内容，通常与-n参数一起使用</td></tr><tr><td>s&#x2F;正则&#x2F;替换内容&#x2F;g或者s#正则#替换内容#g或者s@正则@替换内容@g</td><td>匹配正则内容，然后替换内容（支持正则），结尾g代表全局匹配</td></tr></tbody></table><h2 id="匹配范围"><a href="#匹配范围" class="headerlink" title="匹配范围"></a>匹配范围</h2><table><thead><tr><th>范围</th><th>解释</th></tr></thead><tbody><tr><td>空地址</td><td>全文处理，如：使用a时不指定行，则会在每一行后添加内容</td></tr><tr><td>单地址</td><td>指定文件某一行，如：1a，在第一行后添加内容</td></tr><tr><td>&#x2F;pattern&#x2F;</td><td>被模式匹配到的每一行</td></tr><tr><td>范围区间</td><td>10,20 十到二十行 ；10,+5第10行向下5行 ；&#x2F;pattern1&#x2F;,&#x2F;pattern2&#x2F;匹配多个模式</td></tr><tr><td>步长</td><td>1~2表示1,3,5,7,9…奇数行；2~2两个步长表示2,4,6,8…偶数行</td></tr></tbody></table><h2 id="内置命令实践"><a href="#内置命令实践" class="headerlink" title="内置命令实践"></a>内置命令实践</h2><blockquote><p>准备数据文件sed.txt</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空</span><br></pre></td></tr></table></figure><h2 id="配合正则表达实践"><a href="#配合正则表达实践" class="headerlink" title="配合正则表达实践"></a>配合正则表达实践</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">空</span><br></pre></td></tr></table></figure><h1 id="awk命令"><a href="#awk命令" class="headerlink" title="awk命令"></a>awk命令</h1><blockquote><p>awk是一个强大的Linux命令，有强大的文本格式化能力，好比将一些文本数据格式化成excel表的样式。</p><p>也是一行一行处理</p></blockquote><ol><li>awk默认以<code>空格</code>为分隔符，且多个空格识别为一个空格作为分隔符</li><li>awk是按行处理文件，一行处理完毕，处理下一行，根据用户指定的分隔符去工作，没有指定则默认空格</li><li>指定了分隔符后，awk把每一行切割后的数据对应到内置变量</li></ol><blockquote><p>awk早期在Unix上实现，awk是gawk，GUN awk的意思；</p></blockquote><blockquote><p>awk更是一门编程语言，支持条件判断、数组、循环等功能。</p></blockquote><h2 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk [option] <span class="string">&#x27;pattern&#123;action&#125;&#x27;</span> file ...</span><br><span class="line"><span class="comment">#awk+awk可选参数、选项+模式&#123;动作&#125;+文件/数据</span></span><br></pre></td></tr></table></figure><ul><li>最常用的action是：print&#x2F;printf，即打印</li></ul><h2 id="选项-1"><a href="#选项-1" class="headerlink" title="选项"></a>选项</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-F 指定分割字段符</span><br><span class="line">-v 定义或修改一个awk内部的变量</span><br><span class="line">-f 从脚本文件中读取awk命令</span><br></pre></td></tr></table></figure><h2 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h2><blockquote><p>awk ‘{print $2}’，没有使用参数和模式时，<code>$2</code>表示输出文本的<code>第二列</code>信息。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$0</span> 代表一整行</span><br><span class="line"><span class="variable">$1</span> <span class="variable">$2</span> <span class="variable">$3</span> ... 代表第一列第二列第三列...（第一个字段、第二个、第三个.....）</span><br><span class="line"></span><br><span class="line"><span class="variable">$NF</span> 代表最后一列（最后一个字段）</span><br><span class="line">$(NF-1) 代表倒数第二列（倒数第二个字段）</span><br><span class="line">FS 字段分隔符，默认是空格</span><br><span class="line">NF（Number of fields） 分割后，当前行一共有多少个字段</span><br><span class="line">NR（Number of records） 当前记录数、行数</span><br><span class="line"><span class="comment">#更多内置变量可以通过man手册查看 </span></span><br><span class="line">man awk</span><br></pre></td></tr></table></figure><p>想要输入第一列第二列第三列时，$1$2$3用<code>逗号</code>隔开，输出的结果就不会挨在一起而是有默认空格分隔。</p><p>awk自定义输出内容在单引号中使用双引号括起来，如:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print &quot;第一列：&quot;$1,&quot;第二列：&quot;$2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><h3 id="准备文件awk1-txt"><a href="#准备文件awk1-txt" class="headerlink" title="准备文件awk1.txt"></a>准备文件awk1.txt</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br></pre></td></tr></table></figure><h3 id="显示文件第五行"><a href="#显示文件第五行" class="headerlink" title="显示文件第五行"></a>显示文件第五行</h3><blockquote><p>NR&#x3D;&#x3D;5</p><p><code>=</code>在Linux表示修改变量值，<code>==</code>表示关系运算符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;NR==5&#123;print $0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="显示文件第二行到第六行"><a href="#显示文件第二行到第六行" class="headerlink" title="显示文件第二行到第六行"></a>显示文件第二行到第六行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;NR==2,NR==6&#123;print $0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="为文件每一行添加行号"><a href="#为文件每一行添加行号" class="headerlink" title="为文件每一行添加行号"></a>为文件每一行添加行号</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="显示文件第一列、倒数第三列、最后一列"><a href="#显示文件第一列、倒数第三列、最后一列" class="headerlink" title="显示文件第一列、倒数第三列、最后一列"></a>显示文件第一列、倒数第三列、最后一列</h3><blockquote><p>NF</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1,$(NF-2),$NF&#x27;</span></span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="使用awk取出ip地址"><a href="#使用awk取出ip地址" class="headerlink" title="使用awk取出ip地址"></a>使用awk取出ip地址</h3><blockquote><p>利用awk以空格为分隔符的特性</p><p>ipconfig eth0</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig eth0|awk <span class="string">&#x27;NR==2&#123;print $2&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="替换空格为其他分隔符"><a href="#替换空格为其他分隔符" class="headerlink" title="替换空格为其他分隔符"></a>替换空格为其他分隔符</h3><h4 id="准备文件awk2-txt"><a href="#准备文件awk2-txt" class="headerlink" title="准备文件awk2.txt"></a>准备文件awk2.txt</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a:b:c:d</span><br><span class="line">1:2:3:4</span><br><span class="line">x:x:x:x</span><br></pre></td></tr></table></figure><blockquote><p>awk的分隔符有两种</p><ul><li>输入分隔符，awk默认是空格、空白字符，英文是field separator,变量名为FS</li><li>输出分隔符，output field separator，简称OFS</li></ul></blockquote><h4 id="FS输入分隔符"><a href="#FS输入分隔符" class="headerlink" title="FS输入分隔符"></a>FS输入分隔符</h4><blockquote><p>使用参数可以指定分隔符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-F “&lt;分隔符&gt;”</span><br></pre></td></tr></table></figure><h5 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h5><blockquote><p>输出第一列和最后一列</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1,$NF&#125;&#x27;</span> awk2.txt</span><br></pre></td></tr></table></figure><blockquote><p>通过<code>修改awk内置变量</code>分隔符来实现指定分隔符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-v FS=“&lt;分隔符&gt;”</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat awk2.txt</span></span><br><span class="line">a:b:c:d</span><br><span class="line">1:2:3:4</span><br><span class="line">x:x:x:x</span><br><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;:&quot; &#x27;&#123;print $1,$NF&#125;&#x27; awk2.txt</span></span><br><span class="line">a d</span><br><span class="line">1 4</span><br><span class="line">x x</span><br></pre></td></tr></table></figure><h5 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h5><blockquote><p>输出第二列和倒数第二列</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -v FS=<span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $2,$(NF-1)&#125;&#x27;</span> awk2.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat awk2.txt</span></span><br><span class="line">a:b:c:d</span><br><span class="line">1:2:3:4</span><br><span class="line">x:x:x:x</span><br><span class="line">[root@localhost ~]<span class="comment"># awk -v FS=&quot;:&quot; &#x27;&#123;print $2,$(NF-1)&#125;&#x27; awk2.txt</span></span><br><span class="line">b c</span><br><span class="line">2 3</span><br><span class="line">x x</span><br></pre></td></tr></table></figure><h4 id="OFS输出分隔符"><a href="#OFS输出分隔符" class="headerlink" title="OFS输出分隔符"></a>OFS输出分隔符</h4><blockquote><p>当我们在输出使用<code>逗号</code>时，默认使用空格分割</p><p>awk -F “:” ‘{print $1,$2,$3,$4}’ awk2.txt</p><p>如果需要修改<code>逗号</code>的默认输出分隔符，我们可以<code>修改OFS变量</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -F <span class="string">&quot;:&quot;</span> -v OFS=<span class="string">&quot;---&quot;</span> <span class="string">&#x27;&#123;print $1,$2,$3,$4&#125;&#x27;</span> awk2.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;:&quot;  &#x27;&#123;print $1,$2,$3,$4&#125;&#x27; awk2.txt</span></span><br><span class="line">a b c d</span><br><span class="line">1 2 3 4</span><br><span class="line">x x x x</span><br><span class="line">[root@localhost ~]<span class="comment"># cat awk2.txt</span></span><br><span class="line">a:b:c:d</span><br><span class="line">1:2:3:4</span><br><span class="line">x:x:x:x</span><br><span class="line">[root@localhost ~]<span class="comment"># awk -F &quot;:&quot; -v OFS=&quot;---&quot; &#x27;&#123;print $1,$2,$3,$4&#125;&#x27; awk2.txt</span></span><br><span class="line">a---b---c---d</span><br><span class="line">1---2---3---4</span><br><span class="line">x---x---x---x</span><br></pre></td></tr></table></figure><h2 id="awk内置命令补充"><a href="#awk内置命令补充" class="headerlink" title="awk内置命令补充"></a>awk内置命令补充</h2><blockquote><p>awk变量分为</p><ul><li>内置变量</li><li>自定义变量</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">RS 输入记录分隔符（输入换行符），指定输入时的换行符</span><br><span class="line">ORS 输出记录分隔符（输出换行符），指定输出时的换行符</span><br><span class="line">FNR 各文件分别技术的行号</span><br><span class="line">FILENAME 当前文件名</span><br><span class="line">ARGC 命令行参数的个数</span><br><span class="line">ARGV 数组，保存的是命令行所给定的各参数</span><br></pre></td></tr></table></figure><h2 id="实践-1"><a href="#实践-1" class="headerlink" title="实践"></a>实践</h2><h3 id="处理多个文件显示行号"><a href="#处理多个文件显示行号" class="headerlink" title="处理多个文件显示行号"></a>处理多个文件显示行号</h3><blockquote><p>当作整体的情况</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print NR,$0&#125;&#x27;</span> awk1.txt awk2.txt</span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat awk1.txt</span></span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># cat awk2.txt</span></span><br><span class="line">a:b:c:d</span><br><span class="line">1:2:3:4</span><br><span class="line">x:x:x:x</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print NR,$0&#125;&#x27; awk1.txt awk2.txt</span></span><br><span class="line">1 a1 a2 a3 a4</span><br><span class="line">2 b1 b2 b3 b4</span><br><span class="line">3 c1 c2 c3 c4</span><br><span class="line">4 d1 d2 d3 d4</span><br><span class="line">5 a:b:c:d</span><br><span class="line">6 1:2:3:4</span><br><span class="line">7 x:x:x:x</span><br></pre></td></tr></table></figure><h3 id="RS-更换输入换行分隔符"><a href="#RS-更换输入换行分隔符" class="headerlink" title="RS 更换输入换行分隔符"></a>RS 更换输入换行分隔符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -v RS=<span class="string">&quot; &quot;</span> &#123;<span class="built_in">print</span> <span class="variable">$0</span>&#125; awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat awk1.txt</span></span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># awk -v RS=&quot; &quot;  &#x27;&#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1</span><br><span class="line">a2</span><br><span class="line">a3</span><br><span class="line">a4</span><br><span class="line">b1</span><br><span class="line">b2</span><br><span class="line">b3</span><br><span class="line">b4</span><br><span class="line">c1</span><br><span class="line">c2</span><br><span class="line">c3</span><br><span class="line">c4</span><br><span class="line">d1</span><br><span class="line">d2</span><br><span class="line">d3</span><br><span class="line">d4</span><br></pre></td></tr></table></figure><h3 id="ORS-更换输出换行分隔符"><a href="#ORS-更换输出换行分隔符" class="headerlink" title="ORS 更换输出换行分隔符"></a>ORS 更换输出换行分隔符</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -v ORS=<span class="string">&quot; &quot;</span> <span class="string">&#x27;&#123;print $0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># awk -v ORS=&quot; &quot; &#x27;&#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1 a2 a3 a4 b1 b2 b3 b4 c1 c2 c3 c4 d1 d2 d3 d4 [root@localhost ~]<span class="comment">#</span></span><br><span class="line">[root@localhost ~]<span class="comment"># awk -v ORS=&quot;换行符&quot; &#x27;&#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1 a2 a3 a4换行符b1 b2 b3 b4换行符c1 c2 c3 c4换行符d1 d2 d3 d4换行符[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="数组ARGV变量的使用"><a href="#数组ARGV变量的使用" class="headerlink" title="数组ARGV变量的使用"></a>数组ARGV变量的使用</h3><blockquote><p>BEGIN 模式，表示做什么事前先做什么事</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print $0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><blockquote><p>ARGV</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[0],$0&#125;&#x27;</span> awk1.txt</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[1],$0&#125;&#x27;</span> awk1.txt</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[2],$0&#125;&#x27;</span> awk1.txt</span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[3],$0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;print &quot;这句话先做&quot;&#125; &#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">这句话先做</span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br><span class="line"><span class="comment">########</span></span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[0],$0&#125;&#x27; awk1.txt这句话先做!</span></span><br><span class="line">awk a1 a2 a3 a4</span><br><span class="line">awk b1 b2 b3 b4</span><br><span class="line">awk c1 c2 c3 c4</span><br><span class="line">awk d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[1],$0&#125;&#x27; awk1.txt这句话先做!</span></span><br><span class="line">awk1.txt a1 a2 a3 a4</span><br><span class="line">awk1.txt b1 b2 b3 b4</span><br><span class="line">awk1.txt c1 c2 c3 c4</span><br><span class="line">awk1.txt d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[2],$0&#125;&#x27; awk1.txt这句话先做!</span></span><br><span class="line"> a1 a2 a3 a4</span><br><span class="line"> b1 b2 b3 b4</span><br><span class="line"> c1 c2 c3 c4</span><br><span class="line"> d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;print &quot;这句话先做!&quot;&#125; &#123;print ARGV[3],$0&#125;&#x27; awk1.txt这句话先做!</span></span><br><span class="line"> a1 a2 a3 a4</span><br><span class="line"> b1 b2 b3 b4</span><br><span class="line"> c1 c2 c3 c4</span><br><span class="line"> d1 d2 d3 d4</span><br></pre></td></tr></table></figure><p>从上面的结果我们可以看出数组ARGV[0],ARGV[1]分别存储的是命令awk，文件名awk1.txt</p><p>再通过一条命令就可以理解ARGV[]数组了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print ARGV[0],ARGV[1],ARGV[2]&#125;&#x27;</span> awk1.txt awk2.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print ARGV[0],ARGV[1],ARGV[2]&#125;&#x27; awk1.txt awk2.txt</span></span><br><span class="line">awk awk1.txt awk2.txt</span><br><span class="line">awk awk1.txt awk2.txt</span><br><span class="line">awk awk1.txt awk2.txt</span><br><span class="line">awk awk1.txt awk2.txt</span><br><span class="line">awk awk1.txt awk2.txt</span><br><span class="line">awk awk1.txt awk2.txt</span><br><span class="line">awk awk1.txt awk2.txt</span><br></pre></td></tr></table></figure><h3 id="awk自定义变量"><a href="#awk自定义变量" class="headerlink" title="awk自定义变量"></a>awk自定义变量</h3><h4 id="方法一-在awk中使用-v定义"><a href="#方法一-在awk中使用-v定义" class="headerlink" title="方法一 在awk中使用-v定义"></a>方法一 在awk中使用-v定义</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk -v var=<span class="string">&quot;这是一个变量&quot;</span> <span class="string">&#x27;&#123;print var,$1&#125;&#x27;</span> awk2.txt</span><br></pre></td></tr></table></figure><h4 id="方法二-在程序中直接定义-两种写法"><a href="#方法二-在程序中直接定义-两种写法" class="headerlink" title="方法二 在程序中直接定义(两种写法)"></a>方法二 在程序中直接定义(两种写法)</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# awk &#x27;&#123;var1=&quot;变量1&quot;;var2=&quot;变量2&quot;;print var1,var2,$0&#125;&#x27; awk1.txt</span><br><span class="line">变量1 变量2 a1 a2 a3 a4</span><br><span class="line">变量1 变量2 b1 b2 b3 b4</span><br><span class="line">变量1 变量2 c1 c2 c3 c4</span><br><span class="line">变量1 变量2 d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]# awk &#x27;&#123;var1=&quot;变量1&quot;;var2=&quot;变量2&quot;&#125;&#123;print var1,var2,$0&#125;&#x27; awk1.txt</span><br><span class="line">变量1 变量2 a1 a2 a3 a4</span><br><span class="line">变量1 变量2 b1 b2 b3 b4</span><br><span class="line">变量1 变量2 c1 c2 c3 c4</span><br><span class="line">变量1 变量2 d1 d2 d3 d4</span><br></pre></td></tr></table></figure><h4 id="方法三-间接引用shell变量-必须加BEGIN动作"><a href="#方法三-间接引用shell变量-必须加BEGIN动作" class="headerlink" title="方法三 间接引用shell变量(必须加BEGIN动作)"></a>方法三 间接引用shell变量(必须加<code>BEGIN</code>动作)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var=变量</span><br><span class="line">awk -v var=<span class="variable">$var</span> <span class="string">&#x27;BEGIN&#123;print var&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h2><blockquote><p>print只能简单的输出文本，并不能<code>美化或者</code>或者<code>修改格式</code></p></blockquote><h2 id="prinf格式化输出"><a href="#prinf格式化输出" class="headerlink" title="prinf格式化输出"></a>prinf格式化输出</h2><blockquote><p>printf与print的区别</p></blockquote><ol><li>printf需要指定format</li><li>format用于指定后面的每个item的输出格式</li><li>printf语句不会自动打印换行符</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $0&#125;&#x27;</span> awk1.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;printf $0&#125;&#x27;</span> awk1.txt</span><br><span class="line"><span class="comment">#####</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $0&#125;&#x27;</span> awk1.txt</span><br><span class="line">awk <span class="string">&#x27;&#123;printf &quot;%s\n&quot;,$0&#125;&#x27;</span> awk1.txt</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;printf $0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1 a2 a3 a4b1 b2 b3 b4c1 c2 c3 c4d1 d2 d3 d4[root@localhost ~]<span class="comment">#</span></span><br><span class="line"><span class="comment">##########</span></span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;print $0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;&#123;printf &quot;%s\n&quot;,$0&#125;&#x27; awk1.txt</span></span><br><span class="line">a1 a2 a3 a4</span><br><span class="line">b1 b2 b3 b4</span><br><span class="line">c1 c2 c3 c4</span><br><span class="line">d1 d2 d3 d4</span><br></pre></td></tr></table></figure><p>使用%s\n可以实现print的换行</p><h2 id="format的使用"><a href="#format的使用" class="headerlink" title="format的使用"></a>format的使用</h2><blockquote><p>format格式的指示符都以%开头，后面跟一个字符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">%c 显示字符的ASCII码</span><br><span class="line">%d，%i 匹配十进制整数</span><br><span class="line">%e，%E 科学计数显示数值</span><br><span class="line">%f 显示浮点数</span><br><span class="line">%g，%G 以科学计数法的格式或浮点数的格式显示数值</span><br><span class="line">%s 匹配字符串</span><br><span class="line">%v 无字符整数</span><br><span class="line">%% 显示%本身</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>修饰符</span><br><span class="line">- 左对齐，默认是右对齐</span><br><span class="line">+ 显示数值符号，<span class="built_in">printf</span> <span class="string">&quot;%+d&quot;</span></span><br></pre></td></tr></table></figure><h2 id="针对多个变量进行格式化"><a href="#针对多个变量进行格式化" class="headerlink" title="针对多个变量进行格式化"></a>针对多个变量进行格式化</h2><blockquote><p>Linux中使用printf命令格式化字符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%s&quot;</span> a,b,c,d</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># printf &quot;%d\n&quot; 1 2 3</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><blockquote><p>awk中使用printf格式化字符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;BEGIN&#123;printf &quot;%d\n&quot;,1,2,3&#125;&#x27;</span> </span><br><span class="line">awk <span class="string">&#x27;BEGIN&#123;printf &quot;%d\n%d\n%d\n&quot;,1,2,3&#125;&#x27;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;printf &quot;%d\n&quot;,1,2,3&#125;&#x27;</span></span><br><span class="line">1</span><br><span class="line">[root@localhost ~]<span class="comment"># awk &#x27;BEGIN&#123;printf &quot;%d\n%d\n%d\n&quot;,1,2,3&#125;&#x27;</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> awk </tag>
            
            <tag> grep </tag>
            
            <tag> sed </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>便捷化hexo发布脚本</title>
      <link href="/posts/4116585224/"/>
      <url>/posts/4116585224/</url>
      
        <content type="html"><![CDATA[<h1 id="文件名autodeploy-sh"><a href="#文件名autodeploy-sh" class="headerlink" title="文件名autodeploy.sh"></a>文件名autodeploy.sh</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#By lptexas/Asucanyh</span></span><br><span class="line"><span class="comment">#功能：</span></span><br><span class="line"><span class="comment">#切换至Hexo博客根目录下，执行部署命令</span></span><br><span class="line"><span class="comment">#判断目录是否存在</span></span><br><span class="line">blog=myblog    <span class="comment">#hexo根目录所在文件夹</span></span><br><span class="line"><span class="built_in">dir</span>=/var/www/</span><br><span class="line">path=$<span class="built_in">dir</span><span class="variable">$blog</span></span><br><span class="line"><span class="built_in">comm</span>=/root/.nvm/versions/node/v16.15.1/bin/hexo   <span class="comment">#hexo命令所在位置</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$path</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="built_in">pwd</span> != <span class="string">&quot;<span class="variable">$path</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:<span class="variable">$blog</span>文件夹不存在，请检查<span class="variable">$dir</span>目录下是否存在该文件夹！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$path</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;成功切换至<span class="variable">$path</span>目录下，开始执行部署命令......&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="comment">#部署命令</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;<span class="variable">$comm</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:请检查Hexo命令安装位置后，修改comm变量！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="variable">$comm</span> clean;<span class="variable">$comm</span> g;<span class="variable">$comm</span> d</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> -eq <span class="string">&quot;0&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hexo已重新发布！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;执行失败，请检查错误！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 3</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>如果有更好的建议请发邮件给我哈(ﾉ´▽｀)ﾉ♪</p></blockquote><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><p>方法一</p><blockquote><p>首先，复制代码根据自己文件路径写好autodeploy.sh文件</p></blockquote><blockquote><p>然后，进入&#x2F;root&#x2F;目录下找到&#x2F;.bashrc文件，为运行脚本命令添加永久别名</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .bashrc</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># User specific aliases and functions</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">rm</span>=<span class="string">&#x27;rm -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">cp</span>=<span class="string">&#x27;cp -i&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> <span class="built_in">mv</span>=<span class="string">&#x27;mv -i&#x27;</span></span><br><span class="line"><span class="comment">###下面这一行为添加的内容，路径设置为自己的sh所在位置！</span></span><br><span class="line"><span class="built_in">alias</span> re=<span class="string">&#x27;bash /root/autodeploy.sh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Source global definitions</span></span><br><span class="line"><span class="keyword">if</span> [ -f /etc/bashrc ]; <span class="keyword">then</span></span><br><span class="line">. /etc/bashrc</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>添加完毕后，输入source ~&#x2F;.bashrc执行一次文件即可。</p></blockquote><blockquote><p>以后可以在任意目录下直接输入re命令重新部署网站</p></blockquote><p>方法二</p><blockquote><p>还可以将命令添加到计划任务中</p></blockquote><p>方法三</p><blockquote><p>将脚本直接放在&#x2F;usr&#x2F;bin下实现全局执行</p></blockquote><h1 id="更名republish-sh"><a href="#更名republish-sh" class="headerlink" title="更名republish.sh"></a>更名republish.sh</h1><h1 id="脚本3-1版本"><a href="#脚本3-1版本" class="headerlink" title="脚本3.1版本"></a>脚本3.1版本</h1><blockquote><p>新增功能，修复<code>line 91: syntax error: unexpected end of file</code>报错</p></blockquote><ul><li>新功能，会在重构完毕后，Push一次</li><li>修复了一个bug。nnd最后一行少了一个<code>fi</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">dir=/var/www#设置博客路径</span><br><span class="line">blog=myblog#设置博客根目录名</span><br><span class="line">path=$dir/$blog</span><br><span class="line"></span><br><span class="line">resize=800x800#设置压缩图片质量</span><br><span class="line">qlty=50#设置压缩图片的程度</span><br><span class="line"></span><br><span class="line">hexo=/root/.nvm/versions/node/v16.15.1/bin/hexo#设置hexo命令位置</span><br><span class="line">gulp=/root/.nvm/versions/node/v16.15.1/bin/gulp#设置gulp命令位置</span><br><span class="line">git=&quot;/usr/bin/git&quot; #设置git命令位置</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################################</span></span></span><br><span class="line">if [ &quot;$1&quot; == &#x27;p&#x27; -o &quot;$1&quot; == &#x27;pull&#x27; ];then</span><br><span class="line">echo &quot;Note: Pulling from remote repo.&quot;</span><br><span class="line">cd $path</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git pull -u origin main</span></span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">0检查路径</span></span><br><span class="line">if [ -d &quot;$path&quot; ]</span><br><span class="line">then</span><br><span class="line">if [ pwd != &quot;$path&quot; ]</span><br><span class="line">then </span><br><span class="line">cd /</span><br><span class="line">fi</span><br><span class="line">else </span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:$blog文件夹不存在，请检查$dir目录下是否存在该文件夹！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line">cd $path</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;成功切换至$path目录下，开始执行部署命令......&quot;</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1检查hexo是否安装</span></span><br><span class="line">if [ ! -f &quot;$hexo&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:请检查Hexo命令安装位置后，修改comm变量！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 2</span><br><span class="line">else</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo clean;<span class="comment">#清除public</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo g;<span class="comment">#生成public</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">优化css,js,html</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">gulp;</span></span><br><span class="line">if [ &quot;$?&quot; -ne &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:请检查gulp命令！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 3</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">压缩图片</span></span><br><span class="line">echo -e &quot;\n&quot;;</span><br><span class="line">echo &quot;开始压缩图片...&quot;;</span><br><span class="line">echo -e &quot;\n&quot;;</span><br><span class="line">    </span><br><span class="line">find $dir/$blog/public/img/post -regex &#x27;.*\(jpg\|JPG\|png\|PNG\|jpeg\)&#x27; -size +100k -print -exec convert -resize $resize -quality $qlty &#123;&#125; &#123;&#125; \;;</span><br><span class="line">if [ &quot;$?&quot; -ne &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo &quot;Error:请检查压缩图片设置！&quot;</span><br><span class="line">exit 4</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">部署到github</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo d</span></span><br><span class="line">fi</span><br><span class="line">if [ &quot;$?&quot; -eq &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## 重载后发布 ###</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git add .</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git commit -m <span class="string">&quot;Auto push after republish.&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git push -u origin main</span></span><br><span class="line">if [ &quot;$?&quot; -eq &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Hexo已重新发布！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;执行失败，请检查错误！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 6</span><br><span class="line">fi</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h1 id="脚本3-0版本"><a href="#脚本3-0版本" class="headerlink" title="脚本3.0版本"></a>脚本3.0版本</h1><blockquote><p>新增参数</p></blockquote><ul><li>参数<code>p</code>or<code>pull</code>用于拉取远程仓库</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">dir=/var/www#设置博客路径</span><br><span class="line">blog=myblog#设置博客根目录名</span><br><span class="line">path=$dir/$blog</span><br><span class="line"></span><br><span class="line">resize=800x800#设置压缩图片质量</span><br><span class="line">qlty=50#设置压缩图片的程度</span><br><span class="line"></span><br><span class="line">hexo=/root/.nvm/versions/node/v16.15.1/bin/hexo#设置hexo命令位置</span><br><span class="line">gulp=/root/.nvm/versions/node/v16.15.1/bin/gulp#设置gulp命令位置</span><br><span class="line">git=&quot;/usr/bin/git&quot; #设置git命令位置</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################################</span></span></span><br><span class="line">if [ &quot;$1&quot; == &#x27;p&#x27; -o &quot;$1&quot; == &#x27;pull&#x27; ];then</span><br><span class="line">echo &quot;Note: Pulling from remote repo.&quot;</span><br><span class="line">cd $path</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">git pull -u origin main</span></span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">0检查路径</span></span><br><span class="line">if [ -d &quot;$path&quot; ]</span><br><span class="line">then</span><br><span class="line">if [ pwd != &quot;$path&quot; ]</span><br><span class="line">then </span><br><span class="line">cd /</span><br><span class="line">fi</span><br><span class="line">else </span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:$blog文件夹不存在，请检查$dir目录下是否存在该文件夹！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line">cd $path</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;成功切换至$path目录下，开始执行部署命令......&quot;</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1检查hexo是否安装</span></span><br><span class="line">if [ ! -f &quot;$hexo&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:请检查Hexo命令安装位置后，修改comm变量！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 2</span><br><span class="line">else</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo clean;<span class="comment">#清除public</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo g;<span class="comment">#生成public</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">优化css,js,html</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">gulp;</span></span><br><span class="line">if [ &quot;$?&quot; -ne &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:请检查gulp命令！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 3</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">压缩图片</span></span><br><span class="line">echo -e &quot;\n&quot;;</span><br><span class="line">echo &quot;开始压缩图片...&quot;;</span><br><span class="line">echo -e &quot;\n&quot;;</span><br><span class="line">    </span><br><span class="line">find $dir/$blog/public/img/post -regex &#x27;.*\(jpg\|JPG\|png\|PNG\|jpeg\)&#x27; -size +100k -print -exec convert -resize $resize -quality $qlty &#123;&#125; &#123;&#125; \;;</span><br><span class="line">if [ &quot;$?&quot; -ne &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo &quot;Error:请检查压缩图片设置！&quot;</span><br><span class="line">exit 4</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">部署到github</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo d</span></span><br><span class="line">fi</span><br><span class="line">if [ &quot;$?&quot; -eq &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Hexo已重新发布！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;执行失败，请检查错误！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 5</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br></pre></td></tr></table></figure><h1 id="脚本2-0版本"><a href="#脚本2-0版本" class="headerlink" title="脚本2.0版本"></a>脚本2.0版本</h1><blockquote><p>日期：2022&#x2F;7&#x2F;30</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#功能：</span></span><br><span class="line"><span class="comment">#切换至Hexo博客根目录下，执行部署命令</span></span><br><span class="line"><span class="comment">#判断目录是否存在</span></span><br><span class="line">blog=myblog</span><br><span class="line"><span class="built_in">dir</span>=/var/www</span><br><span class="line">path=<span class="variable">$dir</span>/<span class="variable">$blog</span></span><br><span class="line"><span class="built_in">comm</span>=/root/.nvm/versions/node/v16.15.1/bin/hexo</span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$path</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="built_in">pwd</span> != <span class="string">&quot;<span class="variable">$path</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:<span class="variable">$blog</span>文件夹不存在，请检查<span class="variable">$dir</span>目录下是否存在该文件夹！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$path</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;成功切换至<span class="variable">$path</span>目录下，开始执行部署命令......&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="comment">#部署命令</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;<span class="variable">$comm</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:请检查Hexo命令安装位置后，修改comm变量！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="variable">$comm</span> clean;</span><br><span class="line"><span class="variable">$comm</span> g;</span><br><span class="line"><span class="comment">#优化css,js,html</span></span><br><span class="line">gulp;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> -ne <span class="string">&quot;0&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:请检查gulp命令！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="variable">$comm</span> clean;</span><br><span class="line"><span class="variable">$comm</span> g;</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始压缩图片...&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="comment">#压缩图片</span></span><br><span class="line">find <span class="variable">$dir</span>/<span class="variable">$blog</span>/public/img/ -regex <span class="string">&#x27;.*\(jpg\|JPG\|png\|PNG\|jpeg\)&#x27;</span> -size +200k -<span class="built_in">print</span> -<span class="built_in">exec</span> convert -quality 85 &#123;&#125; &#123;&#125; \;;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;&amp;?&quot;</span> -ne <span class="string">&quot;0&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:请检查压缩图片设置！&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 4</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="variable">$comm</span> d</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> -eq <span class="string">&quot;0&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hexo已重新发布！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;执行失败，请检查错误！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 3</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>更新内容：</p></blockquote><ul><li>加入gulp优化命令</li><li>加入ImageMagick压缩命令</li><li>修改了path路径的格式</li></ul><h1 id="脚本2-1版本"><a href="#脚本2-1版本" class="headerlink" title="脚本2.1版本"></a>脚本2.1版本</h1><blockquote><p>日期：2022&#x2F;8&#x2F;7</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#功能：</span></span><br><span class="line"><span class="comment">#切换至Hexo博客根目录下，执行部署命令</span></span><br><span class="line"><span class="comment">#判断目录是否存在</span></span><br><span class="line"><span class="built_in">dir</span>=/var/www<span class="comment">#设置博客路径</span></span><br><span class="line">blog=myblog<span class="comment">#设置博客根目录名</span></span><br><span class="line">path=<span class="variable">$dir</span>/<span class="variable">$blog</span></span><br><span class="line"></span><br><span class="line">resize=800x800<span class="comment">#设置压缩图片质量</span></span><br><span class="line">qlty=50<span class="comment">#设置压缩图片的程度</span></span><br><span class="line">hexo=/root/.nvm/versions/node/v16.15.1/bin/hexo<span class="comment">#设置hexo命令位置</span></span><br><span class="line">gulp=/root/.nvm/versions/node/v16.15.1/bin/gulp<span class="comment">#设置gulp命令位置</span></span><br><span class="line"><span class="comment">#####################################################################################</span></span><br><span class="line"><span class="comment">#0检查路径</span></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="string">&quot;<span class="variable">$path</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="built_in">pwd</span> != <span class="string">&quot;<span class="variable">$path</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">cd</span> /</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:<span class="variable">$blog</span>文件夹不存在，请检查<span class="variable">$dir</span>目录下是否存在该文件夹！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$path</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;成功切换至<span class="variable">$path</span>目录下，开始执行部署命令......&quot;</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">#1检查hexo是否安装</span></span><br><span class="line"><span class="keyword">if</span> [ ! -f <span class="string">&quot;<span class="variable">$hexo</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:请检查Hexo命令安装位置后，修改comm变量！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="variable">$hexo</span> clean;<span class="comment">#清除public</span></span><br><span class="line"><span class="variable">$hexo</span> g;<span class="comment">#生成public</span></span><br><span class="line"><span class="comment">####</span></span><br><span class="line"><span class="comment">#优化css,js,html</span></span><br><span class="line"><span class="variable">$gulp</span>;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> -ne <span class="string">&quot;0&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:请检查gulp命令！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment">#压缩图片</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;开始压缩图片...&quot;</span>;</span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    </span><br><span class="line">find <span class="variable">$dir</span>/<span class="variable">$blog</span>/public/img/ -regex <span class="string">&#x27;.*\(jpg\|JPG\|png\|PNG\|jpeg\)&#x27;</span> -size +100k -<span class="built_in">print</span> -<span class="built_in">exec</span> convert -resize <span class="variable">$resize</span> -quality <span class="variable">$qlty</span> &#123;&#125; &#123;&#125; \;;</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;&amp;?&quot;</span> -ne <span class="string">&quot;0&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error:请检查压缩图片设置！&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 4</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#部署到github</span></span><br><span class="line"><span class="variable">$hexo</span> d</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$?&quot;</span> -eq <span class="string">&quot;0&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hexo已重新发布！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;执行失败，请检查错误！&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -e <span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 5</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">###</span></span><br></pre></td></tr></table></figure><blockquote><p>更新内容：</p></blockquote><ul><li>加入resize参数(图片压缩模块)</li><li>删除了一些多余的代码</li><li>添加了注释</li></ul><h1 id="脚本2-2版本"><a href="#脚本2-2版本" class="headerlink" title="脚本2.2版本"></a>脚本2.2版本</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">功能：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">切换至Hexo博客根目录下，执行部署命令</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">判断目录是否存在</span></span><br><span class="line">dir=/var/www#设置博客路径</span><br><span class="line">blog=myblog#设置博客根目录名</span><br><span class="line">path=$dir/$blog</span><br><span class="line"></span><br><span class="line">resize=800x800#设置压缩图片质量</span><br><span class="line">qlty=50#设置压缩图片的程度</span><br><span class="line">hexo=/root/.nvm/versions/node/v16.15.1/bin/hexo#设置hexo命令位置</span><br><span class="line">gulp=/root/.nvm/versions/node/v16.15.1/bin/gulp#设置gulp命令位置</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">####################################################################################</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">0检查路径</span></span><br><span class="line">if [ -d &quot;$path&quot; ]</span><br><span class="line">then</span><br><span class="line">if [ pwd != &quot;$path&quot; ]</span><br><span class="line">then </span><br><span class="line">cd /</span><br><span class="line">fi</span><br><span class="line">else </span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:$blog文件夹不存在，请检查$dir目录下是否存在该文件夹！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line">cd $path</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;成功切换至$path目录下，开始执行部署命令......&quot;</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">1检查hexo是否安装</span></span><br><span class="line">if [ ! -f &quot;$hexo&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:请检查Hexo命令安装位置后，修改comm变量！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 2</span><br><span class="line">else</span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo clean;<span class="comment">#清除public</span></span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo g;<span class="comment">#生成public</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">###</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">优化css,js,html</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">gulp;</span></span><br><span class="line">if [ &quot;$?&quot; -ne &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Error:请检查gulp命令！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 3</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">压缩图片</span></span><br><span class="line">echo -e &quot;\n&quot;;</span><br><span class="line">echo &quot;开始压缩图片...&quot;;</span><br><span class="line">echo -e &quot;\n&quot;;</span><br><span class="line">    </span><br><span class="line">find $dir/$blog/public/img/ -regex &#x27;.*\(jpg\|JPG\|png\|PNG\|jpeg\)&#x27; -size +100k -print -exec convert -resize $resize -quality $qlty &#123;&#125; &#123;&#125; \;;</span><br><span class="line">if [ &quot;$?&quot; -ne &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo &quot;Error:请检查压缩图片设置！&quot;</span><br><span class="line">exit 4</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">部署到github</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">hexo d</span></span><br><span class="line">fi</span><br><span class="line">if [ &quot;$?&quot; -eq &quot;0&quot; ]</span><br><span class="line">then</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;Hexo已重新发布！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">else</span><br><span class="line">echo -e &quot;\n&quot;</span><br><span class="line">echo &quot;执行失败，请检查错误！&quot;</span><br><span class="line">    echo -e &quot;\n&quot;</span><br><span class="line">    exit 5</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">##</span></span></span><br></pre></td></tr></table></figure><blockquote><p>更新内容：</p></blockquote><ul><li>修复 integer expression expected</li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Shell </tag>
            
            <tag> ImageMagick </tag>
            
            <tag> gulp </tag>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本学习Day8</title>
      <link href="/posts/138289152/"/>
      <url>/posts/138289152/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>从本节开始，学习的资料参阅</strong><a href="http://runoob.com/"><code>RUNOOB.COM</code></a>，<strong>略有改动</strong></p></blockquote><h1 id="续Shell脚本学习-Day7"><a href="#续Shell脚本学习-Day7" class="headerlink" title="续Shell脚本学习 Day7"></a>续Shell脚本学习 Day7</h1><h1 id="shell流程控制之选择语句"><a href="#shell流程控制之选择语句" class="headerlink" title="shell流程控制之选择语句"></a>shell流程控制之选择语句</h1><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a><a href="https://lptexas-cub.github.io/posts/4018539783/#if%E8%AF%AD%E5%8F%A5%E5%BC%80%E5%8F%91">if语句</a></h2><blockquote><p>见Day6</p></blockquote><h2 id="case-…-esac多选择语句"><a href="#case-…-esac多选择语句" class="headerlink" title="case … esac多选择语句"></a>case … esac多选择语句</h2><p><strong>case … esac</strong> 为多选择语句，与其他语言中的 switch … case 语句类似，是一种多分支选择结构，每个 case 分支用右圆括号开始，用两个分号 <strong>;;</strong> 表示 break，即执行结束，跳出整个 case … esac 语句，esac（就是 case 反过来）作为结束标记。</p><p>可以用 case 语句匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。</p><p><del><code>有没有发现一个有意思的地方，case反过来写e s a c就是它的结束标志，hahahaha，记住了嘛ヾ(◍°∇°◍)ﾉﾞ</code></del></p><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> &lt;值&gt; <span class="keyword">in</span></span><br><span class="line">&lt;模式1&gt;)   <span class="comment">#值与模式匹配时,执行;;前的命令语句</span></span><br><span class="line">&lt;命令&gt; </span><br><span class="line">;;<span class="comment">#终止符</span></span><br><span class="line">&lt;模式2&gt;)</span><br><span class="line">&lt;命令&gt;</span><br><span class="line">;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><blockquote><p>实例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;输入 1 到 4 之间的数字:&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;你输入的数字为:&#x27;</span></span><br><span class="line"><span class="built_in">read</span> aNum</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">    1)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 1&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    2)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 2&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    3)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 3&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    4)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 4&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    *)  <span class="built_in">echo</span> <span class="string">&#x27;你没有输入 1 到 4 之间的数字&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat case.sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;输入 1 到 4 之间的数字:&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;你输入的数字为:&#x27;</span></span><br><span class="line"><span class="built_in">read</span> aNum</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">    1)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 1&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    2)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 2&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    3)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 3&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    4)  <span class="built_in">echo</span> <span class="string">&#x27;你选择了 4&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line">    *)  <span class="built_in">echo</span> <span class="string">&#x27;你没有输入 1 到 4 之间的数字&#x27;</span></span><br><span class="line">    ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash case.sh</span></span><br><span class="line">输入 1 到 4 之间的数字:</span><br><span class="line">你输入的数字为:</span><br><span class="line">1</span><br><span class="line">你选择了 1</span><br><span class="line">[root@localhost ~]<span class="comment"># bash case.sh</span></span><br><span class="line">输入 1 到 4 之间的数字:</span><br><span class="line">你输入的数字为:</span><br><span class="line">4</span><br><span class="line">你选择了 4</span><br><span class="line">[root@localhost ~]<span class="comment"># bash case.sh</span></span><br><span class="line">输入 1 到 4 之间的数字:</span><br><span class="line">你输入的数字为:</span><br><span class="line">5</span><br><span class="line">你没有输入 1 到 4 之间的数字</span><br></pre></td></tr></table></figure><h1 id="shell流程控制之循环语句"><a href="#shell流程控制之循环语句" class="headerlink" title="shell流程控制之循环语句"></a>shell流程控制之循环语句</h1><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><h3 id="有限循环用法"><a href="#有限循环用法" class="headerlink" title="有限循环用法"></a>有限循环用法</h3><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> item1 item2 ... itemN</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    command1</span><br><span class="line">    command2</span><br><span class="line">    ...</span><br><span class="line">    commandN</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment">#####一行#######</span></span><br><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> item1 item2 ... itemN; <span class="keyword">do</span> command1; command2… <span class="keyword">done</span>;</span><br></pre></td></tr></table></figure><blockquote><p>实例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> loop <span class="keyword">in</span> 1 2 3 4 5 <span class="comment">#也可以使用&#123;1..5&#125;生成序列</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The value is: <span class="variable">$loop</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat loop1.sh</span></span><br><span class="line"><span class="keyword">for</span> loop <span class="keyword">in</span> 1 2 3 4 5</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The value is: <span class="variable">$loop</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash loop1.sh</span></span><br><span class="line">The value is: 1</span><br><span class="line">The value is: 2</span><br><span class="line">The value is: 3</span><br><span class="line">The value is: 4</span><br><span class="line">The value is: 5</span><br></pre></td></tr></table></figure><h3 id="无限循环用法"><a href="#无限循环用法" class="headerlink" title="无限循环用法"></a>无限循环用法</h3><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( ; ; )) <span class="comment">#这一行不能动</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">  &lt;命令&gt;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><h3 id="有限循环用法-1"><a href="#有限循环用法-1" class="headerlink" title="有限循环用法"></a>有限循环用法</h3><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> &lt;条件&gt;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&lt;命令&gt;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>实例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">int=1</span><br><span class="line"><span class="keyword">while</span>(( <span class="variable">$int</span>&lt;=<span class="number">5</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The value is:<span class="variable">$int</span>&quot;</span></span><br><span class="line">    <span class="built_in">let</span> <span class="string">&quot;int++&quot;</span> <span class="comment">#实现增1</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat loop2.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">int=1</span><br><span class="line"><span class="keyword">while</span>(( <span class="variable">$int</span>&lt;=<span class="number">5</span> ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;The value is:<span class="variable">$int</span>&quot;</span></span><br><span class="line">    <span class="built_in">let</span> <span class="string">&quot;int++&quot;</span> <span class="comment">#实现增1</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash loop1.sh</span></span><br><span class="line">The value is: 1</span><br><span class="line">The value is: 2</span><br><span class="line">The value is: 3</span><br><span class="line">The value is: 4</span><br><span class="line">The value is: 5</span><br></pre></td></tr></table></figure><h3 id="无限循环用法-1"><a href="#无限循环用法-1" class="headerlink" title="无限循环用法"></a>无限循环用法</h3><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    &lt;命令&gt;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    &lt;命令&gt;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>可以使用Ctrl+C打断</p></blockquote><h3 id="结合read的特殊用法"><a href="#结合read的特殊用法" class="headerlink" title="结合read的特殊用法"></a>结合read的特殊用法</h3><blockquote><p>实例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;按下 &lt;CTRL-D&gt; 退出&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&#x27;输入你最喜欢的网站名: &#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> FILM</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;是的！<span class="variable">$FILM</span> 是一个好网站&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat while2.sh</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;按下 &lt;CTRL-D&gt; 退出&#x27;</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&#x27;输入你最喜欢的网站名: &#x27;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> FILM</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;是的！<span class="variable">$FILM</span> 是一个好网站&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash while2.sh</span></span><br><span class="line">按下 &lt;CTRL-D&gt; 退出</span><br><span class="line">输入你最喜欢的网站名: runoob</span><br><span class="line">是的！runoob 是一个好网站</span><br><span class="line">baidu</span><br><span class="line">是的！baidu 是一个好网站</span><br><span class="line">lptexas.top</span><br><span class="line">是的！lptexas.top 是一个好网站</span><br><span class="line">[root@localhost ~]<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="until-循环"><a href="#until-循环" class="headerlink" title="until 循环"></a>until 循环</h2><p><strong>until 循环</strong>执行一系列命令直至<strong>条件为 true 时停止</strong>。</p><p>until 循环与 while 循环在处理方式上刚好<code>相反</code>。</p><p>一般 while 循环优于 until 循环，但在某些时候—也只是极少数情况下，until 循环更加有用。</p><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">until</span> &lt;条件判断&gt;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&lt;命令&gt;</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>实例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">a=0</span><br><span class="line"><span class="keyword">until</span> [ ! <span class="variable">$a</span> -lt 10 ] <span class="comment">#大于等于10时停止</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line">   a=`<span class="built_in">expr</span> <span class="variable">$a</span> + 1`</span><br><span class="line">   <span class="comment">#a=$[$a+1]</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat until.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">a=0</span><br><span class="line"><span class="keyword">until</span> [ ! <span class="variable">$a</span> -lt 10 ] <span class="comment">#大于等于10时停止</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$a</span></span><br><span class="line">   a=`<span class="built_in">expr</span> <span class="variable">$a</span> + 1`</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash until.sh</span></span><br><span class="line">0</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td></tr></table></figure><h2 id="跳出循环"><a href="#跳出循环" class="headerlink" title="跳出循环"></a>跳出循环</h2><blockquote><p>在循环过程中，有时候需要在<strong>未达到循环结束条件时强制跳出循环</strong>，Shell 使用两个命令来实现该功能：<strong>break</strong> 和 <strong>continue</strong>。</p></blockquote><h3 id="break命令"><a href="#break命令" class="headerlink" title="break命令"></a>break命令</h3><p>break命令允许跳出所有循环（终止执行后面的所有循环）</p><blockquote><p>实例</p></blockquote><p>下面的例子中，脚本进入死循环直至用户输入数字<strong>大于5</strong>。要跳出这个循环，返回到shell提示符下，需要使用break命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字:&quot;</span></span><br><span class="line">    <span class="built_in">read</span> aNum</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">        1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat case1.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字:&quot;</span></span><br><span class="line">    <span class="built_in">read</span> aNum</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">        1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash case1.sh</span></span><br><span class="line">输入 1 到 5 之间的数字:1</span><br><span class="line">你输入的数字为 1!</span><br><span class="line">输入 1 到 5 之间的数字:4</span><br><span class="line">你输入的数字为 4!</span><br><span class="line">输入 1 到 5 之间的数字:6</span><br><span class="line">你输入的数字不是 1 到 5 之间的! 游戏结束</span><br></pre></td></tr></table></figure><h3 id="continue命令"><a href="#continue命令" class="headerlink" title="continue命令"></a>continue命令</h3><p>和break命令类似，但是不会跳出所有循环，只是跳出当前循环，进入下一次循环。</p><blockquote><p>实例</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字:&quot;</span></span><br><span class="line">    <span class="built_in">read</span> aNum</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">        1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span></span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;我永远不会被执行!!!∑(ﾟДﾟノ)ノ&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><p>注意continue后的echo语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat case2.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字:&quot;</span></span><br><span class="line">    <span class="built_in">read</span> aNum</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">        1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span></span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;我永远不会被执行!!!∑(ﾟДﾟノ)ノ&quot;</span> <span class="comment">####注意这段语句！！！！</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash case2.sh</span></span><br><span class="line">输入 1 到 5 之间的数字:1</span><br><span class="line">你输入的数字为 1!</span><br><span class="line">输入 1 到 5 之间的数字:2</span><br><span class="line">你输入的数字为 2!</span><br><span class="line">输入 1 到 5 之间的数字:6</span><br><span class="line">你输入的数字不是 1 到 5 之间的! 游戏结束</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式与Linux文本三剑客Day1</title>
      <link href="/posts/946884611/"/>
      <url>/posts/946884611/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux文本三剑客"><a href="#Linux文本三剑客" class="headerlink" title="Linux文本三剑客"></a>Linux文本三剑客</h1><blockquote><p>文本处理工具均支持正则表达式引擎</p><ol><li>grep：文本过滤工具，通过模式pattern工具进行匹配</li><li>sed：文本编辑工具，stream editor 流编辑器</li><li>awk：Linux文本报告生成器（格式化文本）   本质是gawk，awk是软连接（快捷方式）</li></ol></blockquote><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="基本正则表达式BRE集合"><a href="#基本正则表达式BRE集合" class="headerlink" title="基本正则表达式BRE集合"></a>基本正则表达式BRE集合</h3><table><thead><tr><th align="left">字符</th><th>作用</th><th>举例&#x2F;说明</th></tr></thead><tbody><tr><td align="left">^</td><td>尖角号，用于模式最左边，匹配以某字符串<code>开头</code>的行</td><td>^apple，匹配以apple单词开头的行</td></tr><tr><td align="left">$</td><td>美元符，用于模式最右边，匹配以某字符串<code>结尾</code>的行</td><td>abc$，匹配以abc结尾的行</td></tr><tr><td align="left">^$</td><td>组合符，表示空行</td><td>匹配以空字符开头、空字符结尾的行，也就是空行</td></tr><tr><td align="left">.</td><td>小数点，匹配任意一个<code>有且只有一个</code>字符，不能匹配空格</td><td>一行有多个字符的情况呢？是算一个字符还是多个字符然后匹配其中一个？</td></tr><tr><td align="left">\</td><td>反斜杠，转义字符，用于还原字符原本的含义</td><td>“\.”，输出的结果是一个普通的小数点</td></tr><tr><td align="left">*</td><td>星号，匹配前一个字符<code>连续出现</code>0次或1次以上，重复0次代表空，即匹配所有内容</td><td>a*，表示匹配多个连续的a字符</td></tr><tr><td align="left">.*</td><td>组合符，匹配所有内容除了空行</td><td>.*，输出所有行的内容除了空行</td></tr><tr><td align="left">^.*</td><td>组合符，匹配任意多个字符<code>开头</code>的内容</td><td>挺奇怪的，有点抽象</td></tr><tr><td align="left">.*$</td><td>组合符，匹配任意多个字符<code>结尾</code>的内容</td><td>挺奇怪的，有点抽象x2</td></tr><tr><td align="left">[abc]</td><td>中括号，匹配中括号中的任意一个字符，a或b或c，也可以写成[a-c]</td><td>^[a-z]，用这个不就实现了匹配以任意小写字母开头的行嘛</td></tr><tr><td align="left">[^abc]</td><td>中括号内带尖角符，匹配<code>除了</code>中括号中的任意一个字符的其它字符</td><td>相当于对[abc]的结果取反嘛</td></tr></tbody></table><div class="admonition info"><p class="admonition-title">补充</p><p>\d：表示一个十进制的数字 [0-9]\D：表示非数字\w：表示一个字 [0－9a-zA-Z_]_\W：表示除[0－9a-zA-Z_]之外的字符\s：表示一个空白字符（空格，tab，换页符等）\S：表示一个非空白字符</p></div><h3 id="拓展正则表达式ERE集合"><a href="#拓展正则表达式ERE集合" class="headerlink" title="拓展正则表达式ERE集合"></a>拓展正则表达式ERE集合</h3><blockquote><p>拓展正则必须使用grep -E 才能生效</p><p><code>TIPS:</code></p><p>egrep不推荐使用，使用grep -E代替</p><p>grep不加参数时，需要在特殊字符前加转义符\才能识别为正则表达式</p></blockquote><table><thead><tr><th>字符</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>+</td><td>加号，匹配前一个字符一次或者多次</td><td>a+，表示匹配多个a</td></tr><tr><td>[abc]+</td><td>中括号加号组合，匹配中括号中的a或b或c，一次或者多次</td><td>也可以写成[a-c]+</td></tr><tr><td>?</td><td>问号，匹配前一个字符0次或者1次</td><td>a?，表示匹配0个a或最多1个a</td></tr><tr><td>|</td><td>竖杠，表示或者，同时过滤多个字符串</td><td>a|b|c</td></tr><tr><td>()</td><td>小括号，分组过滤，括号中的内容为一个整体</td><td>(？)</td></tr><tr><td>a{n,m}</td><td>表示匹配a字符最少n次，最多m次</td><td>任意字符+{最少值，最多值}</td></tr><tr><td>a{n,}</td><td>表示匹配a字符最少n次</td><td></td></tr><tr><td>a{,m}</td><td>表示匹配a字符最多m次</td><td></td></tr><tr><td>a{z}</td><td>表示匹配a字符正好z次</td><td></td></tr><tr><td>\&gt;</td><td>最右侧，代表精确匹配</td><td>^(abc|123)\&gt;，表示匹配到abc、123的内容结束，不会匹配到abc1、abc2、1234、123d</td></tr><tr><td>\&lt;</td><td>最左侧，代表精确匹配</td><td><a href="https://lptexas-cub.github.io/posts/3598594351/#%E6%89%BE%E5%87%BA%E6%9C%89%E4%B8%A4%E4%BD%8D%E6%95%B0%E6%88%96%E4%B8%89%E4%BD%8D%E6%95%B0%E7%9A%84%E8%A1%8C">案例</a></td></tr></tbody></table><blockquote><p>awk的功能主要是：</p><ol><li><p>将文件<code>逐行读入</code>；</p></li><li><p>以空格、制表符(TAB键)为默认分隔符将每行<code>切片</code>；</p></li><li><p>切开的部分再进行各种<code>分析</code>。</p></li></ol></blockquote><h2 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h2><blockquote><p>全拼:Global search REgular expression and Print out the line.</p><p>作用：文本搜索工具，根据用户指定的“模式（过滤条件）”对目标文本逐行匹配检查，打印匹配到的行</p><p>模式：由正则表达式的<code>元字符</code>及<code>文本字符</code>所编写的<code>过滤条件</code></p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep [option] [pattern] &lt;file&gt;</span><br><span class="line"><span class="comment">#命令+选项+模式+操作文件</span></span><br></pre></td></tr></table></figure><h3 id="常见参数-option"><a href="#常见参数-option" class="headerlink" title="常见参数[option]"></a>常见参数[option]</h3><blockquote><p>-i忽略大小写<br>-o只输出匹配的内容，仅仅显示匹配到的字符串本身<br>-v显示不能被模式匹配到的行，相当于取反，即排除匹配的项<br>-E支持使用拓展正则表达式元字符<br>-q、–quiet、–slient静默模式，即不输出任何信息</p><p>-n显示匹配行的行号</p><p>-c统计匹配到的行数</p><p>–color&#x3D;auto为grep过滤结果添加颜色</p><p>-w只过滤单词</p></blockquote><p>其它参数</p><blockquote><p>-m匹配内容最多出现的次数</p><p>-l只打印匹配到内容的文件名print only names of FILEs containing matches</p></blockquote><h3 id="grep命令之基本正则实践"><a href="#grep命令之基本正则实践" class="headerlink" title="grep命令之基本正则实践"></a>grep命令之基本正则实践</h3><p>首先，准备文本文件REg1.txt</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">I am studying REg.</span><br><span class="line">I like grep.</span><br><span class="line"></span><br><span class="line">My phone number is +86 123456789000</span><br><span class="line"></span><br><span class="line"><span class="comment">#我是注释</span></span><br><span class="line">aoooz</span><br><span class="line">aooz</span><br><span class="line">aoz</span><br><span class="line">az</span><br></pre></td></tr></table></figure><blockquote><p>^  尖角号，用于模式最左边，匹配以某字符串<code>开头</code>的行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line">&gt; $ 美元符，用于模式最右边，匹配以某字符串`结尾`的行</span><br><span class="line"></span><br><span class="line">```bash</span><br></pre></td></tr></table></figure><p><code>TIPS:</code></p><p>在Linux平台下，所有文件内容行的结尾都有一个$</p><p>可以使用cat -A或者cat -En查看</p><blockquote><p>.  小数点，匹配任意一个<code>有且只有一个</code>字符，不能匹配空格</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>*星号，匹配前一个字符<code>连续出现</code>0次或1次以上，重复0次代表空，即匹配所有内容</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>.* 组合符，匹配所有内容除了空行</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; ^.*组合符，匹配任意多个字符`开头`的内容</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>.*$ 组合符，匹配任意多个字符<code>结尾</code>的内容</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; [abc] 中括号，匹配中括号中的任意一个字符，a或b或c，也可以写成[a-c]</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>[^abc]  中括号内带尖角符，匹配<code>除了</code>中括号中的任意一个字符的其它字符  </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">### grep命令之拓展正则实践</span></span><br><span class="line"><span class="comment">#### \+    加号，匹配前一个字符一次或者多次 a+，表示匹配多个a</span></span><br><span class="line"></span><br><span class="line">```bash</span><br></pre></td></tr></table></figure><h4 id="abc-中括号加号组合，匹配中括号中的a或b或c，一次或者多次，也可以写成-a-c"><a href="#abc-中括号加号组合，匹配中括号中的a或b或c，一次或者多次，也可以写成-a-c" class="headerlink" title="[abc]+ 中括号加号组合，匹配中括号中的a或b或c，一次或者多次，也可以写成[a-c]+"></a>[abc]+ 中括号加号组合，匹配中括号中的a或b或c，一次或者多次，也可以写成[a-c]+</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="问号，匹配前一个字符0次或者1次；a-，表示匹配0个a或最多1个a"><a href="#问号，匹配前一个字符0次或者1次；a-，表示匹配0个a或最多1个a" class="headerlink" title="?       问号，匹配前一个字符0次或者1次；a?，表示匹配0个a或最多1个a"></a>?       问号，匹配前一个字符0次或者1次；a?，表示匹配0个a或最多1个a</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="竖杠，表示或者，同时过滤多个字符串，a-b-c"><a href="#竖杠，表示或者，同时过滤多个字符串，a-b-c" class="headerlink" title="|     竖杠，表示或者，同时过滤多个字符串，a|b|c"></a>|     竖杠，表示或者，同时过滤多个字符串，a|b|c</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="小括号，分组过滤，括号中的内容为一个整体，-？"><a href="#小括号，分组过滤，括号中的内容为一个整体，-？" class="headerlink" title="()     小括号，分组过滤，括号中的内容为一个整体， (？)"></a>()     小括号，分组过滤，括号中的内容为一个整体， (？)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="a-n-m-表示匹配a字符最少n次，最多m次，任意字符-最少值，最多值"><a href="#a-n-m-表示匹配a字符最少n次，最多m次，任意字符-最少值，最多值" class="headerlink" title="a{n,m} 表示匹配a字符最少n次，最多m次，任意字符+{最少值，最多值}"></a>a{n,m} 表示匹配a字符最少n次，最多m次，任意字符+{最少值，最多值}</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="a-n-表示匹配a字符最少n次"><a href="#a-n-表示匹配a字符最少n次" class="headerlink" title="a{n,}  表示匹配a字符最少n次"></a>a{n,}  表示匹配a字符最少n次</h4> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"> </span><br></pre></td></tr></table></figure><h4 id="a-m-表示匹配a字符最多m次"><a href="#a-m-表示匹配a字符最多m次" class="headerlink" title="a{,m}  表示匹配a字符最多m次"></a>a{,m}  表示匹配a字符最多m次</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="a-z-表示匹配a字符正好z次"><a href="#a-z-表示匹配a字符正好z次" class="headerlink" title="a{z}   表示匹配a字符正好z次"></a>a{z}   表示匹配a字符正好z次</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
            <tag> awk </tag>
            
            <tag> grep </tag>
            
            <tag> sed </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本学习Day7</title>
      <link href="/posts/2558606737/"/>
      <url>/posts/2558606737/</url>
      
        <content type="html"><![CDATA[<h1 id="续Shell脚本学习-Day6"><a href="#续Shell脚本学习-Day6" class="headerlink" title="续Shell脚本学习 Day6"></a>续Shell脚本学习 Day6</h1><h1 id="shell函数"><a href="#shell函数" class="headerlink" title="shell函数"></a>shell函数</h1><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><blockquote><p>区分return与exit</p></blockquote><p>return只能在函数体中 使用</p><h2 id="函数实践"><a href="#函数实践" class="headerlink" title="函数实践"></a>函数实践</h2><h3 id="函数定义和执行在同一个文件中"><a href="#函数定义和执行在同一个文件中" class="headerlink" title="函数定义和执行在同一个文件中"></a>函数定义和执行在同一个文件中</h3><blockquote><p>编写脚本func1.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#函数定义</span></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">write_music</span></span>()&#123;</span><br><span class="line"><span class="built_in">cd</span> /tmp/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;创建一个文件，并写入信息&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;我是被写入的信息&quot;</span> &gt; ./music.txt</span><br><span class="line"><span class="built_in">return</span> 0</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#函数执行</span></span><br><span class="line">write_music</span><br></pre></td></tr></table></figure><blockquote><p>执行演示</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># source func1.sh</span></span><br><span class="line">创建一个文件，并写入信息</span><br><span class="line">[root@localhost tmp]<span class="comment"># cat music.txt</span></span><br><span class="line">我是被写入的信息</span><br></pre></td></tr></table></figure><h3 id="定义函数加载到环境变量中"><a href="#定义函数加载到环境变量中" class="headerlink" title="定义函数加载到环境变量中"></a>定义函数加载到环境变量中</h3><blockquote><p>编写脚本func2.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">func2</span></span>()&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;我是函数体，我被执行了！&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>检查环境变量的方法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span></span><br></pre></td></tr></table></figure><p>利用source或.命令执行函数，可以将函数加载到环境变量中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> | grep ^func2</span><br><span class="line"><span class="comment">#^表示以func2开头的文本</span></span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># cat func2.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">func2</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;我是函数体，我被执行了！&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">[root@localhost ~]<span class="comment"># set | grep ^func2</span></span><br><span class="line">[root@localhost ~]<span class="comment"># . func2.sh</span></span><br><span class="line">[root@localhost ~]<span class="comment"># set | grep ^func2</span></span><br><span class="line">func2 ()</span><br></pre></td></tr></table></figure><p>在环境变量中的函数可以直接被调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># func2</span></span><br><span class="line">我是函数体，我被执行了！</span><br></pre></td></tr></table></figure><p>当我们退出当前shell后，环境变量就消失了</p><h3 id="定义函数和执行函数在不同文件中"><a href="#定义函数和执行函数在不同文件中" class="headerlink" title="定义函数和执行函数在不同文件中"></a>定义函数和执行函数在不同文件中</h3><blockquote><p>编写func3.sh脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#将fun2函数加载到环境变量</span></span><br><span class="line">[ -f /func2.sh ] &amp;&amp; . func2.sh || <span class="built_in">exit</span></span><br><span class="line"><span class="comment">#执行被加载到环境变量的函数func2</span></span><br><span class="line">func2</span><br></pre></td></tr></table></figure><h3 id="引用系统自定义函数美化脚本"><a href="#引用系统自定义函数美化脚本" class="headerlink" title="引用系统自定义函数美化脚本"></a>引用系统自定义函数美化脚本</h3><blockquote><p>&#x2F;etc&#x2F;init.d&#x2F;mysql</p><p>log_success_msg</p><p>log_failure_msg</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#没找到这个文件，暂时不写</span></span><br></pre></td></tr></table></figure><h3 id="开发rsync启停管理脚本"><a href="#开发rsync启停管理脚本" class="headerlink" title="开发rsync启停管理脚本"></a>开发rsync启停管理脚本</h3><blockquote><p>函数版本</p></blockquote><p>编写rsync_func文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">usage</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;Usage:<span class="variable">$0</span> &#123;start|stop|restart&#125;&quot;</span></span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>()&#123;</span><br><span class="line">        /usr/bin/rsync --daemon  <span class="comment">#在后台运行</span></span><br><span class="line">        <span class="built_in">sleep</span> 1</span><br><span class="line">        <span class="keyword">if</span> [ `ss -tunlp|grep rsync|<span class="built_in">wc</span> -l` -ge <span class="string">&quot;1&quot;</span> ] <span class="comment">#检查进程或者端口确保运行</span></span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="comment">#log_success_msg &quot;Rsync is started!&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Rsync is started successfully!&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="comment">#log_failure_msg &quot;Rsync failed to start!&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Rsync failed to start!&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>()&#123;</span><br><span class="line">        killall rsync &amp;&gt;/dev/null</span><br><span class="line">        <span class="built_in">sleep</span> 1</span><br><span class="line">        <span class="keyword">if</span> [ `ss -tunlp|grep rsync|<span class="built_in">wc</span> -l` -eq <span class="string">&quot;0&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="comment">#log_success_msg &quot;Rsync is stopped!&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Rsync is stopped successfully!&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="comment">#log_failure_msg &quot;Rsync failed to stop!&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Rsync failed to stop!&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">restart</span></span>()&#123;</span><br><span class="line">        killall rsync &amp;&gt;/dev/null</span><br><span class="line">        var1=`ss -tunlp|grep rsync|<span class="built_in">wc</span> -l`</span><br><span class="line">        /usr/bin/rsync --ddeamon</span><br><span class="line">        var2=`ss -tunlp|grep rsync|<span class="built_in">wc</span> -l`</span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$var1</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$var2</span>&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                 <span class="comment">#log_success_msg &quot;Rsync is started!&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Rsync is restarted successfully!&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="comment">#log_failure_msg &quot;Rsync failed to restart!&quot;</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;Rsync failed to restart!&quot;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$#</span>&quot;</span> -ne <span class="string">&quot;1&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                usage</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;start&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                start</span><br><span class="line">        <span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;stop&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                stop</span><br><span class="line">        <span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;restart&quot;</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                restart</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                usage</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#调用函数接口</span></span><br><span class="line">main $*</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># /root/rsync_func start</span></span><br><span class="line">Rsync is started successfully!</span><br><span class="line">[root@localhost ~]<span class="comment"># /root/rsync_func stop</span></span><br><span class="line">Rsync is stopped successfully!</span><br><span class="line">[root@localhost ~]<span class="comment"># /root/rsync_func restart</span></span><br><span class="line">Rsync is restarted successfully!</span><br><span class="line">[root@localhost ~]<span class="comment"># /root/rsync_func sta</span></span><br><span class="line">Usage:/root/rsync_func &#123;start|stop|restart&#125;</span><br><span class="line">[root@localhost ~]<span class="comment"># /root/rsync_func</span></span><br><span class="line">Usage:/root/rsync_func &#123;start|stop|restart&#125;</span><br></pre></td></tr></table></figure><h3 id="函数脚本传递参数"><a href="#函数脚本传递参数" class="headerlink" title="函数脚本传递参数"></a>函数脚本传递参数</h3><blockquote><p>编写func4.sh脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shell脚本学习Day6</title>
      <link href="/posts/4018539783/"/>
      <url>/posts/4018539783/</url>
      
        <content type="html"><![CDATA[<h1 id="续Shell脚本学习-Day5"><a href="#续Shell脚本学习-Day5" class="headerlink" title="续Shell脚本学习 Day5"></a>续Shell脚本学习 Day5</h1><h1 id="安装lnmp-x2F-lamp脚本开发"><a href="#安装lnmp-x2F-lamp脚本开发" class="headerlink" title="安装lnmp&#x2F;lamp脚本开发"></a>安装lnmp&#x2F;lamp脚本开发</h1><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><blockquote><p>编写脚本，根据用户输入选择判断<code>模拟安装lnmp、lamp</code></p></blockquote><h2 id="编写脚本lnmp-sh、lamp-sh"><a href="#编写脚本lnmp-sh、lamp-sh" class="headerlink" title="编写脚本lnmp.sh、lamp.sh"></a>编写脚本lnmp.sh、lamp.sh</h2><blockquote><p>该演示脚本建立在&#x2F;root&#x2F;sh目录下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /root/sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo LAMP is installed!!&quot;</span> &gt; ./lamp.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo LNMP is installed!!&quot;</span> &gt; ./lnmp.sh</span><br><span class="line"><span class="built_in">chmod</span> +x lamp.sh lnmp.sh  <span class="comment">#添加可执行权限</span></span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost sh]<span class="comment"># echo &quot;echo LAMP is installedsu commen&quot; &gt; ./lamp.sh</span></span><br><span class="line">[root@localhost sh]<span class="comment"># echo &quot;echo LNMP is installedsu commen&quot; &gt; ./lnmp.sh</span></span><br><span class="line">[root@localhost sh]<span class="comment"># ls</span></span><br><span class="line">lamp.sh  lnmp.sh</span><br><span class="line"></span><br><span class="line">[root@localhost ~]<span class="comment"># chmod +x lamp.sh lnmp.sh</span></span><br></pre></td></tr></table></figure><h2 id="编写条件控制脚本"><a href="#编写条件控制脚本" class="headerlink" title="编写条件控制脚本"></a>编写条件控制脚本</h2><blockquote><p>在root目录下，编写lnmp_lamp.sh</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ../    <span class="comment">#回到root目录下</span></span><br></pre></td></tr></table></figure><p>脚本编写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#判断脚本目录是否存在</span></span><br><span class="line">path=/root/sh     <span class="comment">#根据自己lnmp.sh、lamp.sh所在位置而定！</span></span><br><span class="line"><span class="comment">#条件判断，目录是否存在，不存在则新建目录</span></span><br><span class="line">[ ! -d <span class="string">&quot;<span class="variable">$path</span>&quot;</span> ] &amp;&amp; <span class="built_in">mkdir</span> <span class="variable">$path</span> -p</span><br><span class="line"><span class="comment">#开发正常逻辑</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">END #cat输出给用户看见；&lt;&lt;END</span> 内容写入</span><br><span class="line">1.[Install lamp]</span><br><span class="line">2.[Install lnmp]</span><br><span class="line">3.[<span class="built_in">exit</span>]</span><br><span class="line">pls input the num you want:</span><br><span class="line">END</span><br><span class="line"><span class="built_in">read</span> num <span class="comment">#用户输入</span></span><br><span class="line"><span class="built_in">expr</span> <span class="variable">$num</span> + 1 &amp;&gt; /dev/null <span class="comment">#用于判断用户是否输入数字，如果是数字那么语句正常执行，$?返回为0  因为我们不需要输出的结果，所以将结果放到黑洞文件/dev/null中</span></span><br><span class="line"><span class="comment">#对用户输入进行判断</span></span><br><span class="line"><span class="comment">#非数字，提示信息</span></span><br><span class="line">[ <span class="string">&quot;$?&quot;</span> -ne 0 ] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The num you input must be &#123;1|2|3&#125;&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#输入1</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$num</span>&quot;</span> -eq <span class="string">&quot;1&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Start installing lamp···pls wait···&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2; <span class="comment">#等待两秒</span></span><br><span class="line"><span class="comment">#执行lamp.sh安装脚本</span></span><br><span class="line"><span class="comment">#执行脚本可能会出现没有执行权限的问题，我们首先要进行判断</span></span><br><span class="line">[ -x <span class="string">&quot;<span class="variable">$path</span>/lamp.sh&quot;</span> ] || &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The file does not exist or can&#x27;t be exec.&quot;</span>  <span class="comment">#如果没有权限，则提示文件不存在或者无执行权限</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$path</span>/lamp.sh</span><br><span class="line"><span class="built_in">exit</span> $?</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#输入2，同上</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$num</span>&quot;</span> -eq <span class="string">&quot;2&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Start installing lnmp···pls wait···&quot;</span></span><br><span class="line"><span class="built_in">sleep</span> 2; <span class="comment">#等待两秒</span></span><br><span class="line"><span class="comment">#执行lamp.sh安装脚本</span></span><br><span class="line"><span class="comment">#执行脚本可能会出现没有执行权限的问题，我们首先要进行判断</span></span><br><span class="line">[ -x <span class="string">&quot;<span class="variable">$path</span>/lnmp.sh&quot;</span> ] || &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The file does not exist or can&#x27;t be exec.&quot;</span>  <span class="comment">#如果没有权限，则提示文件不存在或者无执行权限</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$path</span>/lnmp.sh</span><br><span class="line"><span class="built_in">exit</span> $?</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#输入3</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$num</span>&quot;</span> -eq <span class="string">&quot;3&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;exit successfully.&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 3</span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">#限制用户只能输入1、2、3</span></span><br><span class="line"><span class="comment">#使用[[]]支持的正则表达式</span></span><br><span class="line"><span class="comment">#[[ &quot;$num&quot; =~ [1-3]] ]</span></span><br><span class="line">[[ ! <span class="string">&quot;<span class="variable">$num</span>&quot;</span> =~ [1-3] ]] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Usage:the num you input must be &#123;1|2|3&#125;.&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 4</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># bash lnmp_lamp.sh</span></span><br><span class="line">        1.[Install lamp]</span><br><span class="line">        2.[Install lnmp]</span><br><span class="line">        3.[<span class="built_in">exit</span>]</span><br><span class="line">        pls input the num you want:</span><br><span class="line">1</span><br><span class="line">Start installing lamp···pls <span class="built_in">wait</span>···</span><br><span class="line">LAMP is installed</span><br><span class="line">[root@localhost ~]<span class="comment"># bash lnmp_lamp.sh</span></span><br><span class="line">        1.[Install lamp]</span><br><span class="line">        2.[Install lnmp]</span><br><span class="line">        3.[<span class="built_in">exit</span>]</span><br><span class="line">        pls input the num you want:</span><br><span class="line">2</span><br><span class="line">Start installing lnmp···pls <span class="built_in">wait</span>···</span><br><span class="line">LNMP is installed</span><br><span class="line">[root@localhost ~]<span class="comment"># bash lnmp_lamp.sh</span></span><br><span class="line">        1.[Install lamp]</span><br><span class="line">        2.[Install lnmp]</span><br><span class="line">        3.[<span class="built_in">exit</span>]</span><br><span class="line">        pls input the num you want:</span><br><span class="line">3</span><br><span class="line"><span class="built_in">exit</span> successfully.</span><br><span class="line">[root@localhost ~]<span class="comment"># bash lnmp_lamp.sh</span></span><br><span class="line">        1.[Install lamp]</span><br><span class="line">        2.[Install lnmp]</span><br><span class="line">        3.[<span class="built_in">exit</span>]</span><br><span class="line">        pls input the num you want:</span><br><span class="line">dadda</span><br><span class="line">Usage:The num you input must be &#123;1|2|3&#125;</span><br></pre></td></tr></table></figure><h1 id="if语句开发"><a href="#if语句开发" class="headerlink" title="if语句开发"></a>if语句开发</h1><h2 id="单分支if语句"><a href="#单分支if语句" class="headerlink" title="单分支if语句"></a>单分支if语句</h2><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;条件表达式&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">代码</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">######简写#########</span></span><br><span class="line"><span class="keyword">if</span> &lt;条件表达式&gt;;<span class="keyword">then</span></span><br><span class="line">代码</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>条件表达式可以为</p><p>[ ]、test语句、[[ ]]、(( ))</p></blockquote><h2 id="双分支if语句"><a href="#双分支if语句" class="headerlink" title="双分支if语句"></a>双分支if语句</h2><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;条件表达式&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> &lt;条件表达式&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"> &lt;命令&gt;</span><br><span class="line"> &lt;&gt;</span><br><span class="line"> ...</span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="if-else语句"><a href="#if-else语句" class="headerlink" title="if-else语句"></a>if-else语句</h2><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;条件表达式&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"> &lt;命令&gt;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"> &lt;命令&gt;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h2 id="多分支if语句"><a href="#多分支if语句" class="headerlink" title="多分支if语句"></a>多分支if语句</h2><blockquote><p>语法</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> &lt;条件表达式&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">&lt;命令&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件表达式&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">&lt;命令&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;条件表达式&gt;</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">&lt;命令&gt;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&lt;命令&gt;</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><blockquote><p>注意嵌套一般不超过3层</p></blockquote><h1 id="if实战开发"><a href="#if实战开发" class="headerlink" title="if实战开发"></a>if实战开发</h1><h2 id="开发mysql监控脚本"><a href="#开发mysql监控脚本" class="headerlink" title="开发mysql监控脚本"></a>开发mysql监控脚本</h2><blockquote><p>固定每3分钟检查一次内存剩余，可用内存小于100MB的时候报警</p></blockquote><p>使用crontab每三分钟检查一次</p><blockquote><p>获取内存信息</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">free -m</span><br><span class="line"><span class="comment">#total 系统总可⽤物理内存⼤⼩</span></span><br><span class="line"><span class="comment">#used 已使⽤的物理内存⼤⼩</span></span><br><span class="line"><span class="comment">#free 剩余可用物理内存大小</span></span><br><span class="line"><span class="comment">#shared 被共享使⽤的物理内存⼤⼩</span></span><br><span class="line"><span class="comment">#buff/cache 被 buffer 和 cache 使⽤的物理内存⼤⼩</span></span><br><span class="line"><span class="comment">#available 还可以被 应⽤程序 使⽤的物理内存⼤⼩</span></span><br></pre></td></tr></table></figure><h2 id="通过编程语言连接mysql"><a href="#通过编程语言连接mysql" class="headerlink" title="通过编程语言连接mysql"></a>通过编程语言连接mysql</h2><h3 id="php"><a href="#php" class="headerlink" title="php"></a>php</h3><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本学习 Day5</title>
      <link href="/posts/204440896/"/>
      <url>/posts/204440896/</url>
      
        <content type="html"><![CDATA[<h1 id="系统自带脚本学习"><a href="#系统自带脚本学习" class="headerlink" title="系统自带脚本学习"></a>系统自带脚本学习</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /etc/init.d/</span><br></pre></td></tr></table></figure><h1 id="字符串值判断逻辑"><a href="#字符串值判断逻辑" class="headerlink" title="字符串值判断逻辑"></a><a href="https://www.delftstack.com/zh/howto/linux/how-to-compare-strings-in-bash/">字符串值判断逻辑</a></h1><table><thead><tr><th><code>string1 = string2</code></th><th>与 <code>[</code> 命令一起使用的等价运算符，如果两个操作数相等，则返回 <code>true</code>。</th></tr></thead><tbody><tr><td><code>string1 == string2</code></td><td>相等运算符与 <code>[[</code> 命令一起使用，如果两个操作数都相等，则返回 <code>true</code>。</td></tr><tr><td><code>string1 != string2</code></td><td>不等式运算符，如果两个操作数不相等，返回 <code>true</code>。</td></tr><tr><td><code>string1 =~ regex</code></td><td><code>Regex</code> 运算符，如果 <code>string1</code> 符合扩展的 <code>regex</code>，则返回 <code>true</code>。</td></tr><tr><td><code>string1 &gt; string2</code></td><td>大于运算符，如果 <code>string1</code> 大于 <code>string2</code>，则根据词法（字母）顺序返回 <code>true</code></td></tr><tr><td><code>string1 &lt; string2</code></td><td>小于运算符，如果 <code>string1</code> 小于 <code>string2</code>，则根据词法（字母）顺序返回 <code>true</code></td></tr><tr><td><code>-z string</code></td><td>如果 <code>string</code> 的长度是 <code>0</code>，返回 <code>true</code>。</td></tr><tr><td><code>-n string</code></td><td>如果 <code>string</code> 的长度不是 <code>0</code>，返回 <code>true</code>。</td></tr></tbody></table><blockquote><p>注意：</p><ul><li><p>使用变量时需要用双引号</p></li><li><p>判断符左右需要空格隔开</p></li></ul></blockquote><h1 id="数值比较符号"><a href="#数值比较符号" class="headerlink" title="数值比较符号"></a>数值比较符号</h1><p><img src="https://s2.loli.net/2022/07/18/tYzXWHrcS8x6PKN.jpg" alt="数值比较符号.jpg"></p><blockquote><p>注意：</p><ul><li><p>如果想在[ ]中使用数学比较符时，需要在比较符前加转义符，如</p><p>\&gt;</p></li><li><p>双中括号[[ ]]中也可以使用test与[ ]中的比较符</p></li></ul></blockquote><p>案例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># [ 2 &gt; 1 ] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line"><span class="built_in">yes</span></span><br><span class="line">[root@localhost ~]<span class="comment"># [ 2 &lt; 1 ] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line"><span class="built_in">yes</span></span><br><span class="line"><span class="comment">########</span></span><br><span class="line">[root@localhost ~]<span class="comment"># [ 2 \&lt; 1 ] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line">no</span><br><span class="line">[root@localhost ~]<span class="comment"># [ 2 \&gt; 1 ] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line"><span class="built_in">yes</span></span><br></pre></td></tr></table></figure><h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><p><img src="https://s2.loli.net/2022/07/18/uhWxjMdk39JRIvH.jpg" alt="逻辑运算符.jpg"></p><blockquote><p>注意：</p><p>[ ] 和 test 中不能使用 &amp;&amp;，||，！</p></blockquote><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># [ 2 -gt 1 &amp;&amp; &quot;abc&quot; -ne &quot;ABC&quot; ] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line">bash: [: 缺少 `]<span class="string">&#x27;</span></span><br><span class="line"><span class="string">no</span></span><br><span class="line"><span class="string">[root@localhost ~]# [ 2 -gt 1 || &quot;abc&quot; -ne &quot;ABC&quot; ] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line"><span class="string">bash: [: 缺少 `]&#x27;</span></span><br><span class="line">bash: abc: 未找到命令</span><br><span class="line">no</span><br><span class="line">[root@localhost ~]<span class="comment"># test 2 -gt 1 || &quot;abc&quot; -ne &quot;ABC&quot;  &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;  yes</span></span><br><span class="line">[root@localhost ~]<span class="comment"># test 2 -gt 1 &amp;&amp; &quot;abc&quot; -ne &quot;ABC&quot;  &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line">bash: abc: 未找到命令</span><br><span class="line">no</span><br><span class="line"><span class="comment">###################</span></span><br><span class="line">[root@localhost ~]<span class="comment"># [[ 2 -gt 1 || &quot;abc&quot; -ne &quot;ABC&quot; ]] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line"><span class="built_in">yes</span></span><br><span class="line">[root@localhost ~]<span class="comment"># [[ 2 -gt 1 &amp;&amp; &quot;abc&quot; -ne &quot;ABC&quot; ]] &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line">no</span><br><span class="line"><span class="comment">###########注意下面的实例，值得思考</span></span><br><span class="line">[root@localhost ~]<span class="comment"># (( &quot;2&quot; &gt; &quot;1&quot; || &quot;abc&quot; == &quot;ABC&quot; )) &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line"><span class="built_in">yes</span></span><br><span class="line">[root@localhost ~]<span class="comment"># (( &quot;2&quot; &gt; &quot;1&quot; &amp;&amp; &quot;abc&quot; == &quot;ABC544&quot; )) &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line"><span class="built_in">yes</span></span><br><span class="line">[root@localhost ~]<span class="comment"># (( &quot;2&quot; &gt; &quot;1&quot; &amp;&amp; &quot;5&quot; == &quot;5&quot; )) &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;     yes</span></span><br><span class="line">[root@localhost ~]<span class="comment"># (( &quot;2&quot; &gt; &quot;1&quot; &amp;&amp; &quot;5&quot; != &quot;5&quot; )) &amp;&amp; echo &quot;yes&quot; ||echo &quot;no&quot;</span></span><br><span class="line">no</span><br></pre></td></tr></table></figure><blockquote><p>通过上面的实例，要注意</p><ol><li>双小括号不能使用-gt等数值比较符</li><li>双小括号不能使用&#x3D;&#x3D; 判断两个字符串是否相等</li></ol></blockquote><h1 id="逻辑运算脚本"><a href="#逻辑运算脚本" class="headerlink" title="逻辑运算脚本"></a>逻辑运算脚本</h1><blockquote><p>接收用户输入字符串，判断是否等于某些数字</p></blockquote><p>编写test_ao.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;pls input a char:&quot;</span> var</span><br><span class="line"><span class="comment">#逻辑条件测试</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$var</span>&quot;</span> = <span class="string">&quot;1&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Right. value is <span class="variable">$var</span>&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line">&#125;</span><br><span class="line">[ <span class="string">&quot;<span class="variable">$var</span>&quot;</span> = <span class="string">&quot;2&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Right. value is <span class="variable">$var</span>&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 0</span><br><span class="line">&#125;</span><br><span class="line">[ <span class="string">&quot;<span class="variable">$var</span>&quot;</span> != <span class="string">&quot;1&quot;</span> -o <span class="string">&quot;<span class="variable">$var</span>&quot;</span> != <span class="string">&quot;&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Error value <span class="variable">$var</span>&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># bash test_ao.sh</span></span><br><span class="line">pls input a char:1</span><br><span class="line">Right. value is 1</span><br><span class="line">[root@localhost ~]<span class="comment"># bash test_ao.sh</span></span><br><span class="line">pls input a char:2</span><br><span class="line">Right. value is 2</span><br><span class="line">[root@localhost ~]<span class="comment"># bash test_ao.sh</span></span><br><span class="line">pls input a char:3</span><br><span class="line">Error value 3</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本学习 Day4</title>
      <link href="/posts/2066265558/"/>
      <url>/posts/2066265558/</url>
      
        <content type="html"><![CDATA[<h1 id="续Shell脚本学习-Day3"><a href="#续Shell脚本学习-Day3" class="headerlink" title="续Shell脚本学习 Day3"></a>续Shell脚本学习 Day3</h1><h1 id="脚本开发"><a href="#脚本开发" class="headerlink" title="脚本开发"></a>脚本开发</h1><blockquote><p>开发思路（使用nginx为例）</p><ol><li>先思考脚本功能、作用</li><li>编写伪代码</li><li>定义变量，用于存储变化的值，便于后期维护</li><li>安装···</li><li>启动···</li><li>修改配置文件···</li><li>重启文件···</li></ol></blockquote><h2 id="函数使用演示"><a href="#函数使用演示" class="headerlink" title="函数使用演示"></a>函数使用演示</h2><p>编写demo1.sh脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">print_sth</span></span>()&#123;<span class="comment">#定义函数print_sth</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;你好呀！&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">print_sth    <span class="comment">#调用定义的函数</span></span><br></pre></td></tr></table></figure><p>运行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># vi demo1.sh</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash demo1.sh</span></span><br><span class="line">你好呀！</span><br></pre></td></tr></table></figure><h2 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h2><blockquote><p>接收用户输入的数字和符号实现加减乘除运算</p></blockquote><p>编写demo2.sh脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">print_usage</span></span>()&#123;</span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;please enter on interger\n&quot;</span></span><br><span class="line"><span class="comment">#给脚本的执行结果指定一个状态码、退出码</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#接受用户输入的命令，-p参数后面写用户可以看见的提示信息</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;please input your number:&quot;</span> firstnum</span><br><span class="line"></span><br><span class="line"><span class="comment">#对用户输入进行判断，注意语法格式</span></span><br><span class="line"><span class="comment">#显示用户输入纯数字</span></span><br><span class="line"><span class="comment">#中括号收尾需要有两个空格</span></span><br><span class="line"><span class="comment">#-n 参数是if的语句，对字符串判断。若字符串为空，条件就不成立，否则条件不成立</span></span><br><span class="line"><span class="comment">#利用sed将firstnum中所有的数字替换为空</span></span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;`echo <span class="variable">$firstnum</span>|sed &#x27;s/[0-9]//g&#x27; `&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">print_usage<span class="comment">#用户未按要求输入纯数字时，报错，提示用户输入纯数字</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#用户输入纯数字执行fi后的命令</span></span><br><span class="line"><span class="comment">#此时输入运算符</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please input your operator:&quot;</span> operator</span><br><span class="line"><span class="comment">#对运算符进行判断</span></span><br><span class="line"><span class="comment">#限制在+ - * /四个符号</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;operator&#125;</span>&quot;</span> != <span class="string">&quot;+&quot;</span> ] &amp;&amp; [  <span class="string">&quot;<span class="variable">$&#123;operator&#125;</span>&quot;</span> != <span class="string">&quot;-&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;operator&#125;</span>&quot;</span> != <span class="string">&quot;*&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;operator&#125;</span>&quot;</span> != <span class="string">&quot;/&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;只能输入+-*/四个符号&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 2</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#对第二个变量进行处理</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;please input your number:&quot;</span> secondnum</span><br><span class="line"><span class="keyword">if</span> [ -n <span class="string">&quot;`echo <span class="variable">$secondnum</span>|sed &#x27;s/[0-9]//g&#x27;`&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line">print_usage</span><br><span class="line"><span class="built_in">exit</span> 3</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#最后进行数值计算，利用双小括号进行计算</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;firstnum&#125;</span><span class="variable">$&#123;operator&#125;</span><span class="variable">$&#123;secondnum&#125;</span>&quot;</span><span class="string">&#x27;=&#x27;</span><span class="string">&quot;<span class="subst">$(($&#123;firstnum&#125;$&#123;operator&#125;$&#123;secondnum&#125;)</span>)&quot;</span></span><br></pre></td></tr></table></figure><p>运行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># bash demo2.sh</span></span><br><span class="line">please input your number:1</span><br><span class="line">Please input your operator:*</span><br><span class="line">please input your number:500</span><br><span class="line">1*500=500</span><br><span class="line"><span class="comment">##########</span></span><br><span class="line">[root@localhost ~]<span class="comment"># bash demo2.sh</span></span><br><span class="line">please input your number:1</span><br><span class="line">Please input your operator+</span><br><span class="line">please input your number:2</span><br><span class="line">1+2=3</span><br></pre></td></tr></table></figure><h2 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h2><blockquote><p>更简单的方法</p><p>使用参数传递，实现上面的功能</p></blockquote><p>编写demo3.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> $((<span class="variable">$1</span>))</span><br></pre></td></tr></table></figure><p>运行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># bash demo3.sh 3*5</span></span><br><span class="line">15</span><br></pre></td></tr></table></figure><p>但这个脚本并没有我们demo2.sh的要严谨</p><h2 id="实例三"><a href="#实例三" class="headerlink" title="实例三"></a>实例三</h2><blockquote><p>开发检测nginx服务是否运行的脚本</p></blockquote><p>首先引出while循环的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#while 无限循环的语法</span></span><br><span class="line"><span class="comment">#sleep 1 睡眠一秒再执行</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span>;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="string">&quot;123456&quot;</span>;<span class="built_in">sleep</span> 1;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><em>执行后用Ctrl+C打断命令</em></p><p>编写demo4.sh脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="function"><span class="title">CheckUrl</span></span>()&#123;</span><br><span class="line"><span class="built_in">timeout</span>=5  <span class="comment">#超时</span></span><br><span class="line">fails=0  <span class="comment">#相当于定义一个计算器,连接失败次数</span></span><br><span class="line">success=0<span class="comment">#连接成功次数</span></span><br><span class="line"><span class="comment">#循环的检测，循环执行一些命令</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">     <span class="comment">#将$&#123;timeout&#125;值传递给wget -timeout参数，--tries是wget的重连机制，后面接url是固有语法，-q -o是静默输出 将结果写入黑洞文件/dev/null中</span></span><br><span class="line">wget --<span class="built_in">timeout</span>=<span class="variable">$&#123;timeout&#125;</span> --tries=1 http://lptexas-cub.github.io/ -q -o /dev/null</span><br><span class="line"><span class="comment">#echo $?输出状态码</span></span><br><span class="line"><span class="comment">#-ne 表示不等于 ！=</span></span><br><span class="line"><span class="comment">#注意中括号中间首尾空格语法</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne 0 ] <span class="comment">#状态码不等于0</span></span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">let</span> fails=fails+1 <span class="comment">#说明连接失败，fails加1</span></span><br><span class="line"><span class="keyword">else</span> <span class="comment">#否则，即状态码等于0的时候</span></span><br><span class="line"><span class="built_in">let</span> success+=1 <span class="comment">#连接成功</span></span><br><span class="line"><span class="keyword">fi</span> <span class="comment">#闭环，中端if语句</span></span><br><span class="line"><span class="comment">#判断成功次数大于等于1时，就可以得出该网站是正确访问的</span></span><br><span class="line"><span class="comment">#-ge 表示大于等于 &gt;=</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;success&#125;</span> -ge 1 ]</span><br><span class="line"><span class="keyword">then</span> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;网站运行正常！&quot;</span></span><br><span class="line"><span class="built_in">exit</span> 0 <span class="comment">#返回状态码，0表示正常</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="comment">#当错误次数大于2时，就告警</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;fails&#125;</span> -ge 2 ];<span class="keyword">then</span> </span><br><span class="line">          <span class="built_in">echo</span> <span class="string">&quot;网站访问异常！&quot;</span></span><br><span class="line">          <span class="built_in">exit</span> 2</span><br><span class="line">      <span class="keyword">fi</span></span><br><span class="line">   <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#记得定义后，调用才会运行！</span></span><br><span class="line">CheckUrl</span><br></pre></td></tr></table></figure><blockquote><p>http:&#x2F;&#x2F;…….&#x2F; 处可以使用自己的网站作为测试</p></blockquote><h1 id="let命令运算操作"><a href="#let命令运算操作" class="headerlink" title="let命令运算操作"></a>let命令运算操作</h1><blockquote><p>let命令的执行效果等同于双小括号</p><p>但是，双小括号效率更高</p></blockquote><h2 id="let命令实践"><a href="#let命令实践" class="headerlink" title="let命令实践"></a>let命令实践</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># num=8</span></span><br><span class="line">[root@localhost ~]<span class="comment"># num=num+8</span></span><br><span class="line">[root@localhost ~]<span class="comment"># echo $num</span></span><br><span class="line">num+8</span><br></pre></td></tr></table></figure><p><a href="http://lptexas.top/posts/3846971509/#shell%E6%95%B0%E5%80%BC%E8%AE%A1%E7%AE%97"><strong>可见bash原生命令并不支持运算！</strong></a></p><p>这时我们<strong>使用let命令</strong>操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># num=8</span></span><br><span class="line">[root@localhost ~]<span class="comment"># let num=num+8</span></span><br><span class="line">[root@localhost ~]<span class="comment"># echo $num</span></span><br><span class="line">16</span><br></pre></td></tr></table></figure><p>对比一下<strong>使用双小括号</strong>操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># num=8</span></span><br><span class="line">[root@localhost ~]<span class="comment"># num=$((num+8))</span></span><br><span class="line">[root@localhost ~]<span class="comment"># echo $num</span></span><br><span class="line">16</span><br></pre></td></tr></table></figure><h1 id="expr命令运算操作"><a href="#expr命令运算操作" class="headerlink" title="expr命令运算操作"></a><a href="http://lptexas.top/posts/3846971509/#expr-%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C">expr命令运算操作</a></h1><blockquote><p>expr命令基于空格，对于一些运算符需要加 \ 转义后才能使用，如：* 使用expr时需要用 *</p></blockquote><h2 id="expr帮助"><a href="#expr帮助" class="headerlink" title="expr帮助"></a>expr帮助</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">expr</span> --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">用法：<span class="built_in">expr</span> 表达式</span><br><span class="line">　或：<span class="built_in">expr</span> 选项</span><br><span class="line"></span><br><span class="line">      --<span class="built_in">help</span>            显示此帮助信息并退出</span><br><span class="line">      --version         显示版本信息并退出</span><br><span class="line"></span><br><span class="line">将表达式的值列印到标准输出，分隔符下面的空行可提升算式优先级。</span><br><span class="line">可用的表达式有：</span><br><span class="line"></span><br><span class="line">  ARG1 | ARG2       若ARG1 的值不为0 或者为空，则返回ARG1，否则返回ARG2</span><br><span class="line"></span><br><span class="line">  ARG1 &amp; ARG2       若两边的值都不为0 或为空，则返回ARG1，否则返回 0</span><br><span class="line"></span><br><span class="line">  ARG1 &lt; ARG2       ARG1 小于ARG2</span><br><span class="line">  ARG1 &lt;= ARG2      ARG1 小于或等于ARG2</span><br><span class="line">  ARG1 = ARG2       ARG1 等于ARG2</span><br><span class="line">  ARG1 != ARG2      ARG1 不等于ARG2</span><br><span class="line">  ARG1 &gt;= ARG2      ARG1 大于或等于ARG2</span><br><span class="line">  ARG1 &gt; ARG2       ARG1 大于ARG2</span><br><span class="line"></span><br><span class="line">  ARG1 + ARG2       计算 ARG1 与ARG2 相加之和</span><br><span class="line">  ARG1 - ARG2       计算 ARG1 与ARG2 相减之差</span><br><span class="line"></span><br><span class="line">  ARG1 * ARG2       计算 ARG1 与ARG2 相乘之积</span><br><span class="line">  ARG1 / ARG2       计算 ARG1 与ARG2 相除之商</span><br><span class="line">  ARG1 % ARG2       计算 ARG1 与ARG2 相除之余数</span><br><span class="line"></span><br><span class="line">  字符串 : 表达式               定位字符串中匹配表达式的模式</span><br><span class="line"></span><br><span class="line">  match 字符串 表达式           等于<span class="string">&quot;字符串 :表达式&quot;</span></span><br><span class="line">  substr 字符串 偏移量 长度     替换字符串的子串，偏移的数值从 1 起计</span><br><span class="line">  index 字符串 字符             在字符串中发现字符的地方建立下标，或者标0</span><br><span class="line">  length 字符串                 字符串的长度</span><br><span class="line">  + TOKEN                    interpret TOKEN as a string, even <span class="keyword">if</span> it is a</span><br><span class="line">                               keyword like <span class="string">&#x27;match&#x27;</span> or an operator like <span class="string">&#x27;/&#x27;</span></span><br><span class="line"></span><br><span class="line">  ( EXPRESSION )             value of EXPRESSION</span><br><span class="line"></span><br><span class="line">请注意有许多运算操作符都可能需要由 shell 先实施转义。</span><br><span class="line">如果参与运算的 ARG 自变量都是数字，比较符就会被视作数学符号，否则就是多义的。</span><br><span class="line">模式匹配会返回<span class="string">&quot;\&quot;和&quot;</span>\&quot;之间被匹配的子字符串或空(null)；如果未使用<span class="string">&quot;\&quot;和&quot;</span>\&quot;，</span><br><span class="line">则会返回匹配字符数量或是 0。</span><br><span class="line"></span><br><span class="line">若表达式的值既不是空也不是 0，退出状态值为 0；若表达式的值为空或为 0，</span><br><span class="line">退出状态值为 1。如果表达式的句法无效，则会在出错时返回退出状态值 3。</span><br><span class="line"></span><br><span class="line">GNU coreutils online <span class="built_in">help</span>: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">请向&lt;http://translationproject.org/team/zh_CN.html&gt; 报告<span class="built_in">expr</span> 的翻译错误</span><br><span class="line">要获取完整文档，请运行：info coreutils <span class="string">&#x27;expr invocation&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我们还可以通过手册对expr命令进行了解</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">expr</span></span><br></pre></td></tr></table></figure><h2 id="expr命令实践"><a href="#expr命令实践" class="headerlink" title="expr命令实践"></a>expr命令实践</h2><blockquote><p><a href="http://lptexas.top/posts/3846971509/#expr-%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C">见Shell脚本学习Day3</a></p></blockquote><h2 id="expr模式匹配"><a href="#expr模式匹配" class="headerlink" title="expr模式匹配"></a>expr模式匹配</h2><blockquote><p>expr命令支持模式匹配功能（正则表达式）</p><p>2个特殊符号</p><ul><li>： 计算字符串数量，如abc 3个字符</li><li>.*  任意字符串重复0次或者多次</li></ul></blockquote><blockquote><p>语法</p><p>expr &lt;字符串&gt; “:”  “.*”</p></blockquote><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># expr abc123 &quot;:&quot; &quot;.*&quot;</span></span><br><span class="line">6</span><br><span class="line">[root@localhost ~]<span class="comment"># expr abc.png &quot;:&quot; &quot;.*\.png&quot; #使用了反斜杠转义，匹配以.png结尾的字符并计算字符串数目</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><h1 id="bc命令运算操作"><a href="#bc命令运算操作" class="headerlink" title="bc命令运算操作"></a>bc命令运算操作</h1><blockquote><p>bc命令当做计算器来使用，是命令行的计算器</p><p>两种形式：交互式与非交互式</p><p>支持小数！但<strong>除法不支持</strong></p></blockquote><h2 id="bc命令结合管道符"><a href="#bc命令结合管道符" class="headerlink" title="bc命令结合管道符"></a>bc命令结合管道符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;4*4&quot;</span>|bc</span><br></pre></td></tr></table></figure><h2 id="bc案例"><a href="#bc案例" class="headerlink" title="bc案例"></a>bc案例</h2><blockquote><p>计算1~100的总和</p><p>数学公式：1+2+3+…+100</p></blockquote><h3 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h3><blockquote><p>使用{1..100}生成1到100的序列，再使用tr将结果中的空格替换为+，最后交给bc命令计算结果</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> &#123;1..100&#125;|<span class="built_in">tr</span> <span class="string">&quot; &quot;</span> <span class="string">&quot;+&quot;</span>|bc</span><br></pre></td></tr></table></figure><p>运行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo &#123;1..100&#125;</span></span><br><span class="line">1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100</span><br><span class="line">[root@localhost ~]<span class="comment"># echo &#123;1..100&#125;|tr &quot; &quot; &quot;+&quot;</span></span><br><span class="line">1+2+3+4+5+6+7+8+9+10+11+12+13+14+15+16+17+18+19+20+21+22+23+24+25+26+27+28+29+30+31+32+33+34+35+36+37+38+39+40+41+42+43+44+45+46+47+48+49+50+51+52+53+54+55+56+57+58+59+60+61+62+63+64+65+66+67+68+69+70+71+72+73+74+75+76+77+78+79+80+81+82+83+84+85+86+87+88+89+90+91+92+93+94+95+96+97+98+99+100</span><br><span class="line">[root@localhost ~]<span class="comment"># echo &#123;1..100&#125;|tr &quot; &quot; &quot;+&quot;|bc</span></span><br><span class="line">5050</span><br></pre></td></tr></table></figure><h3 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h3><blockquote><p>使用seq生成序列</p><p>seq的默认分隔符为换行符，可以使用-s参数指定分隔符</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">seq</span> -s <span class="string">&quot;+&quot;</span> 100 |bc</span><br></pre></td></tr></table></figure><h3 id="运行演示"><a href="#运行演示" class="headerlink" title="运行演示"></a>运行演示</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># seq -s &quot;+&quot; 100 |bc</span></span><br><span class="line">5050</span><br></pre></td></tr></table></figure><h1 id="awk命令支持数值运算操作"><a href="#awk命令支持数值运算操作" class="headerlink" title="awk命令支持数值运算操作"></a>awk命令支持数值运算操作</h1><blockquote><p>语法：</p><p>echo “参数1 参数2 … …” |awk ‘{print $1&lt;运算符&gt;$2&lt;运算符&gt;$3… …}’</p><p>awk支持小数计算</p></blockquote><h2 id="awk实例"><a href="#awk实例" class="headerlink" title="awk实例"></a>awk实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo &quot;0.1 2.1 3&quot;|awk &#x27;&#123;print $1+$2*$3&#125;&#x27;</span></span><br><span class="line">6.4</span><br></pre></td></tr></table></figure><h1 id="中括号运算操作"><a href="#中括号运算操作" class="headerlink" title="中括号运算操作"></a>中括号运算操作</h1><blockquote><p>语法：</p><p>$[表达式]</p></blockquote><h2 id="中括号实例"><a href="#中括号实例" class="headerlink" title="中括号实例"></a>中括号实例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo $[1+2]</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><h1 id="知识点补充"><a href="#知识点补充" class="headerlink" title="知识点补充"></a>知识点补充</h1><h2 id="read命令"><a href="#read命令" class="headerlink" title="read命令"></a>read命令</h2><blockquote><p>shell变量除了直接赋值，或者脚本传递参数，还有就是read命令读取。</p><p>read命令是内置命令</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment">#  type read</span></span><br><span class="line"><span class="built_in">read</span> 是 shell 内嵌</span><br></pre></td></tr></table></figure><blockquote><p>相关参数</p><p>-t  等待用户输入的时间，超时命令终止</p><p>-p  设置提示信息</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># read -t 2 -p &quot;请输入：&quot; vars</span></span><br><span class="line">请输入：[root@localhost ~]<span class="comment">#</span></span><br><span class="line"><span class="comment">#####</span></span><br><span class="line">[root@localhost ~]<span class="comment"># read -t 2 -p &quot;请输入：&quot; vars</span></span><br><span class="line">请输入：123</span><br><span class="line">[root@localhost ~]<span class="comment"># echo $vars</span></span><br><span class="line">123</span><br></pre></td></tr></table></figure><h2 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a><a href="https://www.runoob.com/linux/linux-comm-touch.html">touch命令</a></h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><blockquote><p>touch [-acfm][-d&lt;日期时间&gt;][-r&lt;参考文件或目录&gt;] [-t&lt;日期时间&gt;][–help][–version][文件或目录…]</p></blockquote><h2 id="Linux-用户和用户组管理"><a href="#Linux-用户和用户组管理" class="headerlink" title="Linux 用户和用户组管理"></a>Linux 用户和用户组管理</h2><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><blockquote><p>使用useradd命令</p><p>语法：</p><p>useradd 选项 用户名</p></blockquote><p>参数说明：</p><ul><li><p>选项:</p><ul><li>-c comment 指定一段注释性描述。</li><li>-d 目录 指定用户主目录，如果此目录不存在，则同时使用-m选项，可以创建主目录。</li><li>-g 用户组 指定用户所属的用户组。</li><li>-G 用户组，用户组 指定用户所属的附加组。</li><li>-s Shell文件 指定用户的登录Shell。</li><li>-u 用户号 指定用户的用户号，如果同时有-o选项，则可以重复使用其他用户的标识号。</li></ul></li><li><p>用户名:</p><p>指定新账号的登录名。</p></li></ul><h4 id="实例1"><a href="#实例1" class="headerlink" title="实例1"></a>实例1</h4><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd –d /home/sam -m sam</span><br></pre></td></tr></table></figure><p>此命令创建了一个用户sam，其中-d和-m选项用来为登录名sam产生一个主目录 &#x2F;home&#x2F;sam（&#x2F;home为默认的用户主目录所在的父目录）。</p><h2 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a><a href="https://www.runoob.com/linux/linux-comm-su.html">切换用户</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su [-fmp] [-c <span class="built_in">command</span>] [-s shell] [--<span class="built_in">help</span>] [--version] [-] [USER [ARG]]</span><br></pre></td></tr></table></figure><h1 id="shell条件测试"><a href="#shell条件测试" class="headerlink" title="shell条件测试"></a><a href="https://blog.csdn.net/weixin_48009756/article/details/112675959#:~:text=%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95%20%E8%AF%AD%E6%B3%95%20%E8%AF%B4%E6%98%8E%20%E8%AF%AD%E6%B3%951%EF%BC%9Atest%20%3C%20%E6%B5%8B%E8%AF%95%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%3E%20test%E5%91%BD%E4%BB%A4%E5%92%8C%3C,%E8%AF%A5%E6%96%B9%E6%B3%95%E5%92%8Ctest%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95%E4%B8%80%E6%A0%B7%EF%BC%8C%20%5B%5D%E7%9A%84%E8%BE%B9%E7%95%8C%E5%92%8C%E5%86%85%E5%AE%B9%E4%B9%8B%E9%97%B4%E8%87%B3%E5%B0%91%E6%9C%89%E4%B8%80%E4%B8%AA%E7%A9%BA%E6%A0%BC%20%E8%AF%AD%E6%B3%953%EF%BC%9A%20%5B%20%5B%3C%20%E6%B5%8B%E8%AF%95%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%3E%5D%5D%20%E6%AF%94">shell条件测试</a></h1><blockquote><p>所谓条件测试，就是得出真假的概念</p><p>shell提供条件测试的语法</p><ol><li>test命令</li><li><input disabled="" type="checkbox"> 中括号</li><li>[[ ]]  双中括号</li><li>(( ))  双小括号</li></ol></blockquote><p><img src="https://img-blog.csdnimg.cn/20210115163839220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80ODAwOTc1Ng==,size_16,color_FFFFFF,t_70" alt="条件测试常用语法"></p><h2 id="test条件命令测试"><a href="#test条件命令测试" class="headerlink" title="test条件命令测试"></a>test条件命令测试</h2><blockquote><p>评估一个表达式，结果是真或假</p><p>如果结果为真，状态码结果为0；否则，状态码非0</p><p>$?取得状态码值</p></blockquote><blockquote><p>相关参数</p><p>-e 判断文件或目录是否存在，存在返回真，否则返回假</p></blockquote><h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> 测试参数 测试对象 对结果进行判断执行的逻辑动作</span><br></pre></td></tr></table></figure><h4 id="test命令实例"><a href="#test命令实例" class="headerlink" title="test命令实例"></a>test命令实例</h4><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# test -e test_file</span><br><span class="line">[root@localhost ~]# echo $?</span><br><span class="line"><span class="number">1</span></span><br><span class="line">#######</span><br><span class="line">[root@localhost ~]# ls</span><br><span class="line">anaconda-ks.cfg  demo1.sh  demo3.sh  hello.sh                 sub_str</span><br><span class="line">blog             demo2.sh  demo4.sh  node-v16<span class="number">.16</span><span class="number">.0</span>-linux-x64</span><br><span class="line">[root@localhost ~]# test -e hello.sh</span><br><span class="line">[root@localhost ~]# echo $?</span><br><span class="line"><span class="number">0</span></span><br><span class="line">###</span><br><span class="line">[root@localhost ~]# test -e hello.sh &amp;&amp; echo <span class="string">&quot;文件存在！&quot;</span></span><br><span class="line">文件存在！</span><br><span class="line">[root@localhost ~]# echo $?</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="test语法大全"><a href="#test语法大全" class="headerlink" title="test语法大全"></a><a href="https://blog.csdn.net/CN_LiTianpeng/article/details/120179003">test语法大全</a></h3><blockquote><p>参阅：<a href="https://blog.csdn.net/CN_LiTianpeng/article/details/120179003">知无涯学无尽</a> 略有修改</p></blockquote><h4 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#文件状态</span></span><br><span class="line">-e 文件或目录是否存在</span><br><span class="line">-f 文件是否存在</span><br><span class="line">-d 目录是否存在</span><br><span class="line"><span class="comment">#权限</span></span><br><span class="line">–r 文件存在并且可读</span><br><span class="line">–w 文件存在并且可写</span><br><span class="line">–x 文件存在并且可执行</span><br></pre></td></tr></table></figure><h4 id="判断表达式"><a href="#判断表达式" class="headerlink" title="判断表达式"></a>判断表达式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">test</span>  (表达式为真)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> !表达式为假</span><br><span class="line"><span class="built_in">test</span> 表达式1 –a 表达式 2                两个表达式都为真</span><br><span class="line"><span class="built_in">test</span> 表达式1 –o 表达式2                 两个表达式有一个为真</span><br></pre></td></tr></table></figure><h4 id="判断字符串"><a href="#判断字符串" class="headerlink" title="判断字符串"></a>判断字符串</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> –n 字符串         字符串的长度非零，有内容为真</span><br><span class="line"><span class="built_in">test</span> –z 字符串         字符串的长度为零，无内容为真</span><br><span class="line"><span class="built_in">test</span> 字符串1 = 字符串2          字符串相等</span><br><span class="line"><span class="built_in">test</span> 字符串1 != 字符串2         字符串不等</span><br></pre></td></tr></table></figure><h4 id="判断整数"><a href="#判断整数" class="headerlink" title="判断整数"></a>判断整数</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">test</span> 整数1 –eq 整数2    整数相等(equal)</span><br><span class="line"><span class="built_in">test</span> 整数 1 –ge 整数2    整数1大于等于整数2（greater equal）</span><br><span class="line"><span class="built_in">test</span> 整数1 –gt 整数 2     整数1大于整数2(greater than)</span><br><span class="line"><span class="built_in">test</span> 整数1 –le 整数 2     整数1小于等于整数2(less equal)</span><br><span class="line"><span class="built_in">test</span> 整数1 –lt 整数 2     整数1小于整数2(less than)</span><br><span class="line"><span class="built_in">test</span> 整数1 –ne 整数 2     整数1不等于整数2 (not equal)</span><br></pre></td></tr></table></figure><h4 id="判断文件"><a href="#判断文件" class="headerlink" title="判断文件"></a>判断文件</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#两个文件之间的比较</span></span><br><span class="line"><span class="built_in">test</span>  File1 –ef  File2                            两个文件具有同样的设备号和i结点号</span><br><span class="line"><span class="built_in">test</span>  File1 –nt  File2                            文件1比文件2 新</span><br><span class="line"><span class="built_in">test</span>  File1 –ot  File2                            文件1比文件2 旧</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="built_in">test</span> –b File            文件存在并且是块设备文件</span><br><span class="line"><span class="built_in">test</span> –c File            文件存在并且是字符设备文件</span><br><span class="line"><span class="built_in">test</span> –d File            文件存在并且是目录</span><br><span class="line"><span class="built_in">test</span> –e File            文件存在</span><br><span class="line"><span class="built_in">test</span> –f File            文件存在并且是正规文件</span><br><span class="line"><span class="built_in">test</span> –g File            文件存在并且是设置了组ID</span><br><span class="line"><span class="built_in">test</span> –G File            文件存在并且属于有效组ID</span><br><span class="line"><span class="built_in">test</span> –h File            文件存在并且是一个符号链接（同-L）</span><br><span class="line"><span class="built_in">test</span> –k File             文件存在并且设置了sticky位</span><br><span class="line"><span class="built_in">test</span> –b File            文件存在并且是块设备文件</span><br><span class="line"><span class="built_in">test</span> –L File            文件存在并且是一个符号链接（同-h）</span><br><span class="line"><span class="built_in">test</span> –o File            文件存在并且属于有效用户ID</span><br><span class="line"><span class="built_in">test</span> –p File            文件存在并且是一个命名管道</span><br><span class="line"><span class="built_in">test</span> –s File            文件存在并且是一个套接字</span><br><span class="line"><span class="built_in">test</span> –t FD                文件描述符是在一个终端打开的</span><br><span class="line"><span class="built_in">test</span> –u File            文件存在并且设置了它的set-user-id位</span><br><span class="line"><span class="comment">#文件权限类</span></span><br><span class="line"><span class="built_in">test</span> –r File            文件存在并且可读</span><br><span class="line"><span class="built_in">test</span> –w File            文件存在并且可写</span><br><span class="line"><span class="built_in">test</span> –x File            文件存在并且可执行</span><br></pre></td></tr></table></figure><blockquote><p>test xxx 可以简写成 [ xxx ] 的形式。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">注意：在使用<span class="string">&quot;[&quot;</span>简写<span class="built_in">test</span>时，左中括号后面的空格和右括号前面的空格是必需的，如果没有空格，Shell不可能辨别表达式何时开始何时结束．</span><br><span class="line"> </span><br><span class="line">也就是说</span><br><span class="line"> </span><br><span class="line">    <span class="built_in">test</span> option file</span><br><span class="line"> </span><br><span class="line">可以全部改写成：</span><br><span class="line"> </span><br><span class="line">    [ option file ]</span><br><span class="line"> </span><br><span class="line">例如:</span><br><span class="line"> </span><br><span class="line"> <span class="built_in">test</span> –w File</span><br><span class="line"> </span><br><span class="line">改写成    </span><br><span class="line"> </span><br><span class="line">[ –w File ]    </span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断第一个参数是否为空字符串，不空则打印</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -n <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">测试，放到文件当中</span><br><span class="line"><span class="comment">#!/bin/sh</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -n <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">执行</span><br><span class="line"><span class="built_in">chmod</span> +x test.sh</span><br><span class="line">./test.sh www.linuxpig.com</span><br></pre></td></tr></table></figure><h3 id="test命令实践"><a href="#test命令实践" class="headerlink" title="test命令实践"></a>test命令实践</h3><blockquote><p>补充：shell对于真假判断的逻辑，提供&amp;&amp;与运算、||或运算，并且是递进关系</p></blockquote><p>说明</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">A</span>条件 <span class="selector-tag">&amp;</span><span class="selector-tag">&amp;</span> <span class="selector-tag">B</span>条件  当<span class="selector-tag">A</span>条件成立，并且执行<span class="selector-tag">B</span>条件</span><br><span class="line"><span class="selector-tag">A</span>条件 || <span class="selector-tag">B</span>条件  当<span class="selector-tag">A</span>条件不成立，才会执行<span class="selector-tag">B</span>条件</span><br></pre></td></tr></table></figure><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg  demo1.sh  demo3.sh  hello.sh                 sub_str</span><br><span class="line">blog             demo2.sh  demo4.sh  node-v16.16.0-linux-x64</span><br><span class="line">[root@localhost ~]<span class="comment"># test -e hello.sh &amp;&amp; echo &quot;文件存在！&quot;||echo &quot;文件不存在！！&quot;</span></span><br><span class="line">文件存在！</span><br><span class="line">[root@localhost ~]<span class="comment"># test -e hello1.sh &amp;&amp; echo &quot;文件存在！&quot;||echo &quot;文件不存在！！&quot;</span></span><br><span class="line">文件不存在！！</span><br></pre></td></tr></table></figure><h2 id="中括号语法条件测试"><a href="#中括号语法条件测试" class="headerlink" title="中括号语法条件测试"></a>中括号语法条件测试</h2><blockquote><p>脚本中经常进行条件测试，用到最多的，都是中括号[ ]</p><p>test和[]的作用相同</p><p>注意：[ ] 前后都要加空格！</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># [ -e hello.sh ] &amp;&amp; echo &quot;文件存在&quot;</span></span><br><span class="line">文件存在</span><br></pre></td></tr></table></figure><blockquote><p>补充：</p><p>在条件测试中使用变量，必须添加双引号！！</p></blockquote><h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># file=test</span></span><br><span class="line">[root@localhost ~]<span class="comment"># touch test</span></span><br><span class="line">[root@localhost ~]<span class="comment"># [ -e &quot;$file&quot; ] &amp;&amp; echo &quot;文件存在&quot; || echo &quot;文件不存在&quot;</span></span><br><span class="line">文件存在</span><br><span class="line">[root@localhost ~]<span class="comment"># rm test</span></span><br><span class="line"><span class="built_in">rm</span>：是否删除普通空文件 <span class="string">&quot;test&quot;</span>？y</span><br><span class="line">[root@localhost ~]<span class="comment"># [ -e &quot;$file&quot; ] &amp;&amp; echo &quot;文件存在&quot; || echo &quot;文件不存在&quot;</span></span><br><span class="line">文件不存在</span><br><span class="line"><span class="comment">########</span></span><br><span class="line">[root@localhost ~]<span class="comment"># touch file</span></span><br><span class="line">[root@localhost ~]<span class="comment"># [ -e $file ] &amp;&amp; echo &quot;文件存在&quot; || echo &quot;文件不存在&quot;</span></span><br><span class="line">文件不存在</span><br></pre></td></tr></table></figure><h2 id="双中括号条件测试"><a href="#双中括号条件测试" class="headerlink" title="双中括号条件测试"></a>双中括号条件测试</h2><blockquote><p>与单中括号、test效果相同</p><p><code>特点</code>：双中括号还支持正则表达式</p><p>注意：</p><p>和单括号一样需要加括号</p></blockquote><h2 id="双小括号条件测试"><a href="#双小括号条件测试" class="headerlink" title="双小括号条件测试"></a>双小括号条件测试</h2>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本学习 Day3</title>
      <link href="/posts/3846971509/"/>
      <url>/posts/3846971509/</url>
      
        <content type="html"><![CDATA[<h1 id="续Shell脚本学习-Day2"><a href="#续Shell脚本学习-Day2" class="headerlink" title="续Shell脚本学习 Day2"></a>续Shell脚本学习 Day2</h1><h1 id="字符串截取补充"><a href="#字符串截取补充" class="headerlink" title="字符串截取补充"></a>字符串截取补充</h1><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a*z</span><br></pre></td></tr></table></figure><p>表示匹配a开头，中间任意字符，z结尾</p><h3 id="使用案例"><a href="#使用案例" class="headerlink" title="使用案例"></a><a href="http://lptexas.top/posts/2454393059/#%E5%AE%9E%E4%BE%8B">使用案例</a></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#   从头匹配最短字符串</span></span><br><span class="line"><span class="comment">##从头匹配最长字符串</span></span><br><span class="line">%从尾匹配最短字符串</span><br><span class="line">%%从尾匹配最长字符串</span><br></pre></td></tr></table></figure><h1 id="字符串截取应用案例"><a href="#字符串截取应用案例" class="headerlink" title="字符串截取应用案例"></a>字符串截取应用案例</h1><h2 id="删除文件名"><a href="#删除文件名" class="headerlink" title="删除文件名"></a>删除文件名</h2><p>首先，我们创建一些演示文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> sub_str <span class="comment">#创建一个sub_str目录</span></span><br><span class="line"><span class="built_in">cd</span> sub_str <span class="comment">#切换到目录下</span></span><br><span class="line"><span class="built_in">touch</span> demo_&#123;1..3&#125;_finished.jpg <span class="comment">#生成三个.jpg文件</span></span><br><span class="line"><span class="built_in">touch</span> demo_&#123;1..3&#125;_finished.png <span class="comment">#生成三个.png文件</span></span><br></pre></td></tr></table></figure><p>要求：去除文件中的_finished字符</p><p>法一 一个一个<strong>直接修改</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> demo_1_finished.jpg demo_1.jpg</span><br><span class="line"><span class="built_in">mv</span> demo_2_finished.jpg demo_2.jpg</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>法二 使用<strong>字符串替换</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">f=demo_1_finished.jpg</span><br><span class="line"><span class="built_in">mv</span> demo_1_finished.jpg <span class="variable">$&#123;f//_finished/&#125;</span> <span class="comment">#不使用反引号</span></span><br><span class="line"><span class="built_in">mv</span> <span class="variable">$f</span> `<span class="built_in">echo</span> <span class="variable">$&#123;f//_finished/&#125;</span>`<span class="comment">#使用反引号</span></span><br></pre></td></tr></table></figure><p>法三 使用<strong>字符串替换批量</strong>处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> `<span class="built_in">ls</span> *fin*jpg *fin*png `;<span class="keyword">do</span> <span class="built_in">mv</span> <span class="variable">$file_name</span> <span class="variable">$&#123;file_name//_finished/&#125;</span>;<span class="keyword">done</span> <span class="comment">#不使用反引号</span></span><br><span class="line"><span class="keyword">for</span> file_name <span class="keyword">in</span> `<span class="built_in">ls</span> *fin*jpg *fin*png `;<span class="keyword">do</span> <span class="built_in">mv</span> <span class="variable">$file_name</span> `<span class="built_in">echo</span> <span class="variable">$&#123;file_name//_finished/&#125;</span>`;<span class="keyword">done</span> <span class="comment">#使用反引号</span></span><br></pre></td></tr></table></figure><p><em>这里用到了通配符的知识</em></p><h1 id="特殊shell拓展变量"><a href="#特殊shell拓展变量" class="headerlink" title="特殊shell拓展变量"></a>特殊shell拓展变量</h1><ol><li>当变量值为<strong>空</strong>，<strong>返回word</strong>字符串;当变量值非空，返回变量值</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;vars:-word&#125;</span></span><br></pre></td></tr></table></figure><p>演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost sub_str]<span class="comment"># vars=</span></span><br><span class="line">[root@localhost sub_str]<span class="comment"># result=$&#123;vars:-word&#125;</span></span><br><span class="line">[root@localhost sub_str]<span class="comment"># echo $result</span></span><br><span class="line">word</span><br><span class="line">[root@localhost sub_str]<span class="comment"># echo $vars</span></span><br><span class="line"><span class="comment">#null</span></span><br></pre></td></tr></table></figure><ol start="2"><li>当变量值为<strong>空</strong>，<strong>返回word</strong>字符串，<strong>并</strong>将word<strong>赋值</strong>给变量；当变量值非空，返回变量值</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;vars:=word&#125;</span></span><br></pre></td></tr></table></figure><p>演示</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># vars=#未赋值</span></span><br><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># echo $vars</span></span><br><span class="line"><span class="meta">#null</span></span><br><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># echo $&#123;vars:=word&#125;</span></span><br><span class="line">word</span><br><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># echo $vars</span></span><br><span class="line">word</span><br></pre></td></tr></table></figure><ol start="3"><li>当变量为<strong>空</strong>，<strong>返回word</strong>字符串<strong>作为<a href="https://baike.baidu.com/item/stderr/8046227">stderr</a></strong>;当变量值非空，返回变量值</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;vars:?word&#125;</span></span><br></pre></td></tr></table></figure><p>演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost sub_str]<span class="comment"># vars=</span></span><br><span class="line">[root@localhost sub_str]<span class="comment"># echo $&#123;vars:?&quot;vars是空值！！&quot;&#125;</span></span><br><span class="line">-bash: vars: vars是空值！！</span><br></pre></td></tr></table></figure><ol start="4"><li>当变量为<strong>空</strong>，<strong>什么也不做</strong>；当变量<strong>非空</strong>，<strong>返回word</strong>字符串</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;vars:+word&#125;</span></span><br></pre></td></tr></table></figure><p>演示</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># vars=#空</span></span><br><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># echo $vars#空</span></span><br><span class="line"><span class="meta">#null</span></span><br><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># vars=123#非空</span></span><br><span class="line">[root<span class="symbol">@localhost</span> sub_str]<span class="meta"># echo $&#123;vars:+word&#125;</span></span><br><span class="line">word<span class="meta">#非空</span></span><br></pre></td></tr></table></figure><h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><p><strong>数据备份、删除过期数据的脚本</strong></p><p>使用的命令及参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">find xargs 搜索且删除</span><br><span class="line">find &lt;需要搜索的目录&gt; </span><br><span class="line">-name &lt;要搜索的文件名&gt; </span><br><span class="line">-<span class="built_in">type</span> &lt;文件类型&gt; </span><br><span class="line">-mtime +7 <span class="comment">#超过七天的</span></span><br><span class="line">xargs <span class="built_in">rm</span> -f <span class="comment">#交给xargs处理</span></span><br></pre></td></tr></table></figure><p>del_data.sh脚本，删除某个数据文件夹的备份文件，文件日期超过7天</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find <span class="variable">$&#123;dir_path:=/xxx/xxx/&#125;</span> -name <span class="string">&#x27;*.tar.gz&#x27;</span> -<span class="built_in">type</span> f -mtime +7|xargs <span class="built_in">rm</span> -f</span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用:=是为了解决dir_path不存在时的情况</span><br><span class="line">若不存在，则会在当前目录下进行搜索删除！</span><br></pre></td></tr></table></figure><h1 id="父子shell拓展"><a href="#父子shell拓展" class="headerlink" title="父子shell拓展"></a>父子shell拓展</h1><h2 id="父shell概念"><a href="#父shell概念" class="headerlink" title="父shell概念"></a>父shell概念</h2><p>pstree看到如下结果，就是父shell环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pstree</span><br><span class="line">├─sshd───sshd───bash───pstree</span><br></pre></td></tr></table></figure><h2 id="ps进程管理命令"><a href="#ps进程管理命令" class="headerlink" title="ps进程管理命令"></a><a href="https://blog.csdn.net/u014565127/article/details/107825714">ps进程管理命令</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ps -ef</span><br><span class="line"><span class="comment">#-f 显示UID、PID、PPID</span></span><br><span class="line"><span class="comment">#-e 列出所有进程信息，如同-A选项</span></span><br><span class="line"><span class="comment">#--forest</span></span><br></pre></td></tr></table></figure><h2 id="创建进程列表（创建子shell）"><a href="#创建进程列表（创建子shell）" class="headerlink" title="创建进程列表（创建子shell）"></a>创建进程列表（创建子shell）</h2><p><strong>在小括号中使用命令</strong></p><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ls;cd /tmp/;pwd</span></span><br><span class="line">anaconda-ks.cfg  blog  hello.sh  node-v16.16.0-linux-x64  sub_str</span><br><span class="line">/tmp</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">[root@localhost ~]<span class="comment"># (ls;cd /tmp/;pwd)</span></span><br><span class="line">anaconda-ks.cfg  blog  hello.sh  node-v16.16.0-linux-x64  sub_str</span><br><span class="line">/tmp</span><br></pre></td></tr></table></figure><p>通过观察发现，使用不使用小括号和使用小括号执行的结果并没有区别，那么创建进程列表有什么作用呢？</p><p><strong>↓↓↓请结合下一节↓↓↓</strong></p><h2 id="检测是否在子shell环境中"><a href="#检测是否在子shell环境中" class="headerlink" title="检测是否在子shell环境中"></a>检测是否在子shell环境中</h2><p>Linux默认有关shell的变量BASH_SUBSHELL</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BASH_SUBSHELL</span><br></pre></td></tr></table></figure><p>取值</p><ul><li>0  表示当前处于父shell</li><li>1  表示当前处于子shell1，可以理解成儿子</li><li>2  表示当前处于子shell2，可以理解成孙子</li><li>以此类推</li></ul><p><strong>注意理解，这里所指的父shell、子shell是相对的！！</strong></p><p>举个例子说明</p><p>首先创建若干个子shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br><span class="line">bash</span><br><span class="line">bash</span><br><span class="line">sh</span><br><span class="line">ps -ef f <span class="comment">#查看进程树</span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">root</span>       <span class="number">1565</span>   <span class="number">1038</span>  <span class="number">0</span> <span class="number">21</span>:<span class="number">22</span> ?        Ss     <span class="number">0</span>:<span class="number">00</span>  \_ sshd: root@pts/<span class="number">0</span></span><br><span class="line"><span class="attribute">root</span>       <span class="number">1572</span>   <span class="number">1565</span>  <span class="number">0</span> <span class="number">21</span>:<span class="number">22</span> pts/<span class="number">0</span>    Ss     <span class="number">0</span>:<span class="number">00</span>  |   \_ -bash</span><br><span class="line"><span class="attribute">root</span>       <span class="number">1806</span>   <span class="number">1572</span>  <span class="number">0</span> <span class="number">22</span>:<span class="number">42</span> pts/<span class="number">0</span>    S      <span class="number">0</span>:<span class="number">00</span>  |       \_ bash</span><br><span class="line"><span class="attribute">root</span>       <span class="number">1817</span>   <span class="number">1806</span>  <span class="number">0</span> <span class="number">22</span>:<span class="number">42</span> pts/<span class="number">0</span>    S      <span class="number">0</span>:<span class="number">00</span>  |           \_ bash</span><br><span class="line"><span class="attribute">root</span>       <span class="number">1828</span>   <span class="number">1817</span>  <span class="number">0</span> <span class="number">22</span>:<span class="number">42</span> pts/<span class="number">0</span>    S      <span class="number">0</span>:<span class="number">00</span>  |               \_ sh</span><br><span class="line"><span class="attribute">root</span>       <span class="number">1832</span>   <span class="number">1828</span>  <span class="number">0</span> <span class="number">22</span>:<span class="number">42</span> pts/<span class="number">0</span>    R+     <span class="number">0</span>:<span class="number">00</span>  |                   \_ ps</span><br></pre></td></tr></table></figure><p>观察进程树结果，按照我们的理解，按理来说目前处在sh子shell中，变量BASH_SUBSHELL的值应该为非0，即处在子shell中，但是我们在sh中打印变量值发现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh-4.2<span class="comment"># echo $BASH_SUBSHELL</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><p>结果表明，当前我们处在父shell</p><p>！！！！what the hell?？</p><p>这就是所谓相对当前环境来说的含义把！有点难理解。</p><p><strong>如何让BASH_SUBSHELL取值为非0？</strong></p><p>这时候就用到上面“<em><strong>创建进程列表</strong></em>”的知识了！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="built_in">ls</span>;<span class="built_in">cd</span> /tmp/;<span class="built_in">pwd</span>;<span class="built_in">echo</span> <span class="variable">$BASH_SUBSHELL</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sh-4.2<span class="comment"># (ls;cd /tmp/;pwd;echo $BASH_SUBSHELL)</span></span><br><span class="line">anaconda-ks.cfg  blog  hello.sh  node-v16.16.0-linux-x64  sub_str</span><br><span class="line">/tmp</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>我们可以通过小括号的嵌套实现多个子shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sh-4.2<span class="comment"># (ls;cd /tmp/;pwd;(echo $BASH_SUBSHELL))</span></span><br><span class="line">anaconda-ks.cfg  blog  hello.sh  node-v16.16.0-linux-x64  sub_str</span><br><span class="line">/tmp</span><br><span class="line">2</span><br><span class="line"><span class="comment">################</span></span><br><span class="line">sh-4.2<span class="comment"># (ls;(cd /tmp/;pwd;(echo $BASH_SUBSHELL)))</span></span><br><span class="line">anaconda-ks.cfg  blog  hello.sh  node-v16.16.0-linux-x64  sub_str</span><br><span class="line">/tmp</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h1 id="内置命令、外置命令"><a href="#内置命令、外置命令" class="headerlink" title="内置命令、外置命令"></a>内置命令、外置命令</h1><blockquote><p>内置命令：系统启动时就载入内存，常驻内存，执行效率高，但占用资源</p><p>外置命令：系统从硬盘中读取程序文件，再读入内存加载</p></blockquote><p>使用type命令可以查询命令类型</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span> &lt;命令&gt;</span><br></pre></td></tr></table></figure><p>使用实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># which cd</span></span><br><span class="line">/usr/bin/cd</span><br><span class="line">[root@localhost ~]<span class="comment"># type ls</span></span><br><span class="line"><span class="built_in">ls</span> 是 `<span class="built_in">ls</span> --color=auto<span class="string">&#x27; 的别名</span></span><br><span class="line"><span class="string">[root@localhost ~]# type pwd</span></span><br><span class="line"><span class="string">pwd 是 shell 内嵌</span></span><br></pre></td></tr></table></figure><h2 id="外置命令"><a href="#外置命令" class="headerlink" title="外置命令"></a>外置命令</h2><blockquote><p>外置命令，一般为自己下载的文件系统命令，处于bash shell之外的程序</p><p>特点：一定会开启子进程进行执行</p></blockquote><p>一般外置命令所处目录为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/bin</span><br><span class="line">/usr/bin</span><br><span class="line">/sbin</span><br><span class="line">/usr/sbin</span><br></pre></td></tr></table></figure><p>注意：并非说内置命令不能存储在以上目录中（使用which &lt;命令&gt; 进行查询命令所处文件夹）</p><blockquote><p>如:cd命令也存储在&#x2F;usr&#x2F;bin&#x2F;目录下</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># type cd</span></span><br><span class="line"><span class="built_in">cd</span> 是 shell 内嵌</span><br><span class="line">[root@localhost ~]<span class="comment"># which cd</span></span><br><span class="line">/usr/bin/cd</span><br></pre></td></tr></table></figure><h2 id="内置命令"><a href="#内置命令" class="headerlink" title="内置命令"></a>内置命令</h2><blockquote><p>内置命令与shell是一体的</p><p>特点：内置命令不会产生子进程进行执行</p></blockquote><p>查询所有内置命令的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compgen -b</span><br></pre></td></tr></table></figure><h1 id="复习与内容补充"><a href="#复习与内容补充" class="headerlink" title="复习与内容补充"></a>复习与内容补充</h1><h2 id="如何在脚本中输出“-”不被识别？"><a href="#如何在脚本中输出“-”不被识别？" class="headerlink" title="如何在脚本中输出“$”不被识别？"></a>如何在脚本中输出“$”不被识别？</h2><blockquote><p>法一</p></blockquote><p>使用转义符“\”</p><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo &quot;$123&quot;</span></span><br><span class="line">23</span><br><span class="line">[root@localhost ~]<span class="comment"># echo &quot;\$123&quot;</span></span><br><span class="line"><span class="variable">$123</span></span><br></pre></td></tr></table></figure><blockquote><p>法二</p></blockquote><p>使用单引号</p><p>实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># echo &#x27;$123&#x27;</span></span><br><span class="line"><span class="variable">$123</span></span><br></pre></td></tr></table></figure><h2 id="shell特性"><a href="#shell特性" class="headerlink" title="shell特性"></a>shell特性</h2><blockquote><p>能够在命令执行结果中，再次提出结果</p></blockquote><h2 id="shell特殊符号区分"><a href="#shell特殊符号区分" class="headerlink" title="shell特殊符号区分"></a>shell特殊符号区分</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;vars&#125;</span><span class="comment">#获取vars值</span></span><br><span class="line">$(vars)<span class="comment">#执行括号中的命令，并输出结果值</span></span><br><span class="line">()<span class="comment">#开启子shell执行命令，并输出结果值</span></span><br><span class="line">``<span class="comment">#执行反引号中的结果，并输出结果值</span></span><br><span class="line"><span class="variable">$vars</span><span class="comment">#获取vars值</span></span><br></pre></td></tr></table></figure><h1 id="Shell-算术运算符一览表"><a href="#Shell-算术运算符一览表" class="headerlink" title="Shell 算术运算符一览表"></a>Shell 算术运算符一览表</h1><table><thead><tr><th>算术运算符</th><th>说明&#x2F;含义</th></tr></thead><tbody><tr><td>+、-</td><td>加法（或正号）、减法（或负号）</td></tr><tr><td>*、&#x2F;、%</td><td>乘法、除法、取余（取模）</td></tr><tr><td>**</td><td>幂运算</td></tr><tr><td>++、–</td><td>自增和自减，可以放在变量的前面也可以放在变量的后面</td></tr><tr><td>!、&amp;&amp;、||</td><td>逻辑非（取反）、逻辑与（and）、逻辑或（or）</td></tr><tr><td>&lt;、&lt;&#x3D;、&gt;、&gt;&#x3D;</td><td>比较符号（小于、小于等于、大于、大于等于）</td></tr><tr><td>&#x3D;&#x3D;、!&#x3D;、&#x3D;</td><td>比较符号（相等、不相等；对于字符串，&#x3D; 也可以表示相当于）</td></tr><tr><td>&lt;&lt;、&gt;&gt;</td><td>向左移位、向右移位</td></tr><tr><td>~、|、 &amp;、^</td><td>按位取反、按位或、按位与、按位异或</td></tr><tr><td>&#x3D;、+&#x3D;、-&#x3D;、*&#x3D;、&#x2F;&#x3D;、%&#x3D;</td><td>赋值运算符，例如 a+&#x3D;1 相当于 a&#x3D;a+1，a-&#x3D;1 相当于 a&#x3D;a-1</td></tr></tbody></table><h1 id="shell数值计算"><a href="#shell数值计算" class="headerlink" title="shell数值计算"></a><a href="https://www.runoob.com/linux/linux-shell-basic-operators.html">shell数值计算</a></h1><p>Shell 和其他编程语言一样，支持多种运算符，包括：</p><ul><li>算数运算符</li><li>关系运算符</li><li>布尔运算符</li><li>字符串运算符</li><li>文件测试运算符</li></ul><p>原生bash不支持简单的数学运算，但是可以通过其他命令来实现，例如 awk 和 expr，expr 最常用。</p><p><strong>shell的一些基础命令，只支持整数运算，小数的计算需要如bc的命令才能支持！</strong></p><p>expr 是一款表达式计算工具，使用它能完成表达式的求值操作。</p><p>例如，两个数相加(<strong>注意使用的是反引号 *<em>&#96;*</em> 而不是单引号 *<em>‘*</em></strong>)：</p><h2 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h2><blockquote><p>实现数值运算的方法</p></blockquote><h3 id="双小括号操作"><a href="#双小括号操作" class="headerlink" title="双小括号操作"></a><a href="http://c.biancheng.net/view/2480.html#:~:text=%E5%8F%8C%E5%B0%8F%E6%8B%AC%E5%8F%B7%20%28%28%29%29%20%E6%98%AF%20Bash,Shell%20%E4%B8%AD%E4%B8%93%E9%97%A8%E7%94%A8%E6%9D%A5%E8%BF%9B%E8%A1%8C%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97%E7%9A%84%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%AE%83%E7%9A%84%E6%95%88%E7%8E%87%E5%BE%88%E9%AB%98%EF%BC%8C%E5%86%99%E6%B3%95%E7%81%B5%E6%B4%BB%EF%BC%8C%E6%98%AF%E4%BC%81%E4%B8%9A%E8%BF%90%E7%BB%B4%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%BF%90%E7%AE%97%E5%91%BD%E4%BB%A4%E3%80%82%20%E6%B3%A8%E6%84%8F%EF%BC%9A%20%28%28%29%29%20%E5%8F%AA%E8%83%BD%E8%BF%9B%E8%A1%8C%E6%95%B4%E6%95%B0%E8%BF%90%E7%AE%97%EF%BC%8C%E4%B8%8D%E8%83%BD%E5%AF%B9%E5%B0%8F%E6%95%B0%EF%BC%88%E6%B5%AE%E7%82%B9%E6%95%B0%EF%BC%89%E6%88%96%E8%80%85%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BF%9B%E8%A1%8C%E8%BF%90%E7%AE%97%E3%80%82">双小括号操作</a></h3><table><thead><tr><th>运算操作符&#x2F;运算命令</th><th>说明</th></tr></thead><tbody><tr><td>((a&#x3D;10+66))((b&#x3D;a-15)) ((c&#x3D;a+b))</td><td>这种写法可以在计算完成后给变量赋值。以 ((b&#x3D;a-15)) 为例，即将 a-15 的运算结果赋值给变量 c。  注意，使用变量时不用加<code>$</code>前缀，(( )) 会自动解析变量名。</td></tr><tr><td>a&#x3D;$((10+66) b&#x3D;$((a-15)) c&#x3D;$((a+b))</td><td>可以在 (( )) 前面加上<code>$</code>符号获取 (( )) 命令的执行结果，也即获取整个表达式的值。以 c&#x3D;$((a+b)) 为例，即将 a+b 这个表达式的运算结果赋值给变量 c。  注意，类似 c&#x3D;((a+b)) 这样的写法是错误的，不加<code>$</code>就不能取得表达式的结果。</td></tr><tr><td>((a&gt;7 &amp;&amp; b&#x3D;&#x3D;c))</td><td>(( )) 也可以进行逻辑运算，在 if 语句中常会使用逻辑运算。</td></tr><tr><td>echo $((a+10))</td><td>需要立即输出表达式的运算结果时，可以在 (( )) 前面加<code>$</code>符号。</td></tr><tr><td>((a&#x3D;3+5, b&#x3D;a+10))</td><td>对多个表达式同时进行计算。</td></tr></tbody></table><h3 id="expr-命令操作"><a href="#expr-命令操作" class="headerlink" title="expr 命令操作"></a>expr 命令操作</h3><p>下表列出了常用的算术运算符，假定变量 a 为 10，变量 b 为 20：</p><table><thead><tr><th align="left">运算符</th><th align="left">说明</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">+</td><td align="left">加法</td><td align="left"><code>expr $a + $b</code> 结果为 30。</td></tr><tr><td align="left">-</td><td align="left">减法</td><td align="left"><code>expr $a - $b</code> 结果为 -10。</td></tr><tr><td align="left">*</td><td align="left">乘法</td><td align="left"><code>expr $a \* $b</code> 结果为  200。</td></tr><tr><td align="left">&#x2F;</td><td align="left">除法</td><td align="left"><code>expr $b / $a</code> 结果为 2。</td></tr><tr><td align="left">%</td><td align="left">取余</td><td align="left"><code>expr $b % $a</code> 结果为 0。</td></tr><tr><td align="left">&#x3D;</td><td align="left">赋值</td><td align="left">a&#x3D;$b 把变量 b 的值赋给 a。</td></tr><tr><td align="left">&#x3D;&#x3D;</td><td align="left">相等。用于比较两个数字，相同则返回 true。</td><td align="left">[ $a &#x3D;&#x3D; $b ] 返回 false。</td></tr><tr><td align="left">!&#x3D;</td><td align="left">不相等。用于比较两个数字，不相同则返回 true。</td><td align="left">[ $a !&#x3D; $b ] 返回 true。</td></tr></tbody></table><p><strong>注意：</strong>条件表达式要放在方括号之间，并且要有空格，例如: <strong>[$a&#x3D;&#x3D;$b]</strong> 是错误的，必须写成 **[ $a &#x3D;&#x3D; $b ]**。</p><h2 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h2><p>关系运算符只支持数字，不支持字符串，除非字符串的值是数字。</p><p>下表列出了常用的关系运算符，假定变量 a 为 10，变量 b 为 20：</p><table><thead><tr><th align="left">运算符</th><th align="left">说明</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">-eq</td><td align="left">检测两个数是否相等，相等返回 true。</td><td align="left">[ $a -eq $b ] 返回 false。</td></tr><tr><td align="left">-ne</td><td align="left">检测两个数是否不相等，不相等返回 true。</td><td align="left">[ $a -ne $b ] 返回 true。</td></tr><tr><td align="left">-gt</td><td align="left">检测左边的数是否大于右边的，如果是，则返回 true。</td><td align="left">[ $a -gt $b ] 返回 false。</td></tr><tr><td align="left">-lt</td><td align="left">检测左边的数是否小于右边的，如果是，则返回 true。</td><td align="left">[ $a -lt $b ] 返回 true。</td></tr><tr><td align="left">-ge</td><td align="left">检测左边的数是否大于等于右边的，如果是，则返回 true。</td><td align="left">[ $a -ge $b ] 返回 false。</td></tr><tr><td align="left">-le</td><td align="left">检测左边的数是否小于等于右边的，如果是，则返回 true。</td><td align="left">[ $a -le $b ] 返回 true。</td></tr></tbody></table><h2 id="布尔运算符"><a href="#布尔运算符" class="headerlink" title="布尔运算符"></a>布尔运算符</h2><p>下表列出了常用的布尔运算符，假定变量 a 为 10，变量 b 为 20：</p><table><thead><tr><th align="left">运算符</th><th align="left">说明</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">!</td><td align="left">非运算，表达式为 true 则返回 false，否则返回 true。</td><td align="left">[ ! false ] 返回 true。</td></tr><tr><td align="left">-o</td><td align="left">或运算，有一个表达式为 true 则返回 true。</td><td align="left">[ $a -lt 20 -o $b -gt 100 ] 返回 true。</td></tr><tr><td align="left">-a</td><td align="left">与运算，两个表达式都为 true 才返回 true。</td><td align="left">[ $a -lt 20 -a $b -gt 100 ] 返回 false。</td></tr></tbody></table><h2 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h2><p>以下介绍 Shell 的逻辑运算符，假定变量 a 为 10，变量 b 为 20:</p><table><thead><tr><th align="left">运算符</th><th align="left">说明</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">&amp;&amp;</td><td align="left">逻辑的 AND</td><td align="left">[[ $a -lt 100 &amp;&amp; $b -gt 100 ]] 返回 false</td></tr><tr><td align="left">||</td><td align="left">逻辑的 OR</td><td align="left">[[ $a -lt 100 || $b -gt 100 ]] 返回 true</td></tr></tbody></table><h2 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h2><p>下表列出了常用的字符串运算符，假定变量 a 为 “abc”，变量 b 为 “efg”：</p><table><thead><tr><th align="left">运算符</th><th align="left">说明</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">&#x3D;</td><td align="left">检测两个字符串是否相等，相等返回 true。</td><td align="left">[ $a &#x3D; $b ] 返回 false。</td></tr><tr><td align="left">!&#x3D;</td><td align="left">检测两个字符串是否不相等，不相等返回 true。</td><td align="left">[ $a !&#x3D; $b ] 返回 true。</td></tr><tr><td align="left">-z</td><td align="left">检测字符串长度是否为0，为0返回 true。</td><td align="left">[ -z $a ] 返回 false。</td></tr><tr><td align="left">-n</td><td align="left">检测字符串长度是否不为 0，不为 0 返回 true。</td><td align="left">[ -n “$a” ] 返回 true。</td></tr><tr><td align="left">$</td><td align="left">检测字符串是否不为空，不为空返回 true。</td><td align="left">[ $a ] 返回 true。</td></tr></tbody></table><h2 id="文件测试运算符"><a href="#文件测试运算符" class="headerlink" title="文件测试运算符"></a>文件测试运算符</h2><p>文件测试运算符用于检测 Unix 文件的各种属性。</p><p>属性检测描述如下：</p><table><thead><tr><th align="left">操作符</th><th align="left">说明</th><th align="left">举例</th></tr></thead><tbody><tr><td align="left">-b file</td><td align="left">检测文件是否是块设备文件，如果是，则返回 true。</td><td align="left">[ -b $file ] 返回 false。</td></tr><tr><td align="left">-c file</td><td align="left">检测文件是否是字符设备文件，如果是，则返回 true。</td><td align="left">[ -c $file ] 返回 false。</td></tr><tr><td align="left">-d file</td><td align="left">检测文件是否是目录，如果是，则返回 true。</td><td align="left">[ -d $file ] 返回 false。</td></tr><tr><td align="left">-f file</td><td align="left">检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。</td><td align="left">[ -f $file ] 返回 true。</td></tr><tr><td align="left">-g file</td><td align="left">检测文件是否设置了 SGID 位，如果是，则返回 true。</td><td align="left">[ -g $file ] 返回 false。</td></tr><tr><td align="left">-k file</td><td align="left">检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。</td><td align="left">[ -k $file ] 返回 false。</td></tr><tr><td align="left">-p file</td><td align="left">检测文件是否是有名管道，如果是，则返回 true。</td><td align="left">[ -p $file ] 返回 false。</td></tr><tr><td align="left">-u file</td><td align="left">检测文件是否设置了 SUID 位，如果是，则返回 true。</td><td align="left">[ -u $file ] 返回 false。</td></tr><tr><td align="left">-r file</td><td align="left">检测文件是否可读，如果是，则返回 true。</td><td align="left">[ -r $file ] 返回 true。</td></tr><tr><td align="left">-w file</td><td align="left">检测文件是否可写，如果是，则返回 true。</td><td align="left">[ -w $file ] 返回 true。</td></tr><tr><td align="left">-x file</td><td align="left">检测文件是否可执行，如果是，则返回 true。</td><td align="left">[ -x $file ] 返回 true。</td></tr><tr><td align="left">-s file</td><td align="left">检测文件是否为空（文件大小是否大于0），不为空返回 true。</td><td align="left">[ -s $file ] 返回 true。</td></tr><tr><td align="left">-e file</td><td align="left">检测文件（包括目录）是否存在，如果是，则返回 true。</td><td align="left">[ -e $file ] 返回 true。</td></tr></tbody></table><p>其他检查符：</p><ul><li><strong>-S</strong>: 判断某文件是否 socket。</li><li><strong>-L</strong>: 检测文件是否存在并且是一个符号链接。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本学习 Day2</title>
      <link href="/posts/2454393059/"/>
      <url>/posts/2454393059/</url>
      
        <content type="html"><![CDATA[<h1 id="续shell脚本学习Day1"><a href="#续shell脚本学习Day1" class="headerlink" title="续shell脚本学习Day1"></a>续shell脚本学习Day1</h1><h2 id="检查系统环境变量的命令"><a href="#检查系统环境变量的命令" class="headerlink" title="检查系统环境变量的命令"></a>检查系统环境变量的命令</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span></span><br></pre></td></tr></table></figure><p> 输出所有变量（全局、局部）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">env</span></span><br></pre></td></tr></table></figure><p> 只显示全局变量</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br></pre></td></tr></table></figure><p> 输出所有变量，如同set</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span></span><br></pre></td></tr></table></figure><p> 显示和设置环境变量的值</p><h2 id="撤销环境变量"><a href="#撤销环境变量" class="headerlink" title="撤销环境变量"></a>撤销环境变量</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unset <span class="tag">&lt;<span class="name">变量名</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="设置只读变量"><a href="#设置只读变量" class="headerlink" title="设置只读变量"></a>设置只读变量</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readonly <span class="tag">&lt;<span class="name">变量名</span>&gt;</span>=<span class="tag">&lt;<span class="name">变量值</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只读变量只能赋一次值；</p><p>当shell结束时，只读变量失效。</p><h2 id="系统保留环境变量关键字"><a href="#系统保留环境变量关键字" class="headerlink" title="系统保留环境变量关键字"></a>系统保留环境变量关键字</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> |awk -F <span class="string">&#x27;[ :=]&#x27;</span> <span class="string">&#x27;&#123;print <span class="subst">$3</span>&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>利用awk对export取出的环境变量结果进行格式化</p><h2 id="bash多命令执行"><a href="#bash多命令执行" class="headerlink" title="bash多命令执行"></a>bash多命令执行</h2><p>使用分号；分隔</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> /data/;<span class="built_in">cd</span> /tmp/</span><br></pre></td></tr></table></figure><h1 id="shell变量之特殊变量"><a href="#shell变量之特殊变量" class="headerlink" title="shell变量之特殊变量"></a>shell变量之特殊变量</h1><p>shell的特殊变量，用在如脚本，函数传递参数使用</p><ul><li>获取shell脚本文件名，以及脚本路径</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">$0</span> </span></span><br></pre></td></tr></table></figure><ul><li>获取shell脚本的第n个参数，$1，$2，$9，大于9则写${10}，参数空格隔开</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">$1</span></span></span><br><span class="line"><span class="meta"><span class="keyword">$2</span></span></span><br><span class="line"><span class="meta"><span class="keyword">$9</span></span></span><br><span class="line"><span class="symbol">$</span>&#123;<span class="number">10</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>获取<strong>执行的shell脚本后的参数总个数</strong></li></ul><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span><span class="comment">#</span></span><br></pre></td></tr></table></figure><ul><li><strong>获取shell脚本所有参数</strong>，不加引号等同于$@作用，加上引号时，接收所有参数为单个字符串</li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$*</span></span><br></pre></td></tr></table></figure><ul><li><strong>获取shell脚本所有参数</strong>，不加引号等同于$#，加上引号时，接收所有参数为独立字符串</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$@</span></span><br></pre></td></tr></table></figure><h2 id="特殊状态变量"><a href="#特殊状态变量" class="headerlink" title="特殊状态变量"></a>特殊状态变量</h2><ul><li>上一次命令执行状态返回值，0正常，非0失败</li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$?</span></span><br></pre></td></tr></table></figure><p>实例</p><p>脚本控制返回值</p><p>首先编写sv1.sh脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">[ <span class="variable">$#</span> -ne 2 ]&amp;&amp;&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;must be two args&quot;</span></span><br><span class="line"><span class="built_in">echo</span> ‘$? <span class="built_in">return</span> 119’</span><br><span class="line"><span class="built_in">exit</span> 119 <span class="comment">#终止程序运行且返回119状态码，提供给当前shell的$?变量，若在函数中可以使用return 119</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$? return 0&#x27;</span></span><br></pre></td></tr></table></figure><p>解释</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span><span class="comment"># 执行的shell脚本后的参数总数</span></span><br><span class="line"><span class="operator">-ne</span> 不等于的情况 </span><br><span class="line">&amp;&amp; 与</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@192</span> ~]<span class="comment"># bash sv1.sh x y</span></span><br><span class="line"><span class="variable">$?</span> <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">[root<span class="variable">@192</span> ~]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@192</span> ~]<span class="comment"># bash sv1.sh x y z</span></span><br><span class="line">must be two args</span><br><span class="line">‘<span class="number">0</span> <span class="keyword">return</span> <span class="number">119</span>’</span><br><span class="line">[root<span class="variable">@192</span> ~]<span class="comment"># echo $?</span></span><br><span class="line"><span class="number">119</span></span><br></pre></td></tr></table></figure><ul><li>当前shell脚本的进程号</li></ul><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span><span class="symbol">$</span></span><br></pre></td></tr></table></figure><p>实例一</p><p>编写sv2.sh脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;$$&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># bash sv2.sh</span></span><br><span class="line"><span class="number">1725</span></span><br></pre></td></tr></table></figure><ul><li>上一次后台进程的PID</li></ul><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$!</span></span><br></pre></td></tr></table></figure><p>实例</p><p>拓展</p><p>怎么让程序后台执行</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup &lt;*.sh/程序&gt; &amp; <span class="number">1</span>&gt; <span class="regexp">/dev/</span><span class="literal">null</span></span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># nohup ping baidu.com &amp; 1&gt; /dev/null</span></span><br><span class="line">[<span class="number">1</span>] <span class="number">1729</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># nohup: 忽略输入并把输出追加到<span class="string">&quot;nohup.out&quot;</span></span></span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># ps -ef|grep ping</span></span><br><span class="line">root       <span class="number">1729</span>   <span class="number">1670</span>  <span class="number">0</span> <span class="number">20</span>:<span class="number">42</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> <span class="built_in">ping</span> baidu.com</span><br><span class="line">root       <span class="number">1731</span>   <span class="number">1670</span>  <span class="number">0</span> <span class="number">20</span>:<span class="number">43</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep --color=auto <span class="built_in">ping</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $!</span></span><br><span class="line"><span class="number">1729</span></span><br></pre></td></tr></table></figure><ul><li>上一次执行命令的最后一个参数</li></ul><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$_</span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="variable">@192</span> ~]<span class="comment"># bash sv1.sh x y</span></span><br><span class="line"><span class="variable">$?</span> <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">[root<span class="variable">@192</span> ~]<span class="comment"># echo $_</span></span><br><span class="line">y</span><br></pre></td></tr></table></figure><h1 id="shell子串"><a href="#shell子串" class="headerlink" title="shell子串"></a>shell子串</h1><h2 id="bash一些的基础内置命令"><a href="#bash一些的基础内置命令" class="headerlink" title="bash一些的基础内置命令"></a>bash一些的基础内置命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="built_in">eval</span> </span><br><span class="line"><span class="built_in">exec</span></span><br><span class="line"><span class="built_in">export</span></span><br><span class="line"><span class="built_in">read</span></span><br><span class="line"><span class="built_in">shift</span></span><br></pre></td></tr></table></figure><h2 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h2><p>参数</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-n 不换行输出</span><br><span class="line">-e 解析字符串中的特殊符号</span><br><span class="line"></span><br><span class="line"><span class="string">\n</span> 换行</span><br><span class="line"><span class="string">\r</span> 回车</span><br><span class="line"><span class="string">\t</span> 指标符（四个空格）</span><br><span class="line"><span class="string">\b</span> 退格</span><br></pre></td></tr></table></figure><h2 id="eval命令"><a href="#eval命令" class="headerlink" title="eval命令"></a>eval命令</h2><p>执行多个命令</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# <span class="keyword">ls</span>;<span class="keyword">cd</span> /tmp/</span><br><span class="line">anaconda-ks.cfg  hello.<span class="keyword">sh</span>                 nohup.<span class="keyword">out</span>  sv2.<span class="keyword">sh</span></span><br><span class="line">blog             node-v16.16.0-linux-x64  sv1.<span class="keyword">sh</span>     x.<span class="keyword">sh</span></span><br><span class="line">[root@192 tmp]# <span class="keyword">cd</span> /root</span><br><span class="line"></span><br><span class="line">[root@192 ~]# eval <span class="keyword">ls</span>;<span class="keyword">cd</span> /tmp/</span><br><span class="line">anaconda-ks.cfg  hello.<span class="keyword">sh</span>                 nohup.<span class="keyword">out</span>  sv2.<span class="keyword">sh</span></span><br><span class="line">blog             node-v16.16.0-linux-x64  sv1.<span class="keyword">sh</span>     x.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>省略eval直接用分号；效果相同</p><h2 id="exec命令"><a href="#exec命令" class="headerlink" title="exec命令"></a>exec命令</h2><p>不创建子进程，执行后续命令，且执行完毕后，自动exit</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@192 ~]# <span class="keyword">exec</span> <span class="keyword">date</span></span><br><span class="line"><span class="number">2022</span>年 <span class="number">07</span>月 <span class="number">14</span>日 星期四 <span class="number">21</span>:<span class="number">06</span>:<span class="number">09</span> CST</span><br></pre></td></tr></table></figure><h1 id="shell子串的花式用法"><a href="#shell子串的花式用法" class="headerlink" title="shell子串的花式用法"></a>shell子串的花式用法</h1><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;</span>&lt;变量&gt;&#125;返回变量值</span><br><span class="line"><span class="variable">$&#123;</span><span class="comment">#&lt;变量&gt;&#125;返回变量长度，字符长度</span></span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量<span class="symbol">:&lt;start&gt;</span>&#125;返回变量start数值之后的字符</span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量<span class="symbol">:&lt;start&gt;</span><span class="symbol">:&lt;length&gt;</span>&#125;返回变量start数值之后的字符，字符长度为length</span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量&gt;<span class="comment">#word&#125;从变量开头删除最短匹配的word子串</span></span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量&gt;<span class="comment">##word&#125;从变量开头删除最长匹配的word子串</span></span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量&gt;%word&#125;从变量结尾删除最短的word子串</span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量&gt;%%word&#125;从变量结尾删除最长的word子串</span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量&gt;/pattern/string&#125;用string代替第一个匹配到的pattern</span><br><span class="line"><span class="variable">$&#123;</span>&lt;变量&gt;//pattern/string&#125;用string代替所有匹配到的pattern</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a><a href="https://www.codeleading.com/article/20691590413/">实例</a></h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">name</span><span class="operator">=</span><span class="number">123</span>abc</span><br></pre></td></tr></table></figure><p>返回变量值</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name&#125;</span></span><br><span class="line"><span class="number">123</span>abc</span><br></pre></td></tr></table></figure><p>返回变量长度，字符长度</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;#name&#125;</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><p>返回变量start数值<strong>之后</strong>的字符</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name:3&#125;</span></span><br><span class="line">abc</span><br></pre></td></tr></table></figure><p>返回变量start数值之后的字符，字符长度为length</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name:2:1&#125;</span></span><br><span class="line"><span class="number">3</span>a</span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name:3:2&#125;</span></span><br><span class="line">ab</span><br></pre></td></tr></table></figure><p>从变量开头删除最短匹配的word子串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># name=111bbb333</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name#1*b&#125;</span></span><br><span class="line">bb333</span><br></pre></td></tr></table></figure><p>从变量开头删除最长匹配的word子串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># name=111bbb333</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name##1*b&#125;</span></span><br><span class="line"><span class="number">333</span></span><br></pre></td></tr></table></figure><p>从变量结尾删除最短的word子串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># name=111bbb333</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name%b*3&#125;</span></span><br><span class="line"><span class="number">111</span>bb</span><br></pre></td></tr></table></figure><p>从变量结尾删除最长的word子串</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># name=111bbb333</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name%%b*3&#125;</span></span><br><span class="line"><span class="number">111</span></span><br></pre></td></tr></table></figure><p>用string代替第一个匹配到的pattern</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># name=111bbb333</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name/bbb/BBB&#125;</span></span><br><span class="line"><span class="number">111</span>BBB333</span><br></pre></td></tr></table></figure><p>用string代替所有的匹配到的pattern</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># name=111bbb333bbb</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name//bbb/BBB&#125;</span></span><br><span class="line"><span class="number">111</span>BBB333BBB</span><br></pre></td></tr></table></figure><h2 id="计算变量长度的方法"><a href="#计算变量长度的方法" class="headerlink" title="计算变量长度的方法"></a>计算变量长度的方法</h2><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># name=012345</span></span><br><span class="line"><span class="meta">#法1 速度最快</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;#name&#125;</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">#法2</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $&#123;name&#125;|wc -L</span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">#法3</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># expr length <span class="string">&quot;$&#123;name&#125;&quot;</span></span></span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="meta">#法4</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo <span class="string">&quot;$&#123;name&#125;&quot;</span> | awk <span class="string">&#x27;&#123;print length($0)&#125;&#x27;</span></span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><p>参数大写L计算值的字符个数，小写l计算值的行数</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="wc命令参数用法"><a href="#wc命令参数用法" class="headerlink" title="wc命令参数用法"></a>wc命令参数用法</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># cat book.txt</span></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="number">012</span></span><br><span class="line"><span class="number">012</span></span><br><span class="line"><span class="number">01234</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># cat book.txt|wc -l</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># cat book.txt|wc -L</span></span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><h2 id="字符串长度统计方法速度比较"><a href="#字符串长度统计方法速度比较" class="headerlink" title="字符串长度统计方法速度比较"></a>字符串长度统计方法速度比较</h2><p>统计命令执行时长</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">time</span> &lt;命令&gt;</span><br></pre></td></tr></table></figure><p>首先介绍一下for循环的语法</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">for</span> &lt;变量&gt; in &#123;<span class="number">1</span>..<span class="number">100</span>&#125;</span><br><span class="line"><span class="attribute">do</span></span><br><span class="line">    <span class="section">&lt;命令&gt;</span></span><br><span class="line"><span class="attribute">done</span></span><br></pre></td></tr></table></figure><p><em><strong>{1..100}表示1到100的序列</strong></em></p><p><em>通过时长统计命令对前文计算长度的4种方法速度进行对比</em></p><p>法1 使用${<变量>}计算时间</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> &#123;1..3&#125;;<span class="keyword">do</span> <span class="built_in">echo</span> <span class="variable">$num</span>;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@<span class="number">192</span> ~]# <span class="type">time</span> <span class="keyword">for</span> n <span class="keyword">in</span> &#123;<span class="number">1.</span><span class="number">.10000</span>&#125;;<span class="keyword">do</span> <span class="type">char</span>=`seq -s &quot;test&quot; <span class="number">100</span>`;echo $ $&#123;#<span class="type">char</span>&#125; &amp;&gt;/dev/<span class="keyword">null</span>;done</span><br><span class="line"></span><br><span class="line"><span class="type">real</span>    <span class="number">0</span>m12<span class="number">.893</span>s</span><br><span class="line"><span class="keyword">user</span>    <span class="number">0</span>m4<span class="number">.537</span>s</span><br><span class="line">sys     <span class="number">0</span>m9<span class="number">.267</span>s</span><br></pre></td></tr></table></figure><p>法2 使用wc -L命令计算时间</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="number">192</span> ~]# <span class="type">time</span> <span class="keyword">for</span> n <span class="keyword">in</span> &#123;<span class="number">1.</span><span class="number">.10000</span>&#125;;<span class="keyword">do</span> <span class="type">char</span>=`seq -s &quot;test&quot; <span class="number">100</span>`;echo $ $&#123;<span class="type">char</span>&#125; |wc -L &amp;&gt;/dev/<span class="keyword">null</span>;done</span><br><span class="line"></span><br><span class="line"><span class="type">real</span>    <span class="number">0</span>m27<span class="number">.701</span>s</span><br><span class="line"><span class="keyword">user</span>    <span class="number">0</span>m10<span class="number">.556</span>s</span><br><span class="line">sys     <span class="number">0</span>m28<span class="number">.359</span>s</span><br></pre></td></tr></table></figure><p>法3 使用expr的length命令计算</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="number">192</span> ~]# <span class="type">time</span> <span class="keyword">for</span> n <span class="keyword">in</span> &#123;<span class="number">1.</span><span class="number">.10000</span>&#125;;<span class="keyword">do</span> <span class="type">char</span>=`seq -s &quot;test&quot; <span class="number">100</span>`;expr length &quot;$&#123;char&#125;&quot; &amp;&gt;/dev/<span class="keyword">null</span>;done</span><br><span class="line"></span><br><span class="line"><span class="type">real</span>    <span class="number">0</span>m26<span class="number">.460</span>s</span><br><span class="line"><span class="keyword">user</span>    <span class="number">0</span>m7<span class="number">.414</span>s</span><br><span class="line">sys     <span class="number">0</span>m21<span class="number">.406</span>s</span><br></pre></td></tr></table></figure><p>法4 使用awk的计算</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="number">192</span> ~]# <span class="type">time</span> <span class="keyword">for</span> n <span class="keyword">in</span> &#123;<span class="number">1.</span><span class="number">.10000</span>&#125;;<span class="keyword">do</span> <span class="type">char</span>=`seq -s &quot;test&quot; <span class="number">100</span>`;echo $ $&#123;<span class="type">char</span>&#125; |awk <span class="string">&#x27;&#123;print length($0)&#125;&#x27;</span> &amp;&gt;/dev/<span class="keyword">null</span>;done</span><br><span class="line"></span><br><span class="line"><span class="type">real</span>    <span class="number">0</span>m31<span class="number">.735</span>s</span><br><span class="line"><span class="keyword">user</span>    <span class="number">0</span>m9<span class="number">.795</span>s</span><br><span class="line">sys     <span class="number">0</span>m34<span class="number">.187</span>s</span><br></pre></td></tr></table></figure><p><em><strong>shell编程，尽量使用Linux内置的命令，内置的操作和内置的函数，效率最高C语言开发效率最高，尽可能的减少管道符操作</strong></em></p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Butterfly主题美化</title>
      <link href="/posts/2527693789/"/>
      <url>/posts/2527693789/</url>
      
        <content type="html"><![CDATA[<h1 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h1><h1 id="修改鼠标样式"><a href="#修改鼠标样式" class="headerlink" title="修改鼠标样式"></a>修改鼠标样式</h1><p>进入&#x2F;themes&#x2F;butterfly&#x2F;source&#x2F;css&#x2F;目录</p><p>新建mouse.css文件，写入：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/default.cur</span>),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">cursor</span>: <span class="built_in">url</span>(<span class="string">https://cdn.jsdelivr.net/gh/sviptzk/HexoStaticFile@latest/Hexo/img/pointer.cur</span>),</span><br><span class="line">        default;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入&#x2F;themes&#x2F;butterfly&#x2F;目录</p><p>在_config.yml文件中，Inject处的head:项中添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;/css/mouse.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>即可。</p><hr><h1 id="为Hexo拓展社交图标"><a href="#为Hexo拓展社交图标" class="headerlink" title="为Hexo拓展社交图标"></a>为Hexo拓展社交图标</h1><p><em>以Butterfly主题为例</em></p><p>Hexo Butterfly本身使用Font Awesome库中的图标，但其中不包括中国大陆许多应用，如B站，知乎等等。</p><p>链接：<a href="http://www.fontawesome.com.cn/faicons/">Font Awesome图标库</a></p><p>使用方法：直接在social: 列表中添加，<strong>冒号前</strong>为“class“属性值，<strong>冒号后</strong>为跳转链接，**||**后为。<a href="http://www.fontawesome.com.cn/examples/">参考案例</a></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># social settings (社交圖標設置)</span></span><br><span class="line"><span class="meta"># formal:</span></span><br><span class="line"><span class="meta">#   icon: link || the description</span></span><br><span class="line">social:</span><br><span class="line">   fab fa-github: https:<span class="comment">//github.com/XXX || Github</span></span><br><span class="line">   fab fa-qq: tencent:<span class="comment">//message/?uin=XXX||QQ</span></span><br><span class="line">   iconfont icon-zhihu-circle-fill: https:<span class="comment">//www.zhihu.com/people/XXX||知乎</span></span><br><span class="line">   fa fa-envelope: mailto:XXX@outlook.com || Email</span><br></pre></td></tr></table></figure><hr><p>因此我们可以使用**<a href="https://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2">阿里iconfont图标</a>**，为我们Butterfly主题拓展一些国内常用的社交图标。</p><p>使用方法：</p><ol><li><p>首先进入<a href="https://www.iconfont.cn/home/index?spm=a313x.7781069.1998910419.2">官网</a>注册，登录；</p></li><li><p>搜索找到自己需要的图标后（以知乎为例），点击添加到购物车（鼠标放在图标上会有一个购物车图标）；</p></li><li><p>再点击主页右上角的购物车图标，可以看到自己选的图标，然后点击“添加至项目”（没有项目就新建一个）；</p></li><li><p>在主页上方点击“资源管理”进入我的项目中；</p></li><li><p>点击“下载到本地”；</p></li><li><p>将下载好的文件发送到&#x2F;themes&#x2F;butterfly&#x2F;source&#x2F;css&#x2F;目录下，解压，修改文件夹名为iconfont（压缩包里的文件都放在这个文件夹里）；</p></li><li><p>进入&#x2F;themes&#x2F;butterfly&#x2F;目录下，修改_config.yml文件中的Inject项（使用__config.butterfly.yml配置文件的同学直接修改这个文件就行）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    # - &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;/xxx.css&quot;</span>&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script <span class="attribute">src</span>=<span class="string">&quot;xxxx&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>在head:处添加引用我们下载好的文件（注意换行和空格！）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;/css/iconfont/iconfont.css&quot;</span>&gt;</span><br></pre></td></tr></table></figure><p>可以直接复制下方代码</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject</span></span><br><span class="line"><span class="comment"># Insert the code to head (before &#x27;&lt;/head&gt;&#x27; tag) and the bottom (before &#x27;&lt;/body&gt;&#x27; tag)</span></span><br><span class="line"><span class="comment"># 插入代码到头部 &lt;/head&gt; 之前 和 底部 &lt;/body&gt; 之前</span></span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attribute">href</span>=<span class="string">&quot;/css/iconfont/iconfont.css&quot;</span>&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    # - &lt;script <span class="attribute">src</span>=<span class="string">&quot;xxxx&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>最后，再修改同一文件中的social settings (社交圖標設置)项</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># social settings (社交圖標設置)</span></span><br><span class="line"><span class="meta"># formal:</span></span><br><span class="line"><span class="meta">#   icon: link || the description</span></span><br><span class="line"><span class="symbol">social:</span></span><br><span class="line">  <span class="meta"># fab fa-github: https:<span class="comment">//github.com/xxxxx || Github</span></span></span><br><span class="line">  <span class="meta"># fas fa-envelope: mailto:xxxxxx@gmail.com || Email</span></span><br></pre></td></tr></table></figure><p>这里我放出我自己的配置</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># social settings (社交圖標設置)</span></span><br><span class="line"><span class="meta"># formal:</span></span><br><span class="line"><span class="meta">#   icon: link || the description</span></span><br><span class="line">social:</span><br><span class="line">    iconfont icon-zhihu-circle-fill: https:<span class="comment">//www.zhihu.com/people/ashbell||知乎</span></span><br></pre></td></tr></table></figure><p>social:处的iconfont为我们解压文件中的iconfont.css中的<strong>文件名</strong>，icon-zhihu-circle-fill为我们需要用的<strong>知乎</strong>的图标名，冒号后面内容前面也提过。</p></li><li><p>完成上述部分就实现了Hexo Butterfly的图标拓展</p></li></ol><hr><p>有强迫症的同学可能和我一样，发现自己添加的图标不会像主题自带的其它图标一样，当鼠标放在图标上时会有翻转的效果。那么如何能够实现这种翻转呢？</p><p>我们只需要修改iconfont.css文件中的.iconfont{}</p><p>​原内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.iconfont</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">font-style</span>: normal;</span><br><span class="line">  -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">  -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​修改后</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.iconfont</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&quot;iconfont&quot;</span> <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">font-style</span>: normal;</span><br><span class="line">    -webkit-<span class="attribute">font-smoothing</span>: antialiased;</span><br><span class="line">    -moz-osx-<span class="attribute">font-smoothing</span>: grayscale;</span><br><span class="line">    </span><br><span class="line">    <span class="attribute">font-variant</span>: normal;</span><br><span class="line">    <span class="attribute">display</span>: <span class="built_in">var</span>(--fa-display,inline-block);</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">text-rendering</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​修改完毕后重载一下Hexo即可。</p><hr><h1 id="插件篇"><a href="#插件篇" class="headerlink" title="插件篇"></a>插件篇</h1><h2 id="hexo-admonition"><a href="#hexo-admonition" class="headerlink" title="hexo-admonition"></a><a href="https://github.com/lxl80/hexo-admonition">hexo-admonition</a></h2><blockquote><p>Hexo 内容辅助插件，支持将类似 <a href="https://docutils.sourceforge.io/docs/ref/rst/directives.html">reStructuredText</a> 的警告提示块添加到 Markdown 文档中。例如 note、warning、error 等提示块。</p></blockquote><div class="admonition note"><p class="admonition-title">Hexo-admonition 插件使用示例</p><p>这是基于 hexo-admonition 插件渲染的一条提示信息。类型为 note，并设置了自定义标题。</p></div><blockquote><p>提示内容开头留 4 个空格，可以有多行，最后用空行结束此标记。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!!! info 这是一个info示例</span><br><span class="line">    我是一段演示文本。</span><br></pre></td></tr></table></figure><h2 id="hexo-auto-excerpt"><a href="#hexo-auto-excerpt" class="headerlink" title="hexo-auto-excerpt"></a><a href="https://github.com/ashisherc/hexo-auto-excerpt">hexo-auto-excerpt</a></h2><blockquote><p>自动添加<code>tag</code></p></blockquote><p>使用方法：</p><p>手动加入<code>&lt;!-- more --&gt;</code>tag。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">title: Hexo Butterfly主题美化</span><br><span class="line">date:</span><br><span class="line">  2022-7-13</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> &lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><h2 id="Hexo-all-minifier"><a href="#Hexo-all-minifier" class="headerlink" title="Hexo-all-minifier"></a><a href="https://github.com/chenzhutian/hexo-all-minifier">Hexo-all-minifier</a></h2><blockquote><p>压缩css、js、html和images的插件。</p></blockquote><h2 id="hexo-blog-encrypt"><a href="#hexo-blog-encrypt" class="headerlink" title="hexo-blog-encrypt"></a><a href="https://github.com/D0n9X1n/hexo-blog-encrypt">hexo-blog-encrypt</a></h2><blockquote><p>加密文章的插件。</p></blockquote><h2 id="hexo-bilibili-bangumi"><a href="#hexo-bilibili-bangumi" class="headerlink" title="hexo-bilibili-bangumi"></a><a href="https://github.com/HCLonely/hexo-bilibili-bangumi">hexo-bilibili-bangumi</a></h2><blockquote><p>hexo 番剧页面插件，可选数据源：Bilibili, Bangumi</p></blockquote><h2 id="hexo-blogroll"><a href="#hexo-blogroll" class="headerlink" title="hexo-blogroll"></a><a href="https://github.com/huiwang/hexo-blogroll">hexo-blogroll</a></h2><blockquote><p>展示你最喜欢的几个博客的最新的几篇文章。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-blogroll --save</span><br></pre></td></tr></table></figure><p>使用方法</p><ol><li>创建 <code>blogroll.json</code> 文件并放入<code>source/_data</code>目录</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;blogs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Another blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;feed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://another.blog/feed&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Yet another blog&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;feed&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://yet.another.blog./feed&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建Blogroll页面</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Blogroll</span><br><span class="line"><span class="section">date: 2022-12-18 23:24:32</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">&#123;% blogroll 5 %&#125;</span><br></pre></td></tr></table></figure><h2 id="hexo-github-calendar"><a href="#hexo-github-calendar" class="headerlink" title="hexo-github-calendar"></a><a href="https://github.com/Zfour/hexo-github-calendar">hexo-github-calendar</a></h2><blockquote><p>在博客中插入一个类似GitHub的活动日历。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-githubcalendar --save</span><br></pre></td></tr></table></figure><p>在本目录_config.yml文件中添加（注意不是主题配置文件）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">github活动日历</span></span><br><span class="line">githubcalendar:</span><br><span class="line">  enable: true</span><br><span class="line">  enable_page: /</span><br><span class="line">  user: Asucanyh-cn</span><br><span class="line">  layout:</span><br><span class="line">    type: id</span><br><span class="line">    name: recent-posts</span><br><span class="line">    index: 0</span><br><span class="line">  githubcalendar_html: &#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height:auto;padding:10px;&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;width:10%;height:100%;margin:0 auto;display: block&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br><span class="line">  pc_minheight: 280px</span><br><span class="line">  mobile_minheight: 0px</span><br><span class="line">  color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot;</span><br><span class="line">  api: xxx</span><br><span class="line">  calendar_js: https://cdn.jsdelivr.net/gh/Zfour/hexo-github-calendar@1.21/hexo_githubcalendar.js</span><br><span class="line">  plus_style: &quot;&quot;</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://github.com/Zfour/python_github_calendar_api">公共api被墙了，需要自己搭建api。</a></p></blockquote><h2 id="hexo-generator-feed"><a href="#hexo-generator-feed" class="headerlink" title="hexo-generator-feed"></a><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a></h2><blockquote><p>为hexo部署一个信息源页</p></blockquote><h2 id="hexo-algoliasearch"><a href="#hexo-algoliasearch" class="headerlink" title="hexo-algoliasearch"></a><a href="https://github.com/LouisBarranqueiro/hexo-algoliasearch">hexo-algoliasearch</a></h2><blockquote><p>algolias搜索引擎，<a href="https://blog.csdn.net/qq_45173404/article/details/122861321">搭配教程使用。</a></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-algoliasearch --save</span><br></pre></td></tr></table></figure><h2 id="hexo-url-submission"><a href="#hexo-url-submission" class="headerlink" title="hexo-url-submission"></a><a href="https://github.com/abnerwei/hexo-url-submission">hexo-url-submission</a></h2><blockquote><p>自动提交链接至搜索引擎，用于提高被收录的效率。</p></blockquote><h2 id="hexo-generator-sitemap"><a href="#hexo-generator-sitemap" class="headerlink" title="hexo-generator-sitemap"></a><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a></h2><blockquote><p>生成网站地图</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置<code>_config.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line">  <span class="attr">path:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">sitemap.xml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sitemap.txt</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">./sitemap_template.xml</span></span><br><span class="line">  <span class="attr">template_txt:</span> <span class="string">./sitemap_template.txt</span></span><br><span class="line">  <span class="attr">rel:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="排除页面"><a href="#排除页面" class="headerlink" title="排除页面"></a>排除页面</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: lorem ipsum</span><br><span class="line">date: 2020-01-02</span><br><span class="line"><span class="section">sitemap: false</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><h2 id="hexo-image-cloudflare"><a href="#hexo-image-cloudflare" class="headerlink" title="hexo-image-cloudflare"></a><a href="https://github.com/njzjz/hexo-image-cloudflare">hexo-image-cloudflare</a></h2><blockquote><p>使用Cloudflare去缓存图片</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-image-cloudflare</span><br></pre></td></tr></table></figure><h2 id="hexo-steam-games"><a href="#hexo-steam-games" class="headerlink" title="hexo-steam-games"></a><a href="https://github.com/HCLonely/hexo-steam-games">hexo-steam-games</a></h2><blockquote><p>获取steam游戏库</p></blockquote><hr><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://cnhuazhu.gitee.io/2021/07/05/Hexo%E9%AD%94%E6%94%B9/Hexo%E9%BC%A0%E6%A0%87%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/">Hexo鼠标样式修改</a></li><li><a href="https://blog.csdn.net/qq_43740362/article/details/113796473">Hexo使用阿里iconfont图标</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本学习 Day1</title>
      <link href="/posts/188891481/"/>
      <url>/posts/188891481/</url>
      
        <content type="html"><![CDATA[<h1 id="什么是shell？"><a href="#什么是shell？" class="headerlink" title="什么是shell？"></a>什么是shell？</h1><p>Shell 是一个用 C 语言编写的程序，它是用户使用 Linux 的桥梁。Shell 既是一种命令语言，又是一种程序设计语言。</p><p>Shell 是指一种应用程序，这个应用程序提供了一个界面，用户通过这个界面访问操作系统内核的服务。</p><p>Ken Thompson 的 sh 是第一种 Unix Shell，Windows Explorer 是一个典型的图形界面 Shell。</p><h1 id="shell和运维的关系？"><a href="#shell和运维的关系？" class="headerlink" title="shell和运维的关系？"></a>shell和运维的关系？</h1><p>实现自动化运维！</p><h2 id="优势是什么？"><a href="#优势是什么？" class="headerlink" title="优势是什么？"></a>优势是什么？</h2><p>shell脚本语言很适合处理纯文本类型数据，且Linux的哲学思想就是一切皆文件，如：日志、配置文件、文本、网页文件，大多数都是纯文本类型的，因此shell可以方便的进行文本处理，好比强大的Linux三剑客(grep、seq、awk)</p><ul><li>适合用于管理脚本开发、如软件启停脚本、监控报警脚本、日志分析脚本等等。</li></ul><h1 id="shell的作用是什么？"><a href="#shell的作用是什么？" class="headerlink" title="shell的作用是什么？"></a>shell的作用是什么？</h1><!--使用Linux的过程都是shell在干活--><p>解释执行用户输入的命令和程序</p><p>用户输入一条命令，shell就解释一条</p><p>键盘输入命令，Linux给与相应的方式，称之为交互式</p><h1 id="shell处在什么位置？"><a href="#shell处在什么位置？" class="headerlink" title="shell处在什么位置？"></a>shell处在什么位置？</h1><p>shell是对接用户且包裹着系统核心的一层壳</p><h1 id="什么是shell脚本？"><a href="#什么是shell脚本？" class="headerlink" title="什么是shell脚本？"></a>什么是shell脚本？</h1><p>当命令或程序写在文件中，执行文件读取其中的代码，这个程序文件就称之为shell脚本。</p><p><strong>shell脚本语言是属于一种弱类型语言，无需声明变量类型，直接定义使用；强类型语言，必须先定义变量类型，确定是数字、字符串等，之后再赋予同类型的值。</strong></p><p>在shell脚本里定义多条Linux命令以及循环控制语句，然后将这些Linux命令一次性执行完毕，执行脚本文件的方式称之为，非交互式。</p><ul><li><p>Windows中的*.bat批处理脚本</p></li><li><p>Linux中常用*.sh脚本文件</p></li></ul><h1 id="第一个shell脚本"><a href="#第一个shell脚本" class="headerlink" title="第一个shell脚本"></a>第一个shell脚本</h1><p>hello.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="comment">#这是第一个shell脚本</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;我是第一个shell脚本&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Shebang"><a href="#Shebang" class="headerlink" title="Shebang"></a>Shebang</h2><p> 第一行出现的前两个字符#！称为Shebang。</p><p>在Unix系统中，程序会分析Shebang后面的内容，作为解析器的指令，如：</p><ul><li>以#！ &#x2F;bin&#x2F;sh开头的文件，程序在执行时会调用&#x2F;bin&#x2F;sh，也就是bash解释器</li><li>以#！ &#x2F;usr&#x2F;bin&#x2F;python开头的文件，代表指定python解释器去执行</li><li>以#！ &#x2F;usr&#x2F;bin&#x2F;env解释器名称，是一种在不同平台上都能正确找到解释器的办法</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>若脚本未指定Shebang，脚本执行的时候会默认用当前的shell去解释脚本，即$SHELL；</li><li>如果Shebang指定了可执行的解释器，如&#x2F;bin&#x2F;bash &#x2F;usr&#x2F;bin&#x2F;python，脚本执行时，文件名会作为参数传递给解释器；</li><li>如果#！指定的解释器没有可执行权限，则会报“bad interpreter :Permission denied”；</li><li>如果#！指定的解释程序不存在，那么会报“bad interpreter:No such file or directory”；</li><li>#！之后的解释程序，需要写其他绝对路径（如：#! &#x2F;bin&#x2F;bash）,它是不会自动到$PATH中寻找解释器的；</li><li>如果使用“bash test.sh”这样的命令来执行脚本，那么#！这一行将会被忽略，解释器当然是用命令行中显式指定的bash。</li></ul><h2 id="执行脚本"><a href="#执行脚本" class="headerlink" title="执行脚本"></a>执行脚本</h2><h3 id="情况一-直接输入文件名"><a href="#情况一-直接输入文件名" class="headerlink" title="情况一   直接输入文件名"></a>情况一   直接输入文件名</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>提示</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-<span class="keyword">bash: </span>hello.<span class="keyword">sh: </span>未找到命令</span><br></pre></td></tr></table></figure><p>原因：PATH中没有这个命令。因为在命令行中的命令都会去PATH中去查找</p><h3 id="情况二-使用相对路径"><a href="#情况二-使用相对路径" class="headerlink" title="情况二  使用相对路径"></a>情况二  使用相对路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hello.sh</span><br></pre></td></tr></table></figure><p>相当于</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$SHELL</span> ./hello.sh</span><br></pre></td></tr></table></figure><p>若提示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-bash: ./hello.sh: 权限不够</span><br></pre></td></tr></table></figure><p>解决方法，为文件添加执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x hello.sh</span><br></pre></td></tr></table></figure><h3 id="情况三-为脚本指定解释器"><a href="#情况三-为脚本指定解释器" class="headerlink" title="情况三  为脚本指定解释器"></a>情况三  为脚本指定解释器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash ./hello.sh</span><br></pre></td></tr></table></figure><!--情况一是情老师况三的特例，在未指定解释器时，默认指定$SHELL--><p>情况四  使用source或.执行</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> hello.<span class="keyword">sh</span></span><br><span class="line">. hello.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><p>情况五  重定向的理念（少见用法）</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sh </span>&lt; hello.<span class="keyword">sh</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">bash </span>&lt; hello.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure><h1 id="什么是bash？"><a href="#什么是bash？" class="headerlink" title="什么是bash？"></a>什么是bash？</h1><ul><li><p>bash是一个命令解释器，运行在文本窗口中，并能执行用户直接输入的命令</p></li><li><p>bash还能从文件中读取Linux命令，称之为脚本</p></li><li><p>bash支持通配符、管道、命令替换、条件判断等逻辑语句</p></li></ul><h1 id="历史命令"><a href="#历史命令" class="headerlink" title="历史命令"></a>历史命令</h1><h2 id="查看历史命令"><a href="#查看历史命令" class="headerlink" title="查看历史命令"></a>查看历史命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">history</span></span><br></pre></td></tr></table></figure><h2 id="查看设置存放的历史命令条数"><a href="#查看设置存放的历史命令条数" class="headerlink" title="查看设置存放的历史命令条数"></a>查看设置存放的历史命令条数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$HISTSIZE</span></span><br></pre></td></tr></table></figure><h2 id="查看历史命令存放的文件位置"><a href="#查看历史命令存放的文件位置" class="headerlink" title="查看历史命令存放的文件位置"></a>查看历史命令存放的文件位置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$HISTFILE</span></span><br></pre></td></tr></table></figure><h2 id="history命令"><a href="#history命令" class="headerlink" title="history命令"></a>history命令</h2><h3 id="清除"><a href="#清除" class="headerlink" title="清除"></a>清除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">history</span> -c</span><br></pre></td></tr></table></figure><h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">history</span> -r</span><br></pre></td></tr></table></figure><h2 id="调用历史记录命令"><a href="#调用历史记录命令" class="headerlink" title="调用历史记录命令"></a>调用历史记录命令</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!&lt;历史<span class="built_in">id</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="执行上一次的命令"><a href="#执行上一次的命令" class="headerlink" title="执行上一次的命令"></a>执行上一次的命令</h2><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!!</span><br></pre></td></tr></table></figure><h1 id="bash基础特性汇总"><a href="#bash基础特性汇总" class="headerlink" title="bash基础特性汇总"></a>bash基础特性汇总</h1><h2 id="TAB补全"><a href="#TAB补全" class="headerlink" title="TAB补全"></a>TAB补全</h2><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><h3 id="光标移动到最前"><a href="#光标移动到最前" class="headerlink" title="光标移动到最前"></a>光标移动到最前</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CTRL+<span class="selector-tag">A</span></span><br></pre></td></tr></table></figure><h3 id="光标移动到最后"><a href="#光标移动到最后" class="headerlink" title="光标移动到最后"></a>光标移动到最后</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">CTRL</span><span class="operator">+</span><span class="built_in">E</span></span><br></pre></td></tr></table></figure><h3 id="清除当前的命令"><a href="#清除当前的命令" class="headerlink" title="清除当前的命令"></a>清除当前的命令</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CTRL</span>+U</span><br></pre></td></tr></table></figure><h3 id="清除光标后内容"><a href="#清除光标后内容" class="headerlink" title="清除光标后内容"></a>清除光标后内容</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">CTRL</span><span class="operator">+</span><span class="built_in">K</span></span><br></pre></td></tr></table></figure><h3 id="清除所有的内容"><a href="#清除所有的内容" class="headerlink" title="清除所有的内容"></a>清除所有的内容</h3><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">CTRL</span>+L</span><br></pre></td></tr></table></figure><h3 id="打断当前命令"><a href="#打断当前命令" class="headerlink" title="打断当前命令"></a>打断当前命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CTRL+C</span><br></pre></td></tr></table></figure><h4 id="暂停当前进程并放入后台"><a href="#暂停当前进程并放入后台" class="headerlink" title="暂停当前进程并放入后台"></a>暂停当前进程并放入后台</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CTRL+Z</span><br></pre></td></tr></table></figure><p>执行演示</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># ping baidu.com</span></span><br><span class="line">PING baidu.com (110.242.68.66) 56(84) bytes of data.</span><br><span class="line">64 bytes from 110.242.68.66 (110.242.68.66): icmp_seq=1 ttl=128 time=49.3 ms</span><br><span class="line">^Z[5]   已终止               <span class="built_in">nohup</span> ping baidu.com &gt; targetfile 2&gt; targetfile</span><br><span class="line"></span><br><span class="line">[6]+  已停止               ping baidu.com</span><br></pre></td></tr></table></figure><h2 id="通配符"><a href="#通配符" class="headerlink" title="通配符"></a>通配符</h2><h2 id="命令历史"><a href="#命令历史" class="headerlink" title="命令历史"></a>命令历史</h2><h2 id="命令别名"><a href="#命令别名" class="headerlink" title="命令别名"></a>命令别名</h2><blockquote><p><a href="https://linux.cmsblogs.cn/c/alias.html">alias命令</a></p></blockquote><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> [-p] [name[=value] ...]</span><br></pre></td></tr></table></figure><h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p：显示全部已定义的别名。</span><br></pre></td></tr></table></figure><ul><li>name（可选）：指定要（定义、修改、显示）的别名。</li><li>value（可选）：别名的值。</li></ul><h2 id="命令行展开"><a href="#命令行展开" class="headerlink" title="命令行展开"></a>命令行展开</h2><h1 id="shell变量"><a href="#shell变量" class="headerlink" title="shell变量"></a>shell变量</h1><h2 id="如何定义变量？"><a href="#如何定义变量？" class="headerlink" title="如何定义变量？"></a>如何定义变量？</h2><p>用法：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;变量名&gt;<span class="operator">=</span><span class="string">&quot;&lt;值&gt;&quot;</span></span><br></pre></td></tr></table></figure><p><em>bash默认把所有变量都认为是字符串类型，bash作为弱类型编程语言，无需实现声明变量类型，而是声明和赋值同时进行。</em></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">x</span><span class="operator">=</span><span class="string">&quot;123&quot;</span></span><br></pre></td></tr></table></figure><p><strong>注意变量和值之间不能有空格，错误实例：</strong></p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">x</span> <span class="operator">=</span> <span class="string">&quot;123&quot;</span></span><br></pre></td></tr></table></figure><hr><h2 id="如何输出变量？"><a href="#如何输出变量？" class="headerlink" title="如何输出变量？"></a>如何输出变量？</h2><p>简写用法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $<span class="tag">&lt;<span class="name">变量名</span>&gt;</span></span><br></pre></td></tr></table></figure><p>完整写法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;&lt;变量名&gt;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$x</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;x&#125;</span></span><br></pre></td></tr></table></figure><h2 id="变量名定义规则"><a href="#变量名定义规则" class="headerlink" title="变量名定义规则"></a>变量名定义规则</h2><ul><li><p>不能使用<a href="https://blog.csdn.net/qq_15766181/article/details/70915957"><strong>保留关键字</strong></a>，<strong>help检查</strong>保留字</p></li><li><p>只能包含<strong>数字、字母、下划线</strong>：abc%</p></li><li><p>不能以<strong>数字</strong>开头：11school</p></li><li><p>不能使用<strong>标点符号</strong>：abc?</p></li><li><p>变量名严格<strong>区分大小写</strong></p></li></ul><h2 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h2><h3 id="本地变量"><a href="#本地变量" class="headerlink" title="本地变量"></a>本地变量</h3><p>只<strong>针对</strong>当前的<strong>shell进程</strong></p><h4 id="首先安装pstree"><a href="#首先安装pstree" class="headerlink" title="首先安装pstree"></a>首先安装pstree</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> psmisc -y</span><br></pre></td></tr></table></figure><h4 id="pstree检查进程树"><a href="#pstree检查进程树" class="headerlink" title="pstree检查进程树"></a>pstree检查进程树</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pstree</span></span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">systemd─┬─NetworkManager───2*[</span><span class="template-variable">&#123;NetworkManager&#125;</span><span class="language-xml">]</span></span><br><span class="line"><span class="language-xml">        ├─auditd───</span><span class="template-variable">&#123;auditd&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        ├─chronyd</span></span><br><span class="line"><span class="language-xml">        ├─crond</span></span><br><span class="line"><span class="language-xml">        ├─dbus-daemon───</span><span class="template-variable">&#123;dbus-daemon&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        ├─firewalld───</span><span class="template-variable">&#123;firewalld&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">        ├─irqbalance</span></span><br><span class="line"><span class="language-xml">        ├─login───bash</span></span><br><span class="line"><span class="language-xml">        ├─lvmetad</span></span><br><span class="line"><span class="language-xml">        ├─master─┬─pickup</span></span><br><span class="line"><span class="language-xml">        │        └─qmgr</span></span><br><span class="line"><span class="language-xml">        ├─polkitd───6*[</span><span class="template-variable">&#123;polkitd&#125;</span><span class="language-xml">]</span></span><br><span class="line"><span class="language-xml">        ├─rsyslogd───2*[</span><span class="template-variable">&#123;rsyslogd&#125;</span><span class="language-xml">]</span></span><br><span class="line"><span class="language-xml">        ├─sshd─┬─sshd───bash  </span></span><br><span class="line"><span class="language-xml">        │      ├─sshd───bash───pstree   #当前shell</span></span><br><span class="line"><span class="language-xml">        │      └─sshd───sftp-server</span></span><br><span class="line"><span class="language-xml">        ├─systemd-journal</span></span><br><span class="line"><span class="language-xml">        ├─systemd-logind</span></span><br><span class="line"><span class="language-xml">        ├─systemd-udevd</span></span><br><span class="line"><span class="language-xml">        └─tuned───4*[</span><span class="template-variable">&#123;tuned&#125;</span><span class="language-xml">]</span></span><br></pre></td></tr></table></figure><p>当我们输入bash再输入pstree</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">bash </span></span><br><span class="line"><span class="attribute">pstree</span></span><br></pre></td></tr></table></figure><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├─sshd─┬─sshd───<span class="keyword">bash </span> </span><br><span class="line">│      ├─sshd───<span class="keyword">bash───bash───pstree </span>  <span class="comment">#当前shell</span></span><br><span class="line">│      └─sshd───sftp-server</span><br></pre></td></tr></table></figure><p>会发现生成了一个子shell</p><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>也称全局变量，<strong>针对当前shell以及其任意子进程</strong>，环境变量也分为自定义、内置两种环境变量</p><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><p><strong>针对在shell函数</strong>或者是<strong>shell脚本</strong>中定义</p><h4 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a><a href="http://c.biancheng.net/cpp/view/2739.html">特殊变量</a></h4><p>shell<strong>内置</strong>的特殊功效<strong>变量</strong></p><h4 id="位置参数变量"><a href="#位置参数变量" class="headerlink" title="位置参数变量"></a>位置参数变量</h4><p>用于shell脚本中传递的参数</p><h4 id="自定义变量"><a href="#自定义变量" class="headerlink" title="自定义变量"></a>自定义变量</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">变量名</span>&gt;</span>=`<span class="tag">&lt;<span class="name">值</span>&gt;</span>`或者&quot;<span class="tag">&lt;<span class="name">值</span>&gt;</span>&quot;或者&#x27;<span class="tag">&lt;<span class="name">值</span>&gt;</span>&#x27;或者<span class="tag">&lt;<span class="name">值</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="区别实例"><a href="#区别实例" class="headerlink" title="区别实例"></a><strong>区别实例</strong></h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单引号变量：不识别特殊语法</span><br><span class="line">双引号变量：能识别特殊语法</span><br><span class="line">反引号变量：在Linux反引号中的命令，执行结果会保留下来并传递给变量</span><br></pre></td></tr></table></figure><h6 id="反引号实例"><a href="#反引号实例" class="headerlink" title="反引号实例"></a>反引号实例</h6><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@<span class="number">192</span> ~]<span class="comment"># ls</span></span><br><span class="line">anaconda-ks.cfg  blog  hello.sh  <span class="keyword">node</span><span class="title">-v16</span>.<span class="number">16.0</span>-linux-x64  x.sh</span><br><span class="line">[root@<span class="number">192</span> ~]<span class="comment"># xx=`ls`</span></span><br><span class="line">[root@<span class="number">192</span> ~]<span class="comment"># echo $xx</span></span><br><span class="line">anaconda-ks.cfg blog hello.sh <span class="keyword">node</span><span class="title">-v16</span>.<span class="number">16.0</span>-linux-x64 x.sh</span><br></pre></td></tr></table></figure><h6 id="单双引号实例"><a href="#单双引号实例" class="headerlink" title="单双引号实例"></a>单双引号实例</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">首先定义x值为1</span><br><span class="line">x=&quot;1&quot;或&#x27;1&#x27;或1</span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#定义y1，y2，y3</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># y1=$x</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $y1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># y2=<span class="string">&quot;$x&quot;</span></span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $y2</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># y3=<span class="string">&#x27;$x&#x27;</span></span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $y3</span></span><br><span class="line">$x</span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#输出</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo <span class="string">&quot;$x&quot;</span></span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo <span class="string">&#x27;$x&#x27;</span></span></span><br><span class="line">$x</span><br></pre></td></tr></table></figure><h1 id="父子shell"><a href="#父子shell" class="headerlink" title="父子shell"></a>父子shell</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">当调用bash/<span class="keyword">sh</span>解释器执行脚本时，会开启一个子<span class="keyword">shell</span>，执行结果不会保留在当前<span class="keyword">shell</span>；</span><br><span class="line">当调用<span class="keyword">source</span>或者.执行脚本时，会在当前<span class="keyword">shell</span>中加载脚本，结果保留在当前<span class="keyword">shell</span>。</span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a><strong>实例</strong></h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[root@192 ~]</span><span class="comment"># cat x.sh</span></span><br><span class="line"><span class="attr">x</span>=<span class="string">&quot;0&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $x</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>调用bash&#x2F;sh执行（此处使用bash）</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># bash x.sh</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $x</span></span><br><span class="line"><span class="number">1</span></span><br></pre></td></tr></table></figure><p>结果显示<strong>值未发生改变</strong></p><p><strong>调用source&#x2F;.执行（此处使用source）</strong></p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># source x.sh</span></span><br><span class="line">[root<span class="symbol">@192</span> ~]<span class="meta"># echo $x</span></span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p>结果显示<strong>值发生改变</strong></p><h1 id="环境变量设置"><a href="#环境变量设置" class="headerlink" title="环境变量设置"></a>环境变量设置</h1><h2 id="PATH变量是什么？"><a href="#PATH变量是什么？" class="headerlink" title="PATH变量是什么？"></a><a href="http://c.biancheng.net/view/5876.html">PATH变量是什么</a>？</h2><p>PATH变量 就是用于<strong>保存可以搜索的目录路径</strong>，如果待运行的程序不在当前目录，操作系统便可以去依次搜索 PATH变量 变量中记录的目录，如果在这些目录中找到待运行的程序，操作系统便可以运行。</p><h2 id="环境变量-1"><a href="#环境变量-1" class="headerlink" title="环境变量"></a>环境变量</h2><p><strong>不能说PATH变量就代表了环境变量！</strong></p><p>所谓环境变量一般是指，用export内置命令导出的变量。用于定义shell的运行环境、保证shell命令的正确执行。</p><p>shell通过环境变量确定登录的用户名、PATH路径、文件系统等各种应用。</p><p>环境变量可以在命令行中临时创建，但重新登录后环境变量失效。如果需要永久生效，需要修改环境变量配置文件。</p><ul><li><p>用户个人配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>远程登录用户特有文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>全局配置文件</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/</span>profile</span><br><span class="line"><span class="regexp">/etc/</span>profile.d</span><br><span class="line"><span class="regexp">/etc/</span>bashrc</span><br></pre></td></tr></table></figure></li></ul><p>系统建议创建&#x2F;etc&#x2F;profile.d&#x2F;目录进行添加修改，而不是直接修改主文件</p><h2 id="检查系统环境变量的命令"><a href="#检查系统环境变量的命令" class="headerlink" title="检查系统环境变量的命令"></a>检查系统环境变量的命令</h2><p>set命令可以找到shell环境中的所有变量，包括全局变量、局部变量</p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Centos </tag>
            
            <tag> Shell </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>部署Hexo框架并应用Butterfly主题</title>
      <link href="/posts/4126765266/"/>
      <url>/posts/4126765266/</url>
      
        <content type="html"><![CDATA[<h1 id="部署Hexo框架并应用Butterfly主题"><a href="#部署Hexo框架并应用Butterfly主题" class="headerlink" title="部署Hexo框架并应用Butterfly主题"></a>部署Hexo框架并应用Butterfly主题</h1><p>系统：Centos7</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y git</span><br></pre></td></tr></table></figure><h2 id="安装node-js和npm工具"><a href="#安装node-js和npm工具" class="headerlink" title="安装node.js和npm工具"></a>安装node.js和npm工具</h2><h3 id="一键部署"><a href="#一键部署" class="headerlink" title="一键部署"></a>一键部署</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> -y nodejs</span><br><span class="line">yum <span class="keyword">install</span> -y npm</span><br></pre></td></tr></table></figure><p>Centos7下可能出现的问题</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@localhost ~</span>]<span class="meta"># yum install -y nodejs</span></span><br><span class="line">已加载插件：fastestmirror</span><br><span class="line">Loading mirror speeds <span class="keyword">from</span> cached hostfile</span><br><span class="line"> * <span class="keyword">base</span>: mirrors.cn99.com</span><br><span class="line"> * extras: mirrors.aliyun.com</span><br><span class="line"> * updates: mirrors.huaweicloud.com</span><br><span class="line">没有可用软件包 nodejs。</span><br><span class="line">错误：无须任何处理</span><br></pre></td></tr></table></figure><h3 id="手动安装"><a href="#手动安装" class="headerlink" title="手动安装"></a>手动安装</h3><!--注意，以下演示操作均在root目录中进行，可以根据自己需求更换--><p>进入<a href="https://nodejs.org/en/download/">官网</a>，请根据自己的操作系统选择nodejs版本，演示使用<strong>Linux Binaries (x64)</strong></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yum</span> install wget -y</span><br><span class="line"><span class="attribute">wget</span> https://nodejs.org/dist/v16.<span class="number">16</span>.<span class="number">0</span>/node-v16.<span class="number">16</span>.<span class="number">0</span>-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p>解压</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf <span class="keyword">node</span><span class="title">-v16</span>.<span class="number">16.0</span>-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p>设置全局变量（使用添加软连接的方式）</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ln -s /root/<span class="keyword">node</span><span class="title">-v16</span>.<span class="number">16.0</span>-linux-x64/bin/<span class="keyword">node</span> <span class="title">/usr</span>/local/bin/<span class="keyword">node</span></span><br><span class="line"></span><br><span class="line"><span class="title">ln</span> -s /root/<span class="keyword">node</span><span class="title">-v16</span>.<span class="number">16.0</span>-linux-x64/bin/npm /usr/local/bin/npm</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># node -v</span></span><br><span class="line">v16<span class="number">.15</span><span class="number">.1</span></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># npm -v</span></span><br><span class="line"><span class="number">8.11</span><span class="number">.0</span></span><br></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a><a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Hexo">安装Hexo</a></h2><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><p>将Hexo命令添加到环境变量中</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="regexp">/root/</span>node-v8.<span class="number">9.4</span>-linux-x64<span class="regexp">/lib/</span>node_modules<span class="regexp">/hexo-cli/</span>bin<span class="regexp">/hexo /u</span>sr<span class="regexp">/local/</span>bin/hexo</span><br></pre></td></tr></table></figure><h2 id="使用Hexo"><a href="#使用Hexo" class="headerlink" title="使用Hexo"></a><a href="https://hexo.io/zh-cn/docs/setup">使用Hexo</a></h2><p>此处非本文重点，请查阅<a href="https://hexo.io/zh-cn/docs/setup">Hexo中文文档</a>。</p><h2 id="应用Butterfly主题"><a href="#应用Butterfly主题" class="headerlink" title="应用Butterfly主题"></a><a href="https://butterfly.js.org/posts/21cfbf15/">应用Butterfly主题</a></h2><p>进入Hexo根目录，即有themes文件夹的目录</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">-b</span> <span class="keyword">master</span> <span class="title">https</span>://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>修改 Hexo 根目录下的 _config.yml，把主题改为butterfly</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">theme:</span> butterfly</span><br></pre></td></tr></table></figure><p>修改完毕后，启用网站发现网页显示如下内容</p><hr><p>extends includes&#x2F;layout.pug block content include .&#x2F;includes&#x2F;mixins&#x2F;post-ui.pug #recent-posts.recent-posts +postUI include includes&#x2F;pagination.pug</p><hr><p>请下载安装 pug 以及 stylus 的渲染器</p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-<span class="keyword">renderer</span>-pug hexo-<span class="keyword">renderer</span>-stylus --save</span><br></pre></td></tr></table></figure><p>安装完毕后重新运行，即可应用Butterfly主题</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
            <tag> git </tag>
            
            <tag> npm </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用frp内网穿透在FileZilla实现FTP服务器搭建</title>
      <link href="/posts/3219067151/"/>
      <url>/posts/3219067151/</url>
      
        <content type="html"><![CDATA[<h1 id="利用frp内网穿透在FileZilla实现FTP服务器搭建"><a href="#利用frp内网穿透在FileZilla实现FTP服务器搭建" class="headerlink" title="利用frp内网穿透在FileZilla实现FTP服务器搭建"></a>利用frp内网穿透在FileZilla实现FTP服务器搭建</h1><hr><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p>拥有一台具有公网IP的主机、FileZilla Server、已配置好的FRP</p><p>本地主机OS:Windows11 64位</p><p>公网服务器OS：Centos7 64位</p><p>*本文默认您已经搭建好FRP内网穿透服务</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>​</p><h2 id="安装FileZilla官网"><a href="#安装FileZilla官网" class="headerlink" title="安装FileZilla官网"></a>安装FileZilla<a href="https://download.filezilla.cn/server/"><strong>官网</strong></a></h2><p>​我安装的是<a href="https://download.filezilla.cn/server/windows/FileZilla_Server-cn-0_9_60_2.exe"><strong>FileZilla Server 0.9.60.2 中文安装版</strong></a>，建议和我下载一样的版本。下载好完毕后安装，安装的选项保持<strong>默认</strong>即可。</p><h2 id="配置FileZailla"><a href="#配置FileZailla" class="headerlink" title="配置FileZailla"></a>配置FileZailla</h2><h3 id="被动模式设置"><a href="#被动模式设置" class="headerlink" title="被动模式设置"></a>被动模式设置</h3><p>​在菜单栏处点击“编辑”选项，进入“设置”，再点击“被动模式设置”。</p><p>修改两处：</p><ul><li>​端口范围：可自定义但建议和我一致50000-50001</li><li>​使用下列IP：自己的公网IP</li></ul><p>点击“确定”保存。</p><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-%E8%A2%AB%E5%8A%A8%E6%A8%A1%E5%BC%8F%E8%AE%BE%E7%BD%AE.png" alt="配置FileZilla-被动模式设置"></p><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p>​回到主页，在菜单栏处点击“编辑”选项，进入“用户”，再点击“General”，在右侧点击“添加”创建一个登录用户，并为其设置一个密码并确保“启用账户”被勾选。*<em>你可以指定用户所属的组，便于管理。</em></p><p>​假设添加的用户为：admin</p><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-%E7%94%A8%E6%88%B7%E8%AE%BE%E7%BD%AE.png" alt="配置FileZilla-用户设置"></p><p>​下一步，点击“Shared folders”。先点击右边的用户“admin”，然后为其添加一个“共享文件夹”，建议勾选所有权限。</p><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-%E7%94%A8%E6%88%B7%E6%96%87%E4%BB%B6%E5%A4%B9%E8%AE%BE%E7%BD%AE.png" alt="配置FileZilla-用户文件夹设置.png"></p><p>点击“确定”保存。</p><h2 id="配置连通环境"><a href="#配置连通环境" class="headerlink" title="配置连通环境"></a>配置连通环境</h2><h3 id="配置本地主机防火墙"><a href="#配置本地主机防火墙" class="headerlink" title="配置本地主机防火墙"></a>配置本地主机防火墙</h3><p>打开防火墙，进入“高级设置”</p><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-%E9%98%B2%E7%81%AB%E5%A2%99%E9%AB%98%E7%BA%A7%E8%AE%BE%E7%BD%AE.png" alt="配置FileZilla-防火墙高级设置.png"></p><p>点击“入站规则”，再点击右侧“新建规则”</p><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-%E5%85%A5%E7%AB%99%E8%A7%84%E5%88%99.png" alt="配置FileZilla-入站规则.png"></p><p>要创建的规则类型选择：端口</p><p>协议和端口：</p><ul><li><p>TCP  </p></li><li><p>50000-50001,21</p><p>*<em>端口为之前你设置的“端口范围”，以及21端口</em></p><p><em>请使用英文逗号分隔。</em></p></li></ul><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-%E9%98%B2%E7%81%AB%E5%A2%99-%E7%AB%AF%E5%8F%A3.png" alt="配置FileZilla-防火墙-端口.png"></p><p>操作：允许连接</p><p>配置文件：建议勾选</p><p>​域，专用，公用</p><p>名称：随意</p><h3 id="配置-internet-选项"><a href="#配置-internet-选项" class="headerlink" title="配置 internet 选项"></a>配置 internet 选项</h3><p>完成上述步骤后，如果测试本地连接发现出现</p><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-FTP%E6%96%87%E4%BB%B6%E5%A4%B9%E9%94%99%E8%AF%AF.png" alt="配置FileZilla-FTP文件夹错误.png"></p><p>请在“控制面板”打开“internet 选项”，并勾选“启用被动FTP”。</p><p><img src="/img/post/%E9%85%8D%E7%BD%AEFileZilla-internet%E9%80%89%E9%A1%B9_%E9%AB%98%E7%BA%A7_%E5%90%AF%E7%94%A8%E8%A2%AB%E5%8A%A8FTP.png" alt="配置FileZilla-internet选项高级启用被动FTP.png"><br>如果又出现<br><img src="/img/post/%E9%85%8D%E7%BD%AEfilezilla-%E6%96%87%E4%BB%B6%E5%A4%B9%E9%94%99%E8%AF%AF2.png" alt="配置filezilla-文件夹错误2.png"><br>请尝试取消勾选“设置-被动模式设置-本地连接则不使用外部IP”选项</p><h3 id="配置公网服务器防火墙"><a href="#配置公网服务器防火墙" class="headerlink" title="配置公网服务器防火墙"></a>配置公网服务器防火墙</h3><p>​为了下一步做内网穿透，请在您的服务器主机上开启对应的端口：50000-50001,2121</p><p>​这里选择开放2121端口而不是21端口是出于公网主机自身也可能要运行FTP服务的考虑，故转发端口就采用2121</p><p>​请在确保公网服务器防火墙正常运行的前提下执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --add-port 50000/tcp</span><br><span class="line">firewall-cmd --add-port 50001/tcp</span><br><span class="line">firewall-cmd --add-port 2121/tcp</span><br></pre></td></tr></table></figure><p>​防火墙命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl status firewalld.service  #查看防火墙状态</span><br><span class="line">systemctl start firewalld.service#开启防火墙</span><br><span class="line">systemctl stop firewalld.service#关闭防火墙</span><br><span class="line">###更多内容请问度娘~</span><br></pre></td></tr></table></figure><p>完成以上操作就<strong>已经实现</strong>了服务器在<strong>本地运行</strong>！最后只剩下内网穿透！</p><h2 id="配置frpc-ini文件"><a href="#配置frpc-ini文件" class="headerlink" title="配置frpc.ini文件"></a>配置frpc.ini文件</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[range:ftp]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">21</span>,<span class="number">50000</span>-<span class="number">50001</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">2121</span>,<span class="number">50000</span>-<span class="number">50001</span></span><br></pre></td></tr></table></figure><p>​*Local_ip &#x3D; “填本机ip或者127.0.0.1”</p><p>​配置完毕后，在Frp客户端目录下，终端执行启动命令即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc.exe -c frpc.ini</span><br></pre></td></tr></table></figure><h2 id="连接FTP服务器"><a href="#连接FTP服务器" class="headerlink" title="连接FTP服务器"></a>连接FTP服务器</h2><p>​在FTP客户端输入自己公网IP:2121以及自己设置的用户名和账号即可！</p>]]></content>
      
      
      <categories>
          
          <category> 服务器搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> frp </tag>
            
            <tag> FTP </tag>
            
            <tag> 内网穿透 </tag>
            
            <tag> FileZilla </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在Linux服务器下搭建frp内网穿透服务</title>
      <link href="/posts/2082847749/"/>
      <url>/posts/2082847749/</url>
      
        <content type="html"><![CDATA[<h1 id="在Linux服务器下搭建frp内网穿透服务"><a href="#在Linux服务器下搭建frp内网穿透服务" class="headerlink" title="在Linux服务器下搭建frp内网穿透服务"></a>在Linux服务器下搭建frp内网穿透服务</h1><blockquote><p>本文转自：<a href="https://itlanyan.com/frp-tunnel-tutorial/#bnp_i_1">frp内网穿透教程</a> 略有改动</p></blockquote><h2 id="frp介绍"><a href="#frp介绍" class="headerlink" title="frp介绍"></a>frp介绍</h2><p>frp 是一个开源、简洁易用、高性能的内网穿透和反向代理软件，支持 tcp, udp, http, https等协议。</p><p>frp分为客户端与服务端</p><p>frp的工作原理：</p><ol><li>服务端运行，监听一个主端口；</li><li>客户端通过主端口连接，并告知监听端口和转发类型；</li><li>服务端fork新的进程，监听客户端所指定的端口；</li><li>外网用户连接客户端指定的端口，服务端将数据发送给客户端；</li><li>客户端将数据转发到本地服务，从而实现内网主机对外暴露，即内网穿透。</li></ol><h2 id="frp内网穿透服务搭建"><a href="#frp内网穿透服务搭建" class="headerlink" title="frp内网穿透服务搭建"></a>frp内网穿透服务搭建</h2><h3 id="部署服务端"><a href="#部署服务端" class="headerlink" title="部署服务端"></a>部署服务端</h3><h4 id="下载服务端官网"><a href="#下载服务端官网" class="headerlink" title="下载服务端官网"></a>下载服务端<a href="https://github.com/fatedier/frp/releases">官网</a></h4><p><em><strong>本文使用<a href="https://github.com/fatedier/frp/releases/download/v0.43.0/frp_0.43.0_linux_amd64.tar.gz">frp_0.43.0_linux_amd64.tar.gz</a>演示，请根据自己实际系统选择服务端。</strong></em></p><p>使用<a href="https://blog.csdn.net/u013250861/article/details/125568952">wget命令</a>下载</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.43.0/frp_0.43.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h4 id="解压服务端"><a href="#解压服务端" class="headerlink" title="解压服务端"></a>解压服务端</h4><p><em><strong>请确保自己在压缩文件所在目录</strong></em></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf frp_0.43.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><p>进入解压后的文件夹</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd frp_0.43.0_linux_amd64</span><br></pre></td></tr></table></figure><h4 id="配置frps-ini"><a href="#配置frps-ini" class="headerlink" title="配置frps.ini"></a>配置frps.ini</h4><p><em><strong>没有的项亩建议添加进去</strong></em></p><p><a href="https://gofrp.org/docs/reference/server-configures/#%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE">主端口</a></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span>  <span class="comment">#用于客户端连接</span></span><br></pre></td></tr></table></figure><p><a href="https://gofrp.org/docs/features/common/monitor/">启用监控</a></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7001</span>  <span class="comment">#监控页面端口</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin</span><br><span class="line"><span class="attr">dashboard_pwd</span> = <span class="number">123456</span></span><br><span class="line"><span class="attr">enable_prometheus</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><a href="https://gofrp.org/docs/reference/server-configures/#%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE">日志文件</a></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">log_file</span> = /var/log/frps.log</span><br><span class="line"><span class="attr">log_level</span> = info</span><br><span class="line"><span class="attr">log_max_days</span> = <span class="number">3</span></span><br></pre></td></tr></table></figure><p><a href="https://gofrp.org/docs/reference/server-configures/#%E6%9D%83%E9%99%90%E9%AA%8C%E8%AF%81">身份认证方式</a></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">authentication_method</span> = token    </span><br><span class="line"><span class="attr">authenticate_new_work_conns</span> = <span class="literal">true</span> </span><br><span class="line"><span class="attr">token</span> = <span class="number">123456</span></span><br></pre></td></tr></table></figure><h4 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h4><p>将上一步中服务端所用的所有<a href="https://www.cnblogs.com/meizy/p/firewalld.html#minglingjichushiyong">端口永久开放</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port 7000/tcp</span><br><span class="line">firewall-cmd --permanent --add-port 7001/tcp</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><p><strong>后续进行转发时，还要开放客户端指定的端口！</strong></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd <span class="params">--permanent</span> <span class="params">--add-port</span> 客户端指定端口<span class="string">/tcp</span></span><br><span class="line">firewall-cmd <span class="params">--reload</span></span><br></pre></td></tr></table></figure><h4 id="启用frp"><a href="#启用frp" class="headerlink" title="启用frp"></a>启用frp</h4><p>首先</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">cd</span> frp_0.<span class="number">43</span>.<span class="number">0</span>_linux_amd64</span><br></pre></td></tr></table></figure><p>确保在frp根目录中，执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure><p>到这里，frp服务端已经可以使用了，但只是临时运行，如果想长期运行，可以采用两种方法。</p><h5 id="方法一（建议使用）"><a href="#方法一（建议使用）" class="headerlink" title="方法一（建议使用）"></a>方法一（建议使用）</h5><p>使用<a href="https://gofrp.org/docs/setup/systemd/">systemd</a></p><h5 id="方法二-（请在frp目录下执行）"><a href="#方法二-（请在frp目录下执行）" class="headerlink" title="方法二 （请在frp目录下执行）"></a>方法二 （请在frp目录下执行）</h5><p>使用<a href="https://www.runoob.com/linux/linux-comm-nohup.html">nohup</a>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> ./frps -c ./frps.ini</span><br></pre></td></tr></table></figure><p>在终端如果看到以下输出说明运行成功：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">appending output <span class="keyword">to</span> nohup.<span class="keyword">out</span></span><br></pre></td></tr></table></figure><h3 id="部署客户端"><a href="#部署客户端" class="headerlink" title="部署客户端"></a>部署客户端</h3><h4 id="下载客户端官网"><a href="#下载客户端官网" class="headerlink" title="下载客户端官网"></a>下载客户端<a href="https://github.com/fatedier/frp/releases">官网</a></h4><p>本文使用windows系统，使用<a href="https://github.com/fatedier/frp/releases/download/v0.43.0/frp_0.43.0_windows_386.zip">frp_0.43.0_windows_386.zip</a>演示。</p><h4 id="解压客户端"><a href="#解压客户端" class="headerlink" title="解压客户端"></a>解压客户端</h4><p>解压好客户端后，进入文件夹中。</p><h4 id="配置frpc-ini"><a href="#配置frpc-ini" class="headerlink" title="配置frpc.ini"></a>配置frpc.ini</h4><p><a href="https://gofrp.org/docs/reference/client-configures/#%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE">基础配置</a></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = 服务器ip<span class="comment">#请换成设置的服务器端口</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span><span class="comment">#需要与服务端相同</span></span><br><span class="line"><span class="attr">tls_enable</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">authentication_method</span> = token<span class="comment">#需要与服务端相同</span></span><br><span class="line"><span class="attr">authenticate_new_work_conns</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">token</span> = <span class="number">123456</span><span class="comment">#需要与服务端相同</span></span><br></pre></td></tr></table></figure><p><a href="https://gofrp.org/docs/examples/">转发实例</a></p><p>以通过 SSH 访问内网机器为例</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span><span class="comment">#此处为客户端所指定的监听端口</span></span><br></pre></td></tr></table></figure><p>启用frp</p><h5 id="方法一（正常启用）"><a href="#方法一（正常启用）" class="headerlink" title="方法一（正常启用）"></a>方法一（正常启用）</h5><ol><li><p>“<a href="https://zh.wikipedia.org/zh-hans/Windows%E9%94%AE#:~:text=Windows%E9%94%AE%EF%BC%88%E8%8B%B1%E8%AA%9E%EF%BC%9AWindows%20key%EF%BC%89%EF%BC%8C%E7%B0%A1%E7%A8%B1Win%E9%94%AE%EF%BC%88Winkey%EF%BC%89%EF%BC%8C%E6%98%AF%E5%9C%A8%E8%AE%A1%E7%AE%97%E6%9C%BA%E9%94%AE%E7%9B%98%E5%B7%A6%E4%B8%8B%E8%A7%92Ctrl%E5%92%8CAlt%E9%94%AE%E4%B9%8B%E9%97%B4%E7%9A%84%E6%8C%89%E9%94%AE%EF%BC%8C%E5%9B%BE%E6%A1%88%E6%98%AFMicrosoft,Windows%E7%9A%84%E8%A7%86%E7%AA%97%E5%BE%BD%E6%A0%87%E3%80%82%E7%8E%B0%E5%9C%A8%E5%A4%A7%E5%A4%9A%E6%95%B0%20">win键</a> + r”</p></li><li><p>输入cmd、回车</p></li><li><p>使用<a href="https://blog.csdn.net/zdy219727/article/details/98605287">cd命令</a>进入解压文件夹</p></li><li><p>输入下方启动命令后回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc.exe -c frpc.ini；</span><br></pre></td></tr></table></figure></li></ol><h5 id="方法二（bat批处理命令启用）"><a href="#方法二（bat批处理命令启用）" class="headerlink" title="方法二（bat批处理命令启用）"></a>方法二（bat批处理命令启用）</h5><p>在目录下新建一个frpstart.txt文件，编辑内容</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frpc.exe -<span class="keyword">c</span> frpc.ini</span><br></pre></td></tr></table></figure><p>保存退出</p><p>修改文件后缀为.bat，保存。</p><p>需要启用服务，只需要运行frpstart.bat文件即可。而且还可以创建一个快捷方式，然后放入“<a href="https://zhuanlan.zhihu.com/p/405117681">startup</a>”目录下实现开机自启。右键快捷方式，点击“属性”，选择“快捷方式”，在“运行方式”处可以选择最小化。这样开机自启后文件会自动最小化，不会每次都弹出来。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> frp </tag>
            
            <tag> 内网穿透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识Markdown编辑器</title>
      <link href="/posts/2922098613/"/>
      <url>/posts/2922098613/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p>Markdown是一种轻量级标记语言，排版语法简洁，让人们更多地关注内容本身而非排版。它使用易读易写的纯文本格式编写文档，可与HTML混编，可导出 HTML、PDF 以及本身的 .md 格式的文件。因简洁、高效、易读、易写，Markdown被大量使用，如Github、Wikipedia、简书等。</p><h1 id="Hexo头部模板"><a href="#Hexo头部模板" class="headerlink" title="Hexo头部模板"></a>Hexo头部模板</h1><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">title:</span> 标题</span><br><span class="line"><span class="symbol">date:</span> YYYY-MM-DD HH:MM:SS   <span class="meta">#时间</span></span><br><span class="line"><span class="symbol">tags:</span> [a,b,c,...]  </span><br><span class="line"><span class="symbol">categories:</span> xxx</span><br><span class="line"><span class="symbol">top_img:</span> https:<span class="comment">//xxx.png</span></span><br><span class="line"><span class="symbol">cover:</span> https:<span class="comment">//xxx.png</span></span><br><span class="line"><span class="symbol">description:</span> xxx</span><br><span class="line"><span class="symbol">comments:</span> <span class="params">&lt;false/true&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 标记语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
